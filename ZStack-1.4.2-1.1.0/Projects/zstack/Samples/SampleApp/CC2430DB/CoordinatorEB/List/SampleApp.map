Warning[w6]: Type conflict for external/entry "RfTx", in module menu_lcd against external/entry in module SampleApp; class/struct/union types have different sizes
  /* In module menu_lcd: */
  union j /* Elements: 2, Bytes: 29 */
  { 
    uint8 TxBuf[29];
    struct RFTXBUF /* Elements: 4, Bytes: 29 */
    { 
      uint8 HeadCom[3];
      uint8 Laddr[8];
      uint16 Saddr;
      uint8 DataBuf[16];
    } TXDATA;
  } RfTx;
    typedef unsigned char uint8;
    typedef unsigned short uint16;
  /* In module SampleApp: */
  union j /* Elements: 2, Bytes: 66 */
  { 
    uint8 TxBuf[66];
    struct RFTXBUF /* Elements: 5, Bytes: 66 */
    { 
      uint8 HeadCom[3];
      uint8 Node_type[3];
      uint8 IEEE[8];
      uint16 Saddr;
      uint8 DataBuf[50];
    } TXDATA;
  } RfTx;
    typedef unsigned char uint8;
    typedef unsigned short uint16;
Warning[w35]: There is more than one definition for the struct/union type with tag 'RFTXBUF'; class/struct/union types have different sizes
  struct RFTXBUF /* Elements: 4, Bytes: 29 */
  { 
    uint8 HeadCom[3];
    uint8 Laddr[8];
    uint16 Saddr;
    uint8 DataBuf[16];
  };
    typedef unsigned char uint8;
    typedef unsigned short uint16;
  struct RFTXBUF /* Elements: 5, Bytes: 66 */
  { 
    uint8 HeadCom[3];
    uint8 Node_type[3];
    uint8 IEEE[8];
    uint16 Saddr;
    uint8 DataBuf[50];
  };
    typedef unsigned char uint8;
    typedef unsigned short uint16;
Warning[w35]: There is more than one definition for the struct/union type with tag 'j'; class/struct/union types have different sizes
  union j /* Elements: 2, Bytes: 29 */
  { 
    uint8 TxBuf[29];
    struct RFTXBUF /* Elements: 4, Bytes: 29 */
    { 
      uint8 HeadCom[3];
      uint8 Laddr[8];
      uint16 Saddr;
      uint8 DataBuf[16];
    } TXDATA;
  };
    typedef unsigned char uint8;
    typedef unsigned short uint16;
  union j /* Elements: 2, Bytes: 66 */
  { 
    uint8 TxBuf[66];
    struct RFTXBUF /* Elements: 5, Bytes: 66 */
    { 
      uint8 HeadCom[3];
      uint8 Node_type[3];
      uint8 IEEE[8];
      uint16 Saddr;
      uint8 DataBuf[50];
    } TXDATA;
  };
    typedef unsigned char uint8;
    typedef unsigned short uint16;
################################################################################
#                                                                              #
#      IAR Universal Linker V4.60D/386                                         #
#                                                                              #
#           Link time     =  17/Oct/2013  21:26:10                             #
#           Target CPU    =  x51                                               #
#           List file     =  E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\List\SampleApp.map   #
#           Output file 1 =  E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Exe\SampleApp.d51    #
#                            Format: debug                                     #
#                            UBROF version 10.0.2                              #
#                            Using library modules for C-SPY (-rt)             #
#           Command line  =  -C                                                #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\..\..\..\Libraries\TI2430DB\bin\Ro #
#                            uter.lib                                          #
#                            -C                                                #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\..\..\..\Libraries\TI2430DB\bin\Se #
#                            curity.lib                                        #
#                            -C                                                #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\..\..\..\Libraries\TIMAC\bin\TIMAC #
#                            -CC2430.lib                                       #
#                            "-ID:\Program Files\IAR Systems\Embedded Workbenc #
#                            h 4.05 Evaluation version\8051\CONFIG\"           #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\AF.r51           #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\AccessCodeSpace. #
#                            r51                                               #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\DebugTrace.r51   #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\FlashErasePage.r #
#                            51                                                #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\Font.r51         #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\MTEL.r51         #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\MT_AF.r51        #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\MT_NWK.r51       #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\MT_ZDO.r51       #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\OSAL.r51         #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\OSAL_Memory.r51  #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\OSAL_Nv.r51      #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\OSAL_PwrMgr.r51  #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\OSAL_SampleApp.r #
#                            51                                                #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\OSAL_Tasks.r51   #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\OSAL_Timers.r51  #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\OnBoard.r51      #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\SPIMgr.r51       #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\SampleApp.r51    #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\SampleAppHw.r51  #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\ZDApp.r51        #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\ZDCache.r51      #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\ZDConfig.r51     #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\ZDObject.r51     #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\ZDProfile.r51    #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\ZDSecMgr.r51     #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\ZGlobals.r51     #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\ZMain.r51        #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\chipcon_banked_c #
#                            ode_support.r51                                   #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\chipcon_cexit.r5 #
#                            1                                                 #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\chipcon_cstartup #
#                            .r51                                              #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\flashDmaTrigger. #
#                            r51                                               #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\hal_adc.r51      #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\hal_assert.r51   #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\hal_dma.r51      #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\hal_drivers.r51  #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\hal_key.r51      #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\hal_lcd.r51      #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\hal_led.r51      #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\hal_sleep.r51    #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\hal_target.r51   #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\hal_timer.r51    #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\hal_uart.r51     #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\mac_backoff_time #
#                            r.r51                                             #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\mac_cfg.r51      #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\mac_csp_tx.r51   #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\mac_low_level.r5 #
#                            1                                                 #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\mac_mcu.r51      #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\mac_mem.r51      #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\mac_radio.r51    #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\mac_radio_defs.r #
#                            51                                                #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\mac_random.r51   #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\mac_rx.r51       #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\mac_rx_onoff.r51 #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\mac_sleep.r51    #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\mac_tx.r51       #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\menu_lcd.r51     #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\nwk_globals.r51  #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\saddr.r51        #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\wait.r51         #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\wxl_uart.r51     #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\zmac.r51         #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Obj\zmac_cb.r51      #
#                            -o                                                #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\Exe\SampleApp.d51    #
#                            -l                                                #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\CoordinatorEB\List\SampleApp.map   #
#                            -xmsn                                             #
#                            "-ID:\Program Files\IAR Systems\Embedded Workbenc #
#                            h 4.05 Evaluation version\8051\LIB\"              #
#                            -f                                                #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\..\..\..\Tools\CC2430DB\f8w2430.xc #
#                            l                                                 #
#                            (-D_IDATA_END=0xFF -D_PDATA_START=0xEF00          #
#                            -D_PDATA_END=0xEFFF -D_IXDATA_START=E000          #
#                            -D_IXDATA_END=FEFF -D_XDATA_START=_IXDATA_START   #
#                            -D_XDATA_END=_IXDATA_END                          #
#                            -D_PM0_XDATA_START=E000 -D_PM0_XDATA_END=EFFF     #
#                            -D_NEAR_CODE_END=0x7FFF -D_TINY_CODE_END=0x7FF    #
#                            -D_CODE_START=0x0000 -D_CODE_END=0x2FFF           #
#                            -D_BANK1A=(10000+_CODE_END+1)                     #
#                            -D_ZIGNV_START=0x3E000 -D_ZIGNV_SIZE=0x1000       #
#                            -D_ZIGNV_END=(_ZIGNV_START+_ZIGNV_SIZE-1)         #
#                            -D?REGISTER_BANK=0 -D_REGISTER_BANK_START=0       #
#                            -D_FIRST_BANK_ADDR=0x10000 -D_NR_OF_BANKS=0x03    #
#                            -D?PBANK_NUMBER=EF -D?PBANK=93                    #
#                            -D_BREG_START=0x00 -D?VB=0x20                     #
#                            -D_FAR_DATA_NR_OF_BANKS=0x0E                      #
#                            -D_FAR_DATA_START=0x010001                        #
#                            -D_FAR_DATA_END=0xFFFFFF                          #
#                            -D_FAR_CODE_START=_CODE_START                     #
#                            -D_FAR_CODE_END=_CODE_END                         #
#                            -Z(BIT)BREG=_BREG_START -Z(BIT)BIT_N=0-7F         #
#                            -Z(DATA)REGISTERS+8=_REGISTER_BANK_START          #
#                            -Z(DATA)BDATA_Z,BDATA_N,BDATA_I=20-2F             #
#                            -Z(DATA)VREG+_NR_OF_VIRTUAL_REGISTERS=08-7F       #
#                            -Z(DATA)PSP,XSP=08-7F -Z(DATA)DOVERLAY=08-7F      #
#                            -Z(DATA)DATA_I,DATA_Z,DATA_N=08-7F                #
#                            -U(IDATA)0-7F=(DATA)0-7F                          #
#                            -Z(IDATA)IDATA_I,IDATA_Z,IDATA_N=08-_IDATA_END    #
#                            -Z(IDATA)ISTACK+_IDATA_STACK_SIZE#08-_IDATA_END   #
#                            -Z(IDATA)IOVERLAY=08-FF -Z(CODE)INTVEC=0          #
#                            -Z(CODE)CSTART=_CODE_START-_CODE_END              #
#                            -Z(CODE)RCODE=_CODE_START-_CODE_END               #
#                            -Z(CODE)TINY_CODE=_CODE_START-_TINY_CODE_END      #
#                            -Z(CODE)NEAR_CODE=_CODE_START-_NEAR_CODE_END      #
#                            -Z(CODE)DIFUNCT=_CODE_START-_CODE_END             #
#                            -Z(CODE)FAR_CODE=_CODE_START-_CODE_END            #
#                            -P(CODE)BANKED_CODE=_BANK1_START-_BANK1_END,_BANK #
#                            2_START-_BANK2_END,_BANK3_START-_BANK3_END,_BANK3 #
#                            b_START-_BANK3b_END                               #
#                            -Z(CODE)BIT_ID,BDATA_ID,DATA_ID,IDATA_ID,IXDATA_I #
#                            D,PDATA_ID,XDATA_ID=_CODE_START-_CODE_END         #
#                            -Z(CODE)HUGE_ID=_FAR_CODE_START-_FAR_CODE_END     #
#                            -Z(CODE)CODE_C=_CODE_START-_CODE_END              #
#                            -Z(CODE)FAR_CODE_C=_FAR_CODE_START-_FAR_CODE_END  #
#                            -Z(CODE)HUGE_CODE_C=_FAR_CODE_START-_FAR_CODE_END #
#                            -Z(CODE)CHECKSUM#_CODE_END                        #
#                            -Z(XDATA)PM0_XDATA=_PM0_XDATA_START-_PM0_XDATA_EN #
#                            D                                                 #
#                            -Z(XDATA)EXT_STACK+_EXTENDED_STACK_SIZE=_EXTENDED #
#                            _STACK_START-_EXTENDED_STACK_END                  #
#                            -Z(XDATA)PSTACK+_PDATA_STACK_SIZE=_PDATA_START-_P #
#                            DATA_END                                          #
#                            -Z(XDATA)XSTACK+_XDATA_STACK_SIZE=_XDATA_START-_X #
#                            DATA_END                                          #
#                            -Z(XDATA)PDATA_N,PDATA_Z,PDATA_I=_PDATA_START-_PD #
#                            ATA_END                                           #
#                            -Z(XDATA)IXDATA_N,IXDATA_Z,IXDATA_I=_IXDATA_START #
#                            -_IXDATA_END                                      #
#                            -Z(XDATA)XDATA_N,XDATA_Z,XDATA_I=_XDATA_START-_XD #
#                            ATA_END                                           #
#                            -Z(XDATA)XDATA_HEAP+_XDATA_HEAP_SIZE=_XDATA_START #
#                            -_XDATA_END                                       #
#                            -Z(CONST)XDATA_ROM_C=_XDATA_START-_XDATA_END      #
#                            -Z(SPLIT-XDATA)FAR_Z=[_FAR_DATA_START-_FAR_DATA_E #
#                            ND]/10000                                         #
#                            -Z(SPLIT-XDATA)FAR_I=[_FAR_DATA_START-_FAR_DATA_E #
#                            ND]/10000                                         #
#                            -Z(SPLIT-CODE)FAR_ID=[_FAR_CODE_START-_FAR_CODE_E #
#                            ND]/10000                                         #
#                            -Z(SPLIT-XDATA)FAR_HEAP+_FAR_HEAP_SIZE=[_FAR_DATA #
#                            _START-_FAR_DATA_END]/10000                       #
#                            -P(XDATA)FAR_N=[_FAR_DATA_START-_FAR_DATA_END]*_F #
#                            AR_DATA_NR_OF_BANKS+10000                         #
#                            -P(CONST)FAR_ROM_C=[_FAR_DATA_START-_FAR_DATA_END #
#                            ]*E+10000                                         #
#                            -Z(XDATA)HUGE_N,HUGE_Z,HUGE_I=_FAR_DATA_START-_FA #
#                            R_DATA_END                                        #
#                            -Z(XDATA)HUGE_HEAP+_HUGE_HEAP_SIZE=_FAR_DATA_STAR #
#                            T-_FAR_DATA_END                                   #
#                            -Z(CONST)HUGE_ROM_C=_FAR_DATA_START-_FAR_DATA_END #
#                            -cx51 -D_BANK1_START=_BANK1A                      #
#                            -D_BANK1_END=0x1FFFF -D_BANK2_START=0x28000       #
#                            -D_BANK2_END=0x2FFFF -D_BANK3_START=0x38000       #
#                            -D_BANK3_END=0x3DFFF                              #
#                            -D_BANK3b_START=(_ZIGNV_END+1)                    #
#                            -D_BANK3b_END=0x3FFF7                             #
#                            -P(CODE)BANK1=_BANK1_START-_BANK1_END             #
#                            -P(CODE)BANK2=_BANK2_START-_BANK2_END             #
#                            -P(CODE)BANK3=_BANK3_START-_BANK3_END             #
#                            -P(CODE)ZIGNV=_ZIGNV_START-_ZIGNV_END             #
#                            -P(CODE)BANK3b=_BANK3b_START-_BANK3b_END          #
#                            -D_IEEE_ADDR_START=0x3FFF8                        #
#                            -D_IEEE_ADDR_END=0x3FFFF                          #
#                            -Z(CODE)IEEE_ADDRESS_SPACE=_IEEE_ADDR_START-_IEEE #
#                            _ADDR_END)                                        #
#                            -D_NR_OF_VIRTUAL_REGISTERS=8 -D?DPL1=0x84         #
#                            -D?DPH1=0x85 -D?CBANK=0xC7                        #
#                            -D_CODEBANK_START=0x2000 -D_CODEBANK_END=0xFFFF   #
#                            -e_small_write=_formatted_write                   #
#                            -e_medium_read=_formatted_read -we24=i -rt -s     #
#                            __program_start                                   #
#                            "D:\Program Files\IAR Systems\Embedded Workbench  #
#                            4.05 Evaluation version\8051\LIB\CLIB\cl-pli-blxd #
#                            -1e16x01.r51"                                     #
#                            -D_IDATA_STACK_SIZE=0xC0                          #
#                            -D_EXTENDED_STACK_START=0x00                      #
#                            -D_EXTENDED_STACK_END=0x00                        #
#                            -D_EXTENDED_STACK_SIZE=0x00                       #
#                            -D_PDATA_STACK_SIZE=0x80                          #
#                            -D_XDATA_STACK_SIZE=0x300                         #
#                            -D_XDATA_HEAP_SIZE=0x00 -D_FAR_HEAP_SIZE=0x000    #
#                            -D_HUGE_HEAP_SIZE=0x000                           #
#                                                                              #
#                        Copyright 1987-2006 IAR Systems. All rights reserved. #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at : CODE      000000AD  Relocatable, from module : CSTARTUP




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  __calling_convention     = xdata_reentrant
  __code_model             = banked
  __core                   = plain
  __data_model             = large
  __dptr_size              = 16
  __extended_stack         = disabled
  __location_for_constants = data
  __number_of_dptrs        = 1
  __rt_version             = 1



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?ABS_ENTRY_MOD

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _HUGE_HEAP_SIZE         00000000 
           _FAR_HEAP_SIZE          00000000 
           _XDATA_HEAP_SIZE        00000000 
           _XDATA_STACK_SIZE       00000300 
           _PDATA_STACK_SIZE       00000080 
           _EXTENDED_STACK_SIZE    00000000 
           _EXTENDED_STACK_END     00000000 
           _EXTENDED_STACK_START   00000000 
           _IDATA_STACK_SIZE       000000C0 
           _CODEBANK_END           0000FFFF 
           _CODEBANK_START         00002000 
           ?CBANK                  000000C7        Segment part 0 (?BANKED_CODE_SUPPORT)
           ?DPH1                   00000085 
           ?DPL1                   00000084 
           _NR_OF_VIRTUAL_REGISTERS
                                   00000008 
           _IEEE_ADDR_END          0003FFFF 
           _IEEE_ADDR_START        0003FFF8 
           _BANK3b_END             0003FFF7 
           _BANK3b_START           0003F000 
           _BANK3_END              0003DFFF 
           _BANK3_START            00038000 
           _BANK2_END              0002FFFF 
           _BANK2_START            00028000 
           _BANK1_END              0001FFFF 
           _BANK1_START            00013000 
           _FAR_CODE_END           00002FFF 
           _FAR_CODE_START         00000000 
           _FAR_DATA_END           00FFFFFF 
           _FAR_DATA_START         00010001 
           _FAR_DATA_NR_OF_BANKS   0000000E 
           ?VB                     00000020        ?BANKED_ENTER_XDATA (?BANKED_ENTER_XDATA)
                                                   ?BANKED_LEAVE_XDATA (?BANKED_LEAVE_XDATA)
                                                   ?FUNC_ENTER_XDATA (?FUNC_ENTER_XDATA)
                                                   ?FUNC_LEAVE_XDATA (?FUNC_LEAVE_XDATA)
                                                   ?INTERRUPT_ENTER_XSP (?INTERRUPT_ENTER_XSP)
                                                   ?INTERRUPT_LEAVE_XSP (?INTERRUPT_LEAVE_XSP)
           _BREG_START             00000000 
           ?PBANK                  00000093 
           ?PBANK_NUMBER           000000EF 
           _NR_OF_BANKS            00000003 
           _FIRST_BANK_ADDR        00010000 
           _REGISTER_BANK_START    00000000 
           ?REGISTER_BANK          00000000        Segment part 6 (CSTARTUP)
           _ZIGNV_END              0003EFFF 
           _ZIGNV_SIZE             00001000 
           _ZIGNV_START            0003E000 
           _BANK1A                 00013000 
           _CODE_END               00002FFF 
           _CODE_START             00000000 
           _TINY_CODE_END          000007FF 
           _NEAR_CODE_END          00007FFF 
           _PM0_XDATA_END          0000EFFF 
           _PM0_XDATA_START        0000E000 
           _XDATA_END              0000FEFF 
           _XDATA_START            0000E000 
           _IXDATA_END             0000FEFF 
           _IXDATA_START           0000E000 
           _PDATA_END              0000EFFF 
           _PDATA_START            0000EF00 
           _IDATA_END              000000FF 
    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Libraries\TI2430DB\bin\Router.lib
  LIBRARY MODULE, NAME : APS

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E308 - 0000E308 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   APS_CmdInd
                                                   APS_Init
                                                   APS_SetEndDeviceBindTimeout
                                                   APS_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APS_TaskID              0000E308        APSDE_DataIndication (APSMEDE_CB)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E309 - 0000E30A (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   APS_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AIB_MaxBindingTime      0000E309        ?Subroutine55 (ZDObject)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E30B - 0000E30B (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   APS_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APS_Counter             0000E30B        APSDE_FrameHdrSet (APSMEDE)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E30C - 0000E30E (0x3 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pAPS_DataConfirmReflect
                                   0000E30C        NLDE_DataCnf (NLMEDE_CB)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E30F - 0000E311 (0x3 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pAPS_DataIndReflect     0000E30F        NLDE_DataIndication (NLMEDE_CB)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E312 - 0000E314 (0x3 bytes), align: 0
  Segment part 13.            Intra module refs:   APS_SetEndDeviceBindTimeout
                                                   APS_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pAPS_BindingTimeoutCB   0000E312 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E315 - 0000E317 (0x3 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           apsfSendFragmented      0000E315        AF_DataRequest (AF)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E318 - 0000E31A (0x3 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           apsfProcessAck          0000E318        apsProcessAck (aps_util)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E31B - 0000E31D (0x3 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           apsfSendOsalMsg         0000E31B        APSDE_DataIndication (APSMEDE_CB)
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003AE69 - 0003AE6D (0x5 bytes), align: 0
  Segment part 20.            Intra module refs:   APS_SetEndDeviceBindTimeout
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003AE6E - 0003AE87 (0x1a bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APS_Init                0003AE6E        osalAddTasks (OSAL_SampleApp)
               is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003AE88 - 0003AE8E (0x7 bytes), align: 0
  Segment part 22.            Intra module refs:   APS_Init
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003AE8F - 0003AF5B (0xcd bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APS_event_loop          0003AE8F        osalAddTasks (OSAL_SampleApp)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003AF5C - 0003AFA6 (0x4b bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APS_SetEndDeviceBindTimeout
                                   0003AF5C        ?Subroutine55 (ZDObject)
                                                   ZDMatchSendState (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000003 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003AFA7 - 0003AFAD (0x7 bytes), align: 0
  Segment part 25.            Intra module refs:   APS_SetEndDeviceBindTimeout
                                                   APS_event_loop
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003AFAE - 0003B098 (0xeb bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APS_CmdInd              0003AFAE        NLDE_DataIndication (NLMEDE_CB)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B099 - 0003B09F (0x7 bytes), align: 0
  Segment part 27.            Intra module refs:   APS_CmdInd
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B0A0 - 0003B0A5 (0x6 bytes), align: 0
  Segment part 28.            Intra module refs:   Segment part 27
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B0A6 - 0003B0B0 (0xb bytes), align: 0
  Segment part 29.            Intra module refs:   APS_CmdInd
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B0B1 - 0003B0B5 (0x5 bytes), align: 0
  Segment part 31.            Intra module refs:   APS_CmdInd
                                                   APS_event_loop
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B0B6 - 0003B0BF (0xa bytes), align: 0
  Segment part 35.            Intra module refs:   APS_CmdInd
                                                   APS_Init
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B0C0 - 0003B0C5 (0x6 bytes), align: 0
  Segment part 38.            Intra module refs:   Segment part 25
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B0C6 - 0003B0CD (0x8 bytes), align: 0
  Segment part 39.            Intra module refs:   APS_CmdInd
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B0CE - 0003B0D9 (0xc bytes), align: 0
  Segment part 40.            Intra module refs:   APS_event_loop
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B0DA - 0003B0E2 (0x9 bytes), align: 0
  Segment part 41.            Intra module refs:   APS_CmdInd
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B0E3 - 0003B0EC (0xa bytes), align: 0
  Segment part 42.            Intra module refs:   APS_CmdInd
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B0ED - 0003B0F2 (0x6 bytes), align: 0
  Segment part 43.            Intra module refs:   Segment part 42
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B0F3 - 0003B0F6 (0x4 bytes), align: 0
  Segment part 46.            Intra module refs:   APS_CmdInd
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B0F7 - 0003B0FF (0x9 bytes), align: 0
  Segment part 47.            Intra module refs:   Segment part 46
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B100 - 0003B110 (0x11 bytes), align: 0
  Segment part 50.            Intra module refs:   APS_CmdInd
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B111 - 0003B11C (0xc bytes), align: 0
  Segment part 55.            Intra module refs:   APS_CmdInd
                                                   APS_Init
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B11D - 0003B127 (0xb bytes), align: 0
  Segment part 61.            Intra module refs:   Segment part 62
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B128 - 0003B12C (0x5 bytes), align: 0
  Segment part 62.            Intra module refs:   APS_CmdInd
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B12D - 0003B139 (0xd bytes), align: 0
  Segment part 68.            Intra module refs:   APS_event_loop
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B13A - 0003B146 (0xd bytes), align: 0
  Segment part 70.            Intra module refs:   APS_CmdInd

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : APSMEDE

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E31E - 0000E320 (0x3 bytes), align: 0
  Segment part 7.             Intra module refs:   APSME_FrameSecInit
                                                   APSME_FrameSecNM
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecSetupHook
                                   0000E31E 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E321 - 0000E323 (0x3 bytes), align: 0
  Segment part 8.             Intra module refs:   APSDE_FrameSend
                                                   APSME_FrameSecNM
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecApplyHook
                                   0000E321 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E324 - 0000E326 (0x3 bytes), align: 0
  Segment part 9.             Intra module refs:   APSME_FrameSecNM
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecApplyExtHook
                                   0000E324 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E327 - 0000E329 (0x3 bytes), align: 0
  Segment part 10.            Intra module refs:   APSME_FrameSecNM
                                                   APSME_FrameSecurityRemove
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecRemoveHook
                                   0000E327 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E32A - 0000E32C (0x3 bytes), align: 0
  Segment part 11.            Intra module refs:   APSME_CmdPkt
                                                   APSME_SecurityNM
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_CmdPktHook        0000E32A 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029AE9 - 00029D66 (0x27e bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_DataReq           00029AE9        AF_DataRequest (AF)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000019 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029D67 - 00029D6E (0x8 bytes), align: 0
  Segment part 17.            Intra module refs:   APSDE_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029D6F - 00029D76 (0x8 bytes), align: 0
  Segment part 18.            Intra module refs:   Segment part 156
                                                   Segment part 157
                                                   Segment part 17
                                                   Segment part 173
                                                   Segment part 20
                                                   Segment part 37
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029D77 - 00029D84 (0xe bytes), align: 0
  Segment part 19.            Intra module refs:   APSDE_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029D85 - 00029D8D (0x9 bytes), align: 0
  Segment part 20.            Intra module refs:   APSDE_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029D8E - 00029DB6 (0x29 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_DataReqMTU        00029D8E        afDataReqMTU (AF)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029DB7 - 00029E4B (0x95 bytes), align: 0
  Segment part 30.            Intra module refs:   APSDE_DataReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_LookupNwkAddr     00029DB7 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000016 ( 00000013 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029E4C - 00029E50 (0x5 bytes), align: 0
  Segment part 31.            Intra module refs:   APSME_LookupNwkAddr
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029E51 - 00029E5B (0xb bytes), align: 0
  Segment part 32.            Intra module refs:   APSDE_FrameSend
                                                   APSME_FrameSecInit
                                                   APSME_FrameSecurityRemove
                                                   Segment part 31
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029E5C - 00029EDE (0x83 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_FrameDataLoad      00029E5C        nwkDB_UserDataLoad (nwk_util)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029EDF - 00029EE2 (0x4 bytes), align: 0
  Segment part 34.            Intra module refs:   NLDE_FrameDataLoad
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029EE3 - 00029EF0 (0xe bytes), align: 0
  Segment part 35.            Intra module refs:   Segment part 34
                                                   Segment part 36
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029EF1 - 00029EF6 (0x6 bytes), align: 0
  Segment part 36.            Intra module refs:   NLDE_FrameDataLoad
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029EF7 - 00029EFC (0x6 bytes), align: 0
  Segment part 37.            Intra module refs:   NLDE_FrameDataLoad
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029EFD - 00029F01 (0x5 bytes), align: 0
  Segment part 38.            Intra module refs:   Segment part 37
                                                   Segment part 87
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029F02 - 00029F16 (0x15 bytes), align: 0
  Segment part 40.            Intra module refs:   APSDE_DataReqMTU
                                                   APSDE_FrameBlkFree
                                                   APSME_FrameSecApplyNM
                                                   APSME_FrameSecNM
                                                   APSME_FrameSecSetupNM
                                                   APSME_SecurityNM
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029F17 - 00029F1D (0x7 bytes), align: 0
  Segment part 47.            Intra module refs:   APSDE_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029F1E - 00029F27 (0xa bytes), align: 0
  Segment part 52.            Intra module refs:   Segment part 83
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029F28 - 00029F2F (0x8 bytes), align: 0
  Segment part 53.            Intra module refs:   Segment part 112
                                                   Segment part 155
                                                   Segment part 202
                                                   Segment part 52
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029F30 - 00029F39 (0xa bytes), align: 0
  Segment part 55.            Intra module refs:   APSDE_DataReq
                                                   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029F3A - 00029F47 (0xe bytes), align: 0
  Segment part 61.            Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029F48 - 00029F4C (0x5 bytes), align: 0
  Segment part 62.            Intra module refs:   Segment part 61
                                                   Segment part 91
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029F4D - 00029F54 (0x8 bytes), align: 0
  Segment part 63.            Intra module refs:   APSME_FrameSecNM
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecSetupNM   00029F4D 
               is indirectly called
               stack 1 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029F55 - 00029F58 (0x4 bytes), align: 0
  Segment part 65.            Intra module refs:   APSDE_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029F59 - 00029F5F (0x7 bytes), align: 0
  Segment part 66.            Intra module refs:   Segment part 177
                                                   Segment part 178
                                                   Segment part 65
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029F60, align: 0
  Segment part 67.            Intra module refs:   APSME_FrameSecNM
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecRemoveNM
                                   00029F60 
               is indirectly called
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029F60 - 00029F64 (0x5 bytes), align: 0
  Segment part 68.            Intra module refs:   APSME_FrameSecApplyExtNM
                                                   APSME_FrameSecRemoveNM
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029F65 - 00029F6A (0x6 bytes), align: 0
  Segment part 72.            Intra module refs:   APSME_FrameSecInit
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029F6B - 00029F73 (0x9 bytes), align: 0
  Segment part 77.            Intra module refs:   APSME_FrameSecNM
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecApplyNM   00029F6B 
               is indirectly called
               stack 1 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029F74 - 00029F76 (0x3 bytes), align: 0
  Segment part 79.            Intra module refs:   APSME_FrameSecNM
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecApplyExtNM
                                   00029F74 
               is indirectly called
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029F77 - 00029FB4 (0x3e bytes), align: 0
  Segment part 81.            Intra module refs:   APSME_SecurityNM
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecNM        00029F77 
               stack 1 = 00000002 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029FB5 - 0002A010 (0x5c bytes), align: 0
  Segment part 82.            Intra module refs:   APSDE_FrameBlkInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecInit      00029FB5 
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000009 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A011 - 0002A014 (0x4 bytes), align: 0
  Segment part 83.            Intra module refs:   APSME_FrameSecInit
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A015 - 0002A024 (0x10 bytes), align: 0
  Segment part 84.            Intra module refs:   APSDE_FrameSend
                                                   APSME_FrameSecInit
                                                   Segment part 32
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A025 - 0002A1E2 (0x1be bytes), align: 0
  Segment part 85.            Intra module refs:   APSDE_FrameSend
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_FrameHdrSet       0002A025 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000B ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A1E3 - 0002A1E6 (0x4 bytes), align: 0
  Segment part 86.            Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A1E7 - 0002A1EF (0x9 bytes), align: 0
  Segment part 87.            Intra module refs:   Segment part 86
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A1F0 - 0002A1F9 (0xa bytes), align: 0
  Segment part 88.            Intra module refs:   APSDE_DataReq
                                                   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A1FA - 0002A1FD (0x4 bytes), align: 0
  Segment part 89.            Intra module refs:   Segment part 216
                                                   Segment part 225
                                                   Segment part 88
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A1FE - 0002A204 (0x7 bytes), align: 0
  Segment part 90.            Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A205 - 0002A20D (0x9 bytes), align: 0
  Segment part 91.            Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A20E - 0002A215 (0x8 bytes), align: 0
  Segment part 92.            Intra module refs:   APSDE_FrameHdrSet
                                                   Segment part 91
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A216 - 0002A218 (0x3 bytes), align: 0
  Segment part 93.            Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A219 - 0002A21E (0x6 bytes), align: 0
  Segment part 94.            Intra module refs:   Segment part 205
                                                   Segment part 93
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A21F - 0002A226 (0x8 bytes), align: 0
  Segment part 95.            Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A227 - 0002A22D (0x7 bytes), align: 0
  Segment part 96.            Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A22E - 0002A232 (0x5 bytes), align: 0
  Segment part 97.            Intra module refs:   Segment part 90
                                                   Segment part 96
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A233 - 0002A23A (0x8 bytes), align: 0
  Segment part 98.            Intra module refs:   Segment part 96
                                                   Segment part 99
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A23B - 0002A23D (0x3 bytes), align: 0
  Segment part 99.            Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A23E - 0002A243 (0x6 bytes), align: 0
  Segment part 100.           Intra module refs:   Segment part 101
                                                   Segment part 99
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A244 - 0002A250 (0xd bytes), align: 0
  Segment part 101.           Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A251 - 0002A255 (0x5 bytes), align: 0
  Segment part 102.           Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A256 - 0002A346 (0xf1 bytes), align: 0
  Segment part 103.           Intra module refs:   APSDE_FrameBlkInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_FrameHdrInit      0002A256 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000009 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A347 - 0002A356 (0x10 bytes), align: 0
  Segment part 104.           Intra module refs:   APSDE_FrameHdrInit
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A357 - 0002A35F (0x9 bytes), align: 0
  Segment part 105.           Intra module refs:   Segment part 104
                                                   Segment part 173
                                                   Segment part 72
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A360 - 0002A369 (0xa bytes), align: 0
  Segment part 106.           Intra module refs:   APSDE_FrameHdrInit
                                                   APSME_FrameSecInit
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A36A - 0002A393 (0x2a bytes), align: 0
  Segment part 107.           Intra module refs:   APSDE_FrameAlloc
                                                   APSDE_FrameSend
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_FrameBlkFree      0002A36A 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000011 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A394 - 0002A39C (0x9 bytes), align: 0
  Segment part 108.           Intra module refs:   APSDE_FrameBlkFree
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A39D - 0002A3D0 (0x34 bytes), align: 0
  Segment part 109.           Intra module refs:   APSDE_FrameAlloc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_FrameBlkInit      0002A39D 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000011 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A3D1 - 0002A3D6 (0x6 bytes), align: 0
  Segment part 110.           Intra module refs:   APSDE_FrameBlkInit
                                                   APSME_CmdPkt
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A3D7 - 0002A3E0 (0xa bytes), align: 0
  Segment part 111.           Intra module refs:   APSDE_DataReq
                                                   APSDE_FrameAlloc
                                                   APSDE_FrameBlkInit
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A3E1 - 0002A3E7 (0x7 bytes), align: 0
  Segment part 112.           Intra module refs:   APSDE_FrameBlkInit
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A3E8 - 0002A3E9 (0x2 bytes), align: 0
  Segment part 113.           Intra module refs:   Segment part 102
                                                   Segment part 112
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A3EA - 0002A3EE (0x5 bytes), align: 0
  Segment part 114.           Intra module refs:   Segment part 113
                                                   Segment part 123
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A3EF - 0002A3F5 (0x7 bytes), align: 0
  Segment part 116.           Intra module refs:   APSDE_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A3F6 - 0002A3FD (0x8 bytes), align: 0
  Segment part 117.           Intra module refs:   Segment part 116
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A3FE - 0002A405 (0x8 bytes), align: 0
  Segment part 118.           Intra module refs:   APSDE_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A406 - 0002A40B (0x6 bytes), align: 0
  Segment part 119.           Intra module refs:   APSDE_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A40C - 0002A412 (0x7 bytes), align: 0
  Segment part 120.           Intra module refs:   Segment part 119
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A413 - 0002A41A (0x8 bytes), align: 0
  Segment part 121.           Intra module refs:   Segment part 119
                                                   Segment part 93
                                                   Segment part 95
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A41B - 0002A421 (0x7 bytes), align: 0
  Segment part 122.           Intra module refs:   Segment part 121
                                                   Segment part 97
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A422 - 0002A427 (0x6 bytes), align: 0
  Segment part 123.           Intra module refs:   Segment part 122
                                                   Segment part 62
                                                   Segment part 89
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A428 - 0002A42A (0x3 bytes), align: 0
  Segment part 125.           Intra module refs:   APSME_LookupNwkAddr
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A42B - 0002A42F (0x5 bytes), align: 0
  Segment part 126.           Intra module refs:   Segment part 125
                                                   Segment part 228
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A430 - 0002A449 (0x1a bytes), align: 0
  Segment part 143.           Intra module refs:   APSDE_FrameAlloc
                                                   APSDE_FrameSend
                                                   APSME_FrameSecInit
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A44A - 0002A45A (0x11 bytes), align: 0
  Segment part 146.           Intra module refs:   NLDE_FrameDataLoad
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A45B - 0002A463 (0x9 bytes), align: 0
  Segment part 150.           Intra module refs:   NLDE_FrameDataLoad
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A464 - 0002A46C (0x9 bytes), align: 0
  Segment part 151.           Intra module refs:   Segment part 146
                                                   Segment part 150
                                                   Segment part 19
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A46D - 0002A473 (0x7 bytes), align: 0
  Segment part 154.           Intra module refs:   APSDE_FrameAlloc
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A474 - 0002A480 (0xd bytes), align: 0
  Segment part 155.           Intra module refs:   APSDE_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A481 - 0002A48B (0xb bytes), align: 0
  Segment part 156.           Intra module refs:   APSDE_DataReq
                                                   APSDE_FrameAlloc
                                                   APSDE_FrameHdrSet
                                                   NLDE_FrameDataLoad
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A48C - 0002A497 (0xc bytes), align: 0
  Segment part 157.           Intra module refs:   APSDE_DataReq
                                                   APSDE_FrameAlloc
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A498 - 0002A49A (0x3 bytes), align: 0
  Segment part 170.           Intra module refs:   APSME_SecurityNM
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_CmdPktNM          0002A498 
               is indirectly called
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A49B - 0002A4AE (0x14 bytes), align: 0
  Segment part 171.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_CmdPkt            0002A49B        APS_event_loop (APS)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A4AF - 0002A633 (0x185 bytes), align: 0
  Segment part 172.           Intra module refs:   Segment part 222
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_FrameAlloc        0002A4AF        apsGenerateAck (aps_util)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000019 ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A634 - 0002A643 (0x10 bytes), align: 0
  Segment part 173.           Intra module refs:   APSDE_DataReq
                                                   APSDE_FrameAlloc
                                                   NLDE_FrameDataLoad
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A644 - 0002A647 (0x4 bytes), align: 0
  Segment part 174.           Intra module refs:   APSDE_FrameAlloc
                                                   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A648 - 0002A652 (0xb bytes), align: 0
  Segment part 175.           Intra module refs:   Segment part 101
                                                   Segment part 174
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A653 - 0002A66A (0x18 bytes), align: 0
  Segment part 176.           Intra module refs:   APSDE_FrameAlloc
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A66B - 0002A66F (0x5 bytes), align: 0
  Segment part 177.           Intra module refs:   APSDE_FrameAlloc
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A670 - 0002A675 (0x6 bytes), align: 0
  Segment part 178.           Intra module refs:   APSDE_FrameAlloc
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A676 - 0002A67A (0x5 bytes), align: 0
  Segment part 179.           Intra module refs:   APSDE_FrameAlloc
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A67B - 0002A680 (0x6 bytes), align: 0
  Segment part 180.           Intra module refs:   Segment part 179
                                                   Segment part 47
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A681 - 0002A688 (0x8 bytes), align: 0
  Segment part 181.           Intra module refs:   APSDE_FrameAlloc
                                                   APSDE_FrameHdrInit
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A689 - 0002A68F (0x7 bytes), align: 0
  Segment part 182.           Intra module refs:   Segment part 181
                                                   Segment part 191
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A690 - 0002A6FC (0x6d bytes), align: 0
  Segment part 183.           Intra module refs:   APSDE_DataReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_FrameSend         0002A690        apsGenerateAck (aps_util)
               calls direct, is recursive
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000019 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A6FD - 0002A707 (0xb bytes), align: 0
  Segment part 184.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecurityRemove
                                   0002A6FD        NLDE_DataIndication (NLMEDE_CB)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A708 - 0002A708 (0x1 bytes), align: 0
  Segment part 189.           Intra module refs:   APSDE_DataReq
                                                   Segment part 220
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A709 - 0002A70F (0x7 bytes), align: 0
  Segment part 190.           Intra module refs:   Segment part 189
                                                   Segment part 208
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A710 - 0002A712 (0x3 bytes), align: 0
  Segment part 191.           Intra module refs:   NLDE_FrameDataLoad
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A713 - 0002A717 (0x5 bytes), align: 0
  Segment part 192.           Intra module refs:   Segment part 191
                                                   Segment part 226
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A718 - 0002A727 (0x10 bytes), align: 0
  Segment part 194.           Intra module refs:   Segment part 110
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A728 - 0002A72F (0x8 bytes), align: 0
  Segment part 199.           Intra module refs:   Segment part 106
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A730 - 0002A737 (0x8 bytes), align: 0
  Segment part 202.           Intra module refs:   Segment part 180
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A738 - 0002A73E (0x7 bytes), align: 0
  Segment part 204.           Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A73F - 0002A742 (0x4 bytes), align: 0
  Segment part 205.           Intra module refs:   Segment part 101
                                                   Segment part 204
                                                   Segment part 98
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A743 - 0002A746 (0x4 bytes), align: 0
  Segment part 207.           Intra module refs:   Segment part 118
                                                   Segment part 146
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A747 - 0002A74E (0x8 bytes), align: 0
  Segment part 208.           Intra module refs:   Segment part 151
                                                   Segment part 207
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A74F - 0002A756 (0x8 bytes), align: 0
  Segment part 212.           Intra module refs:   APSDE_FrameAlloc
                                                   APSDE_FrameHdrInit
                                                   NLDE_FrameDataLoad
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A757 - 0002A75D (0x7 bytes), align: 0
  Segment part 213.           Intra module refs:   APSDE_FrameAlloc
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A75E - 0002A762 (0x5 bytes), align: 0
  Segment part 214.           Intra module refs:   APSDE_DataReq
                                                   Segment part 194
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A763 - 0002A769 (0x7 bytes), align: 0
  Segment part 216.           Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A76A - 0002A770 (0x7 bytes), align: 0
  Segment part 217.           Intra module refs:   Segment part 213
                                                   Segment part 216
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A771 - 0002A778 (0x8 bytes), align: 0
  Segment part 220.           Intra module refs:   Segment part 222
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A779 - 0002A783 (0xb bytes), align: 0
  Segment part 222.           Intra module refs:   APSDE_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A784 - 0002A78E (0xb bytes), align: 0
  Segment part 224.           Intra module refs:   APSME_CmdPkt
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A78F - 0002A79B (0xd bytes), align: 0
  Segment part 225.           Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A79C - 0002A79F (0x4 bytes), align: 0
  Segment part 226.           Intra module refs:   Segment part 111
                                                   Segment part 125
                                                   Segment part 173
                                                   Segment part 225
                                                   Segment part 37
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A7A0 - 0002A7A3 (0x4 bytes), align: 0
  Segment part 227.           Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A7A4 - 0002A7A7 (0x4 bytes), align: 0
  Segment part 228.           Intra module refs:   Segment part 182
                                                   Segment part 199
                                                   Segment part 227
                                                   Segment part 66
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A7A8 - 0002A7B3 (0xc bytes), align: 0
  Segment part 232.           Intra module refs:   Segment part 108
                                                   Segment part 143
                                                   Segment part 17
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A7B4 - 0002A7CF (0x1c bytes), align: 0
  Segment part 234.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_SecurityNM        0002A7B4        ?Subroutine0 (ZDSecMgr)
               calls direct
               stack 1 = 00000000 ( 00000002 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : APSMEDE_CB

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003BDFB - 0003BE42 (0x48 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_DataConfirm       0003BDFB        NLDE_DataCnf (NLMEDE_CB)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003BE43 - 0003BE49 (0x7 bytes), align: 0
  Segment part 7.             Intra module refs:   APSDE_DataConfirm
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003BE4A - 0003BFFB (0x1b2 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_DataIndication    0003BE4A        NLDE_DataIndication (NLMEDE_CB)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000005 ( 00000017 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003BFFC - 0003C009 (0xe bytes), align: 0
  Segment part 10.            Intra module refs:   APSDE_DataConfirm
                                                   APSDE_DataIndication
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003C00A - 0003C019 (0x10 bytes), align: 0
  Segment part 14.            Intra module refs:   APSDE_DataIndication
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003C01A - 0003C024 (0xb bytes), align: 0
  Segment part 21.            Intra module refs:   APSDE_DataIndication
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003C025 - 0003C036 (0x12 bytes), align: 0
  Segment part 31.            Intra module refs:   APSDE_DataIndication

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : AddrMgr

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E32D - 0000E32E (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   AddrMgrEntryAdd
                                                   AddrMgrEntryLookupExt
                                                   AddrMgrEntryLookupNwk
                                                   AddrMgrEntryValidate
                                                   AddrMgrInit
                                                   Segment part 37
                                                   Segment part 50
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntryTotal       0000E32D 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E32F - 0000E330 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   AddrMgrEntryLookupNwk
                                                   AddrMgrEntrySet
                                                   AddrMgrInit
                                                   Segment part 25
                                                   Segment part 34
                                                   Segment part 46
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntryData        0000E32F 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D320 - 0002D32C (0xd bytes), align: 0
  Segment part 9.             Intra module refs:   AddrMgrExtAddrValid
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D32D - 0002D33F (0x13 bytes), align: 0
  Segment part 14.            Intra module refs:   AddrMgrEntryAdd
                                                   AddrMgrEntryAddRef
                                                   AddrMgrEntryRelease
                                                   AddrMgrEntrySet
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntryDataSave    0002D32D 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 0000000C ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D340 - 0002D36F (0x30 bytes), align: 0
  Segment part 15.            Intra module refs:   AddrMgrEntryAddRef
                                                   AddrMgrEntryGet
                                                   AddrMgrEntryRelease
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntryValidate    0002D340 
               stack 1 = 00000000 ( 00000004 )
               stack 2 = 0000000B ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D370 - 0002D379 (0xa bytes), align: 0
  Segment part 16.            Intra module refs:   AddrMgrEntryDataSave
                                                   AddrMgrEntryValidate
                                                   AddrMgrExtAddrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D37A - 0002D3E5 (0x6c bytes), align: 0
  Segment part 17.            Intra module refs:   AddrMgrEntryUpdateEx
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntrySet         0002D37A 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000B ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D3E6 - 0002D3EC (0x7 bytes), align: 0
  Segment part 18.            Intra module refs:   AddrMgrEntrySet
                                                   AddrMgrEntryValidate
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D3ED - 0002D3EF (0x3 bytes), align: 0
  Segment part 19.            Intra module refs:   AddrMgrExtAddrValid
                                                   Segment part 18
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D3F0 - 0002D3F4 (0x5 bytes), align: 0
  Segment part 20.            Intra module refs:   AddrMgrEntryUpdateEx
                                                   Segment part 19
                                                   Segment part 51
                                                   Segment part 56
                                                   Segment part 63
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D3F5 - 0002D3FC (0x8 bytes), align: 0
  Segment part 21.            Intra module refs:   AddrMgrEntryLookupExt
                                                   AddrMgrEntryLookupNwk
                                                   AddrMgrEntrySet
                                                   AddrMgrEntryUpdateEx
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D3FD - 0002D403 (0x7 bytes), align: 0
  Segment part 22.            Intra module refs:   AddrMgrEntryGet
                                                   AddrMgrEntryLookupNwk
                                                   AddrMgrEntryUpdateEx
                                                   Segment part 21
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D404 - 0002D47E (0x7b bytes), align: 0
  Segment part 23.            Intra module refs:   AddrMgrEntryUpdateEx
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntryAdd         0002D404 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000B ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D47F - 0002D483 (0x5 bytes), align: 0
  Segment part 24.            Intra module refs:   AddrMgrEntryAdd
                                                   AddrMgrEntryLookupNwk
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D484 - 0002D4A7 (0x24 bytes), align: 0
  Segment part 25.            Intra module refs:   AddrMgrEntryAdd
                                                   AddrMgrEntryLookupNwk
                                                   AddrMgrEntryValidate
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D4A8 - 0002D582 (0xdb bytes), align: 0
  Segment part 26.            Intra module refs:   AddrMgrEntryUpdate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntryUpdateEx    0002D4A8 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000002A ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D583 - 0002D589 (0x7 bytes), align: 0
  Segment part 27.            Intra module refs:   AddrMgrEntryGet
                                                   AddrMgrEntryUpdateEx
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D58A - 0002D5E2 (0x59 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrInit             0002D58A        nwk_globals_init (nwk_globals)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D5E3 - 0002D5EE (0xc bytes), align: 0
  Segment part 30.            Intra module refs:   AddrMgrEntrySet
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D5EF - 0002D5F8 (0xa bytes), align: 0
  Segment part 32.            Intra module refs:   AddrMgrEntrySet
                                                   AddrMgrInit
                                                   AddrMgrNwkAddrLookup
                                                   Segment part 44
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D5F9 - 0002D611 (0x19 bytes), align: 0
  Segment part 34.            Intra module refs:   AddrMgrEntryAdd
                                                   AddrMgrEntryGet
                                                   AddrMgrEntryLookupExt
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D612 - 0002D61A (0x9 bytes), align: 0
  Segment part 36.            Intra module refs:   AddrMgrEntryAdd
                                                   AddrMgrEntryLookupExt
                                                   AddrMgrEntryLookupNwk
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D61B - 0002D626 (0xc bytes), align: 0
  Segment part 37.            Intra module refs:   AddrMgrEntryLookupExt
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D627 - 0002D645 (0x1f bytes), align: 0
  Segment part 38.            Intra module refs:   AddrMgrEntryUpdate
                                                   AddrMgrNwkAddrLookup
                                                   Segment part 59
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrExtAddrSet       0002D627        AssocAddNew (AssocList)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000028 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D646 - 0002D66D (0x28 bytes), align: 0
  Segment part 39.            Intra module refs:   AddrMgrEntryUpdateEx
                                                   Segment part 61
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrExtAddrValid     0002D646 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000016 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D66E - 0002D6CC (0x5f bytes), align: 0
  Segment part 42.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrNwkAddrLookup    0002D66E        APSME_LookupNwkAddr (APSMEDE)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000016 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D6CD - 0002D6FA (0x2e bytes), align: 0
  Segment part 43.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntryRelease     0002D6CD        AssocRemove (AssocList)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D6FB - 0002D6FF (0x5 bytes), align: 0
  Segment part 44.            Intra module refs:   AddrMgrEntryAddRef
                                                   AddrMgrEntryRelease
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D700 - 0002D73C (0x3d bytes), align: 0
  Segment part 45.            Intra module refs:   AddrMgrEntryUpdate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntryAddRef      0002D700 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000028 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D73D - 0002D761 (0x25 bytes), align: 0
  Segment part 46.            Intra module refs:   AddrMgrEntryAddRef
                                                   AddrMgrEntryRelease
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D762 - 0002D81E (0xbd bytes), align: 0
  Segment part 47.            Intra module refs:   AddrMgrEntryUpdate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntryLookupNwk   0002D762 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000028 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D81F - 0002D82A (0xc bytes), align: 0
  Segment part 48.            Intra module refs:   AddrMgrEntryAdd
                                                   AddrMgrEntryLookupNwk
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D82B - 0002D834 (0xa bytes), align: 0
  Segment part 49.            Intra module refs:   AddrMgrEntryLookupExt
                                                   Segment part 48
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D835 - 0002D842 (0xe bytes), align: 0
  Segment part 50.            Intra module refs:   AddrMgrEntryAdd
                                                   AddrMgrEntryLookupNwk
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D843 - 0002D853 (0x11 bytes), align: 0
  Segment part 51.            Intra module refs:   AddrMgrEntryAdd
                                                   AddrMgrEntryGet
                                                   AddrMgrEntryLookupExt
                                                   AddrMgrEntryLookupNwk
                                                   AddrMgrEntryUpdate
                                                   AddrMgrEntryUpdateEx
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D854 - 0002D8E2 (0x8f bytes), align: 0
  Segment part 52.            Intra module refs:   AddrMgrEntryUpdate
                                                   AddrMgrNwkAddrLookup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntryLookupExt   0002D854 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000028 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D8E3 - 0002D8E7 (0x5 bytes), align: 0
  Segment part 53.            Intra module refs:   AddrMgrEntryLookupExt
                                                   AddrMgrEntryUpdate
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D8E8 - 0002D8F2 (0xb bytes), align: 0
  Segment part 54.            Intra module refs:   AddrMgrEntryAdd
                                                   AddrMgrEntryLookupExt
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D8F3 - 0002D8FE (0xc bytes), align: 0
  Segment part 55.            Intra module refs:   AddrMgrEntryAdd
                                                   AddrMgrEntryLookupExt
                                                   AddrMgrEntryUpdate
                                                   AddrMgrEntryUpdateEx
                                                   AddrMgrNwkAddrLookup
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D8FF - 0002D907 (0x9 bytes), align: 0
  Segment part 56.            Intra module refs:   Segment part 46
                                                   Segment part 55
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D908 - 0002D971 (0x6a bytes), align: 0
  Segment part 57.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntryGet         0002D908        AssocGetWithAddress (AssocList)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D972 - 0002D978 (0x7 bytes), align: 0
  Segment part 58.            Intra module refs:   AddrMgrEntryGet
                                                   AddrMgrEntryLookupExt
                                                   AddrMgrEntryLookupNwk
                                                   AddrMgrEntryUpdate
                                                   AddrMgrEntryUpdateEx
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D979 - 0002D989 (0x11 bytes), align: 0
  Segment part 59.            Intra module refs:   AddrMgrEntryAdd
                                                   AddrMgrEntryGet
                                                   AddrMgrEntryLookupNwk
                                                   AddrMgrEntrySet
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D98A - 0002D999 (0x10 bytes), align: 0
  Segment part 60.            Intra module refs:   AddrMgrEntryGet
                                                   AddrMgrEntryUpdateEx
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D99A - 0002D9A2 (0x9 bytes), align: 0
  Segment part 61.            Intra module refs:   Segment part 21
                                                   Segment part 60
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D9A3 - 0002DA8F (0xed bytes), align: 0
  Segment part 62.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntryUpdate      0002D9A3        AssocAddNew (AssocList)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000002A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DA90 - 0002DA96 (0x7 bytes), align: 0
  Segment part 63.            Intra module refs:   AddrMgrEntryAdd
                                                   AddrMgrEntryGet
                                                   AddrMgrEntryLookupExt
                                                   AddrMgrEntryUpdate
                                                   AddrMgrEntryUpdateEx
                                                   AddrMgrNwkAddrLookup
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DA97 - 0002DA9C (0x6 bytes), align: 0
  Segment part 64.            Intra module refs:   Segment part 37
                                                   Segment part 46
                                                   Segment part 55
                                                   Segment part 63
                                                   Segment part 65
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DA9D - 0002DAA5 (0x9 bytes), align: 0
  Segment part 65.            Intra module refs:   AddrMgrEntryGet
                                                   AddrMgrEntryUpdate

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : AssocList

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F53C - 0002F55F (0x24 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AssocInit               0002F53C        nwk_init (nwk)
               calls direct
               stack 1 = 00000002 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F560 - 0002F5A8 (0x49 bytes), align: 0
  Segment part 9.             Intra module refs:   AssocAddNew
                                                   AssocMakeList
                                                   AssocRemove
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AssocCount              0002F560 
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000001D ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F5A9 - 0002F5AD (0x5 bytes), align: 0
  Segment part 10.            Intra module refs:   AssocCount
                                                   AssocGetNextNode
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F5AE - 0002F5E6 (0x39 bytes), align: 0
  Segment part 11.            Intra module refs:   AssocAddNew
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AssocFindEmpty          0002F5AE 
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 0000001D ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F5E7 - 0002F5ED (0x7 bytes), align: 0
  Segment part 12.            Intra module refs:   AssocFindEmpty
                                                   AssocGetNextNode
                                                   Segment part 33
                                                   Segment part 43
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F5EE - 0002F72B (0x13e bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AssocAddNew             0002F5EE        Segment part 72 (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000027 ( 0000001D )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F72C - 0002F730 (0x5 bytes), align: 0
  Segment part 14.            Intra module refs:   AssocAddNew
                                                   AssocMakeList
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F731 - 0002F735 (0x5 bytes), align: 0
  Segment part 15.            Intra module refs:   AssocAddNew
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F736 - 0002F73A (0x5 bytes), align: 0
  Segment part 16.            Intra module refs:   Segment part 15
                                                   Segment part 17
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F73B - 0002F744 (0xa bytes), align: 0
  Segment part 17.            Intra module refs:   AssocAddNew
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F745 - 0002F777 (0x33 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AssocIsChild            0002F745        RTG_UpdateNeighborEntry (nwk_util)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F778 - 0002F7B2 (0x3b bytes), align: 0
  Segment part 19.            Intra module refs:   AssocIsChild
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F7B3 - 0002F7C1 (0xf bytes), align: 0
  Segment part 21.            Intra module refs:   AssocIsChild
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AssocGetWithShort       0002F7B3        NLDE_SendMsg (nwk_util)
                                                   NLME_GetNeighborLinkInfo (nwk_util)
                                                   RTG_GetNextTreeHop (rtg)
                                                   RTG_GetRoutingAddress (rtg)
                                                   RTG_RouteMaintanence (rtg)
                                                   RTG_UpdateNeighborEntry (nwk_util)
                                                   nwk_comm_status_ind_processing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 0000000A ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F7C2 - 0002F7CC (0xb bytes), align: 0
  Segment part 22.            Intra module refs:   AssocAddNew
                                                   AssocRemove
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AssocGetWithExt         0002F7C2        NLME_RemoveChild (nwk_util)
                                                   Segment part 67 (nwk)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 0000001D ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F7CD - 0002F890 (0xc4 bytes), align: 0
  Segment part 23.            Intra module refs:   Segment part 38
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AssocGetWithAddress     0002F7CD 
               calls direct
               stack 1 = 00000002 ( 00000001 )
               stack 2 = 00000000 ( 00000019 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F891 - 0002F89A (0xa bytes), align: 0
  Segment part 24.            Intra module refs:   AssocGetWithAddress
                                                   AssocRemove
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F89B - 0002F918 (0x7e bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AssocRemove             0002F89B        NLME_RemoveChild (nwk_util)
                                                   Segment part 66 (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000019 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F919 - 0002F928 (0x10 bytes), align: 0
  Segment part 26.            Intra module refs:   AssocGetWithAddress
                                                   AssocRemove
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F929 - 0002F92E (0x6 bytes), align: 0
  Segment part 27.            Intra module refs:   AssocAddNew
                                                   AssocGetWithAddress
                                                   AssocRemove
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F92F - 0002F93E (0x10 bytes), align: 0
  Segment part 28.            Intra module refs:   AssocAddNew
                                                   AssocRemove
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F93F - 0002F9DE (0xa0 bytes), align: 0
  Segment part 29.            Intra module refs:   Segment part 36
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AssocGetNextNode        0002F93F 
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F9DF - 0002F9E7 (0x9 bytes), align: 0
  Segment part 30.            Intra module refs:   AssocCount
                                                   AssocFindEmpty
                                                   AssocGetNextNode
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F9E8 - 0002F9F2 (0xb bytes), align: 0
  Segment part 31.            Intra module refs:   AssocGetNextNode
                                                   AssocInit
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F9F3 - 0002FA05 (0x13 bytes), align: 0
  Segment part 32.            Intra module refs:   AssocGetNextNode
                                                   AssocGetWithAddress
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FA06 - 0002FA21 (0x1c bytes), align: 0
  Segment part 33.            Intra module refs:   AssocCount
                                                   AssocGetNextNode
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FA22 - 0002FA31 (0x10 bytes), align: 0
  Segment part 34.            Intra module refs:   AssocCount
                                                   AssocFindEmpty
                                                   AssocGetNextNode
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FA32 - 0002FA38 (0x7 bytes), align: 0
  Segment part 36.            Intra module refs:   AssocGetNextChildNode
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FA39 - 0002FA40 (0x8 bytes), align: 0
  Segment part 37.            Intra module refs:   AssocMakeList
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AssocGetNextChildNode   0002FA39 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000010 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FA41 - 0002FA4F (0xf bytes), align: 0
  Segment part 38.            Intra module refs:   AssocFindEmpty
                                                   AssocGetWithExt
                                                   AssocGetWithShort
                                                   AssocInit
                                                   Segment part 36
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FA50 - 0002FAD3 (0x84 bytes), align: 0
  Segment part 40.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AssocMakeList           0002FA50        MT_ProcessGetDeviceInfo (MTEL)
                                                   zdpProcessAddrReq (ZDProfile)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FAD4 - 0002FAEB (0x18 bytes), align: 0
  Segment part 42.            Intra module refs:   AssocFindEmpty
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FAEC - 0002FB0B (0x20 bytes), align: 0
  Segment part 43.            Intra module refs:   AssocFindEmpty
                                                   AssocGetNextNode
                                                   AssocGetWithAddress
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FB0C - 0002FB1B (0x10 bytes), align: 0
  Segment part 48.            Intra module refs:   AssocGetWithAddress

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : NLMEDE

  SEGMENTS IN THE MODULE
  ======================
XDATA_I
  Relative segment, address: XDATA 0000FB61 - 0000FB61 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   NLME_PermitJoiningSet
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_PermitJoining      0000FB61        NLME_SetAssocFlags (nwk_util)
                                                   nwk_associate_ind_processing (nwk)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E331 - 0000E331 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   NLME_PermitJoiningEvent
                                                   NLME_PermitJoiningSet
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_PermitJoiningDuration
                                   0000E331 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FB62 - 0000FB62 (0x1 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_AssocPermission    0000FB62        AssocAddNew (AssocList)
                                                   AssocRemove (AssocList)
                                                   NLME_SetAssocFlags (nwk_util)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E332 - 0000E333 (0x2 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_ScanFields         0000E332        nwk_beacon_notify_ind_processing (nwk)
                                                   nwk_init (nwk)
                                                   nwk_scan_cnf_processing (nwk)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E334 - 0000E335 (0x2 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           savedResponseRate       0000E334        NLME_RejoinRspCmdProcess (nwk_util)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E336 - 0000E338 (0x3 bytes), align: 0
  Segment part 13.            Intra module refs:   NLME_CoordinatorInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pnwk_ScanPANChanSelect
                                   0000E336        nwk_scan_cnf_processing (nwk)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E339 - 0000E33B (0x3 bytes), align: 0
  Segment part 14.            Intra module refs:   NLME_CoordinatorInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pnwk_ScanPANChanVerify
                                   0000E339        nwk_scan_cnf_processing (nwk)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E33C - 0000E33E (0x3 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pnwk_ScanJoiningOrphan
                                   0000E33C        nwk_scan_cnf_processing (nwk)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E33F - 0000E341 (0x3 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pnwk_associate_cnf_processing
                                   0000E33F        nwk_event_loop (nwk)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E342 - 0000E344 (0x3 bytes), align: 0
  Segment part 17.            Intra module refs:   NLME_CoordinatorInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pNLME_NetworkFormationConfirm
                                   0000E342        Segment part 82 (nwk)
                                                   nwk_start_cnf_processing (nwk)
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038000 - 0003802F (0x30 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_CoordinatorInit    00038000        ZDO_Init (ZDObject)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038030 - 00038039 (0xa bytes), align: 0
  Segment part 19.            Intra module refs:   NLME_CoordinatorInit
                                                   NLME_PermitJoiningEvent
                                                   NLME_PermitJoiningSet
                                                   NLME_StartRouterRequest
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003803A - 0003808E (0x55 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_DataReq            0003803A        APSDE_FrameSend (APSMEDE)
                                                   NLME_RouteDiscoveryRequest (rtg)
                                                   RTG_SendRErr (rtg)
                                                   RTG_SendRrep (rtg)
                                                   Segment part 111 (nwk_util)
               calls direct, is recursive
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000F ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003808F - 0003814B (0xbd bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_DataReqAlloc       0003808F        APSDE_FrameAlloc (APSMEDE)
                                                   NLME_CmdDataReqAlloc (nwk_util)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003814C - 00038150 (0x5 bytes), align: 0
  Segment part 25.            Intra module refs:   NLME_LeaveRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038151 - 00038158 (0x8 bytes), align: 0
  Segment part 26.            Intra module refs:   Segment part 25
                                                   Segment part 36
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038159 - 00038270 (0x118 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_NetworkFormationRequest
                                   00038159        ZDO_StartDevice (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000005 ( 00000029 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038271 - 0003828A (0x1a bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_PermitJoiningEvent
                                   00038271        nwk_event_loop (nwk)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003828B - 000382E4 (0x5a bytes), align: 0
  Segment part 31.            Intra module refs:   NLME_PermitJoiningEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_PermitJoiningSet   0003828B 
               calls direct
               stack 1 = 00000002 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000382E5 - 000382EC (0x8 bytes), align: 0
  Segment part 35.            Intra module refs:   Segment part 26
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000382ED - 000382F5 (0x9 bytes), align: 0
  Segment part 36.            Intra module refs:   Segment part 38
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000382F6 - 00038300 (0xb bytes), align: 0
  Segment part 38.            Intra module refs:   NLDE_DataReqAlloc
                                                   NLME_GetRequest
                                                   NLME_NetworkFormationRequest
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038301 - 00038306 (0x6 bytes), align: 0
  Segment part 40.            Intra module refs:   NLDE_DataReqAlloc
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038307 - 0003830E (0x8 bytes), align: 0
  Segment part 42.            Intra module refs:   Segment part 40
                                                   Segment part 46
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003830F - 00038316 (0x8 bytes), align: 0
  Segment part 44.            Intra module refs:   NLDE_DataReqAlloc
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038317 - 0003831C (0x6 bytes), align: 0
  Segment part 46.            Intra module refs:   NLDE_DataReqAlloc
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003831D - 0003832A (0xe bytes), align: 0
  Segment part 47.            Intra module refs:   NLDE_DataReqAlloc
                                                   NLME_NetworkFormationRequest
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003832B - 0003833B (0x11 bytes), align: 0
  Segment part 48.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_StartRouterRequest
                                   0003832B        ZDO_StartDevice (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003833C - 00038347 (0xc bytes), align: 0
  Segment part 50.            Intra module refs:   NLDE_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038348 - 0003834E (0x7 bytes), align: 0
  Segment part 51.            Intra module refs:   NLME_LeaveRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003834F - 000383B5 (0x67 bytes), align: 0
  Segment part 52.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_LeaveRsp           0003834F        ZDO_LeaveInd (ZDApp)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000383B6 - 000383BC (0x7 bytes), align: 0
  Segment part 53.            Intra module refs:   NLME_LeaveRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000383BD - 000383C3 (0x7 bytes), align: 0
  Segment part 54.            Intra module refs:   NLME_LeaveRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000383C4 - 000383CB (0x8 bytes), align: 0
  Segment part 57.            Intra module refs:   NLDE_DataReq
                                                   NLME_LeaveRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000383CC - 00038504 (0x139 bytes), align: 0
  Segment part 59.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_GetRequest         000383CC        NLME_GetProtocolVersion (nwk_util)
                                                   ZDApp_Init (ZDApp)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038505 - 0003850E (0xa bytes), align: 0
  Segment part 60.            Intra module refs:   NLME_GetRequest
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003850F - 00038512 (0x4 bytes), align: 0
  Segment part 61.            Intra module refs:   NLME_GetRequest
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038513 - 0003851C (0xa bytes), align: 0
  Segment part 62.            Intra module refs:   Segment part 61
                                                   Segment part 63
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003851D - 00038522 (0x6 bytes), align: 0
  Segment part 63.            Intra module refs:   NLME_GetRequest
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038523 - 00038581 (0x5f bytes), align: 0
  Segment part 64.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_SetRequest         00038523        ZDAppSetupProtoVersion (ZDApp)
                                                   ZDO_NetworkDiscoveryConfirmCB (ZDApp)
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038582 - 0003858D (0xc bytes), align: 0
  Segment part 65.            Intra module refs:   NLME_GetRequest
                                                   NLME_SetRequest
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000162F - 0000162F (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   NLME_PermitJoining
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001630 - 00001630 (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   NLME_AssocPermission

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : NLMEDE_CB

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A460 - 0003A5CC (0x16d bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_DataCnf            0003A460        nwk_data_cnf_processing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A5CD - 0003A761 (0x195 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_DataIndication     0003A5CD        NLDE_DataIndSend (nwk_util)
                                                   nwk_data_ind_processing (nwk)
               calls direct, is recursive
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000004 ( 00000037 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A762 - 0003A76D (0xc bytes), align: 0
  Segment part 8.             Intra module refs:   NLDE_DataCnf
                                                   NLDE_DataIndication
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A76E - 0003A776 (0x9 bytes), align: 0
  Segment part 9.             Intra module refs:   NLDE_DataIndication
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A777 - 0003A782 (0xc bytes), align: 0
  Segment part 10.            Intra module refs:   NLDE_DataIndication
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A783 - 0003A790 (0xe bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 10
                                                   Segment part 9
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A791 - 0003A79B (0xb bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_NetworkDiscoveryConfirm
                                   0003A791        nwk_scan_cnf_processing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A79C - 0003A7A6 (0xb bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_NetworkFormationConfirm
                                   0003A79C        NLME_CoordinatorInit (NLMEDE)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A7A7 - 0003A7B1 (0xb bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_StartRouterConfirm
                                   0003A7A7        nwk_start_cnf_processing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A7B2 - 0003A7BA (0x9 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_JoinIndication     0003A7B2        nwk_associate_ind_processing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A7BB - 0003A7C4 (0xa bytes), align: 0
  Segment part 17.            Intra module refs:   NLME_JoinIndication
                                                   NLME_LeaveCnf
                                                   NLME_LeaveInd
                                                   NLME_NetworkDiscoveryConfirm
                                                   NLME_NetworkFormationConfirm
                                                   NLME_PollConfirm
                                                   NLME_StartRouterConfirm
                                                   NLME_SyncIndication
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A7C5 - 0003A7CF (0xb bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_LeaveCnf           0003A7C5        NLME_LeaveCmdCnf (nwk_util)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A7D0 - 0003A7DA (0xb bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_LeaveInd           0003A7D0        NLME_LeaveCmdProcess (nwk_util)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A7DB - 0003A7E5 (0xb bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_SyncIndication     0003A7DB        RTG_UpdateNeighborEntry (nwk_util)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A7E6 - 0003A7F0 (0xb bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_PollConfirm        0003A7E6        nwk_event_loop (nwk)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A7F1 - 0003A81C (0x2c bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_RouteDiscoveryIndication
                                   0003A7F1        RTG_ProcessRErr (rtg)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : aps_groups

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E345 - 0000E346 (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   aps_AddGroup
                                                   aps_CountAllGroups
                                                   aps_FindGroup
                                                   aps_FindGroupForEndpoint
                                                   aps_GroupsWriteNV
                                                   aps_RemoveGroup
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003AB5F - 0003AC1C (0xbe bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aps_AddGroup            0003AB5F        SampleApp_HandleKeys (SampleApp)
                                                   SampleApp_Init (SampleApp)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000021 ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003AC1D - 0003AC62 (0x46 bytes), align: 0
  Segment part 8.             Intra module refs:   aps_AddGroup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aps_FindGroup           0003AC1D        SampleApp_HandleKeys (SampleApp)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000E ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003AC63 - 0003AC67 (0x5 bytes), align: 0
  Segment part 9.             Intra module refs:   aps_FindGroup
                                                   aps_FindGroupForEndpoint
                                                   aps_RemoveGroup
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003AC68 - 0003ACB2 (0x4b bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aps_FindGroupForEndpoint
                                   0003AC68        ?Subroutine6 (AF)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003ACB3 - 0003AD2B (0x79 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aps_RemoveGroup         0003ACB3        SampleApp_HandleKeys (SampleApp)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003AD2C - 0003AD30 (0x5 bytes), align: 0
  Segment part 15.            Intra module refs:   aps_GroupsWriteNV
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003AD31 - 0003AD36 (0x6 bytes), align: 0
  Segment part 16.            Intra module refs:   aps_AddGroup
                                                   aps_GroupsWriteNV
                                                   aps_RemoveGroup
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003AD37 - 0003AD3D (0x7 bytes), align: 0
  Segment part 18.            Intra module refs:   aps_CountAllGroups
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003AD3E - 0003AD47 (0xa bytes), align: 0
  Segment part 19.            Intra module refs:   aps_AddGroup
                                                   aps_CountAllGroups
                                                   aps_RemoveGroup
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003AD48 - 0003AD64 (0x1d bytes), align: 0
  Segment part 20.            Intra module refs:   aps_AddGroup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aps_CountAllGroups      0003AD48 
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 0000000E ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003AD65 - 0003AE59 (0xf5 bytes), align: 0
  Segment part 23.            Intra module refs:   aps_AddGroup
                                                   aps_RemoveGroup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aps_GroupsWriteNV       0003AD65 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000E ( 00000024 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003AE5A - 0003AE68 (0xf bytes), align: 0
  Segment part 24.            Intra module refs:   aps_GroupsWriteNV

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : aps_util

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003858E - 000387AA (0x21d bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_ParseMsg          0003858E        NLDE_DataIndication (NLMEDE_CB)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000387AB - 000387B8 (0xe bytes), align: 0
  Segment part 7.             Intra module refs:   APSDE_ParseMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000387B9 - 000387C1 (0x9 bytes), align: 0
  Segment part 8.             Intra module refs:   APSDE_ParseMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000387C2 - 000387C8 (0x7 bytes), align: 0
  Segment part 9.             Intra module refs:   APSDE_ParseMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000387C9 - 000387D2 (0xa bytes), align: 0
  Segment part 10.            Intra module refs:   Segment part 12
                                                   Segment part 9
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000387D3 - 000387E0 (0xe bytes), align: 0
  Segment part 11.            Intra module refs:   APSDE_ParseMsg
                                                   Segment part 9
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000387E1 - 000387E6 (0x6 bytes), align: 0
  Segment part 12.            Intra module refs:   APSDE_ParseMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000387E7 - 000387EA (0x4 bytes), align: 0
  Segment part 13.            Intra module refs:   APSDE_ParseMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000387EB - 000387F2 (0x8 bytes), align: 0
  Segment part 14.            Intra module refs:   Segment part 13
                                                   Segment part 15
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000387F3 - 000387F8 (0x6 bytes), align: 0
  Segment part 15.            Intra module refs:   APSDE_ParseMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000387F9 - 000387FF (0x7 bytes), align: 0
  Segment part 16.            Intra module refs:   APSDE_ParseMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038800 - 00038814 (0x15 bytes), align: 0
  Segment part 17.            Intra module refs:   APSDE_ParseMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038815 - 00038945 (0x131 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           apsGenerateAck          00038815        NLDE_DataIndication (NLMEDE_CB)
               calls direct, is recursive
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000013 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038946 - 0003894A (0x5 bytes), align: 0
  Segment part 19.            Intra module refs:   apsAckFindMatchCB
                                                   apsGenerateAck
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003894B - 0003894E (0x4 bytes), align: 0
  Segment part 20.            Intra module refs:   apsGenerateAck
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003894F - 00038955 (0x7 bytes), align: 0
  Segment part 21.            Intra module refs:   Segment part 14
                                                   Segment part 16
                                                   Segment part 20
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038956 - 0003895E (0x9 bytes), align: 0
  Segment part 22.            Intra module refs:   APSDE_ParseMsg
                                                   apsGenerateAck
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003895F - 0003896B (0xd bytes), align: 0
  Segment part 23.            Intra module refs:   apsGenerateAck
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003896C - 00038977 (0xc bytes), align: 0
  Segment part 24.            Intra module refs:   apsGenerateAck
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038978 - 00038983 (0xc bytes), align: 0
  Segment part 25.            Intra module refs:   APSDE_ParseMsg
                                                   apsAckFindMatchCB
                                                   apsGenerateAck
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038984 - 00038A26 (0xa3 bytes), align: 0
  Segment part 26.            Intra module refs:   apsProcessAck
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           apsAckFindMatchCB       00038984 
               is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038A27 - 00038A34 (0xe bytes), align: 0
  Segment part 27.            Intra module refs:   apsAckFindMatchCB
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038A35 - 00038AE9 (0xb5 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           apsProcessAck           00038A35        NLDE_DataIndication (NLMEDE_CB)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038AEA - 00038AF4 (0xb bytes), align: 0
  Segment part 29.            Intra module refs:   apsGenerateAck
                                                   apsProcessAck

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : nwk

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E347 - 0000E3A6 (0x60 bytes), align: 0
  Segment part 8.             Intra module refs:   Segment part 58
                                                   Segment part 98
                                                   nwk_ScanPANChanSelect
                                                   nwk_ScanPANChanVerify
                                                   nwk_associate_ind_processing
                                                   nwk_beacon_notify_ind_processing
                                                   nwk_data_ind_processing
                                                   nwk_event_loop
                                                   nwk_init
                                                   nwk_scan_cnf_processing
                                                   nwk_start_cnf_processing
                                                   nwk_start_coord
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _NIB                    0000E347        APSDE_DataReqMTU (APSMEDE)
                                                   APSME_LookupNwkAddr (APSMEDE)
                                                   AssocAddNew (AssocList)
                                                   NIB_init (nwk_globals)
                                                   NLDE_CheckFrameSecurity (nwk_util)
                                                   NLDE_DataReq (NLMEDE)
                                                   NLDE_DataReqSend (nwk_util)
                                                   NLME_GetNeighborLinkInfo (nwk_util)
                                                   NLME_GetRequest (NLMEDE)
                                                   NLME_GetShortAddr (nwk_util)
                                                   NLME_LeaveRsp (NLMEDE)
                                                   NLME_NetworkFormationRequest (NLMEDE)
                                                   NLME_RejoinRspCmdProcess (nwk_util)
                                                   NLME_RouteDiscoveryRequest (rtg)
                                                   NLME_SetAssocFlags (nwk_util)
                                                   NLME_SetRequest (NLMEDE)
                                                   NLME_StartRouterRequest (NLMEDE)
                                                   RTG_AddRtgEntry (rtg)
                                                   RTG_AllocNewAddress (rtg)
                                                   RTG_BcastAdd (rtg)
                                                   RTG_BcastChk (rtg)
                                                   RTG_BcastTimeout (rtg)
                                                   RTG_CalcAddress (rtg)
                                                   RTG_DataReq (rtg)
                                                   RTG_DeAllocAddress (rtg)
                                                   RTG_DivideCskip (rtg)
                                                   RTG_GetAncestors (rtg)
                                                   RTG_GetLinkCost (rtg)
                                                   RTG_GetNextHop (rtg)
                                                   RTG_GetRoutingAddress (rtg)
                                                   RTG_GetTreeRoute (rtg)
                                                   RTG_MultiplyCskip (rtg)
                                                   RTG_ProcessRrep (rtg)
                                                   RTG_ProcessRreq (rtg)
                                                   RTG_RouteMaintanence (rtg)
                                                   RTG_SendRErr (rtg)
                                                   RTG_UpdateRtDiscEntry (rtg)
                                                   Segment part 104 (rtg)
                                                   Segment part 40 (nwk_util)
                                                   Segment part 47 (NLMEDE)
                                                   Segment part 65 (NLMEDE)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
                                                   nwkbufs_hold (nwk_bufs)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3A7 - 0000E3A7 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   nwkBuildDataCnf
                                                   nwk_event_loop
                                                   nwk_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NWK_TaskID              0000E3A7        MAC_CbackEvent (zmac_cb)
                                                   NLDE_DataCnf (NLMEDE_CB)
                                                   NLME_PermitJoiningSet (NLMEDE)
                                                   NLME_RejoinReqCmdProcess (nwk_util)
                                                   NLME_RejoinRspCmdProcess (nwk_util)
                                                   RTG_BcastAdd (rtg)
                                                   RTG_BcastTimeout (rtg)
                                                   RTG_BcastTimerHandler (rtg)
                                                   RTG_DataReq (rtg)
                                                   Segment part 17 (nwk_bufs)
                                                   Segment part 83 (rtg)
                                                   nwkDB_Add (nwk_bufs)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3A8 - 0000E3A9 (0x2 bytes), align: 0
  Segment part 10.            Intra module refs:   nwk_ScanPANChanVerify
                                                   nwk_beacon_notify_ind_processing
                                                   nwk_init
                                                   nwk_scan_cnf_processing
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NwkDescList             0000E3A8 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3AA - 0000E3B4 (0xb bytes), align: 0
  Segment part 11.            Intra module refs:   nwk_start_coord
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_beaconPayload       0000E3AA        NLME_SetAssocFlags (nwk_util)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FB63 - 0000FB63 (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   nwk_start_coord
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_beaconPayloadSize   0000FB63        NLME_SetAssocFlags (nwk_util)
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016B54 - 00016BB3 (0x60 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_init                00016B54        osalAddTasks (OSAL_SampleApp)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016BB4 - 00016BBA (0x7 bytes), align: 0
  Segment part 19.            Intra module refs:   nwkSimulateDataCnf
                                                   nwk_init
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016BBB - 00016E30 (0x276 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_event_loop          00016BBB        osalAddTasks (OSAL_SampleApp)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016E31 - 00016E35 (0x5 bytes), align: 0
  Segment part 22.            Intra module refs:   nwk_orphan_ind_processing
                                                   nwk_start_coord
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016E36 - 00016E41 (0xc bytes), align: 0
  Segment part 23.            Intra module refs:   Segment part 22
                                                   Segment part 84
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016E42 - 00016ECE (0x8d bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_data_req_send       00016E42        nwk_SendNextDataBuf (nwk_bufs)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016ECF - 00016ED5 (0x7 bytes), align: 0
  Segment part 25.            Intra module refs:   nwk_data_req_send
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016ED6 - 00016EDC (0x7 bytes), align: 0
  Segment part 26.            Intra module refs:   nwk_data_req_send
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016EDD - 00016EEC (0x10 bytes), align: 0
  Segment part 27.            Intra module refs:   nwk_data_req_send
                                                   nwk_event_loop
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016EED - 00016EF2 (0x6 bytes), align: 0
  Segment part 28.            Intra module refs:   Segment part 27
                                                   Segment part 44
                                                   Segment part 55
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016EF3 - 00016F01 (0xf bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkSimulateDataCnf      00016EF3        Segment part 71 (rtg)
                                                   apsProcessAck (aps_util)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016F02 - 00016F41 (0x40 bytes), align: 0
  Segment part 30.            Intra module refs:   Segment part 27
                                                   nwkSimulateDataCnf
                                                   nwk_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkBuildDataCnf         00016F02 
               calls direct
               stack 1 = 00000002 ( 00000001 )
               stack 2 = 0000000E ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016F42 - 00016F46 (0x5 bytes), align: 0
  Segment part 31.            Intra module refs:   nwkBuildDataCnf
                                                   nwk_scan_cnf_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016F47 - 00017056 (0x110 bytes), align: 0
  Segment part 33.            Intra module refs:   nwk_data_ind_processing
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NwkCommandPktProcessing
                                   00016F47 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000033 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017057 - 00017060 (0xa bytes), align: 0
  Segment part 34.            Intra module refs:   NwkCommandPktProcessing
                                                   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017061 - 00017280 (0x220 bytes), align: 0
  Segment part 35.            Intra module refs:   nwk_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_data_cnf_processing
                                   00017061 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000E ( 00000026 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017281 - 00017288 (0x8 bytes), align: 0
  Segment part 36.            Intra module refs:   nwk_data_cnf_processing
                                                   nwk_data_req_send
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017289 - 00017291 (0x9 bytes), align: 0
  Segment part 37.            Intra module refs:   Segment part 108
                                                   Segment part 26
                                                   Segment part 36
                                                   Segment part 54
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017292 - 0001729A (0x9 bytes), align: 0
  Segment part 38.            Intra module refs:   NwkCommandPktProcessing
                                                   nwk_data_cnf_processing
                                                   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001729B - 0001781F (0x585 bytes), align: 0
  Segment part 39.            Intra module refs:   nwk_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_data_ind_processing
                                   0001729B 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000E ( 00000036 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017820 - 0001782A (0xb bytes), align: 0
  Segment part 40.            Intra module refs:   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001782B - 0001782E (0x4 bytes), align: 0
  Segment part 41.            Intra module refs:   nwk_data_cnf_processing
                                                   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001782F - 00017833 (0x5 bytes), align: 0
  Segment part 42.            Intra module refs:   Segment part 25
                                                   Segment part 41
                                                   Segment part 51
                                                   Segment part 57
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017834 - 0001783D (0xa bytes), align: 0
  Segment part 43.            Intra module refs:   Segment part 42
                                                   Segment part 63
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001783E - 00017841 (0x4 bytes), align: 0
  Segment part 44.            Intra module refs:   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017842 - 0001784A (0x9 bytes), align: 0
  Segment part 45.            Intra module refs:   nwk_data_cnf_processing
                                                   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001784B - 00017853 (0x9 bytes), align: 0
  Segment part 46.            Intra module refs:   nwk_data_cnf_processing
                                                   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017854 - 00017857 (0x4 bytes), align: 0
  Segment part 47.            Intra module refs:   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017858 - 0001785C (0x5 bytes), align: 0
  Segment part 48.            Intra module refs:   Segment part 47
                                                   Segment part 50
                                                   Segment part 52
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001785D - 00017866 (0xa bytes), align: 0
  Segment part 49.            Intra module refs:   Segment part 48
                                                   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017867 - 0001786B (0x5 bytes), align: 0
  Segment part 50.            Intra module refs:   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001786C - 00017878 (0xd bytes), align: 0
  Segment part 51.            Intra module refs:   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017879 - 0001787F (0x7 bytes), align: 0
  Segment part 52.            Intra module refs:   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017880 - 00017883 (0x4 bytes), align: 0
  Segment part 53.            Intra module refs:   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017884 - 0001788E (0xb bytes), align: 0
  Segment part 54.            Intra module refs:   NwkCommandPktProcessing
                                                   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001788F - 00017897 (0x9 bytes), align: 0
  Segment part 55.            Intra module refs:   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017898 - 0001789E (0x7 bytes), align: 0
  Segment part 56.            Intra module refs:   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001789F - 000178A6 (0x8 bytes), align: 0
  Segment part 57.            Intra module refs:   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000178A7 - 000178AF (0x9 bytes), align: 0
  Segment part 58.            Intra module refs:   NwkCommandPktProcessing
                                                   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000178B0 - 000178B0 (0x1 bytes), align: 0
  Segment part 59.            Intra module refs:   nwk_beacon_notify_ind_processing
                                                   nwk_data_ind_processing
                                                   nwk_event_loop
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000178B1 - 000178B6 (0x6 bytes), align: 0
  Segment part 60.            Intra module refs:   Segment part 59
                                                   Segment part 88
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000178B7 - 000178BB (0x5 bytes), align: 0
  Segment part 61.            Intra module refs:   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000178BC - 000178C9 (0xe bytes), align: 0
  Segment part 62.            Intra module refs:   Segment part 53
                                                   Segment part 56
                                                   Segment part 61
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000178CA - 000178CE (0x5 bytes), align: 0
  Segment part 63.            Intra module refs:   Segment part 28
                                                   Segment part 62
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000178CF - 00017B0B (0x23d bytes), align: 0
  Segment part 64.            Intra module refs:   nwk_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_associate_ind_processing
                                   000178CF 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000E ( 00000025 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017B0C - 00017B19 (0xe bytes), align: 0
  Segment part 65.            Intra module refs:   nwk_associate_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017B1A - 00017B29 (0x10 bytes), align: 0
  Segment part 66.            Intra module refs:   nwk_associate_ind_processing
                                                   nwk_comm_status_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017B2A - 00017B38 (0xf bytes), align: 0
  Segment part 67.            Intra module refs:   nwk_associate_ind_processing
                                                   nwk_comm_status_ind_processing
                                                   nwk_orphan_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017B39 - 00017B3D (0x5 bytes), align: 0
  Segment part 69.            Intra module refs:   nwk_start_cnf_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017B3E - 00017B41 (0x4 bytes), align: 0
  Segment part 70.            Intra module refs:   NwkCommandPktProcessing
                                                   nwk_associate_ind_processing
                                                   nwk_data_ind_processing
                                                   nwk_orphan_ind_processing
                                                   nwk_start_coord
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017B42 - 00017B47 (0x6 bytes), align: 0
  Segment part 71.            Intra module refs:   Segment part 58
                                                   Segment part 70
                                                   Segment part 81
                                                   Segment part 95
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017B48 - 00017B50 (0x9 bytes), align: 0
  Segment part 72.            Intra module refs:   nwk_associate_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017B51 - 00017B64 (0x14 bytes), align: 0
  Segment part 74.            Intra module refs:   nwk_init
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017B65 - 00017B6C (0x8 bytes), align: 0
  Segment part 75.            Intra module refs:   Segment part 74
                                                   nwk_associate_ind_processing
                                                   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017B6D - 00017BCF (0x63 bytes), align: 0
  Segment part 77.            Intra module refs:   nwk_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_scan_cnf_processing
                                   00017B6D 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000E ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017BD0 - 00017BD5 (0x6 bytes), align: 0
  Segment part 78.            Intra module refs:   nwk_ScanPANChanVerify
                                                   nwk_beacon_notify_ind_processing
                                                   nwk_scan_cnf_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017BD6 - 00017D4D (0x178 bytes), align: 0
  Segment part 80.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_ScanPANChanVerify   00017BD6        NLME_CoordinatorInit (NLMEDE)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000021 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017D4E - 00017D52 (0x5 bytes), align: 0
  Segment part 81.            Intra module refs:   nwk_ScanPANChanVerify
                                                   nwk_data_cnf_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017D53 - 00017D61 (0xf bytes), align: 0
  Segment part 82.            Intra module refs:   nwk_ScanPANChanSelect
                                                   nwk_ScanPANChanVerify
                                                   nwk_event_loop
                                                   nwk_scan_cnf_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017D62 - 00017E5F (0xfe bytes), align: 0
  Segment part 83.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_ScanPANChanSelect   00017D62        NLME_CoordinatorInit (NLMEDE)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000023 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017E60 - 00017E67 (0x8 bytes), align: 0
  Segment part 84.            Intra module refs:   nwk_ScanPANChanSelect
                                                   nwk_ScanPANChanVerify
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017E68 - 0001812D (0x2c6 bytes), align: 0
  Segment part 85.            Intra module refs:   nwk_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_beacon_notify_ind_processing
                                   00017E68 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000E ( 0000001E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001812E - 0001812F (0x2 bytes), align: 0
  Segment part 86.            Intra module refs:   nwk_beacon_notify_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018130 - 00018137 (0x8 bytes), align: 0
  Segment part 87.            Intra module refs:   Segment part 123
                                                   Segment part 86
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018138 - 0001813D (0x6 bytes), align: 0
  Segment part 88.            Intra module refs:   nwk_beacon_notify_ind_processing
                                                   nwk_event_loop
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001813E - 00018145 (0x8 bytes), align: 0
  Segment part 89.            Intra module refs:   NwkCommandPktProcessing
                                                   nwk_beacon_notify_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018146 - 00018151 (0xc bytes), align: 0
  Segment part 90.            Intra module refs:   NwkCommandPktProcessing
                                                   nwk_ScanPANChanSelect
                                                   nwk_beacon_notify_ind_processing
                                                   nwk_comm_status_ind_processing
                                                   nwk_data_cnf_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018152 - 00018159 (0x8 bytes), align: 0
  Segment part 91.            Intra module refs:   nwk_associate_ind_processing
                                                   nwk_beacon_notify_ind_processing
                                                   nwk_comm_status_ind_processing
                                                   nwk_data_cnf_processing
                                                   nwk_data_ind_processing
                                                   nwk_data_req_send
                                                   nwk_scan_cnf_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001815A - 0001815F (0x6 bytes), align: 0
  Segment part 92.            Intra module refs:   Segment part 118
                                                   Segment part 26
                                                   Segment part 38
                                                   Segment part 45
                                                   Segment part 46
                                                   Segment part 72
                                                   Segment part 91
                                                   Segment part 98
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018160 - 00018164 (0x5 bytes), align: 0
  Segment part 93.            Intra module refs:   nwk_beacon_notify_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018165 - 0001816C (0x8 bytes), align: 0
  Segment part 94.            Intra module refs:   Segment part 93
                                                   Segment part 97
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001816D - 0001816F (0x3 bytes), align: 0
  Segment part 95.            Intra module refs:   nwk_beacon_notify_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018170 - 00018174 (0x5 bytes), align: 0
  Segment part 96.            Intra module refs:   Segment part 125
                                                   Segment part 95
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018175 - 0001817E (0xa bytes), align: 0
  Segment part 97.            Intra module refs:   nwk_beacon_notify_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001817F - 00018194 (0x16 bytes), align: 0
  Segment part 98.            Intra module refs:   nwk_beacon_notify_ind_processing
                                                   nwk_data_cnf_processing
                                                   nwk_data_ind_processing
                                                   nwk_event_loop
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018195 - 00018198 (0x4 bytes), align: 0
  Segment part 99.            Intra module refs:   nwk_beacon_notify_ind_processing
                                                   nwk_data_cnf_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018199 - 000181A0 (0x8 bytes), align: 0
  Segment part 100.           Intra module refs:   Segment part 101
                                                   Segment part 89
                                                   Segment part 99
                                                   nwk_ScanPANChanVerify
                                                   nwk_beacon_notify_ind_processing
                                                   nwk_comm_status_ind_processing
                                                   nwk_data_cnf_processing
                                                   nwk_scan_cnf_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000181A1 - 000181A6 (0x6 bytes), align: 0
  Segment part 101.           Intra module refs:   NwkCommandPktProcessing
                                                   nwk_beacon_notify_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000181A7 - 000181AC (0x6 bytes), align: 0
  Segment part 102.           Intra module refs:   nwk_beacon_notify_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000181AD - 000181B4 (0x8 bytes), align: 0
  Segment part 103.           Intra module refs:   NwkCommandPktProcessing
                                                   nwk_associate_ind_processing
                                                   nwk_beacon_notify_ind_processing
                                                   nwk_data_ind_processing
                                                   nwk_orphan_ind_processing
                                                   nwk_start_coord
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000181B5 - 00018391 (0x1dd bytes), align: 0
  Segment part 104.           Intra module refs:   nwk_ScanPANChanVerify
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_start_coord         000181B5        NLME_StartRouterRequest (NLMEDE)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000021 ( 0000003F )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018392 - 0001839C (0xb bytes), align: 0
  Segment part 105.           Intra module refs:   nwk_start_coord
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001839D - 00018408 (0x6c bytes), align: 0
  Segment part 106.           Intra module refs:   nwk_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_start_cnf_processing
                                   0001839D 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000E ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018409 - 00018410 (0x8 bytes), align: 0
  Segment part 107.           Intra module refs:   nwk_ScanPANChanSelect
                                                   nwk_ScanPANChanVerify
                                                   nwk_event_loop
                                                   nwk_scan_cnf_processing
                                                   nwk_start_cnf_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018411 - 00018421 (0x11 bytes), align: 0
  Segment part 108.           Intra module refs:   nwk_beacon_notify_ind_processing
                                                   nwk_data_cnf_processing
                                                   nwk_data_ind_processing
                                                   nwk_start_cnf_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018422 - 000184D8 (0xb7 bytes), align: 0
  Segment part 109.           Intra module refs:   nwk_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_orphan_ind_processing
                                   00018422 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000E ( 00000022 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000184D9 - 000184E0 (0x8 bytes), align: 0
  Segment part 110.           Intra module refs:   nwk_ScanPANChanVerify
                                                   nwk_comm_status_ind_processing
                                                   nwk_data_cnf_processing
                                                   nwk_data_req_send
                                                   nwk_orphan_ind_processing
                                                   nwk_start_coord
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000184E1 - 000184F3 (0x13 bytes), align: 0
  Segment part 111.           Intra module refs:   nwk_associate_ind_processing
                                                   nwk_orphan_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000184F4 - 000184FB (0x8 bytes), align: 0
  Segment part 113.           Intra module refs:   NwkCommandPktProcessing
                                                   nwk_ScanPANChanSelect
                                                   nwk_beacon_notify_ind_processing
                                                   nwk_event_loop
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000184FC - 00018504 (0x9 bytes), align: 0
  Segment part 114.           Intra module refs:   nwk_beacon_notify_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018505 - 0001850E (0xa bytes), align: 0
  Segment part 115.           Intra module refs:   nwk_ScanPANChanVerify
                                                   nwk_beacon_notify_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001850F - 000185C0 (0xb2 bytes), align: 0
  Segment part 117.           Intra module refs:   nwk_event_loop
           LOCAL                   ADDRESS         
           =====                   =======         
           nwk_comm_status_ind_processing
                                   0001850F 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000E ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000185C1 - 000185C9 (0x9 bytes), align: 0
  Segment part 118.           Intra module refs:   nwk_associate_ind_processing
                                                   nwk_comm_status_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000185CA - 0001867F (0xb6 bytes), align: 0
  Segment part 119.           Intra module refs:   nwk_start_coord
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_BeaconToNative      000185CA        NLME_SetAssocFlags (nwk_util)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000003F ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018680 - 00018684 (0x5 bytes), align: 0
  Segment part 120.           Intra module refs:   nwk_BeaconFromNative
                                                   nwk_BeaconToNative
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018685 - 00018688 (0x4 bytes), align: 0
  Segment part 121.           Intra module refs:   nwk_BeaconToNative
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018689 - 0001868D (0x5 bytes), align: 0
  Segment part 122.           Intra module refs:   Segment part 102
                                                   Segment part 121
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001868E - 00018691 (0x4 bytes), align: 0
  Segment part 123.           Intra module refs:   Segment part 122
                                                   nwk_BeaconToNative
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018692 - 0001872B (0x9a bytes), align: 0
  Segment part 124.           Intra module refs:   nwk_beacon_notify_ind_processing
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_BeaconFromNative    00018692        NLME_SetAssocFlags (nwk_util)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000001D ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001872C - 00018730 (0x5 bytes), align: 0
  Segment part 125.           Intra module refs:   nwk_BeaconFromNative
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018731 - 0001873B (0xb bytes), align: 0
  Segment part 126.           Intra module refs:   nwk_BeaconFromNative
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001631 - 00001631 (0x1 bytes), align: 0
  Segment part 13.            Intra module refs:   nwk_beaconPayloadSize

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : nwk_bufs

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E3B5 - 0000E3B5 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   nwkDB_ReturnIndirectHoldingCnt
                                                   nwk_MacDataBuffersDealloc
                                                   nwkbufs_hold
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cntIndirectHolding      0000E3B5 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3B6 - 0000E3B7 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   nwkDB_Add
                                                   nwkDB_CountTypes
                                                   nwkDB_FindDstAddr
                                                   nwkDB_FindHandle
                                                   nwkDB_FindMatch
                                                   nwkDB_FindNextType
                                                   nwkDB_RemoveFromList
                                                   nwkbufs_hold
                                                   nwkbufs_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDataBufQueue         0000E3B6 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CB60 - 0002CB6D (0xe bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkbufs_init            0002CB60        nwk_init (nwk)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CB6E - 0002CB9B (0x2e bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_SendNextDataBuf     0002CB6E        nwk_data_cnf_processing (nwk)
                                                   nwk_event_loop (nwk)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CB9C - 0002CBA0 (0x5 bytes), align: 0
  Segment part 10.            Intra module refs:   nwk_MacDataBuffersDealloc
                                                   nwk_SendNextDataBuf
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CBA1 - 0002CBD7 (0x37 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_MacDataBuffersFull
                                   0002CBA1        NLDE_DataReqSend (nwk_util)
                                                   nwk_data_ind_processing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CBD8 - 0002CE70 (0x299 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_MacDataBuffersAdd   0002CBD8        NLDE_SendMsg (nwk_util)
                                                   nwk_data_cnf_processing (nwk)
                                                   nwk_data_req_send (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CE71 - 0002CEC0 (0x50 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_MacDataBuffersDealloc
                                   0002CE71        nwk_data_cnf_processing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CEC1 - 0002CF2C (0x6c bytes), align: 0
  Segment part 14.            Intra module refs:   nwk_MacDataBuffersAdd
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_CreateHdr         0002CEC1 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000F ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CF2D - 0002CF33 (0x7 bytes), align: 0
  Segment part 15.            Intra module refs:   nwkDB_CreateHdr
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CF34 - 0002D00B (0xd8 bytes), align: 0
  Segment part 16.            Intra module refs:   nwk_MacDataBuffersAdd
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_Add               0002CF34 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000011 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D00C - 0002D01B (0x10 bytes), align: 0
  Segment part 17.            Intra module refs:   nwkDB_Add
                                                   nwk_MacDataBuffersAdd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D01C - 0002D050 (0x35 bytes), align: 0
  Segment part 18.            Intra module refs:   nwkDB_Add
                                                   nwk_MacDataBuffersFull
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_CountTypes        0002D01C 
               stack 1 = 00000002 ( 00000002 )
               stack 2 = 0000000B ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D051 - 0002D0A7 (0x57 bytes), align: 0
  Segment part 19.            Intra module refs:   nwk_SendNextDataBuf
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_FindNextType      0002D051        RTG_IndirectTimeout (rtg)
                                                   nwk_event_loop (nwk)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000A ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D0A8 - 0002D0D6 (0x2f bytes), align: 0
  Segment part 20.            Intra module refs:   nwk_MacDataBuffersAdd
                                                   nwk_MacDataBuffersDealloc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_FindHandle        0002D0A8        NLDE_GetHandle (nwk_util)
                                                   NLDE_SendMsg (nwk_util)
                                                   RTG_BcastTimeout (rtg)
                                                   RTG_DataReq (rtg)
                                                   nwk_data_cnf_processing (nwk)
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 0000000F ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D0D7 - 0002D0DB (0x5 bytes), align: 0
  Segment part 21.            Intra module refs:   nwkDB_CountTypes
                                                   nwkDB_FindHandle
                                                   nwkDB_FindNextType
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D0DC - 0002D112 (0x37 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_FindDstAddr       0002D0DC        RTG_DataReq (rtg)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D113 - 0002D119 (0x7 bytes), align: 0
  Segment part 23.            Intra module refs:   nwkDB_CountTypes
                                                   nwkDB_FindDstAddr
                                                   nwkDB_FindHandle
                                                   nwkDB_ReturnIndirectHoldingCnt
                                                   nwk_MacDataBuffersFull
                                                   nwkbufs_init
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D11A - 0002D125 (0xc bytes), align: 0
  Segment part 25.            Intra module refs:   nwkDB_Add
                                                   nwkDB_FindDstAddr
                                                   nwkDB_RemoveFromList
                                                   nwk_MacDataBuffersAdd
                                                   nwkbufs_hold
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D126 - 0002D17E (0x59 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_FindMatch         0002D126        apsProcessAck (aps_util)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D17F - 0002D18A (0xc bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_ReturnIndirectHoldingCnt
                                   0002D17F        MAC_CbackCheckPending (zmac_cb)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D18B - 0002D1DC (0x52 bytes), align: 0
  Segment part 29.            Intra module refs:   nwkDB_DeleteRecAll
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_RemoveFromList    0002D18B 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D1DD - 0002D1E2 (0x6 bytes), align: 0
  Segment part 30.            Intra module refs:   Segment part 21
                                                   Segment part 41
                                                   nwkDB_RemoveFromList
                                                   nwk_MacDataBuffersAdd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D1E3 - 0002D227 (0x45 bytes), align: 0
  Segment part 31.            Intra module refs:   nwk_MacDataBuffersDealloc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_DeleteRecAll      0002D1E3 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000A ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D228 - 0002D22C (0x5 bytes), align: 0
  Segment part 32.            Intra module refs:   nwkDB_DeleteRecAll
                                                   nwkDB_FindNextType
                                                   nwkDB_RemoveFromList
                                                   nwkbufs_hold
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D22D - 0002D231 (0x5 bytes), align: 0
  Segment part 33.            Intra module refs:   nwkDB_DeleteRecAll
                                                   nwk_MacDataBuffersAdd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D232 - 0002D23C (0xb bytes), align: 0
  Segment part 34.            Intra module refs:   Segment part 33
                                                   Segment part 41
                                                   nwk_MacDataBuffersAdd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D23D - 0002D24E (0x12 bytes), align: 0
  Segment part 35.            Intra module refs:   nwkDB_DeleteRecAll
                                                   nwk_MacDataBuffersAdd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D24F - 0002D2FF (0xb1 bytes), align: 0
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkbufs_hold            0002D24F        NLDE_SendMsg (nwk_util)
                                                   RTG_BcastHold (rtg)
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D300 - 0002D303 (0x4 bytes), align: 0
  Segment part 37.            Intra module refs:   nwkDB_CreateHdr
                                                   nwkbufs_hold
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D304 - 0002D309 (0x6 bytes), align: 0
  Segment part 38.            Intra module refs:   Segment part 15
                                                   Segment part 37
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D30A - 0002D313 (0xa bytes), align: 0
  Segment part 39.            Intra module refs:   Segment part 38
                                                   nwkDB_CreateHdr
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D314 - 0002D31F (0xc bytes), align: 0
  Segment part 41.            Intra module refs:   nwkDB_DeleteRecAll
                                                   nwk_MacDataBuffersAdd

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : nwk_util

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E3B8 - 0000E3B8 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   NLME_IsAddressBroadcast
                                                   NLME_SetBroadcastFilter
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FB64 - 0000FB65 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   NLME_RejoinReqCmdProcess
                                                   NLME_RejoinRspSend
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _savedRejoinRspAddr     0000FB64 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3B9 - 0000E3C0 (0x8 bytes), align: 0
  Segment part 9.             Intra module refs:   NLME_GetExtAddr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           saveExtAddr             0000E3B9        ZDP_NwkAddrReq (ZDProfile)
                                                   zdpProcessAddrReq (ZDProfile)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3C1 - 0000E3C1 (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   NLDE_GetHandle
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nsduHandleCounter       0000E3C1 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FB66 - 0000FB66 (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   NLME_GetEnergyThreshold
                                                   NLME_SetEnergyThreshold
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           baseEDMaxEnergy         0000FB66 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001873C - 000187B4 (0x79 bytes), align: 0
  Segment part 15.            Intra module refs:   NLDE_DataReqSend
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_RTG_BcastAdd       0001873C 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000010 ( 0000001F )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000187B5 - 00018990 (0x1dc bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_DataReqSend        000187B5        NLDE_DataReq (NLMEDE)
               calls direct, is recursive
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000015 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018991 - 0001899B (0xb bytes), align: 0
  Segment part 17.            Intra module refs:   NLDE_DataReqSend
                                                   NLME_CmdCnf
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001899C - 000189A6 (0xb bytes), align: 0
  Segment part 18.            Intra module refs:   NLDE_BuildFrameControl
                                                   NLDE_BuildMsg
                                                   NLDE_DataIndSend
                                                   NLDE_DataReqSend
                                                   NLME_LeaveCmdProcess
                                                   NLME_RTG_BcastAdd
                                                   NLME_RejoinReqCmdProcess
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000189A7 - 00018A21 (0x7b bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_DataIndSend        000189A7        NLDE_DataReq (NLMEDE)
               calls direct, is recursive
               stack 1 = 00000000 ( 00000003 )
               stack 2 = 00000000 ( 0000001A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018A22 - 00018A29 (0x8 bytes), align: 0
  Segment part 20.            Intra module refs:   NLDE_DataIndSend
                                                   NLME_RTG_BcastAdd
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018A2A - 00018A2F (0x6 bytes), align: 0
  Segment part 21.            Intra module refs:   NLDE_DataIndSend
                                                   NLME_RTG_BcastAdd
                                                   Segment part 20
                                                   Segment part 74
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018A30 - 00018BB2 (0x183 bytes), align: 0
  Segment part 22.            Intra module refs:   NLDE_DataReqSend
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_SendMsg            00018A30        nwk_data_ind_processing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000015 ( 00000022 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018BB3 - 00018BB7 (0x5 bytes), align: 0
  Segment part 23.            Intra module refs:   NLDE_BuildMsg
                                                   NLDE_SendMsg
                                                   RTG_UpdateNeighborEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018BB8 - 00018BBB (0x4 bytes), align: 0
  Segment part 24.            Intra module refs:   NLDE_SendMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018BBC - 00018BBF (0x4 bytes), align: 0
  Segment part 25.            Intra module refs:   Segment part 17
                                                   Segment part 24
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018BC0 - 00018BC8 (0x9 bytes), align: 0
  Segment part 26.            Intra module refs:   Segment part 130
                                                   Segment part 25
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018BC9 - 00018BCD (0x5 bytes), align: 0
  Segment part 27.            Intra module refs:   NLDE_SendMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018BCE - 00018BD4 (0x7 bytes), align: 0
  Segment part 28.            Intra module refs:   Segment part 20
                                                   Segment part 27
                                                   Segment part 45
                                                   Segment part 51
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018BD5 - 00018BDF (0xb bytes), align: 0
  Segment part 29.            Intra module refs:   NLDE_SendMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018BE0 - 00018DA0 (0x1c1 bytes), align: 0
  Segment part 30.            Intra module refs:   NLDE_DataReqSend
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_BuildMsg           00018BE0 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000010 ( 00000013 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018DA1 - 00018DA8 (0x8 bytes), align: 0
  Segment part 31.            Intra module refs:   NLDE_BuildMsg
                                                   NLDE_ParseMsg2
                                                   NLME_RejoinRspCmdProcess
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018DA9 - 00018DB9 (0x11 bytes), align: 0
  Segment part 32.            Intra module refs:   NLDE_BuildMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018DBA - 00018DBF (0x6 bytes), align: 0
  Segment part 33.            Intra module refs:   NLDE_BuildMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018DC0 - 00018DCB (0xc bytes), align: 0
  Segment part 34.            Intra module refs:   NLDE_BuildMsg
                                                   NLME_RejoinReqCmdProcess
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018DCC - 00018DD8 (0xd bytes), align: 0
  Segment part 35.            Intra module refs:   NLDE_BuildMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018DD9 - 00018DDD (0x5 bytes), align: 0
  Segment part 36.            Intra module refs:   NLDE_BuildMsg
                                                   NLDE_DataReqSend
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018DDE - 00018E60 (0x83 bytes), align: 0
  Segment part 37.            Intra module refs:   NLDE_BuildMsg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_BuildFrameControl
                                   00018DDE 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000010 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018E61 - 00018E6A (0xa bytes), align: 0
  Segment part 38.            Intra module refs:   NLDE_BuildFrameControl
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018E6B - 00018F4E (0xe4 bytes), align: 0
  Segment part 39.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_ParseMsg           00018E6B        Segment part 46 (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018F4F - 00018F59 (0xb bytes), align: 0
  Segment part 40.            Intra module refs:   NLDE_BuildMsg
                                                   NLDE_ParseMsg
                                                   NLDE_ParseMsg2
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018F5A - 00018FB8 (0x5f bytes), align: 0
  Segment part 41.            Intra module refs:   Segment part 53
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_ParseFrameControl
                                   00018F5A 
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000D ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018FB9 - 00018FC0 (0x8 bytes), align: 0
  Segment part 42.            Intra module refs:   NLDE_BuildFrameControl
                                                   NLDE_DataReqSend
                                                   NLDE_ParseFrameControl
                                                   NLDE_ParseMsg
                                                   NLME_GetNeighborLinkInfo
                                                   NLME_LeaveCmdSend
                                                   NLME_RejoinReqCmdProcess
                                                   NLME_RejoinRspCmdProcess
                                                   NLME_RemoveChild
                                                   NLME_SetAssocFlags
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018FC1 - 00018FC9 (0x9 bytes), align: 0
  Segment part 43.            Intra module refs:   NLDE_ParseFrameControl
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018FCA - 00018FCD (0x4 bytes), align: 0
  Segment part 44.            Intra module refs:   NLDE_ParseFrameControl
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018FCE - 00018FD6 (0x9 bytes), align: 0
  Segment part 45.            Intra module refs:   Segment part 44
                                                   Segment part 46
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018FD7 - 00018FDC (0x6 bytes), align: 0
  Segment part 46.            Intra module refs:   NLDE_ParseFrameControl
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018FDD - 0001902D (0x51 bytes), align: 0
  Segment part 47.            Intra module refs:   NLDE_ParseMsg2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_CheckFrameSecurity
                                   00018FDD 
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 0000000D ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001902E - 00019118 (0xeb bytes), align: 0
  Segment part 48.            Intra module refs:   NLME_CmdCnf
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_ParseMsg2          0001902E 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000001F ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019119 - 0001911F (0x7 bytes), align: 0
  Segment part 49.            Intra module refs:   NLDE_ParseMsg
                                                   NLDE_ParseMsg2
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019120 - 0001912D (0xe bytes), align: 0
  Segment part 50.            Intra module refs:   NLDE_ParseMsg
                                                   NLDE_ParseMsg2
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001912E - 00019135 (0x8 bytes), align: 0
  Segment part 51.            Intra module refs:   NLDE_ParseMsg
                                                   Segment part 50
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019136 - 00019147 (0x12 bytes), align: 0
  Segment part 52.            Intra module refs:   NLDE_ParseMsg2
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019148 - 0001915C (0x15 bytes), align: 0
  Segment part 53.            Intra module refs:   NLDE_ParseMsg
                                                   NLDE_ParseMsg2
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001915D - 00019163 (0x7 bytes), align: 0
  Segment part 54.            Intra module refs:   NLDE_DataReqSend
                                                   NLDE_ParseMsg
                                                   NLDE_ParseMsg2
                                                   NLME_RejoinRspSend
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019164 - 00019166 (0x3 bytes), align: 0
  Segment part 55.            Intra module refs:   Segment part 112
                                                   Segment part 38
                                                   Segment part 54
                                                   Segment part 57
                                                   Segment part 60
                                                   Segment part 98
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019167 - 0001916B (0x5 bytes), align: 0
  Segment part 56.            Intra module refs:   Segment part 103
                                                   Segment part 18
                                                   Segment part 55
                                                   Segment part 66
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001916C - 0001916F (0x4 bytes), align: 0
  Segment part 57.            Intra module refs:   NLDE_ParseMsg
                                                   NLDE_ParseMsg2
                                                   NLME_RejoinRspSend
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019170 - 00019174 (0x5 bytes), align: 0
  Segment part 58.            Intra module refs:   NLDE_BuildMsg
                                                   Segment part 57
                                                   Segment part 83
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019175 - 0001918E (0x1a bytes), align: 0
  Segment part 59.            Intra module refs:   NLDE_ParseMsg
                                                   NLDE_ParseMsg2
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001918F - 000191C1 (0x33 bytes), align: 0
  Segment part 60.            Intra module refs:   NLDE_ParseMsg
                                                   NLDE_ParseMsg2
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000191C2 - 000191CB (0xa bytes), align: 0
  Segment part 61.            Intra module refs:   Segment part 60
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000191CC - 000191D7 (0xc bytes), align: 0
  Segment part 62.            Intra module refs:   Segment part 60
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000191D8 - 000191DF (0x8 bytes), align: 0
  Segment part 63.            Intra module refs:   Segment part 60
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000191E0 - 000191E5 (0x6 bytes), align: 0
  Segment part 64.            Intra module refs:   Segment part 109
                                                   Segment part 63
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000191E6 - 000191E9 (0x4 bytes), align: 0
  Segment part 65.            Intra module refs:   NLDE_ParseMsg
                                                   NLDE_ParseMsg2
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000191EA - 000191F2 (0x9 bytes), align: 0
  Segment part 66.            Intra module refs:   Segment part 117
                                                   Segment part 36
                                                   Segment part 65
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000191F3 - 00019202 (0x10 bytes), align: 0
  Segment part 67.            Intra module refs:   NLME_LeaveCmdProcess
                                                   NLME_RejoinRspCmdProcess
                                                   NLME_RejoinRspSend
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_GetExtAddr         000191F3        APSME_LookupNwkAddr (APSMEDE)
                                                   Segment part 51 (NLMEDE)
                                                   ZDApp_Init (ZDApp)
                                                   ZDO_LeaveCnf (ZDApp)
                                                   ZDO_UpdateNwkStatus (ZDObject)
                                                   ZDP_EndDeviceBindReq (ZDProfile)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000017 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019203 - 0001920F (0xd bytes), align: 0
  Segment part 68.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_GetShortAddr       00019203        AF_DataRequest (AF)
                                                   MT_ProcessGetDeviceInfo (MTEL)
                                                   NLDE_DataReqAlloc (NLMEDE)
                                                   ZDO_UpdateNwkStatus (ZDObject)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019210 - 0001922A (0x1b bytes), align: 0
  Segment part 69.            Intra module refs:   NLME_LeaveCmdProcess
                                                   RTG_UpdateNeighborEntry
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_GetCoordShortAddr
                                   00019210        APSME_LookupNwkAddr (APSMEDE)
                                                   ZDO_LeaveInd (ZDApp)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000017 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001922B - 00019233 (0x9 bytes), align: 0
  Segment part 70.            Intra module refs:   NLDE_SendMsg
                                                   NLME_GetCoordShortAddr
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019234 - 0001923B (0x8 bytes), align: 0
  Segment part 71.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_GetCoordExtAddr    00019234        APSME_LookupNwkAddr (APSMEDE)
               calls direct
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001923C - 0001925E (0x23 bytes), align: 0
  Segment part 72.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_GetHandle          0001923C        NLDE_DataReqAlloc (NLMEDE)
                                                   RTG_ProcessRreq (rtg)
                                                   nwk_data_ind_processing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001925F - 0001944D (0x1ef bytes), align: 0
  Segment part 73.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_UpdateNeighborEntry
                                   0001925F        Segment part 98 (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000001 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001944E - 00019453 (0x6 bytes), align: 0
  Segment part 74.            Intra module refs:   RTG_UpdateNeighborEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019454 - 000194E2 (0x8f bytes), align: 0
  Segment part 75.            Intra module refs:   RTG_UpdateNeighborEntry
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_GetNeighborLinkInfo
                                   00019454        RTG_CheckRtStatus (rtg)
                                                   RTG_GetLinkCost (rtg)
                                                   nwk_data_ind_processing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000010 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000194E3 - 00019529 (0x47 bytes), align: 0
  Segment part 76.            Intra module refs:   NLME_RemoveFromNeighborTable
                                                   RTG_UpdateNeighborEntry
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_GetNeighborIndex   000194E3 
               stack 1 = 00000002 ( 00000001 )
               stack 2 = 00000010 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001952A - 00019533 (0xa bytes), align: 0
  Segment part 77.            Intra module refs:   NLME_CmdCnf
                                                   NLME_GetNeighborIndex
                                                   NLME_RTG_BcastAdd
                                                   NLME_SetBroadcastFilter
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019534 - 00019562 (0x2f bytes), align: 0
  Segment part 78.            Intra module refs:   RTG_UpdateNeighborEntry
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_RemoveFromNeighborTable
                                   00019534        AssocAddNew (AssocList)
               calls direct
               stack 1 = 00000000 ( 00000003 )
               stack 2 = 00000010 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019563 - 0001956C (0xa bytes), align: 0
  Segment part 79.            Intra module refs:   NLDE_CheckFrameSecurity
                                                   NLDE_DataIndSend
                                                   NLME_GetCoordShortAddr
                                                   NLME_GetEnergyThreshold
                                                   NLME_GetProtocolVersion
                                                   NLME_GetShortAddr
                                                   NLME_RemoveFromNeighborTable
                                                   NLME_SetEnergyThreshold
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001956D - 00019579 (0xd bytes), align: 0
  Segment part 80.            Intra module refs:   NLME_RemoveFromNeighborTable
                                                   RTG_UpdateNeighborEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001957A - 00019581 (0x8 bytes), align: 0
  Segment part 81.            Intra module refs:   NLME_RejoinRspSend
                                                   NLME_RemoveFromNeighborTable
                                                   RTG_UpdateNeighborEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019582 - 00019586 (0x5 bytes), align: 0
  Segment part 83.            Intra module refs:   NLDE_ParseMsg
                                                   NLDE_SendMsg
                                                   NLME_RejoinRspCmdProcess
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019587 - 00019590 (0xa bytes), align: 0
  Segment part 89.            Intra module refs:   NLDE_GetHandle
                                                   NLME_CmdDataReqAlloc
                                                   NLME_IsAddressBroadcast
                                                   NLME_LeaveCmdCnf
                                                   NLME_LeaveCmdProcess
                                                   nwkDB_UserDataLoad
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019591 - 00019592 (0x2 bytes), align: 0
  Segment part 92.            Intra module refs:   NLDE_DataReqSend
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019593 - 00019598 (0x6 bytes), align: 0
  Segment part 93.            Intra module refs:   NLME_RTG_BcastAdd
                                                   Segment part 127
                                                   Segment part 92
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019599 - 00019667 (0xcf bytes), align: 0
  Segment part 96.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_SetAssocFlags      00019599        AssocRemove (AssocList)
                                                   RTG_AllocNewAddress (rtg)
                                                   RTG_DeAllocAddress (rtg)
                                                   nwk_start_coord (nwk)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 0000001C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019668 - 00019706 (0x9f bytes), align: 0
  Segment part 97.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_RejoinReqCmdProcess
                                   00019668        NwkCommandPktProcessing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019707 - 0001970F (0x9 bytes), align: 0
  Segment part 98.            Intra module refs:   NLDE_DataReqSend
                                                   NLME_RejoinReqCmdProcess
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019710 - 000197F9 (0xea bytes), align: 0
  Segment part 99.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_RejoinRspSend      00019710        nwk_associate_ind_processing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000197FA - 000198B1 (0xb8 bytes), align: 0
  Segment part 100.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_RejoinRspCmdProcess
                                   000197FA        nwk_data_ind_processing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000198B2 - 000198B7 (0x6 bytes), align: 0
  Segment part 101.           Intra module refs:   NLME_LeaveCmdCnf
                                                   NLME_LeaveCmdProcess
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000198B8 - 000198BD (0x6 bytes), align: 0
  Segment part 102.           Intra module refs:   NLDE_DataIndSend
                                                   NLME_RTG_BcastAdd
                                                   NLME_RejoinReqCmdProcess
                                                   NLME_RejoinRspCmdProcess
                                                   Segment part 101
                                                   Segment part 116
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000198BE - 000198C8 (0xb bytes), align: 0
  Segment part 103.           Intra module refs:   NLME_RejoinRspCmdProcess
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000198C9 - 000198CC (0x4 bytes), align: 0
  Segment part 104.           Intra module refs:   NLDE_ParseMsg
                                                   NLME_CmdCnf
                                                   NLME_RejoinRspCmdProcess
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000198CD - 000198D5 (0x9 bytes), align: 0
  Segment part 105.           Intra module refs:   Segment part 104
                                                   Segment part 35
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000198D6 - 000199E6 (0x111 bytes), align: 0
  Segment part 106.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_LeaveCmdSend       000198D6        NLME_LeaveRsp (NLMEDE)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000199E7 - 000199FC (0x16 bytes), align: 0
  Segment part 107.           Intra module refs:   NLDE_DataReqSend
                                                   NLME_CmdCnf
                                                   NLME_LeaveCmdSend
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000199FD - 00019A00 (0x4 bytes), align: 0
  Segment part 108.           Intra module refs:   NLME_LeaveCmdSend
                                                   NLME_RejoinRspSend
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019A01 - 00019A05 (0x5 bytes), align: 0
  Segment part 109.           Intra module refs:   Segment part 108
                                                   Segment part 49
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019A06 - 00019A0E (0x9 bytes), align: 0
  Segment part 110.           Intra module refs:   NLME_LeaveCmdSend
                                                   NLME_RejoinRspSend
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019A0F - 00019A28 (0x1a bytes), align: 0
  Segment part 111.           Intra module refs:   NLME_LeaveCmdSend
                                                   NLME_RejoinRspSend
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019A29 - 00019A37 (0xf bytes), align: 0
  Segment part 112.           Intra module refs:   NLME_LeaveCmdSend
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019A38 - 00019A3B (0x4 bytes), align: 0
  Segment part 113.           Intra module refs:   NLME_LeaveCmdSend
                                                   Segment part 112
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019A3C - 00019A45 (0xa bytes), align: 0
  Segment part 114.           Intra module refs:   Segment part 113
                                                   Segment part 64
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019A46 - 00019A4D (0x8 bytes), align: 0
  Segment part 115.           Intra module refs:   NLDE_ParseMsg
                                                   NLDE_ParseMsg2
                                                   NLME_LeaveCmdSend
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019A4E - 00019A57 (0xa bytes), align: 0
  Segment part 116.           Intra module refs:   Segment part 115
                                                   Segment part 59
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019A58 - 00019A5D (0x6 bytes), align: 0
  Segment part 117.           Intra module refs:   NLME_LeaveCmdSend
                                                   NLME_RejoinRspSend
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019A5E - 00019B60 (0x103 bytes), align: 0
  Segment part 118.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_LeaveCmdProcess    00019A5E        NwkCommandPktProcessing (nwk)
                                                   nwk_data_ind_processing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000017 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019B61 - 00019B6F (0xf bytes), align: 0
  Segment part 119.           Intra module refs:   NLDE_DataReqSend
                                                   NLME_LeaveCmdProcess
                                                   NLME_LeaveCmdSend
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019B70 - 00019B74 (0x5 bytes), align: 0
  Segment part 120.           Intra module refs:   NLME_LeaveCmdProcess
                                                   NLME_RejoinReqCmdProcess
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019B75 - 00019B84 (0x10 bytes), align: 0
  Segment part 121.           Intra module refs:   NLME_LeaveCmdCnf
                                                   NLME_LeaveCmdProcess
                                                   NLME_RejoinReqCmdProcess
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019B85 - 00019B8D (0x9 bytes), align: 0
  Segment part 122.           Intra module refs:   Segment part 120
                                                   Segment part 121
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019B8E - 00019C1F (0x92 bytes), align: 0
  Segment part 123.           Intra module refs:   NLME_CmdCnf
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_LeaveCmdCnf        00019B8E 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000001F ( 00000017 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019C20 - 00019C2B (0xc bytes), align: 0
  Segment part 124.           Intra module refs:   NLME_LeaveCmdCnf
                                                   Segment part 110
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019C2C - 00019C3B (0x10 bytes), align: 0
  Segment part 125.           Intra module refs:   NLDE_DataIndSend
                                                   NLME_LeaveCmdCnf
                                                   NLME_LeaveCmdSend
                                                   NLME_RTG_BcastAdd
                                                   NLME_RejoinRspCmdProcess
                                                   NLME_RejoinRspSend
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019C3C - 00019C41 (0x6 bytes), align: 0
  Segment part 126.           Intra module refs:   NLME_LeaveCmdCnf
                                                   NLME_LeaveCmdProcess
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019C42 - 00019C4B (0xa bytes), align: 0
  Segment part 127.           Intra module refs:   Segment part 126
                                                   Segment part 33
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019C4C - 00019CDC (0x91 bytes), align: 0
  Segment part 128.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_CmdCnf             00019C4C        nwk_data_cnf_processing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000001F )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019CDD - 00019CE0 (0x4 bytes), align: 0
  Segment part 129.           Intra module refs:   NLME_CmdCnf
                                                   NLME_RejoinRspCmdProcess
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019CE1 - 00019CE7 (0x7 bytes), align: 0
  Segment part 130.           Intra module refs:   Segment part 129
                                                   Segment part 27
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019CE8 - 00019CF0 (0x9 bytes), align: 0
  Segment part 131.           Intra module refs:   NLME_CmdCnf
                                                   NLME_RejoinRspSend
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019CF1 - 00019CFE (0xe bytes), align: 0
  Segment part 132.           Intra module refs:   NLDE_DataReqSend
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_CmdBcast           00019CF1        Segment part 54 (nwk)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000010 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019CFF - 00019D27 (0x29 bytes), align: 0
  Segment part 133.           Intra module refs:   Segment part 110
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_CmdDataReqAlloc    00019CFF        RTG_SendRrep (rtg)
                                                   Segment part 36 (rtg)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000011 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019D28 - 00019D55 (0x2e bytes), align: 0
  Segment part 134.           Intra module refs:   NLDE_BuildFrameControl
                                                   NLME_IsAddressBroadcast
                                                   NLME_LeaveCmdProcess
                                                   NLME_LeaveCmdSend
                                                   NLME_SetBroadcastFilter
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_GetProtocolVersion
                                   00019D28        ?Subroutine25 (MT_ZDO)
                                                   ?Subroutine67 (ZDProfile)
                                                   APSDE_DataReq (APSMEDE)
                                                   APSDE_DataReqMTU (APSMEDE)
                                                   APSDE_FrameHdrInit (APSMEDE)
                                                   APSDE_FrameHdrSet (APSMEDE)
                                                   APSDE_ParseMsg (aps_util)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   ZDAppSetupProtoVersion (ZDApp)
                                                   ZDO_CreateAlignedUINT16List (ZDObject)
                                                   ZDO_NetworkDiscoveryConfirmCB (ZDApp)
                                                   ZDO_ParseSimpleDescBuf (ZDObject)
                                                   ZDO_ProcessEndDeviceBindReq (ZDObject)
                                                   ZDO_ProcessNodeDescRsp (ZDObject)
                                                   ZDO_ProcessUserDescSet (ZDObject)
                                                   ZDP_BindUnbindReq (ZDProfile)
                                                   ZDP_GenericRsp (ZDProfile)
                                                   ZDP_IncomingData (ZDProfile)
                                                   ZDP_UserDescSet (ZDProfile)
                                                   afDataReqMTU (AF)
                                                   afIncomingData (AF)
                                                   nwk_data_ind_processing (nwk)
                                                   nwk_start_coord (nwk)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000017 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019D56 - 00019D61 (0xc bytes), align: 0
  Segment part 135.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_GetEnergyThreshold
                                   00019D56        ZDApp_NetworkStartEvt (ZDApp)
                                                   nwk_ScanPANChanSelect (nwk)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019D62 - 00019D6D (0xc bytes), align: 0
  Segment part 136.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_SetEnergyThreshold
                                   00019D62        ZDApp_NetworkStartEvt (ZDApp)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019D6E - 00019DA2 (0x35 bytes), align: 0
  Segment part 137.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_SetBroadcastFilter
                                   00019D6E        ZDApp_Init (ZDApp)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019DA3 - 00019E05 (0x63 bytes), align: 0
  Segment part 138.           Intra module refs:   Segment part 119
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_IsAddressBroadcast
                                   00019DA3        AF_DataRequest (AF)
                                                   RTG_GetNextHop (rtg)
                                                   RTG_RouteMaintanence (rtg)
                                                   Segment part 38 (nwk)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   nwk_data_req_send (nwk)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000017 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019E06 - 00019E74 (0x6f bytes), align: 0
  Segment part 139.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_RemoveChild        00019E06        ?Subroutine11 (ZDApp)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019E75 - 00019EA0 (0x2c bytes), align: 0
  Segment part 140.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_UserDataLoad      00019E75        nwk_MacDataBuffersAdd (nwk_bufs)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019EA1 - 00019EAA (0xa bytes), align: 0
  Segment part 141.           Intra module refs:   NLDE_CheckFrameSecurity
                                                   NLDE_DataReqSend
                                                   NLDE_SendMsg
                                                   NLME_GetShortAddr
                                                   NLME_RemoveChild
                                                   nwkDB_UserDataLoad
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019EAB - 00019EB0 (0x6 bytes), align: 0
  Segment part 142.           Intra module refs:   Segment part 103
                                                   Segment part 119
                                                   Segment part 141
                                                   Segment part 70
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001632 - 00001633 (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   _savedRejoinRspAddr
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001634 - 00001634 (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   baseEDMaxEnergy

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : rtg

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E3C2 - 0000E3C2 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   NLME_RouteDiscoveryRequest
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           rreqCounter             0000E3C2 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3C3 - 0000E3C3 (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   RTG_GetRoutingAddress
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gRTG_TBL_COMPRESSION    0000E3C3 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3C4 - 0000E3C4 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   RTG_Init
                                                   RTG_TimerEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014DEE - 00014E6B (0x7e bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_Init                00014DEE        nwk_init (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014E6C - 00014F62 (0xf7 bytes), align: 0
  Segment part 14.            Intra module refs:   RTG_ProcessRtDiscBits
                                                   RTG_RouteMaintanence
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_RouteDiscoveryRequest
                                   00014E6C        NLME_RouteDiscoveryIndication (NLMEDE_CB)
               calls direct, is recursive
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000E ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014F63 - 00014F67 (0x5 bytes), align: 0
  Segment part 15.            Intra module refs:   NLME_RouteDiscoveryRequest
                                                   RTG_Init
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014F68 - 00015027 (0xc0 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_GetNextHop          00014F68        nwk_data_req_send (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015028 - 00015033 (0xc bytes), align: 0
  Segment part 17.            Intra module refs:   RTG_CheckRtDiscEntry
                                                   RTG_CheckRtStatus
                                                   RTG_GetNextHop
                                                   RTG_GetPrevHop
                                                   RTG_RouteMaintanence
                                                   RTG_UpdateRtDiscEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015034 - 00015038 (0x5 bytes), align: 0
  Segment part 18.            Intra module refs:   NLME_RouteDiscoveryRequest
                                                   RTG_AddRtgEntry
                                                   RTG_GetNextHop
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015039 - 0001503F (0x7 bytes), align: 0
  Segment part 19.            Intra module refs:   Segment part 18
                                                   Segment part 34
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015040 - 00015121 (0xe2 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_RouteMaintanence    00015040        NLDE_DataReqSend (nwk_util)
                                                   Segment part 45 (nwk)
               calls direct, is recursive
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015122 - 00015126 (0x5 bytes), align: 0
  Segment part 21.            Intra module refs:   RTG_AddRtgEntry
                                                   RTG_RouteMaintanence
                                                   RTG_SendRErr
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015127 - 000152DF (0x1b9 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_ProcessRreq         00015127        NwkCommandPktProcessing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000002 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000152E0 - 000152E6 (0x7 bytes), align: 0
  Segment part 23.            Intra module refs:   RTG_ProcessRreq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000152E7 - 000152F1 (0xb bytes), align: 0
  Segment part 24.            Intra module refs:   RTG_ProcessRreq
                                                   Segment part 23
                                                   Segment part 71
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000152F2 - 00015301 (0x10 bytes), align: 0
  Segment part 25.            Intra module refs:   RTG_ProcessRreq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015302 - 0001530D (0xc bytes), align: 0
  Segment part 26.            Intra module refs:   RTG_BcastAdd
                                                   RTG_GetAncestors
                                                   RTG_GetTreeRoute
                                                   RTG_ProcessRreq
                                                   RTG_SendRrep
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001530E - 000153E6 (0xd9 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_ProcessRrep         0001530E        NwkCommandPktProcessing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000153E7 - 000153F8 (0x12 bytes), align: 0
  Segment part 28.            Intra module refs:   RTG_ProcessRrep
                                                   RTG_ProcessRreq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000153F9 - 00015413 (0x1b bytes), align: 0
  Segment part 29.            Intra module refs:   RTG_ProcessRrep
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015414 - 00015510 (0xfd bytes), align: 0
  Segment part 30.            Intra module refs:   RTG_ProcessRrep
                                                   RTG_ProcessRreq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_SendRrep            00015414 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000014 ( 00000016 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015511 - 00015518 (0x8 bytes), align: 0
  Segment part 31.            Intra module refs:   NLME_RouteDiscoveryRequest
                                                   RTG_GetAncestors
                                                   RTG_SendRrep
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015519 - 00015522 (0xa bytes), align: 0
  Segment part 32.            Intra module refs:   RTG_SendRrep
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015523 - 000155B6 (0x94 bytes), align: 0
  Segment part 33.            Intra module refs:   RTG_RouteMaintanence
                                                   RTG_TimerEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_SendRErr            00015523 
               calls direct, is recursive
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000E ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000155B7 - 000155BB (0x5 bytes), align: 0
  Segment part 34.            Intra module refs:   NLME_RouteDiscoveryRequest
                                                   RTG_SendRErr
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000155BC - 000155C3 (0x8 bytes), align: 0
  Segment part 35.            Intra module refs:   NLME_RouteDiscoveryRequest
                                                   RTG_BcastTimeout
                                                   RTG_SendRErr
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000155C4 - 000155D4 (0x11 bytes), align: 0
  Segment part 36.            Intra module refs:   NLME_RouteDiscoveryRequest
                                                   RTG_SendRErr
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000155D5 - 00015605 (0x31 bytes), align: 0
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_ProcessRErr         000155D5        NwkCommandPktProcessing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015606 - 000156FA (0xf5 bytes), align: 0
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_TimerEvent          00015606        nwk_event_loop (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000156FB - 00015702 (0x8 bytes), align: 0
  Segment part 39.            Intra module refs:   RTG_Init
                                                   RTG_TimerEvent
                                                   Segment part 51
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015703 - 00015760 (0x5e bytes), align: 0
  Segment part 40.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_AllocNewAddress     00015703        nwk_associate_ind_processing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015761 - 00015801 (0xa1 bytes), align: 0
  Segment part 41.            Intra module refs:   RTG_AllocNewAddress
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_CalcAddress         00015761 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 0000000A ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015802 - 000158BF (0xbe bytes), align: 0
  Segment part 42.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_DeAllocAddress      00015802        NLME_RemoveChild (nwk_util)
                                                   Segment part 118 (nwk)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000158C0 - 000158EB (0x2c bytes), align: 0
  Segment part 43.            Intra module refs:   RTG_GetNextHop
                                                   RTG_GetPrevHop
                                                   RTG_ProcessRreq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_GetNextTreeHop      000158C0 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000012 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000158EC - 000159D2 (0xe7 bytes), align: 0
  Segment part 44.            Intra module refs:   RTG_GetNextTreeHop
                                                   RTG_RouteMaintanence
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_GetTreeRoute        000158EC 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 0000000E ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000159D3 - 00015A9D (0xcb bytes), align: 0
  Segment part 45.            Intra module refs:   NLME_RouteDiscoveryRequest
                                                   RTG_ProcessRreq
                                                   Segment part 29
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_AddRtgEntry         000159D3 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000013 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015A9E - 00015AA7 (0xa bytes), align: 0
  Segment part 46.            Intra module refs:   RTG_AddRtgEntry
                                                   RTG_GetNextHop
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015AA8 - 00015AB4 (0xd bytes), align: 0
  Segment part 47.            Intra module refs:   RTG_AddRtgEntry
                                                   RTG_GetNextHop
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015AB5 - 00015AC1 (0xd bytes), align: 0
  Segment part 48.            Intra module refs:   RTG_AddRtgEntry
                                                   RTG_GetNextHop
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015AC2 - 00015AE7 (0x26 bytes), align: 0
  Segment part 49.            Intra module refs:   RTG_GetRtgEntry
                                                   RTG_RouteMaintanence
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_RemoveRtgEntry      00015AC2        NLME_RouteDiscoveryIndication (NLMEDE_CB)
               calls direct, is recursive
               stack 1 = 00000000 ( 00000003 )
               stack 2 = 0000000E ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015AE8 - 00015AEE (0x7 bytes), align: 0
  Segment part 50.            Intra module refs:   RTG_DivideCskip
                                                   RTG_RemoveRtgEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015AEF - 00015B18 (0x2a bytes), align: 0
  Segment part 51.            Intra module refs:   RTG_Init
                                                   RTG_RemoveRtgEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015B19 - 00015B1E (0x6 bytes), align: 0
  Segment part 52.            Intra module refs:   Segment part 15
                                                   Segment part 51
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015B1F - 00015B23 (0x5 bytes), align: 0
  Segment part 53.            Intra module refs:   Segment part 52
                                                   Segment part 84
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015B24 - 00015B79 (0x56 bytes), align: 0
  Segment part 54.            Intra module refs:   RTG_ProcessRreq
                                                   RTG_SendRrep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_GetLinkCost         00015B24 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000016 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015B7A - 00015C53 (0xda bytes), align: 0
  Segment part 55.            Intra module refs:   NLME_RouteDiscoveryRequest
                                                   Segment part 25
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_UpdateRtDiscEntry   00015B7A 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000014 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015C54 - 00015C58 (0x5 bytes), align: 0
  Segment part 56.            Intra module refs:   RTG_AddRtgEntry
                                                   RTG_UpdateRtDiscEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015C59 - 00015C59 (0x1 bytes), align: 0
  Segment part 57.            Intra module refs:   Segment part 18
                                                   Segment part 56
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015C5A - 00015C61 (0x8 bytes), align: 0
  Segment part 58.            Intra module refs:   Segment part 57
                                                   Segment part 61
                                                   Segment part 63
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015C62 - 00015C71 (0x10 bytes), align: 0
  Segment part 59.            Intra module refs:   RTG_Init
                                                   RTG_UpdateRtDiscEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015C72 - 00015C76 (0x5 bytes), align: 0
  Segment part 60.            Intra module refs:   NLME_RouteDiscoveryRequest
                                                   RTG_UpdateRtDiscEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015C77 - 00015C7A (0x4 bytes), align: 0
  Segment part 61.            Intra module refs:   RTG_SendRErr
                                                   Segment part 60
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015C7B - 00015C84 (0xa bytes), align: 0
  Segment part 62.            Intra module refs:   RTG_UpdateRtDiscEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015C85 - 00015C87 (0x3 bytes), align: 0
  Segment part 63.            Intra module refs:   Segment part 51
                                                   Segment part 62
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015C88 - 00015CC9 (0x42 bytes), align: 0
  Segment part 64.            Intra module refs:   RTG_ProcessRrep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_CheckRtDiscEntry    00015C88 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000010 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015CCA - 00015CCE (0x5 bytes), align: 0
  Segment part 65.            Intra module refs:   NLME_RouteDiscoveryRequest
                                                   RTG_BcastDel
                                                   RTG_BcastTimeout
                                                   RTG_CalcAddress
                                                   RTG_CheckRtDiscEntry
                                                   RTG_DeAllocAddress
                                                   RTG_TimerEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015CCF - 00015D13 (0x45 bytes), align: 0
  Segment part 66.            Intra module refs:   RTG_SendRrep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_GetPrevHop          00015CCF 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000016 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015D14 - 00015D1D (0xa bytes), align: 0
  Segment part 67.            Intra module refs:   RTG_AllocNewAddress
                                                   RTG_BcastHold
                                                   RTG_BcastTimerHandler
                                                   RTG_CheckRtStatus
                                                   RTG_GetLinkCost
                                                   RTG_GetNextTreeHop
                                                   RTG_GetPrevHop
                                                   RTG_GetRoutingAddress
                                                   RTG_GetRtDiscEntry
                                                   RTG_IndirectTimeout
                                                   RTG_Init
                                                   RTG_MultiplyCskip
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015D1E - 00015D80 (0x63 bytes), align: 0
  Segment part 68.            Intra module refs:   RTG_BcastTimeout
           LOCAL                   ADDRESS         
           =====                   =======         
           RTG_BcastHold           00015D1E 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000C ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015D81 - 00015ED1 (0x151 bytes), align: 0
  Segment part 69.            Intra module refs:   RTG_BcastTimerHandler
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_BcastTimeout        00015D81 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000A ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015ED2 - 00015EDB (0xa bytes), align: 0
  Segment part 70.            Intra module refs:   RTG_BcastTimeout
                                                   RTG_TimerEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015EDC - 00015EEF (0x14 bytes), align: 0
  Segment part 71.            Intra module refs:   RTG_BcastHold
                                                   RTG_BcastTimeout
                                                   RTG_IndirectTimeout
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015EF0 - 00015F49 (0x5a bytes), align: 0
  Segment part 72.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_BcastTimerHandler   00015EF0        nwk_event_loop (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015F4A - 00015F53 (0xa bytes), align: 0
  Segment part 73.            Intra module refs:   RTG_BcastTimerHandler
                                                   RTG_GetRtgEntry
                                                   RTG_TimerEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015F54 - 000160B1 (0x15e bytes), align: 0
  Segment part 74.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_BcastChk            00015F54        nwk_data_ind_processing (nwk)
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000160B2 - 000160BA (0x9 bytes), align: 0
  Segment part 75.            Intra module refs:   RTG_BcastChk
                                                   RTG_FillCSkipTable
                                                   Segment part 29
                                                   Segment part 70
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000160BB - 0001630D (0x253 bytes), align: 0
  Segment part 76.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_BcastAdd            000160BB        NLME_RTG_BcastAdd (nwk_util)
                                                   nwk_data_ind_processing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000018 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001630E - 00016311 (0x4 bytes), align: 0
  Segment part 77.            Intra module refs:   RTG_BcastAdd
                                                   RTG_GetAncestors
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016312 - 0001631B (0xa bytes), align: 0
  Segment part 78.            Intra module refs:   RTG_DataReq
                                                   RTG_FillCSkipTable
                                                   RTG_GetTreeRoute
                                                   RTG_ProcessRrep
                                                   RTG_ProcessRreq
                                                   RTG_SendRrep
                                                   RTG_UpdateRtDiscEntry
                                                   Segment part 77
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001631C - 00016328 (0xd bytes), align: 0
  Segment part 79.            Intra module refs:   RTG_BcastAdd
                                                   RTG_BcastDel
                                                   RTG_BcastHold
                                                   RTG_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016329 - 0001632C (0x4 bytes), align: 0
  Segment part 80.            Intra module refs:   RTG_BcastAdd
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001632D - 00016331 (0x5 bytes), align: 0
  Segment part 81.            Intra module refs:   Segment part 25
                                                   Segment part 80
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016332 - 00016343 (0x12 bytes), align: 0
  Segment part 82.            Intra module refs:   RTG_BcastAdd
                                                   RTG_BcastChk
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016344 - 00016350 (0xd bytes), align: 0
  Segment part 83.            Intra module refs:   RTG_BcastAdd
                                                   RTG_BcastTimeout
                                                   RTG_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016351 - 00016357 (0x7 bytes), align: 0
  Segment part 84.            Intra module refs:   RTG_BcastAdd
                                                   RTG_ProcessRreq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016358 - 00016361 (0xa bytes), align: 0
  Segment part 85.            Intra module refs:   RTG_BcastAdd
                                                   RTG_Init
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016362 - 0001636D (0xc bytes), align: 0
  Segment part 86.            Intra module refs:   RTG_BcastAdd
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001636E - 00016395 (0x28 bytes), align: 0
  Segment part 87.            Intra module refs:   RTG_IndirectTimeout
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_BcastDel            0001636E 
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000A ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016396 - 000165C3 (0x22e bytes), align: 0
  Segment part 88.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_DataReq             00016396        nwk_event_loop (nwk)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000165C4 - 000165D0 (0xd bytes), align: 0
  Segment part 89.            Intra module refs:   RTG_BcastAdd
                                                   RTG_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000165D1 - 000165E0 (0x10 bytes), align: 0
  Segment part 90.            Intra module refs:   NLME_RouteDiscoveryRequest
                                                   RTG_DataReq
                                                   RTG_DeAllocAddress
                                                   RTG_GetAncestors
                                                   RTG_GetTreeRoute
                                                   RTG_ProcessRErr
                                                   RTG_ProcessRrep
                                                   RTG_ProcessRreq
                                                   RTG_SendRErr
                                                   RTG_SendRrep
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000165E1 - 000165F2 (0x12 bytes), align: 0
  Segment part 91.            Intra module refs:   RTG_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000165F3 - 00016649 (0x57 bytes), align: 0
  Segment part 92.            Intra module refs:   RTG_CheckRtDiscEntry
                                                   RTG_GetPrevHop
                                                   RTG_UpdateRtDiscEntry
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_GetRtDiscEntry      000165F3 
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000010 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001664A - 000166B7 (0x6e bytes), align: 0
  Segment part 93.            Intra module refs:   RTG_AddRtgEntry
                                                   RTG_CheckRtStatus
                                                   RTG_GetNextHop
                                                   RTG_RemoveRtgEntry
                                                   RTG_RouteMaintanence
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_GetRtgEntry         0001664A 
               calls direct, is recursive
               stack 1 = 00000002 ( 00000001 )
               stack 2 = 0000000E ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000166B8 - 000166BC (0x5 bytes), align: 0
  Segment part 94.            Intra module refs:   RTG_GetNextHop
                                                   RTG_GetRtgEntry
                                                   RTG_ProcessRErr
                                                   RTG_ProcessRtDiscBits
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000166BD - 000166C8 (0xc bytes), align: 0
  Segment part 95.            Intra module refs:   RTG_BcastAdd
                                                   RTG_BcastChk
                                                   RTG_DataReq
                                                   RTG_DivideCskip
                                                   RTG_GetAncestors
                                                   RTG_GetPrevHop
                                                   RTG_GetRtgEntry
                                                   RTG_MultiplyCskip
                                                   RTG_ProcessRreq
                                                   RTG_SendRrep
                                                   RTG_TimerEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000166C9 - 000166D3 (0xb bytes), align: 0
  Segment part 96.            Intra module refs:   Segment part 81
                                                   Segment part 95
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000166D4 - 000166DD (0xa bytes), align: 0
  Segment part 97.            Intra module refs:   RTG_AddRtgEntry
                                                   RTG_GetRtgEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000166DE - 00016734 (0x57 bytes), align: 0
  Segment part 98.            Intra module refs:   NLME_RouteDiscoveryRequest
                                                   RTG_ProcessRtDiscBits
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_CheckRtStatus       000166DE 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000F ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016735 - 00016745 (0x11 bytes), align: 0
  Segment part 99.            Intra module refs:   RTG_CheckRtStatus
                                                   RTG_RouteMaintanence
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016746 - 00016778 (0x33 bytes), align: 0
  Segment part 100.           Intra module refs:   RTG_CalcAddress
                                                   RTG_DeAllocAddress
                                                   RTG_GetTreeRoute
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_MultiplyCskip       00016746 
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000012 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016779 - 000167A2 (0x2a bytes), align: 0
  Segment part 101.           Intra module refs:   RTG_DeAllocAddress
                                                   RTG_GetTreeRoute
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_DivideCskip         00016779 
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000012 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000167A3 - 0001688B (0xe9 bytes), align: 0
  Segment part 103.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_FillCSkipTable      000167A3        nwk_globals_init (nwk_globals)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000002 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001688C - 00016894 (0x9 bytes), align: 0
  Segment part 104.           Intra module refs:   RTG_CheckRtStatus
                                                   RTG_DataReq
                                                   RTG_FillCSkipTable
                                                   RTG_GetLinkCost
                                                   RTG_TimerEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016895 - 00016912 (0x7e bytes), align: 0
  Segment part 105.           Intra module refs:   NLME_RouteDiscoveryRequest
                                                   RTG_AddRtgEntry
                                                   RTG_CheckRtStatus
                                                   RTG_GetNextHop
                                                   RTG_ProcessRreq
                                                   RTG_RemoveRtgEntry
                                                   RTG_RouteMaintanence
                                                   RTG_SendRErr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_GetRoutingAddress   00016895 
               calls direct
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000012 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016913 - 00016A5B (0x149 bytes), align: 0
  Segment part 107.           Intra module refs:   RTG_GetRoutingAddress
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_GetAncestors        00016913 
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000E ( 00000018 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016A5C - 00016A66 (0xb bytes), align: 0
  Segment part 108.           Intra module refs:   RTG_GetAncestors
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016A67 - 00016A6F (0x9 bytes), align: 0
  Segment part 109.           Intra module refs:   RTG_GetAncestors
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016A70 - 00016A73 (0x4 bytes), align: 0
  Segment part 110.           Intra module refs:   RTG_GetAncestors
                                                   RTG_ProcessRreq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016A74 - 00016A7C (0x9 bytes), align: 0
  Segment part 111.           Intra module refs:   Segment part 110
                                                   Segment part 84
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016A7D - 00016AB6 (0x3a bytes), align: 0
  Segment part 112.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_ProcessRtDiscBits   00016A7D        NLDE_DataReqSend (nwk_util)
                                                   nwk_data_ind_processing (nwk)
               calls direct, is recursive
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016AB7 - 00016B53 (0x9d bytes), align: 0
  Segment part 113.           Intra module refs:   RTG_TimerEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_IndirectTimeout     00016AB7 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000C ( 0000000A )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ssp

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E3C5 - 0000E3C7 (0x3 bytes), align: 0
  Segment part 10.            Intra module refs:   SSP_NwkSecurity
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SSP_NwkSecurityHook     0000E3C5 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3C8 - 0000E3CA (0x3 bytes), align: 0
  Segment part 11.            Intra module refs:   SSP_GetMicLen
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SSP_GetMicLenHook       0000E3C8 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003D365 - 0003D36C (0x8 bytes), align: 0
  Segment part 20.            Intra module refs:   SSP_NwkSecurity
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003D36D - 0003D374 (0x8 bytes), align: 0
  Segment part 32.            Intra module refs:   SSP_NwkSecurity
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003D375 - 0003D3A4 (0x30 bytes), align: 0
  Segment part 66.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SSP_NwkSecurity         0003D375        NLDE_BuildMsg (nwk_util)
                                                   NLDE_ParseMsg2 (nwk_util)
                                                   nwk_data_ind_processing (nwk)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003D3A5 - 0003D3C2 (0x1e bytes), align: 0
  Segment part 67.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SSP_GetMicLen           0003D3A5        Segment part 40 (nwk_util)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000024 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003D3C3 - 0003D3D0 (0xe bytes), align: 0
  Segment part 68.            Intra module refs:   SSP_GetMicLen
                                                   SSP_NwkSecurity

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Libraries\TI2430DB\bin\Security.lib
  LIBRARY MODULE, NAME : hal_aes

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000B3 - 000000B3 (0x1 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ENCCS                   000000B3 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003D3D1 - 0003D414 (0x44 bytes), align: 0
  Segment part 14.            Intra module refs:   HalAesInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aesDmaInit              0003D3D1 
               stack 1 = 00000002 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003D415 - 0003D41E (0xa bytes), align: 0
  Segment part 15.            Intra module refs:   HalAesInit
                                                   aesDmaInit
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003D41F - 0003D42A (0xc bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAesInit              0003D41F        HalDriverInit (hal_drivers)
               calls direct
               stack 1 = 00000000 ( 00000002 )

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Libraries\TIMAC\bin\TIMAC-CC2430.lib
  LIBRARY MODULE, NAME : mac_coord

  SEGMENTS IN THE MODULE
  ======================
CODE_C
  Relative segment, address: CODE 00001735 - 0000173A (0x6 bytes), align: 0
  Segment part 7.             Intra module refs:   MAC_InitCoord
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 0000173B - 0000174C (0x12 bytes), align: 0
  Segment part 8.             Intra module refs:   MAC_InitCoord
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 0000174D - 00001758 (0xc bytes), align: 0
  Segment part 9.             Intra module refs:   MAC_InitCoord
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3CB - 0000E3D7 (0xd bytes), align: 0
  Segment part 10.            Intra module refs:   Segment part 68
                                                   macCoordReset
                                                   macIndirectExpire
                                                   macIndirectTxFrame
                                                   macRxBeaconReq
                                                   macStartBegin
                                                   macStartComplete
                                                   macStartContinue
                                                   macStartSetParams
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCoord                0000E3CB 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EC79 - 0001ECB1 (0x39 bytes), align: 0
  Segment part 13.            Intra module refs:   MAC_InitCoord
           LOCAL                   ADDRESS         
           =====                   =======         
           macCoordReset           0001EC79 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001ECB2 - 0001ECC0 (0xf bytes), align: 0
  Segment part 14.            Intra module refs:   MAC_InitCoord
                                                   MAC_MlmeAssociateRsp
                                                   MAC_MlmeOrphanRsp
                                                   MAC_MlmeStartReq
                                                   macApiAssociateRsp
                                                   macCoordReset
                                                   macRxPanConflict
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001ECC1 - 0001ED79 (0xb9 bytes), align: 0
  Segment part 15.            Intra module refs:   macApiAssociateRsp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBuildAssociateRsp    0001ECC1 
               calls direct
               stack 1 = 00000002 ( 00000001 )
               stack 2 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001ED7A - 0001ED81 (0x8 bytes), align: 0
  Segment part 16.            Intra module refs:   macBuildAssociateRsp
                                                   macBuildPendAddr
                                                   macRxAssociateReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001ED82 - 0001ED98 (0x17 bytes), align: 0
  Segment part 17.            Intra module refs:   macBuildAssociateRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001ED99 - 0001EE61 (0xc9 bytes), align: 0
  Segment part 18.            Intra module refs:   macApiOrphanRsp
                                                   macApiStartReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBuildRealign         0001ED99 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000019 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EE62 - 0001EE64 (0x3 bytes), align: 0
  Segment part 19.            Intra module refs:   macApiStartReq
                                                   macBuildAssociateRsp
                                                   macBuildRealign
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EE65 - 0001EE6C (0x8 bytes), align: 0
  Segment part 20.            Intra module refs:   Segment part 19
                                                   Segment part 22
                                                   Segment part 71
                                                   macBuildBeacon
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EE6D - 0001EE70 (0x4 bytes), align: 0
  Segment part 21.            Intra module refs:   macBuildRealign
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EE71 - 0001EE76 (0x6 bytes), align: 0
  Segment part 22.            Intra module refs:   macBuildAssociateRsp
                                                   macBuildRealign
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EE77 - 0001EE7E (0x8 bytes), align: 0
  Segment part 23.            Intra module refs:   macBuildRealign
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EE7F - 0001EE82 (0x4 bytes), align: 0
  Segment part 24.            Intra module refs:   macBuildAssociateRsp
                                                   macBuildRealign
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EE83 - 0001EE8C (0xa bytes), align: 0
  Segment part 25.            Intra module refs:   Segment part 17
                                                   Segment part 24
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EE8D - 0001EE95 (0x9 bytes), align: 0
  Segment part 26.            Intra module refs:   macBuildRealign
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EE96 - 0001EE9F (0xa bytes), align: 0
  Segment part 27.            Intra module refs:   Segment part 21
                                                   Segment part 23
                                                   Segment part 26
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EEA0 - 0001EF89 (0xea bytes), align: 0
  Segment part 28.            Intra module refs:   macBuildBeacon
           LOCAL                   ADDRESS         
           =====                   =======         
           macBuildPendAddr        0001EEA0 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000001B ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EF8A - 0001EF99 (0x10 bytes), align: 0
  Segment part 29.            Intra module refs:   macBuildPendAddr
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EF9A - 0001EFA4 (0xb bytes), align: 0
  Segment part 30.            Intra module refs:   Segment part 16
                                                   Segment part 29
                                                   Segment part 42
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EFA5 - 0001EFB5 (0x11 bytes), align: 0
  Segment part 31.            Intra module refs:   macBuildPendAddr
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EFB6 - 0001EFC2 (0xd bytes), align: 0
  Segment part 32.            Intra module refs:   Segment part 31
                                                   macBuildPendAddr
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EFC3 - 0001F162 (0x1a0 bytes), align: 0
  Segment part 33.            Intra module refs:   macRxBeaconReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBuildBeacon          0001EFC3 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 0000000A ( 0000001E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F163 - 0001F167 (0x5 bytes), align: 0
  Segment part 34.            Intra module refs:   macBuildBeacon
                                                   macBuildPendAddr
                                                   macBuildRealign
                                                   macIndirectSend
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F168 - 0001F16D (0x6 bytes), align: 0
  Segment part 35.            Intra module refs:   macBuildAssociateRsp
                                                   macBuildBeacon
                                                   macBuildRealign
                                                   macIndirectTxFrame
                                                   macRxDataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F16E - 0001F17B (0xe bytes), align: 0
  Segment part 36.            Intra module refs:   macBuildBeacon
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F17C - 0001F1EF (0x74 bytes), align: 0
  Segment part 37.            Intra module refs:   macApiPurgeReq
                                                   macIndirectExpire
                                                   macIndirectRequeueFrame
                                                   macIndirectTxFrame
           LOCAL                   ADDRESS         
           =====                   =======         
           macIndirectMark         0001F17C 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000010 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F1F0 - 0001F1F4 (0x5 bytes), align: 0
  Segment part 38.            Intra module refs:   macApiPurgeReq
                                                   macIndirectExpire
                                                   macIndirectMark
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F1F5 - 0001F1FB (0x7 bytes), align: 0
  Segment part 39.            Intra module refs:   macApiPurgeReq
                                                   macBuildPendAddr
                                                   macIndirectMark
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F1FC - 0001F2A5 (0xaa bytes), align: 0
  Segment part 40.            Intra module refs:   macRxDataReq
           LOCAL                   ADDRESS         
           =====                   =======         
           macIndirectSend         0001F1FC 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000F ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F2A6 - 0001F2AD (0x8 bytes), align: 0
  Segment part 41.            Intra module refs:   macBuildRealign
                                                   macIndirectExpire
                                                   macIndirectSend
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F2AE - 0001F2B5 (0x8 bytes), align: 0
  Segment part 42.            Intra module refs:   macBuildBeacon
                                                   macIndirectSend
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F2B6 - 0001F3D6 (0x121 bytes), align: 0
  Segment part 43.            Intra module refs:   Segment part 8
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macIndirectExpire       0001F2B6 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F3D7 - 0001F3E1 (0xb bytes), align: 0
  Segment part 44.            Intra module refs:   macApiPurgeReq
                                                   macBuildPendAddr
                                                   macIndirectExpire
                                                   macIndirectMark
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F3E2 - 0001F3ED (0xc bytes), align: 0
  Segment part 45.            Intra module refs:   macApiPurgeReq
                                                   macIndirectExpire
                                                   macIndirectMark
                                                   macIndirectSend
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F3EE - 0001F471 (0x84 bytes), align: 0
  Segment part 46.            Intra module refs:   MAC_InitCoord
           LOCAL                   ADDRESS         
           =====                   =======         
           macIndirectTxFrame      0001F3EE 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F472 - 0001F47B (0xa bytes), align: 0
  Segment part 47.            Intra module refs:   Segment part 65
                                                   macApiOrphanRsp
                                                   macBuildAssociateRsp
                                                   macIndirectRequeueFrame
                                                   macIndirectTxFrame
                                                   macRxAssociateReq
                                                   macRxDataReq
                                                   macRxOrphan
                                                   macStartSetParams
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F47C - 0001F4C9 (0x4e bytes), align: 0
  Segment part 48.            Intra module refs:   MAC_InitCoord
           LOCAL                   ADDRESS         
           =====                   =======         
           macIndirectRequeueFrame
                                   0001F47C 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F4CA - 0001F540 (0x77 bytes), align: 0
  Segment part 49.            Intra module refs:   Segment part 8
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxAssociateReq       0001F4CA 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000001F )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F541 - 0001F54C (0xc bytes), align: 0
  Segment part 50.            Intra module refs:   Segment part 8
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiAssociateRsp      0001F541 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F54D - 0001F5A4 (0x58 bytes), align: 0
  Segment part 51.            Intra module refs:   Segment part 9
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxOrphan             0001F54D 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000001E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F5A5 - 0001F5B0 (0xc bytes), align: 0
  Segment part 52.            Intra module refs:   macRxAssociateReq
                                                   macRxOrphan
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F5B1 - 0001F602 (0x52 bytes), align: 0
  Segment part 53.            Intra module refs:   Segment part 9
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiOrphanRsp         0001F5B1 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000016 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F603 - 0001F60C (0xa bytes), align: 0
  Segment part 54.            Intra module refs:   macApiOrphanRsp
                                                   macBuildPendAddr
                                                   macIndirectMark
                                                   macIndirectRequeueFrame
                                                   macIndirectSend
                                                   macRxDataReq
                                                   macStartSetParams
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F60D - 0001F624 (0x18 bytes), align: 0
  Segment part 55.            Intra module refs:   macApiOrphanRsp
                                                   macBuildAssociateRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F625 - 0001F6C5 (0xa1 bytes), align: 0
  Segment part 56.            Intra module refs:   Segment part 9
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiPurgeReq          0001F625 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F6C6 - 0001F6CE (0x9 bytes), align: 0
  Segment part 57.            Intra module refs:   macApiPurgeReq
                                                   macIndirectSend
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F6CF - 0001F766 (0x98 bytes), align: 0
  Segment part 58.            Intra module refs:   Segment part 7
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiStartReq          0001F6CF 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000019 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F767 - 0001F860 (0xfa bytes), align: 0
  Segment part 59.            Intra module refs:   macApiStartReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macStartBegin           0001F767 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000015 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F861 - 0001F866 (0x6 bytes), align: 0
  Segment part 60.            Intra module refs:   macBuildRealign
                                                   macIndirectMark
                                                   macStartBegin
                                                   macStartContinue
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F867 - 0001F8E5 (0x7f bytes), align: 0
  Segment part 61.            Intra module refs:   macStartContinue
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macStartSetParams       0001F867 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F8E6 - 0001F8EC (0x7 bytes), align: 0
  Segment part 62.            Intra module refs:   macStartSetParams
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F8ED - 0001F8F8 (0xc bytes), align: 0
  Segment part 63.            Intra module refs:   Segment part 62
                                                   macApiStartReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F8F9 - 0001F921 (0x29 bytes), align: 0
  Segment part 64.            Intra module refs:   Segment part 7
                                                   macApiStartReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macStartContinue        0001F8F9 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000015 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F922 - 0001F927 (0x6 bytes), align: 0
  Segment part 65.            Intra module refs:   macStartComplete
                                                   macStartContinue
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F928 - 0001F931 (0xa bytes), align: 0
  Segment part 66.            Intra module refs:   macApiStartReq
                                                   macIndirectExpire
                                                   macStartComplete
                                                   macStartContinue
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F932 - 0001F95D (0x2c bytes), align: 0
  Segment part 67.            Intra module refs:   Segment part 8
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macStartComplete        0001F932 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F95E - 0001F96B (0xe bytes), align: 0
  Segment part 68.            Intra module refs:   macCoordReset
                                                   macStartComplete
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F96C - 0001F9A6 (0x3b bytes), align: 0
  Segment part 69.            Intra module refs:   Segment part 8
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxBeaconReq          0001F96C 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F9A7 - 0001FA6D (0xc7 bytes), align: 0
  Segment part 70.            Intra module refs:   Segment part 8
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxDataReq            0001F9A7 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FA6E - 0001FA76 (0x9 bytes), align: 0
  Segment part 71.            Intra module refs:   macApiOrphanRsp
                                                   macBuildAssociateRsp
                                                   macIndirectTxFrame
                                                   macRxDataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FA77 - 0001FA7E (0x8 bytes), align: 0
  Segment part 72.            Intra module refs:   macRxDataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FA7F - 0001FA93 (0x15 bytes), align: 0
  Segment part 73.            Intra module refs:   Segment part 9
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxPanConflict        0001FA7F 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FA94 - 0001FAF6 (0x63 bytes), align: 0
  Segment part 74.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_InitCoord           0001FA94        ZMacInit (zmac)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FAF7 - 0001FB02 (0xc bytes), align: 0
  Segment part 75.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_MlmeAssociateRsp    0001FAF7        ZMacAssociateRsp (zmac)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FB03 - 0001FB11 (0xf bytes), align: 0
  Segment part 76.            Intra module refs:   MAC_MlmeAssociateRsp
                                                   MAC_MlmeOrphanRsp
                                                   macApiPurgeReq
                                                   macStartBegin
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FB12 - 0001FB1A (0x9 bytes), align: 0
  Segment part 77.            Intra module refs:   Segment part 45
                                                   Segment part 54
                                                   Segment part 57
                                                   Segment part 72
                                                   Segment part 76
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FB1B - 0001FB26 (0xc bytes), align: 0
  Segment part 78.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_MlmeOrphanRsp       0001FB1B        ZMacOrphanRsp (zmac)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FB27 - 0001FB34 (0xe bytes), align: 0
  Segment part 80.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_MlmeStartReq        0001FB27        ZMacStartReq (zmac)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FB67 - 0000FB6A (0x4 bytes), align: 0
  Segment part 11.            Intra module refs:   macIndirectExpire
                                                   macIndirectTxFrame
                                                   macScanStartTimer (mac_scan)
                                                   macStartResponseTimer (mac_device)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_30           0000FB67 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001635 - 00001638 (0x4 bytes), align: 0
  Segment part 12.            Intra module refs:   __Constant_30

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : mac_data

  SEGMENTS IN THE MODULE
  ======================
CODE_C
  Relative segment, address: CODE 00001759 - 00001760 (0x8 bytes), align: 0
  Segment part 7.             Intra module refs:   MAC_McpsDataAlloc
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00001761 - 0000176B (0xb bytes), align: 0
  Segment part 8.             Intra module refs:   macAllocTxBuffer
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 0000176C - 00001776 (0xb bytes), align: 0
  Segment part 9.             Intra module refs:   macDataTxComplete
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxFrameSuccess       0000176C 
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00001777 - 00001781 (0xb bytes), align: 0
  Segment part 10.            Intra module refs:   macAllocTxBuffer
                                                   macDataTxComplete
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxFrameFailed        00001777 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3D8 - 0000E3E0 (0x9 bytes), align: 0
  Segment part 11.            Intra module refs:   MAC_McpsDataReq
                                                   macDataReset
                                                   macDataRxMemAlloc
                                                   macDataTxEnqueue
                                                   macDataTxSend
                                                   macRxCheckPendingCallback
                                                   macRxCompleteCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macData                 0000E3D8        macApiPurgeReq (mac_coord)
                                                   macBuildBeacon (mac_coord)
                                                   macBuildPendAddr (mac_coord)
                                                   macEventLoop (mac_main)
                                                   macIndirectExpire (mac_coord)
                                                   macIndirectMark (mac_coord)
                                                   macIndirectRequeueFrame (mac_coord)
                                                   macIndirectSend (mac_coord)
                                                   macIndirectTxFrame (mac_coord)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3E1 - 0000E3E2 (0x2 bytes), align: 0
  Segment part 12.            Intra module refs:   Segment part 51
                                                   Segment part 53
                                                   Segment part 55
                                                   macDataTxSend
                                                   macRxCheckPendingCallback
                                                   macTxCompleteCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pMacDataTx              0000E3E1        ?Subroutine0 (mac_tx)
                                                   macTxFrame (mac_tx)
                                                   macTxTimestampCallback (mac_tx)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FB6B - 0000FB6D (0x3 bytes), align: 0
  Segment part 13.            Intra module refs:   macDataTxEnqueue
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataTxIndirect       0000FB6B        MAC_InitCoord (mac_coord)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FB6E - 0000FB70 (0x3 bytes), align: 0
  Segment part 15.            Intra module refs:   macTxCompleteCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataRequeueIndirect
                                   0000FB6E        MAC_InitCoord (mac_coord)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FB71 - 0000FB73 (0x3 bytes), align: 0
  Segment part 17.            Intra module refs:   macRxCompleteCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataRxBeaconCritical
                                   0000FB71 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FB74 - 0000FB76 (0x3 bytes), align: 0
  Segment part 19.            Intra module refs:   macDataTxComplete
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataTxBeaconComplete
                                   0000FB74 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FB77 - 0000FB79 (0x3 bytes), align: 0
  Segment part 21.            Intra module refs:   macDataTxEnqueue
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataSetSched         0000FB77 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FB7A - 0000FB7C (0x3 bytes), align: 0
  Segment part 23.            Intra module refs:   macDataTxSend
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataCheckSched       0000FB7A        macIndirectTxFrame (mac_coord)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3E3 - 0000E3E5 (0x3 bytes), align: 0
  Segment part 25.            Intra module refs:   macDataTxTimeAvailable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataCheckTxTime      0000E3E3 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FB7D - 0000FB7F (0x3 bytes), align: 0
  Segment part 26.            Intra module refs:   macTxCompleteCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataBeaconRequeue    0000FB7D 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B262 - 0002B2BB (0x5a bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataReset            0002B262        MAC_MlmeResetReq (mac_mgmt)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B2BC - 0002B31D (0x62 bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macAllocTxBuffer        0002B2BC        macApiStartReq (mac_coord)
                                                   macBuildCommonReq (mac_mgmt)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B31E - 0002B322 (0x5 bytes), align: 0
  Segment part 30.            Intra module refs:   MAC_McpsDataAlloc
                                                   macAllocTxBuffer
                                                   macDataTxSend
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B323 - 0002B32E (0xc bytes), align: 0
  Segment part 31.            Intra module refs:   MAC_McpsDataReq
                                                   macAllocTxBuffer
                                                   macDataTxComplete
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B32F - 0002B37F (0x51 bytes), align: 0
  Segment part 32.            Intra module refs:   macDataTxSend
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macFrameDuration        0002B32F 
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 0000000C ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B380 - 0002B3BC (0x3d bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxCheckPendingCallback
                                   0002B380        rxStartIsr (mac_rx)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B3BD - 0002B3C6 (0xa bytes), align: 0
  Segment part 34.            Intra module refs:   MAC_McpsDataReq
                                                   macApiDataReq
                                                   macCheckSched
                                                   macDataReset
                                                   macDataRxInd
                                                   macDataRxMemAlloc
                                                   macDataRxMemFree
                                                   macDataSend
                                                   macRxCheckPendingCallback
                                                   macSetSched
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B3C7 - 0002B3EB (0x25 bytes), align: 0
  Segment part 35.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataRxMemAlloc       0002B3C7        rxStartIsr (mac_rx)
               calls direct
               stack 1 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B3EC - 0002B3F6 (0xb bytes), align: 0
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataRxMemFree        0002B3EC        rxFcsIsr (mac_rx)
                                                   rxHaltCleanupFinalStep (mac_rx)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B3F7 - 0002B515 (0x11f bytes), align: 0
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxCompleteCallback   0002B3F7        rxFcsIsr (mac_rx)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B516 - 0002B522 (0xd bytes), align: 0
  Segment part 38.            Intra module refs:   macRxCompleteCallback
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B523 - 0002B542 (0x20 bytes), align: 0
  Segment part 39.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataTxTimeAvailable
                                   0002B523        txCsmaGo (mac_tx)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B543 - 0002B547 (0x5 bytes), align: 0
  Segment part 40.            Intra module refs:   macBuildDataFrame
                                                   macDataTxComplete
                                                   macDataTxTimeAvailable
                                                   macTxCompleteCallback
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B548 - 0002B5CB (0x84 bytes), align: 0
  Segment part 41.            Intra module refs:   macApiDataReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBuildDataFrame       0002B548 
               calls direct
               stack 1 = 00000002 ( 00000001 )
               stack 2 = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B5CC - 0002B5D3 (0x8 bytes), align: 0
  Segment part 42.            Intra module refs:   Segment part 46
                                                   macBuildDataFrame
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B5D4 - 0002B5EB (0x18 bytes), align: 0
  Segment part 43.            Intra module refs:   Segment part 24
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCheckSched           0002B5D4 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B5EC - 0002B5FB (0x10 bytes), align: 0
  Segment part 44.            Intra module refs:   Segment part 22
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSetSched             0002B5EC 
               is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B5FC - 0002B605 (0xa bytes), align: 0
  Segment part 45.            Intra module refs:   macApiDataReq
                                                   macBuildDataFrame
                                                   macDataTxComplete
                                                   macDataTxSend
                                                   macSetSched
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B606 - 0002B60A (0x5 bytes), align: 0
  Segment part 46.            Intra module refs:   Segment part 45
                                                   Segment part 48
                                                   Segment part 49
                                                   Segment part 59
                                                   Segment part 66
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B60B - 0002B68B (0x81 bytes), align: 0
  Segment part 47.            Intra module refs:   macDataTxEnqueue
                                                   macTxCompleteCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataTxComplete       0002B60B        macIndirectExpire (mac_coord)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000B ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B68C - 0002B697 (0xc bytes), align: 0
  Segment part 48.            Intra module refs:   macDataTxComplete
                                                   macDataTxEnqueue
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B698 - 0002B6A3 (0xc bytes), align: 0
  Segment part 49.            Intra module refs:   macDataTxComplete
                                                   macDataTxEnqueue
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B6A4 - 0002B770 (0xcd bytes), align: 0
  Segment part 50.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxCompleteCallback   0002B6A4        txComplete (mac_tx)
               calls direct, is recursive
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B771 - 0002B77A (0xa bytes), align: 0
  Segment part 51.            Intra module refs:   macTxCompleteCallback
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B77B - 0002B786 (0xc bytes), align: 0
  Segment part 52.            Intra module refs:   macTxCompleteCallback
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B787 - 0002B793 (0xd bytes), align: 0
  Segment part 53.            Intra module refs:   macTxCompleteCallback
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B794 - 0002B798 (0x5 bytes), align: 0
  Segment part 54.            Intra module refs:   macRxCheckPendingCallback
                                                   macTxCompleteCallback
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B799 - 0002B7A3 (0xb bytes), align: 0
  Segment part 55.            Intra module refs:   macTxCompleteCallback
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B7A4 - 0002B7AE (0xb bytes), align: 0
  Segment part 56.            Intra module refs:   Segment part 54
                                                   Segment part 55
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B7AF - 0002B7BA (0xc bytes), align: 0
  Segment part 57.            Intra module refs:   macDataTxComplete
                                                   macDataTxEnqueue
                                                   macTxCompleteCallback
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B7BB - 0002B8DA (0x120 bytes), align: 0
  Segment part 58.            Intra module refs:   macDataSend
                                                   macDataTxEnqueue
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataTxSend           0002B7BB        macIndirectSend (mac_coord)
               calls direct
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 0000000B ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B8DB - 0002B8E2 (0x8 bytes), align: 0
  Segment part 59.            Intra module refs:   macBuildDataFrame
                                                   macDataTxSend
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B8E3 - 0002B8EE (0xc bytes), align: 0
  Segment part 60.            Intra module refs:   macDataTxSend
                                                   macDataTxTimeAvailable
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B8EF - 0002B97D (0x8f bytes), align: 0
  Segment part 61.            Intra module refs:   macBuildDataFrame
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataTxEnqueue        0002B8EF        macApiAssociateReq (mac_device)
                                                   macBuildAssociateRsp (mac_coord)
                                                   macBuildCommonReq (mac_mgmt)
                                                   macBuildDisassociateReq (mac_mgmt)
                                                   macBuildRealign (mac_coord)
                                                   macRxBeaconReq (mac_coord)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000009 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B97E - 0002B985 (0x8 bytes), align: 0
  Segment part 62.            Intra module refs:   macDataTxEnqueue
                                                   macRxCompleteCallback
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B986 - 0002B995 (0x10 bytes), align: 0
  Segment part 63.            Intra module refs:   macDataTxEnqueue
                                                   macRxCompleteCallback
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B996 - 0002B9A1 (0xc bytes), align: 0
  Segment part 64.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataSend             0002B996        macMgmtAction1 (mac_mgmt)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B9A2 - 0002BA06 (0x65 bytes), align: 0
  Segment part 65.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiDataReq           0002B9A2        macMgmtAction1 (mac_mgmt)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BA07 - 0002BA12 (0xc bytes), align: 0
  Segment part 66.            Intra module refs:   MAC_McpsDataReq
                                                   macApiDataReq
                                                   macDataTxEnqueue
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BA13 - 0002BA25 (0x13 bytes), align: 0
  Segment part 67.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataRxInd            0002BA13        Segment part 28 (mac_device)
                                                   macMgmtAction1 (mac_mgmt)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BA26 - 0002BA67 (0x42 bytes), align: 0
  Segment part 68.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_McpsDataReq         0002BA26        ZMacDataReq (zmac)
                                                   ZMacSendNoData (zmac)
               calls direct
               stack 1 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BA68 - 0002BAAA (0x43 bytes), align: 0
  Segment part 69.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_McpsDataAlloc       0002BA68        ZMacDataReq (zmac)
                                                   ZMacSendNoData (zmac)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BAAB - 0002BAC0 (0x16 bytes), align: 0
  Segment part 70.            Intra module refs:   MAC_McpsDataAlloc
                                                   macAllocTxBuffer
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001639 - 0000163B (0x3 bytes), align: 0
  Segment part 14.            Intra module refs:   macDataTxIndirect
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000163C - 0000163E (0x3 bytes), align: 0
  Segment part 16.            Intra module refs:   macDataRequeueIndirect
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000163F - 00001641 (0x3 bytes), align: 0
  Segment part 18.            Intra module refs:   macDataRxBeaconCritical
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001642 - 00001644 (0x3 bytes), align: 0
  Segment part 20.            Intra module refs:   macDataTxBeaconComplete
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001645 - 00001647 (0x3 bytes), align: 0
  Segment part 22.            Intra module refs:   macDataSetSched
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001648 - 0000164A (0x3 bytes), align: 0
  Segment part 24.            Intra module refs:   macDataCheckSched
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000164B - 0000164D (0x3 bytes), align: 0
  Segment part 27.            Intra module refs:   macDataBeaconRequeue

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : mac_device

  SEGMENTS IN THE MODULE
  ======================
CODE_C
  Relative segment, address: CODE 00001782 - 000017AB (0x2a bytes), align: 0
  Segment part 6.             Intra module refs:   MAC_InitDevice
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000017AC - 000017BA (0xf bytes), align: 0
  Segment part 7.             Intra module refs:   MAC_InitDevice
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3E6 - 0000E3FB (0x16 bytes), align: 0
  Segment part 8.             Intra module refs:   macApiAssociateReq
                                                   macApiPollReq
                                                   macAssocDataReq
                                                   macAssocDataReqComplete
                                                   macAssocDataRxInd
                                                   macAssocFailed
                                                   macAssocFrameResponseTimeout
                                                   macDeviceReset
                                                   macPollDataReqComplete
                                                   macPollDataRxInd
                                                   macPollFrameResponseTimeout
                                                   macPollRxAssocRsp
                                                   macPollRxDisassoc
                                                   macRxAssocRsp
                                                   macStartFrameResponseTimer
                                                   macStartResponseTimer
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDevice               0000E3E6 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DAA6 - 0002DACD (0x28 bytes), align: 0
  Segment part 11.            Intra module refs:   MAC_InitDevice
           LOCAL                   ADDRESS         
           =====                   =======         
           macDeviceReset          0002DAA6 
               is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DACE - 0002DAD9 (0xc bytes), align: 0
  Segment part 12.            Intra module refs:   macDeviceReset
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DADA - 0002DB0C (0x33 bytes), align: 0
  Segment part 13.            Intra module refs:   macAssocFailed
                                                   macRxAssocRsp
           LOCAL                   ADDRESS         
           =====                   =======         
           macAssociateCnf         0002DADA 
               calls direct
               stack 1 = 00000000 ( 00000003 )
               stack 2 = 0000000B ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DB0D - 0002DB2F (0x23 bytes), align: 0
  Segment part 14.            Intra module refs:   Segment part 32
                                                   macAssocFrameResponseTimeout
                                                   macPollFrameResponseTimeout
                                                   macRxAssocRsp
           LOCAL                   ADDRESS         
           =====                   =======         
           macPollCnf              0002DB0D 
               calls direct
               stack 1 = 00000000 ( 00000003 )
               stack 2 = 0000000B ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DB30 - 0002DB40 (0x11 bytes), align: 0
  Segment part 15.            Intra module refs:   macAssociateCnf
                                                   macPollCnf
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DB41 - 0002DB7E (0x3e bytes), align: 0
  Segment part 16.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macStartResponseTimer   0002DB41 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DB7F - 0002DBEC (0x6e bytes), align: 0
  Segment part 17.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macStartFrameResponseTimer
                                   0002DB7F 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000042 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DBED - 0002DD15 (0x129 bytes), align: 0
  Segment part 18.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiAssociateReq      0002DBED 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DD16 - 0002DD21 (0xc bytes), align: 0
  Segment part 19.            Intra module refs:   macApiAssociateReq
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DD22 - 0002DD7A (0x59 bytes), align: 0
  Segment part 20.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macAssocDataReq         0002DD22 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DD7B - 0002DDBB (0x41 bytes), align: 0
  Segment part 21.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macAssocDataReqComplete
                                   0002DD7B 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DDBC - 0002DE54 (0x99 bytes), align: 0
  Segment part 22.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxAssocRsp           0002DDBC 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DE55 - 0002DE5C (0x8 bytes), align: 0
  Segment part 23.            Intra module refs:   macApiPollReq
                                                   macRxAssocRsp
                                                   macRxCoordRealign
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DE5D - 0002DE8B (0x2f bytes), align: 0
  Segment part 24.            Intra module refs:   Segment part 6
                                                   macAssocRxDisassoc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macAssocFrameResponseTimeout
                                   0002DE5D 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DE8C - 0002DECF (0x44 bytes), align: 0
  Segment part 25.            Intra module refs:   Segment part 6
                                                   macAssocFrameResponseTimeout
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macAssocFailed          0002DE8C 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DED0 - 0002DEE0 (0x11 bytes), align: 0
  Segment part 26.            Intra module refs:   Segment part 7
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macAssocRxDisassoc      0002DED0 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DEE1 - 0002DF34 (0x54 bytes), align: 0
  Segment part 27.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macAssocDataRxInd       0002DEE1 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DF35 - 0002DF40 (0xc bytes), align: 0
  Segment part 28.            Intra module refs:   macAssocDataRxInd
                                                   macPollDataRxInd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DF41 - 0002DF4B (0xb bytes), align: 0
  Segment part 29.            Intra module refs:   macAssocDataReqComplete
                                                   macAssocDataRxInd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DF4C - 0002DF9D (0x52 bytes), align: 0
  Segment part 30.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiPollReq           0002DF4C 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DF9E - 0002DFD5 (0x38 bytes), align: 0
  Segment part 31.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPollDataReqComplete
                                   0002DF9E 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DFD6 - 0002DFE5 (0x10 bytes), align: 0
  Segment part 32.            Intra module refs:   macAssocDataReqComplete
                                                   macAssocDataRxInd
                                                   macPollDataReqComplete
                                                   macPollDataRxInd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DFE6 - 0002E035 (0x50 bytes), align: 0
  Segment part 33.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPollDataRxInd        0002DFE6 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E036 - 0002E049 (0x14 bytes), align: 0
  Segment part 34.            Intra module refs:   Segment part 23
                                                   Segment part 28
                                                   macApiAssociateReq
                                                   macAssocDataReqComplete
                                                   macAssocFailed
                                                   macAssocFrameResponseTimeout
                                                   macAssocRxDisassoc
                                                   macPollDataReqComplete
                                                   macPollFrameResponseTimeout
                                                   macPollRxAssocRsp
                                                   macPollRxDisassoc
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E04A - 0002E083 (0x3a bytes), align: 0
  Segment part 35.            Intra module refs:   Segment part 6
                                                   macPollRxAssocRsp
                                                   macPollRxDisassoc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPollFrameResponseTimeout
                                   0002E04A 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E084 - 0002E0A3 (0x20 bytes), align: 0
  Segment part 36.            Intra module refs:   Segment part 7
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPollRxDisassoc       0002E084 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E0A4 - 0002E0C4 (0x21 bytes), align: 0
  Segment part 37.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPollRxAssocRsp       0002E0A4 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E0C5 - 0002E175 (0xb1 bytes), align: 0
  Segment part 38.            Intra module refs:   Segment part 7
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxCoordRealign       0002E0C5 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000001A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E176 - 0002E18A (0x15 bytes), align: 0
  Segment part 39.            Intra module refs:   macRxAssocRsp
                                                   macRxCoordRealign
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E18B - 0002E18F (0x5 bytes), align: 0
  Segment part 40.            Intra module refs:   macApiAssociateReq
                                                   macRxCoordRealign
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E190 - 0002E1A1 (0x12 bytes), align: 0
  Segment part 41.            Intra module refs:   Segment part 40
                                                   macRxAssocRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E1A2 - 0002E1AE (0xd bytes), align: 0
  Segment part 42.            Intra module refs:   macRxAssocRsp
                                                   macRxCoordRealign
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E1AF - 0002E1B9 (0xb bytes), align: 0
  Segment part 43.            Intra module refs:   Segment part 42
                                                   macRxCoordRealign
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E1BA - 0002E1C2 (0x9 bytes), align: 0
  Segment part 44.            Intra module refs:   Segment part 7
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPanConflictComplete
                                   0002E1BA 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E1C3 - 0002E1C7 (0x5 bytes), align: 0
  Segment part 45.            Intra module refs:   macPanConflictComplete
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E1C8 - 0002E1D1 (0xa bytes), align: 0
  Segment part 46.            Intra module refs:   MAC_InitDevice
                                                   Segment part 45
                                                   macAssocDataReq
                                                   macAssociateCnf
                                                   macDeviceReset
                                                   macPollCnf
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E1D2 - 0002E217 (0x46 bytes), align: 0
  Segment part 47.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_InitDevice          0002E1D2        ZMacInit (zmac)
               stack 1 = 00000000 ( 00000002 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : mac_main

  SEGMENTS IN THE MODULE
  ======================
CODE_C
  Relative segment, address: CODE 000017BB - 0000181C (0x62 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 18
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macIdleSt               000017BB 
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 0000181D - 0000187E (0x62 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macAssociatingSt        0000181D        MAC_InitDevice (mac_device)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 0000187F - 000018E0 (0x62 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPollingSt            0000187F        MAC_InitDevice (mac_device)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000018E1 - 00001942 (0x62 bytes), align: 0
  Segment part 10.            Intra module refs:   Segment part 18
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macScanningSt           000018E1 
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00001943 - 000019A4 (0x62 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macStartingSt           00001943        MAC_InitCoord (mac_coord)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000019A5 - 000019AF (0xb bytes), align: 0
  Segment part 12.            Intra module refs:   Segment part 37
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSendMsgBufSize       000019A5 
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000019B0 - 000019BA (0xb bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 35
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSendMsgDataSize      000019B0 
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000019BB - 000019C5 (0xb bytes), align: 0
  Segment part 14.            Intra module refs:   macCbackForEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCbackEventTbl        000019BB 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3FC - 0000E3FC (0x1 bytes), align: 0
  Segment part 15.            Intra module refs:   macEventLoop
                                                   macMainReset
                                                   macSendDataMsg
                                                   macSendMsg
                                                   macSetEvent
                                                   macTaskInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTaskId               0000E3FC        Segment part 31 (mac_data)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3FD - 0000E401 (0x5 bytes), align: 0
  Segment part 16.            Intra module refs:   macEventLoop
                                                   macExecute
                                                   macMainReset
                                                   macStateIdle
                                                   macStateScanning
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMain                 0000E3FD        MAC_Init (mac_mgmt)
                                                   MAC_InitCoord (mac_coord)
                                                   MAC_InitDevice (mac_device)
                                                   Segment part 69 (mac_mgmt)
                                                   macApiDataReq (mac_data)
                                                   macApiPending (mac_mgmt)
                                                   macApiScanReq (mac_scan)
                                                   macRxCheckPendingCallback (mac_data)
                                                   macStartBegin (mac_coord)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FB80 - 0000FB89 (0xa bytes), align: 0
  Segment part 17.            Intra module refs:   macExecute
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macStateTbl             0000FB80        MAC_InitCoord (mac_coord)
                                                   MAC_InitDevice (mac_device)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E402 - 0000E416 (0x15 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macReset                0000E402        MAC_InitCoord (mac_coord)
                                                   MAC_InitDevice (mac_device)
                                                   Segment part 68 (mac_mgmt)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FB8A - 0000FB9B (0x12 bytes), align: 0
  Segment part 20.            Intra module refs:   macExecute
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macActionSet            0000FB8A        MAC_InitCoord (mac_coord)
                                                   MAC_InitDevice (mac_device)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FB1C - 0002FB62 (0x47 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMainReset            0002FB1C        MAC_MlmeResetReq (mac_mgmt)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FB63 - 0002FB67 (0x5 bytes), align: 0
  Segment part 23.            Intra module refs:   macExecute
                                                   macMainReset
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FB68 - 0002FB82 (0x1b bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSetEvent             0002FB68        Segment part 12 (mac_device)
                                                   macApiScanReq (mac_scan)
                                                   macCoordReset (mac_coord)
                                                   macIndirectRequeueFrame (mac_coord)
                                                   macRxCompleteCallback (mac_data)
                                                   macTxCompleteCallback (mac_data)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FB83 - 0002FC2A (0xa8 bytes), align: 0
  Segment part 25.            Intra module refs:   Segment part 38
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCbackForEvent        0002FB83        MAC_McpsDataReq (mac_data)
                                                   Segment part 73 (mac_mgmt)
                                                   macApiDataReq (mac_data)
                                                   macApiPurgeReq (mac_coord)
                                                   macDataTxComplete (mac_data)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000012 ( 00000017 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FC2B - 0002FC32 (0x8 bytes), align: 0
  Segment part 26.            Intra module refs:   macCbackForEvent
                                                   macEventLoop
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FC33 - 0002FC3D (0xb bytes), align: 0
  Segment part 27.            Intra module refs:   macCbackForEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FC3E - 0002FC4D (0x10 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macStateIdle            0002FC3E        macRxCompleteCallback (mac_data)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FC4E - 0002FC54 (0x7 bytes), align: 0
  Segment part 29.            Intra module refs:   macStateIdle
                                                   macStateScanning
                                                   macTaskInit
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FC55 - 0002FC68 (0x14 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macStateScanning        0002FC55        macCheckSched (mac_data)
                                                   macRxCompleteCallback (mac_data)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FC69 - 0002FD04 (0x9c bytes), align: 0
  Segment part 31.            Intra module refs:   Segment part 41
                                                   macEventLoop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macExecute              0002FC69        Segment part 29 (mac_device)
                                                   macApiAssociateReq (mac_device)
                                                   macApiDisassociateReq (mac_mgmt)
                                                   macApiScanReq (mac_scan)
                                                   macRxBeacon (mac_mgmt)
                                                   macScanNextChan (mac_scan)
                                                   macScanRxBeacon (mac_scan)
                                                   macScanRxCoordRealign (mac_scan)
                                                   macStartContinue (mac_coord)
                                                   macStartFrameResponseTimer (mac_device)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000E ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FD05 - 0002FD11 (0xd bytes), align: 0
  Segment part 32.            Intra module refs:   macExecute
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FD12 - 0002FD80 (0x6f bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSendMsg              0002FD12        MAC_MlmeScanReq (mac_scan)
                                                   MAC_MlmeStartReq (mac_coord)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000013 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FD81 - 0002FE17 (0x97 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSendDataMsg          0002FD81        Segment part 14 (mac_coord)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000015 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FE18 - 0002FE29 (0x12 bytes), align: 0
  Segment part 35.            Intra module refs:   macSendDataMsg
                                                   macSendMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FE2A - 0002FE33 (0xa bytes), align: 0
  Segment part 36.            Intra module refs:   macSendDataMsg
                                                   macSendMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FE34 - 0002FE40 (0xd bytes), align: 0
  Segment part 37.            Intra module refs:   macSendDataMsg
                                                   macSendMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FE41 - 0002FE55 (0x15 bytes), align: 0
  Segment part 38.            Intra module refs:   macSendDataMsg
                                                   macSendMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FE56 - 0002FE61 (0xc bytes), align: 0
  Segment part 39.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTaskInit             0002FE56        osalAddTasks (OSAL_SampleApp)
               is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FE62 - 0002FFB8 (0x157 bytes), align: 0
  Segment part 40.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macEventLoop            0002FE62        osalAddTasks (OSAL_SampleApp)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FFB9 - 0002FFC9 (0x11 bytes), align: 0
  Segment part 41.            Intra module refs:   macEventLoop
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000164E - 00001657 (0xa bytes), align: 0
  Segment part 18.            Intra module refs:   macStateTbl
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001658 - 00001669 (0x12 bytes), align: 0
  Segment part 21.            Intra module refs:   macActionSet

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : mac_mgmt

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E417 - 0000E417 (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   macApiDisassociateReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMgmt                 0000E417        macCoordReset (mac_coord)
                                                   macIndirectExpire (mac_coord)
                                                   macRxBeaconReq (mac_coord)
                                                   macStartSetParams (mac_coord)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E418 - 0000E418 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   MAC_MlmeResetReq
                                                   macRxBeacon
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPanCoordinator       0000E418        macBuildBeacon (mac_coord)
                                                   macRxPanConflict (mac_coord)
                                                   macStartSetParams (mac_coord)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000019C6 - 000019DA (0x15 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMgmtAction1          000019C6        Segment part 21 (mac_main)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000019DB - 000019E9 (0xf bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMgmtAction2          000019DB        Segment part 21 (mac_main)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028DFE - 00028E37 (0x3a bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macGetCoordAddress      00028DFE        macAssocDataReq (mac_device)
               calls direct
               stack 1 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028E38 - 00028E51 (0x1a bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macGetMyAddrMode        00028E38        macApiPollReq (mac_device)
                                                   macBuildBeacon (mac_coord)
                                                   macRxDataReq (mac_coord)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028E52 - 00028EC3 (0x72 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDestAddrCmp          00028E52        macIndirectMark (mac_coord)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028EC4 - 00028F62 (0x9f bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDestSAddrCmp         00028EC4        macIndirectSend (mac_coord)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000002 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028F63 - 00028F67 (0x5 bytes), align: 0
  Segment part 15.            Intra module refs:   macDestSAddrCmp
                                                   macRxDisassoc
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028F68 - 00028F74 (0xd bytes), align: 0
  Segment part 16.            Intra module refs:   macDestAddrCmp
                                                   macDestSAddrCmp
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028F75 - 00028FB0 (0x3c bytes), align: 0
  Segment part 17.            Intra module refs:   Segment part 62
                                                   macDisassocComplete
                                                   macRxDisassoc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCoordAddrCmp         00028F75 
               calls direct
               stack 1 = 00000002 ( 00000002 )
               stack 2 = 00000035 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028FB1 - 00028FBD (0xd bytes), align: 0
  Segment part 18.            Intra module refs:   macCoordAddrCmp
                                                   macGetCoordAddress
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028FBE - 000291E0 (0x223 bytes), align: 0
  Segment part 20.            Intra module refs:   macBuildCommonReq
                                                   macBuildDisassociateReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBuildHeader          00028FBE        macApiAssociateReq (mac_device)
                                                   macBuildAssociateRsp (mac_coord)
                                                   macBuildBeacon (mac_coord)
                                                   macBuildDataFrame (mac_data)
                                                   macBuildRealign (mac_coord)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000012 ( 00000013 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000291E1 - 000291E5 (0x5 bytes), align: 0
  Segment part 21.            Intra module refs:   macBuildBeaconNotifyInd
                                                   macBuildCommonReq
                                                   macBuildHeader
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000291E6 - 000291E9 (0x4 bytes), align: 0
  Segment part 22.            Intra module refs:   macBuildHeader
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000291EA - 000291EA (0x1 bytes), align: 0
  Segment part 23.            Intra module refs:   Segment part 22
                                                   Segment part 25
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000291EB - 000291F3 (0x9 bytes), align: 0
  Segment part 24.            Intra module refs:   Segment part 23
                                                   Segment part 29
                                                   macBuildHeader
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000291F4 - 000291F6 (0x3 bytes), align: 0
  Segment part 25.            Intra module refs:   macBuildHeader
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000291F7 - 000291FB (0x5 bytes), align: 0
  Segment part 26.            Intra module refs:   Segment part 25
                                                   Segment part 41
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000291FC - 00029202 (0x7 bytes), align: 0
  Segment part 27.            Intra module refs:   macBuildHeader
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029203 - 00029208 (0x6 bytes), align: 0
  Segment part 28.            Intra module refs:   Segment part 27
                                                   Segment part 35
                                                   macBuildCommonReq
                                                   macBuildHeader
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029209 - 00029210 (0x8 bytes), align: 0
  Segment part 29.            Intra module refs:   macBuildHeader
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029211 - 00029217 (0x7 bytes), align: 0
  Segment part 30.            Intra module refs:   Segment part 29
                                                   macBuildHeader
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029218 - 000292A9 (0x92 bytes), align: 0
  Segment part 31.            Intra module refs:   macRxBeacon
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBuildCommonReq       00029218        macApiPollReq (mac_device)
                                                   macAssocDataReq (mac_device)
                                                   macRxDataReq (mac_coord)
                                                   macScanNextChan (mac_scan)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000037 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000292AA - 00029342 (0x99 bytes), align: 0
  Segment part 32.            Intra module refs:   macApiDisassociateReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBuildDisassociateReq
                                   000292AA 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000009 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029343 - 0002934A (0x8 bytes), align: 0
  Segment part 33.            Intra module refs:   MAC_MlmeResetReq
                                                   macApiDisassociateReq
                                                   macApiPending
                                                   macBuildDisassociateReq
                                                   macCommStatusInd
                                                   macDestAddrCmp
                                                   macRxBeacon
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002934B - 0002934D (0x3 bytes), align: 0
  Segment part 34.            Intra module refs:   macApiDisassociateReq
                                                   macBuildDisassociateReq
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002934E - 00029353 (0x6 bytes), align: 0
  Segment part 35.            Intra module refs:   Segment part 34
                                                   Segment part 63
                                                   macBuildBeaconNotifyInd
                                                   macBuildDisassociateReq
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029354 - 0002956B (0x218 bytes), align: 0
  Segment part 36.            Intra module refs:   macRxBeacon
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBuildBeaconNotifyInd
                                   00029354        macScanRxBeacon (mac_scan)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000035 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002956C - 00029577 (0xc bytes), align: 0
  Segment part 37.            Intra module refs:   macBuildBeaconNotifyInd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029578 - 00029582 (0xb bytes), align: 0
  Segment part 38.            Intra module refs:   macApiDisassociateReq
                                                   macBuildBeaconNotifyInd
                                                   macBuildCommonReq
                                                   macBuildDisassociateReq
                                                   macBuildHeader
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029583 - 00029589 (0x7 bytes), align: 0
  Segment part 39.            Intra module refs:   macBuildBeaconNotifyInd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002958A - 00029590 (0x7 bytes), align: 0
  Segment part 40.            Intra module refs:   Segment part 39
                                                   macBuildBeaconNotifyInd
                                                   macDisassocComplete
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029591 - 00029594 (0x4 bytes), align: 0
  Segment part 41.            Intra module refs:   macBuildBeaconNotifyInd
                                                   macBuildHeader
                                                   macCommStatusInd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029595 - 00029598 (0x4 bytes), align: 0
  Segment part 42.            Intra module refs:   macBuildBeaconNotifyInd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029599 - 000295A3 (0xb bytes), align: 0
  Segment part 43.            Intra module refs:   Segment part 42
                                                   Segment part 45
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000295A4 - 000295B0 (0xd bytes), align: 0
  Segment part 44.            Intra module refs:   macBuildBeaconNotifyInd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000295B1 - 000295B6 (0x6 bytes), align: 0
  Segment part 45.            Intra module refs:   macBuildBeaconNotifyInd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000295B7 - 000295C8 (0x12 bytes), align: 0
  Segment part 46.            Intra module refs:   macBuildBeaconNotifyInd
                                                   macCommStatusInd
                                                   macRxDisassoc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSecCpy               000295B7        macRxAssociateReq (mac_coord)
                                                   macRxCoordRealign (mac_device)
                                                   macRxOrphan (mac_coord)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 0000002B ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000295C9 - 000295CB (0x3 bytes), align: 0
  Segment part 47.            Intra module refs:   macMgmtAction1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macNoAction             000295C9        Segment part 14 (mac_data)
                                                   Segment part 16 (mac_data)
                                                   Segment part 18 (mac_data)
                                                   Segment part 20 (mac_data)
                                                   Segment part 27 (mac_data)
               is indirectly called
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000295CC - 000295D4 (0x9 bytes), align: 0
  Segment part 48.            Intra module refs:   macDefaultAction
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiUnsupported       000295CC 
               calls direct
               stack 1 = 00000002 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000295D5 - 000295ED (0x19 bytes), align: 0
  Segment part 49.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDefaultAction        000295D5        macExecute (mac_main)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000295EE - 00029600 (0x13 bytes), align: 0
  Segment part 50.            Intra module refs:   macApiPending
                                                   macMgmtAction1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiBadState          000295EE 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000003 )
               stack 2 = 00000009 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029601 - 0002963C (0x3c bytes), align: 0
  Segment part 51.            Intra module refs:   macMgmtAction1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiPending           00029601 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002963D - 00029706 (0xca bytes), align: 0
  Segment part 52.            Intra module refs:   macMgmtAction1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCommStatusInd        0002963D        macCbackForEvent (mac_main)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000002B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029707 - 00029710 (0xa bytes), align: 0
  Segment part 53.            Intra module refs:   macApiDisassociateReq
                                                   macBuildBeaconNotifyInd
                                                   macCommStatusInd
                                                   macDestSAddrCmp
                                                   macDisassocComplete
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029711 - 00029786 (0x76 bytes), align: 0
  Segment part 54.            Intra module refs:   macMgmtAction2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiDisassociateReq   00029711 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029787 - 00029805 (0x7f bytes), align: 0
  Segment part 55.            Intra module refs:   macMgmtAction2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDisassocComplete     00029787 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000003 )
               stack 2 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029806 - 0002980B (0x6 bytes), align: 0
  Segment part 56.            Intra module refs:   macConflictSyncLossInd
                                                   macDisassocComplete
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002980C - 00029896 (0x8b bytes), align: 0
  Segment part 57.            Intra module refs:   macMgmtAction2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxDisassoc           0002980C        Segment part 34 (mac_device)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000022 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029897 - 000298A0 (0xa bytes), align: 0
  Segment part 58.            Intra module refs:   macCommStatusInd
                                                   macRxDisassoc
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000298A1 - 000298B5 (0x15 bytes), align: 0
  Segment part 59.            Intra module refs:   macDisassocComplete
                                                   macRxDisassoc
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000298B6 - 000298C4 (0xf bytes), align: 0
  Segment part 60.            Intra module refs:   macBuildHeader
                                                   macRxBeacon
                                                   macRxDisassoc
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000298C5 - 0002998E (0xca bytes), align: 0
  Segment part 61.            Intra module refs:   macMgmtAction2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxBeacon             000298C5 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000037 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002998F - 00029999 (0xb bytes), align: 0
  Segment part 62.            Intra module refs:   macApiDisassociateReq
                                                   macRxBeacon
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002999A - 000299A4 (0xb bytes), align: 0
  Segment part 63.            Intra module refs:   macBuildBeaconNotifyInd
                                                   macRxBeacon
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000299A5 - 000299CD (0x29 bytes), align: 0
  Segment part 64.            Intra module refs:   macRxBeacon
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macConflictSyncLossInd
                                   000299A5        macPanConflictComplete (mac_device)
                                                   macRxPanConflict (mac_coord)
               calls direct
               stack 1 = 00000000 ( 00000003 )
               stack 2 = 00000035 ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000299CE - 000299D9 (0xc bytes), align: 0
  Segment part 65.            Intra module refs:   Segment part 59
                                                   macConflictSyncLossInd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000299DA - 00029AB3 (0xda bytes), align: 0
  Segment part 67.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_MlmeResetReq        000299DA        ZMacReset (zmac)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029AB4 - 00029ABE (0xb bytes), align: 0
  Segment part 68.            Intra module refs:   MAC_MlmeResetReq
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029ABF - 00029AC7 (0x9 bytes), align: 0
  Segment part 69.            Intra module refs:   MAC_MlmeResetReq
                                                   macApiPending
                                                   macBuildBeaconNotifyInd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029AC8 - 00029AD9 (0x12 bytes), align: 0
  Segment part 71.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_Init                00029AC8        ZMacInit (zmac)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029ADA - 00029AE8 (0xf bytes), align: 0
  Segment part 73.            Intra module refs:   MAC_Init
                                                   Segment part 56
                                                   macApiBadState
                                                   macApiUnsupported
                                                   macCoordAddrCmp
                                                   macDefaultAction
                                                   macGetCoordAddress
                                                   macGetMyAddrMode
                                                   macSecCpy

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : mac_pib

  SEGMENTS IN THE MODULE
  ======================
CODE_C
  Relative segment, address: CODE 000019EA - 00001A24 (0x3b bytes), align: 0
  Segment part 7.             Intra module refs:   macPibReset
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00001A25 - 00001AAC (0x88 bytes), align: 0
  Segment part 8.             Intra module refs:   MAC_MlmeGetReq
                                                   MAC_MlmeSetReq
                                                   Segment part 14
                                                   Segment part 16
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E419 - 0000E453 (0x3b bytes), align: 0
  Segment part 9.             Intra module refs:   MAC_MlmeGetReq
                                                   MAC_MlmeSetReq
                                                   macPibReset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPib                  0000E419        MAC_MlmeResetReq (mac_mgmt)
                                                   Segment part 18 (mac_mgmt)
                                                   macApiAssociateReq (mac_device)
                                                   macApiDisassociateReq (mac_mgmt)
                                                   macApiOrphanRsp (mac_coord)
                                                   macApiScanReq (mac_scan)
                                                   macAssocDataReq (mac_device)
                                                   macBuildAssociateRsp (mac_coord)
                                                   macBuildBeacon (mac_coord)
                                                   macBuildHeader (mac_mgmt)
                                                   macBuildRealign (mac_coord)
                                                   macCommStatusInd (mac_mgmt)
                                                   macCoordAddrCmp (mac_mgmt)
                                                   macCspTxRequestAckTimeoutCallback (mac_csp_tx)
                                                   macDisassocComplete (mac_mgmt)
                                                   macGetCoordAddress (mac_mgmt)
                                                   macGetMyAddrMode (mac_mgmt)
                                                   macIndirectExpire (mac_coord)
                                                   macIndirectRequeueFrame (mac_coord)
                                                   macIndirectTxFrame (mac_coord)
                                                   macRadioStopScan (mac_radio)
                                                   macRxAssociateReq (mac_coord)
                                                   macRxBeacon (mac_mgmt)
                                                   macRxBeaconReq (mac_coord)
                                                   macRxCompleteCallback (mac_data)
                                                   macRxCoordRealign (mac_device)
                                                   macRxDisassoc (mac_mgmt)
                                                   macScanRxBeacon (mac_scan)
                                                   macScanStartTimer (mac_scan)
                                                   macStartBegin (mac_coord)
                                                   macStartFrameResponseTimer (mac_device)
                                                   macStartResponseTimer (mac_device)
                                                   macStartSetParams (mac_coord)
                                                   macTxChannelBusyCallback (mac_tx)
                                                   macTxCompleteCallback (mac_data)
                                                   macTxFrame (mac_tx)
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B147 - 0003B196 (0x50 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPibReset             0003B147        MAC_MlmeResetReq (mac_mgmt)
               calls direct
               stack 1 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B197 - 0003B1BD (0x27 bytes), align: 0
  Segment part 11.            Intra module refs:   MAC_MlmeGetReq
                                                   MAC_MlmeSetReq
           LOCAL                   ADDRESS         
           =====                   =======         
           macPibIndex             0003B197 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000F ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B1BE - 0003B237 (0x7a bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_MlmeGetReq          0003B1BE        MAC_CbackEvent (zmac_cb)
                                                   ZMacGetReq (zmac)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B238 - 0003B3EC (0x1b5 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_MlmeSetReq          0003B238        MAC_MlmeResetReq (mac_mgmt)
                                                   Segment part 59 (mac_mgmt)
                                                   ZMacReset (zmac)
                                                   ZMacSetReq (zmac)
                                                   ZMacStartReq (zmac)
                                                   macApiAssociateReq (mac_device)
                                                   macRxAssocRsp (mac_device)
                                                   macScanComplete (mac_scan)
                                                   macScanNextChan (mac_scan)
                                                   macScanRxCoordRealign (mac_scan)
                                                   macStartSetParams (mac_coord)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B3ED - 0003B3F6 (0xa bytes), align: 0
  Segment part 14.            Intra module refs:   MAC_MlmeSetReq
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B3F7 - 0003B3FB (0x5 bytes), align: 0
  Segment part 15.            Intra module refs:   Segment part 14
                                                   Segment part 16
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B3FC - 0003B407 (0xc bytes), align: 0
  Segment part 16.            Intra module refs:   MAC_MlmeSetReq

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : mac_pwr

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E454 - 0000E454 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   macPwrReset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPwr                  0000E454 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003D514 - 0003D51C (0x9 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPwrReset             0003D514        MAC_MlmeResetReq (mac_mgmt)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003D51D - 0003D523 (0x7 bytes), align: 0
  Segment part 8.             Intra module refs:   macPwrReset
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003D524 - 0003D526 (0x3 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiPwrOnReq          0003D524        macMgmtAction2 (mac_mgmt)
               is indirectly called

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : mac_scan

  SEGMENTS IN THE MODULE
  ======================
CODE_C
  Relative segment, address: CODE 00001AAD - 00001ABE (0x12 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macScanAction           00001AAD        Segment part 21 (mac_main)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E455 - 0000E471 (0x1d bytes), align: 0
  Segment part 7.             Intra module refs:   macApiScanReq
                                                   macScanComplete
                                                   macScanNextChan
                                                   macScanRxBeacon
                                                   macScanRxCoordRealign
                                                   macScanStartTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EF25 - 0002EF98 (0x74 bytes), align: 0
  Segment part 12.            Intra module refs:   macApiScanReq
                                                   macScanFailedInProgress
           LOCAL                   ADDRESS         
           =====                   =======         
           macScanCnfInit          0002EF25 
               stack 1 = 00000002 ( 00000001 )
               stack 2 = 0000000C ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EF99 - 0002EF9D (0x5 bytes), align: 0
  Segment part 13.            Intra module refs:   macScanCnfInit
                                                   macScanRxBeacon
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EF9E - 0002EFA2 (0x5 bytes), align: 0
  Segment part 14.            Intra module refs:   macScanCnfInit
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EFA3 - 0002EFA9 (0x7 bytes), align: 0
  Segment part 15.            Intra module refs:   Segment part 14
                                                   Segment part 18
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EFAA - 0002F0B3 (0x10a bytes), align: 0
  Segment part 16.            Intra module refs:   macScanAction
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiScanReq           0002EFAA 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F0B4 - 0002F0B8 (0x5 bytes), align: 0
  Segment part 17.            Intra module refs:   macApiScanReq
                                                   macScanNextChan
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F0B9 - 0002F0C0 (0x8 bytes), align: 0
  Segment part 18.            Intra module refs:   macApiScanReq
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F0C1 - 0002F1C0 (0x100 bytes), align: 0
  Segment part 19.            Intra module refs:   macScanAction
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macScanNextChan         0002F0C1 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000017 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F1C1 - 0002F264 (0xa4 bytes), align: 0
  Segment part 20.            Intra module refs:   macScanAction
                                                   macScanNextChan
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macScanStartTimer       0002F1C1 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000015 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F265 - 0002F3BA (0x156 bytes), align: 0
  Segment part 21.            Intra module refs:   macScanAction
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macScanRxBeacon         0002F265 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000003D )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F3BB - 0002F466 (0xac bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macScanRxCoordRealign   0002F3BB        Segment part 7 (mac_device)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F467 - 0002F477 (0x11 bytes), align: 0
  Segment part 23.            Intra module refs:   macScanRxCoordRealign
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F478 - 0002F482 (0xb bytes), align: 0
  Segment part 24.            Intra module refs:   Segment part 23
                                                   Segment part 29
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F483 - 0002F499 (0x17 bytes), align: 0
  Segment part 25.            Intra module refs:   Segment part 23
                                                   macScanRxCoordRealign
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F49A - 0002F4E8 (0x4f bytes), align: 0
  Segment part 26.            Intra module refs:   macScanAction
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macScanComplete         0002F49A 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F4E9 - 0002F4F2 (0xa bytes), align: 0
  Segment part 27.            Intra module refs:   MAC_MlmeScanReq
                                                   macScanComplete
                                                   macScanFailedInProgress
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F4F3 - 0002F52A (0x38 bytes), align: 0
  Segment part 28.            Intra module refs:   macScanAction
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macScanFailedInProgress
                                   0002F4F3 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000003 )
               stack 2 = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F52B - 0002F52E (0x4 bytes), align: 0
  Segment part 29.            Intra module refs:   macScanFailedInProgress
                                                   macScanRxCoordRealign
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F52F - 0002F53B (0xd bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_MlmeScanReq         0002F52F        ZMacScanReq (zmac)
               calls direct
               stack 1 = 00000000 ( 00000002 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : mac_timer

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E472 - 0000E473 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   macBackoffTimerRolloverCallback
                                                   macTimer
                                                   macTimerCancel
                                                   macTimerUpdateBackoffTimer
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timerUnalignedQ         0000E472 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E474 - 0000E475 (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   macBackoffTimerRolloverCallback
                                                   macTimerCancel
                                                   macTimerUpdateBackoffTimer
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timerAlignedQ           0000E474 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FB9C - 0000FB9F (0x4 bytes), align: 0
  Segment part 9.             Intra module refs:   macBackoffTimerRolloverCallback
                                                   macBackoffTimerTriggerCallback
                                                   macTimerUpdateBackoffTimer
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FBA0 - 0000FBA3 (0x4 bytes), align: 0
  Segment part 11.            Intra module refs:   macBackoffTimerRolloverCallback
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E476 - 0000E477 (0x2 bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 23
                                                   Segment part 27
                                                   Segment part 30
                                                   macBackoffTimerTriggerCallback
                                                   macTimerUpdateBackoffTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003949D - 00039572 (0xd6 bytes), align: 0
  Segment part 21.            Intra module refs:   macBackoffTimerRolloverCallback
                                                   macTimerAddTimer
                                                   macTimerCancel
           LOCAL                   ADDRESS         
           =====                   =======         
           macTimerUpdateBackoffTimer
                                   0003949D 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000011 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039573 - 00039577 (0x5 bytes), align: 0
  Segment part 22.            Intra module refs:   macBackoffTimerTriggerCallback
                                                   macTimerUpdateBackoffTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039578 - 00039583 (0xc bytes), align: 0
  Segment part 23.            Intra module refs:   macTimerUpdateBackoffTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039584 - 00039587 (0x4 bytes), align: 0
  Segment part 24.            Intra module refs:   macTimerUpdateBackoffTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039588 - 00039592 (0xb bytes), align: 0
  Segment part 25.            Intra module refs:   Segment part 24
                                                   Segment part 27
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039593 - 000395F7 (0x65 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerTriggerCallback
                                   00039593        macBackoffTimerCompareIsr (mac_backoff_timer)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000395F8 - 00039600 (0x9 bytes), align: 0
  Segment part 27.            Intra module refs:   macBackoffTimerTriggerCallback
                                                   macTimerUpdateBackoffTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039601 - 00039687 (0x87 bytes), align: 0
  Segment part 28.            Intra module refs:   macBackoffTimerRolloverCallback
           LOCAL                   ADDRESS         
           =====                   =======         
           macTimerRecalcUnaligned
                                   00039601 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000013 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039688 - 00039698 (0x11 bytes), align: 0
  Segment part 29.            Intra module refs:   macTimer
                                                   macTimerRecalcUnaligned
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039699 - 000396A1 (0x9 bytes), align: 0
  Segment part 30.            Intra module refs:   Segment part 23
                                                   macTimerAddTimer
                                                   macTimerCancel
                                                   macTimerRecalcUnaligned
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000396A2 - 000396A8 (0x7 bytes), align: 0
  Segment part 31.            Intra module refs:   macBackoffTimerTriggerCallback
                                                   macTimerAddTimer
                                                   macTimerRecalcUnaligned
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000396A9 - 0003975F (0xb7 bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerRolloverCallback
                                   000396A9        macBackoffTimerCompareIsr (mac_backoff_timer)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039760 - 000397DD (0x7e bytes), align: 0
  Segment part 33.            Intra module refs:   Segment part 29
           LOCAL                   ADDRESS         
           =====                   =======         
           macTimerAddTimer        00039760 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000010 ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000397DE - 00039819 (0x3c bytes), align: 0
  Segment part 35.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTimer                000397DE        macIndirectExpire (mac_coord)
                                                   macIndirectTxFrame (mac_coord)
                                                   macScanStartTimer (mac_scan)
                                                   macStartFrameResponseTimer (mac_device)
                                                   macStartResponseTimer (mac_device)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000004 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003981A - 00039859 (0x40 bytes), align: 0
  Segment part 36.            Intra module refs:   macTimerCancel
           LOCAL                   ADDRESS         
           =====                   =======         
           macTimerRemoveTimer     0003981A 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003985A - 0003985E (0x5 bytes), align: 0
  Segment part 37.            Intra module refs:   macTimerCancel
                                                   macTimerRemoveTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003985F - 000398A7 (0x49 bytes), align: 0
  Segment part 38.            Intra module refs:   macBackoffTimerTriggerCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTimerCancel          0003985F        macAssocFailed (mac_device)
                                                   macIndirectExpire (mac_coord)
                                                   macIndirectTxFrame (mac_coord)
                                                   macPollDataRxInd (mac_device)
                                                   macPollRxAssocRsp (mac_device)
                                                   macPollRxDisassoc (mac_device)
                                                   macRxAssocRsp (mac_device)
                                                   macScanComplete (mac_scan)
                                                   macStartFrameResponseTimer (mac_device)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000C ( 00000009 )
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000166A - 0000166D (0x4 bytes), align: 0
  Segment part 10.            Intra module refs:   Segment part 9
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000166E - 00001671 (0x4 bytes), align: 0
  Segment part 12.            Intra module refs:   Segment part 11

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\AF.r51
  PROGRAM MODULE, NAME : AF

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E478 - 0000E479 (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   AF_DataRequest
                                                   afEndPoints
                                                   afFindEndPointDescList
                                                   afIncomingData
                                                   afInit
                                                   afNumEndPoints
                                                   afRegisterExtended
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epList                  0000E478        ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_UpdateNwkStatus (ZDObject)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A7D0 - 0002A7DD (0xe bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afInit                  0002A7D0        main (ZMain)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A7DE - 0002A868 (0x8b bytes), align: 0
  Segment part 8.             Intra module refs:   afRegister
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afRegisterExtended      0002A7DE 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000E ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A869 - 0002A86D (0x5 bytes), align: 0
  Segment part 9.             Intra module refs:   afFindSimpleDesc
                                                   afRegisterExtended
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine31           0002A869 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A86E - 0002A875 (0x8 bytes), align: 0
  Segment part 10.            Intra module refs:   afRegisterExtended
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0002A86E 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A876 - 0002A8A6 (0x31 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afRegister              0002A876        SampleApp_Init (SampleApp)
                                                   ZDApp_Init (ZDApp)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A8A7 - 0002A8F6 (0x50 bytes), align: 0
  Segment part 12.            Intra module refs:   AF_DataRequest
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afDataConfirm           0002A8A7        APSDE_DataConfirm (APSMEDE_CB)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000002B ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A8F7 - 0002A8FE (0x8 bytes), align: 0
  Segment part 13.            Intra module refs:   AF_DataRequest
                                                   afDataConfirm
                                                   afRegisterExtended
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0002A8F7 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A8FF - 0002AB1C (0x21e bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afIncomingData          0002A8FF        APS_event_loop (APS)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000005 ( 00000020 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002AB1D - 0002AB24 (0x8 bytes), align: 0
  Segment part 15.            Intra module refs:   afBuildMSGIncoming
                                                   afIncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine33           0002AB1D 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002AB25 - 0002AB28 (0x4 bytes), align: 0
  Segment part 16.            Intra module refs:   afIncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine14           0002AB25 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002AB29 - 0002AB2E (0x6 bytes), align: 0
  Segment part 17.            Intra module refs:   ?Subroutine14
                                                   ?Subroutine5
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine24           0002AB29 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002AB2F - 0002AB3D (0xf bytes), align: 0
  Segment part 18.            Intra module refs:   afIncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           0002AB2F 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002AB3E - 0002AB4B (0xe bytes), align: 0
  Segment part 19.            Intra module refs:   afIncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           0002AB3E 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002AB4C - 0002AB66 (0x1b bytes), align: 0
  Segment part 20.            Intra module refs:   afIncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            0002AB4C 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002AB67 - 0002AB6F (0x9 bytes), align: 0
  Segment part 21.            Intra module refs:   afIncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0002AB67 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002AB70 - 0002ACE9 (0x17a bytes), align: 0
  Segment part 22.            Intra module refs:   afIncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           afBuildMSGIncoming      0002AB70 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000020 ( 00000018 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002ACEA - 0002ACF4 (0xb bytes), align: 0
  Segment part 23.            Intra module refs:   afBuildMSGIncoming
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine21           0002ACEA 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002ACF5 - 0002ACFE (0xa bytes), align: 0
  Segment part 24.            Intra module refs:   afBuildMSGIncoming
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine17           0002ACF5 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002ACFF - 0002AD07 (0x9 bytes), align: 0
  Segment part 25.            Intra module refs:   afBuildMSGIncoming
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           0002ACFF 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002AD08 - 0002AD0D (0x6 bytes), align: 0
  Segment part 26.            Intra module refs:   ?Subroutine1
                                                   ?Subroutine10
                                                   ?Subroutine22
                                                   ?Subroutine24
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine32           0002AD08 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002AD0E - 0002AD18 (0xb bytes), align: 0
  Segment part 27.            Intra module refs:   afBuildMSGIncoming
                                                   afDataConfirm
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            0002AD0E 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002AD19 - 0002AD1E (0x6 bytes), align: 0
  Segment part 28.            Intra module refs:   afBuildMSGIncoming
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0002AD19 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002AD1F - 0002AD27 (0x9 bytes), align: 0
  Segment part 29.            Intra module refs:   ?Subroutine0
                                                   afBuildMSGIncoming
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine22           0002AD1F 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002AD28 - 0002B011 (0x2ea bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AF_DataRequest          0002AD28        SampleApp_SendFlashMessage (SampleApp)
                                                   SampleApp_SendPeriodicMessage (SampleApp)
                                                   SendData (SampleApp)
                                                   fillAndSend (ZDProfile)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000009 ( 0000002B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B012 - 0002B017 (0x6 bytes), align: 0
  Segment part 31.            Intra module refs:   ?Subroutine27
                                                   AF_DataRequest
                                                   afBuildMSGIncoming
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine29           0002B012 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B018 - 0002B01F (0x8 bytes), align: 0
  Segment part 32.            Intra module refs:   AF_DataRequest
                                                   afBuildMSGIncoming
                                                   afEndPoints
                                                   afFindSimpleDesc
                                                   afIncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine20           0002B018 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B020 - 0002B026 (0x7 bytes), align: 0
  Segment part 33.            Intra module refs:   AF_DataRequest
                                                   afIncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine18           0002B020 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B027 - 0002B02A (0x4 bytes), align: 0
  Segment part 34.            Intra module refs:   AF_DataRequest
                                                   afFindEndPointDescList
                                                   afIncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine12           0002B027 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B02B - 0002B02F (0x5 bytes), align: 0
  Segment part 35.            Intra module refs:   ?Subroutine11
                                                   ?Subroutine12
                                                   ?Subroutine8
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine23           0002B02B 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B030 - 0002B039 (0xa bytes), align: 0
  Segment part 36.            Intra module refs:   AF_DataRequest
                                                   afIncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            0002B030 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B03A - 0002B040 (0x7 bytes), align: 0
  Segment part 37.            Intra module refs:   ?Subroutine17
                                                   ?Subroutine19
                                                   ?Subroutine20
                                                   ?Subroutine5
                                                   ?Subroutine9
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine25           0002B03A 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B041 - 0002B04B (0xb bytes), align: 0
  Segment part 38.            Intra module refs:   AF_DataRequest
                                                   afBuildMSGIncoming
                                                   afCopyAddress
                                                   afIncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0002B041 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B04C - 0002B056 (0xb bytes), align: 0
  Segment part 39.            Intra module refs:   AF_DataRequest
                                                   afIncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0002B04C 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B057 - 0002B087 (0x31 bytes), align: 0
  Segment part 40.            Intra module refs:   afFindEndPointDesc
                                                   afFindSimpleDesc
                                                   afGetReflector
                                                   afIncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           afFindEndPointDescList
                                   0002B057 
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000019 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B088 - 0002B0AC (0x25 bytes), align: 0
  Segment part 41.            Intra module refs:   afDataConfirm
                                                   afIncomingData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afFindEndPointDesc      0002B088        MTProcessAppMsg (MTEL)
                                                   ZDApp_AutoFindDestinationEx (ZDApp)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000019 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B0AD - 0002B0B6 (0xa bytes), align: 0
  Segment part 42.            Intra module refs:   AF_DataRequest
                                                   afBuildMSGIncoming
                                                   afFindEndPointDesc
                                                   afFindEndPointDescList
                                                   afGetReflector
                                                   afIncomingData
                                                   afNumEndPoints
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            0002B0AD 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B0B7 - 0002B131 (0x7b bytes), align: 0
  Segment part 43.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afFindSimpleDesc        0002B0B7        ZDApp_SendEndDeviceBindReq (ZDApp)
                                                   ZDO_ProcessSimpleDescReq (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B132 - 0002B13A (0x9 bytes), align: 0
  Segment part 44.            Intra module refs:   AF_DataRequest
                                                   afFindSimpleDesc
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine16           0002B132 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B13B - 0002B141 (0x7 bytes), align: 0
  Segment part 45.            Intra module refs:   ?Subroutine16
                                                   ?Subroutine18
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine27           0002B13B 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B142 - 0002B145 (0x4 bytes), align: 0
  Segment part 46.            Intra module refs:   afBuildMSGIncoming
                                                   afFindSimpleDesc
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine15           0002B142 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B146 - 0002B149 (0x4 bytes), align: 0
  Segment part 47.            Intra module refs:   ?Subroutine13
                                                   ?Subroutine15
                                                   ?Subroutine9
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine26           0002B146 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B14A - 0002B152 (0x9 bytes), align: 0
  Segment part 48.            Intra module refs:   ?Subroutine23
                                                   ?Subroutine24
                                                   ?Subroutine26
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine28           0002B14A 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B153 - 0002B178 (0x26 bytes), align: 0
  Segment part 49.            Intra module refs:   AF_DataRequest
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afGetReflector          0002B153 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000002B ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B179 - 0002B17D (0x5 bytes), align: 0
  Segment part 51.            Intra module refs:   afFindEndPointDesc
                                                   afGetReflector
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine34           0002B179 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B17E - 0002B1BF (0x42 bytes), align: 0
  Segment part 52.            Intra module refs:   AF_DataRequest
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afDataReqMTU            0002B17E 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000002B ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B1C0 - 0002B1C4 (0x5 bytes), align: 0
  Segment part 53.            Intra module refs:   afCopyAddress
                                                   afDataReqMTU
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine35           0002B1C0 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B1C5 - 0002B1EA (0x26 bytes), align: 0
  Segment part 56.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afNumEndPoints          0002B1C5        ZDO_ProcessActiveEPReq (ZDObject)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B1EB - 0002B1F1 (0x7 bytes), align: 0
  Segment part 57.            Intra module refs:   afEndPoints
                                                   afFindEndPointDescList
                                                   afInit
                                                   afNumEndPoints
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine30           0002B1EB 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B1F2 - 0002B1F9 (0x8 bytes), align: 0
  Segment part 58.            Intra module refs:   afNumEndPoints
                                                   afRegisterExtended
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine19           0002B1F2 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B1FA - 0002B23A (0x41 bytes), align: 0
  Segment part 59.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afEndPoints             0002B1FA        ZDO_ProcessActiveEPReq (ZDObject)
               stack 1 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B23B - 0002B261 (0x27 bytes), align: 0
  Segment part 60.            Intra module refs:   afBuildMSGIncoming
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afCopyAddress           0002B23B 
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000015 ( 00000009 )

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\AccessCodeSpace.r51
  PROGRAM MODULE, NAME : CC2430_READ_ANY_CODE_BYTE

  SEGMENTS IN THE MODULE
  ======================
NEAR_CODE
  Relative segment, address: CODE 00000E97 - 00000EBE (0x28 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GetCodeByte             00000E97        ?Subroutine48 (OSAL_Nv)
                                                   ?Subroutine49 (OSAL_Nv)
                                                   calcChkF (OSAL_Nv)
                                                   osal_nv_write (OSAL_Nv)
           LOCAL                   ADDRESS         
           =====                   =======         
           _notBank2               00000EAC 

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\DebugTrace.r51
    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\Font.r51
    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\MTEL.r51
  PROGRAM MODULE, NAME : MTEL

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000C9 - 000000C9 (0x1 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WDCTL                   000000C9 
    -------------------------------------------------------------------------
XDATA_AN
  Relative segment, address: XDATA 0000E000 - 0000E007 (0x8 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mboxMsg                 0000E000 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FBA4 - 0000FBB3 (0x10 bytes), align: 0
  Segment part 9.             Intra module refs:   Segment part 14
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FBB4 - 0000FBC3 (0x10 bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 14
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FBC4 - 0000FBC7 (0x4 bytes), align: 0
  Segment part 13.            Intra module refs:   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MTVersionString         0000FBC4 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FBC8 - 0000FBCB (0x4 bytes), align: 0
  Segment part 22.            Intra module refs:   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffffffff     0000FBC8 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FBCC - 0000FBCF (0x4 bytes), align: 0
  Segment part 24.            Intra module refs:   AssocAddNew (AssocList)
                                                   MT_ProcessSerialCommand
                                                   NLDE_DataIndSend (nwk_util)
                                                   NLME_SetAssocFlags (nwk_util)
                                                   RTG_BcastAdd (rtg)
                                                   RTG_CalcAddress (rtg)
                                                   RTG_DataReq (rtg)
                                                   RTG_GetTreeRoute (rtg)
                                                   RTG_UpdateNeighborEntry (nwk_util)
                                                   ZDApp_ServerDiscRspCB (ZDApp)
                                                   halAssertHazardLights (hal_assert)
                                                   macBackoffTimerCompareIsr (mac_backoff_timer)
                                                   macBackoffTimerInit (mac_backoff_timer)
                                                   macBackoffTimerSetTrigger (mac_backoff_timer)
                                                   macTimerRecalcUnaligned (mac_timer)
                                                   nwk_ScanPANChanSelect (nwk)
                                                   nwk_ScanPANChanVerify (nwk)
                                                   nwk_data_ind_processing (nwk)
                                                   osalTimerInit (OSAL_Timers)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_0            0000FBCC 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FBD0 - 0000FBD3 (0x4 bytes), align: 0
  Segment part 26.            Intra module refs:   MT_ProcessSerialCommand
                                                   osalTimerInit (OSAL_Timers)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_3e8          0000FBD0 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FBD4 - 0000FBD7 (0x4 bytes), align: 0
  Segment part 28.            Intra module refs:   MT_Reset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_53544159     0000FBD4 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E47A - 0000E47A (0x1 bytes), align: 0
  Segment part 15.            Intra module refs:   MT_BuildAndSendZToolCB
                                                   MT_ProcessEvent
                                                   MT_TaskInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_TaskID               0000E47A        SPIMgr_ProcessZToolData (SPIMgr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E47B - 0000E47B (0x1 bytes), align: 0
  Segment part 16.            Intra module refs:   MT_ProcessSerialCommand
                                                   MT_TaskInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           debugThreshold          0000E47B 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E47C - 0000E47C (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   MT_ProcessSerialCommand
                                                   MT_TaskInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           debugCompId             0000E47C 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E47D - 0000E47E (0x2 bytes), align: 0
  Segment part 18.            Intra module refs:   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           save_cmd                0000E47D 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DAFF - 0001DB1B (0x1d bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_TaskInit             0001DAFF        osalAddTasks (OSAL_SampleApp)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DB1C - 0001DB33 (0x18 bytes), align: 0
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_IndReset             0001DB1C        InitBoard (OnBoard)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DB34 - 0001DB86 (0x53 bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ProcessEvent         0001DB34        osalAddTasks (OSAL_SampleApp)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DB87 - 0001DC09 (0x83 bytes), align: 0
  Segment part 33.            Intra module refs:   MT_BuildAndSendZToolResponse
                                                   MT_ProcessDebugMsg
                                                   MT_ProcessDebugStr
                                                   MT_SendSPIRespMsg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_BuildSPIMsg          0001DB87 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000001B ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DC0A - 0001DC74 (0x6b bytes), align: 0
  Segment part 34.            Intra module refs:   ?Subroutine15
                                                   MTProcessAppRspMsg
                                                   MT_ProcessGetDeviceInfo
                                                   MT_ProcessGetNV
                                                   MT_ProcessGetNvInfo
                                                   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_BuildAndSendZToolResponse
                                   0001DC0A 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000025 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DC75 - 0001DC7C (0x8 bytes), align: 0
  Segment part 35.            Intra module refs:   MTProcessAppMsg
                                                   MT_BuildAndSendZToolCB
                                                   MT_BuildAndSendZToolResponse
                                                   MT_ProcessGetNV
                                                   MT_ProcessGetNvInfo
                                                   MT_ProcessSerialCommand
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine17           0001DC75 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DC7D - 0001DC84 (0x8 bytes), align: 0
  Segment part 36.            Intra module refs:   MT_BuildAndSendZToolResponse
                                                   MT_BuildSPIMsg
                                                   MT_ProcessSerialCommand
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            0001DC7D 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DC85 - 0001DD15 (0x91 bytes), align: 0
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_BuildAndSendZToolCB
                                   0001DC85        zdo_MTCB_BindRspCB (MT_ZDO)
                                                   zdo_MTCB_MatchActiveEPRspCB (MT_ZDO)
                                                   zdo_MTCB_NodeDescRspCB (MT_ZDO)
                                                   zdo_MTCB_NwkIEEEAddrRspCB (MT_ZDO)
                                                   zdo_MTCB_PowerDescRspCB (MT_ZDO)
                                                   zdo_MTCB_ServerDiscRspCB (MT_ZDO)
                                                   zdo_MTCB_SimpleDescRspCB (MT_ZDO)
                                                   zdo_MTCB_UserDescRspCB (MT_ZDO)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000013 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DD16 - 0001DDD6 (0xc1 bytes), align: 0
  Segment part 38.            Intra module refs:   MT_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ProcessCommand       0001DD16 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000A ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DDD7 - 0001DF08 (0x132 bytes), align: 0
  Segment part 39.            Intra module refs:   MT_ProcessCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ProcessDebugMsg      0001DDD7 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000E ( 0000001B )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DF09 - 0001DF12 (0xa bytes), align: 0
  Segment part 40.            Intra module refs:   MT_BuildSPIMsg
                                                   MT_ProcessCommand
                                                   MT_ProcessDebugMsg
                                                   MT_ProcessGetDeviceInfo
                                                   MT_SendSPIRespMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine16           0001DF09 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DF13 - 0001DF1D (0xb bytes), align: 0
  Segment part 41.            Intra module refs:   MT_BuildAndSendZToolCB
                                                   MT_ProcessDebugMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           0001DF13 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DF1E - 0001DF31 (0x14 bytes), align: 0
  Segment part 42.            Intra module refs:   MT_ProcessDebugMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0001DF1E 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DF32 - 0001DFAE (0x7d bytes), align: 0
  Segment part 43.            Intra module refs:   MT_ProcessCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ProcessDebugStr      0001DF32 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000E ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DFAF - 0001DFB3 (0x5 bytes), align: 0
  Segment part 44.            Intra module refs:   MT_ProcessDebugStr
                                                   MT_ReverseBytes
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine18           0001DFAF 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DFB4 - 0001DFC4 (0x11 bytes), align: 0
  Segment part 45.            Intra module refs:   MT_ProcessDebugMsg
                                                   MT_ProcessDebugStr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            0001DFB4 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DFC5 - 0001E004 (0x40 bytes), align: 0
  Segment part 46.            Intra module refs:   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ProcessSetNV         0001DFC5 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000023 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E005 - 0001E01F (0x1b bytes), align: 0
  Segment part 47.            Intra module refs:   MTProcessAppRspMsg
                                                   MT_IndReset
                                                   MT_ProcessEvent
                                                   MT_ProcessSetNV
                                                   MT_SendErrorNotification
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine15           0001E005 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E020 - 0001E0C7 (0xa8 bytes), align: 0
  Segment part 48.            Intra module refs:   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ProcessGetNV         0001E020 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000023 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E0C8 - 0001E2DA (0x213 bytes), align: 0
  Segment part 49.            Intra module refs:   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ProcessGetNvInfo     0001E0C8 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000023 ( 0000001A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E2DB - 0001E3F8 (0x11e bytes), align: 0
  Segment part 50.            Intra module refs:   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ProcessGetDeviceInfo
                                   0001E2DB 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000023 ( 00000013 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E3F9 - 0001E405 (0xd bytes), align: 0
  Segment part 51.            Intra module refs:   MT_ProcessGetDeviceInfo
                                                   MT_ProcessGetNvInfo
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           0001E3F9 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E406 - 0001E415 (0x10 bytes), align: 0
  Segment part 52.            Intra module refs:   MT_ProcessGetDeviceInfo
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001E406 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E416 - 0001E95D (0x548 bytes), align: 0
  Segment part 53.            Intra module refs:   MT_ProcessCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ProcessSerialCommand
                                   0001E416 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000E ( 00000027 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E95E - 0001E963 (0x6 bytes), align: 0
  Segment part 54.            Intra module refs:   MTProcessAppMsg
                                                   MT_ProcessCommand
                                                   MT_ProcessSerialCommand
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            0001E95E 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E964 - 0001E96C (0x9 bytes), align: 0
  Segment part 55.            Intra module refs:   MT_ProcessSerialCommand
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0001E964 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E96D - 0001E97C (0x10 bytes), align: 0
  Segment part 56.            Intra module refs:   ?Subroutine5
                                                   MT_ProcessSerialCommand
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           0001E96D 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E97D - 0001E9F5 (0x79 bytes), align: 0
  Segment part 57.            Intra module refs:   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MTProcessLedControl     0001E97D 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000023 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E9F6 - 0001EAC7 (0xd2 bytes), align: 0
  Segment part 58.            Intra module refs:   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MTProcessAppMsg         0001E9F6 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000023 ( 00000015 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EAC8 - 0001EAD0 (0x9 bytes), align: 0
  Segment part 59.            Intra module refs:   MTProcessAppMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            0001EAC8 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EAD1 - 0001EAD9 (0x9 bytes), align: 0
  Segment part 60.            Intra module refs:   MTProcessAppMsg
                                                   MT_ProcessGetNvInfo
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0001EAD1 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EADA - 0001EAE2 (0x9 bytes), align: 0
  Segment part 61.            Intra module refs:   MTProcessAppMsg
                                                   MT_ProcessDebugMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0001EADA 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EAE3 - 0001EB07 (0x25 bytes), align: 0
  Segment part 62.            Intra module refs:   MT_ProcessCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MTProcessAppRspMsg      0001EAE3 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000E ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EB08 - 0001EB2A (0x23 bytes), align: 0
  Segment part 63.            Intra module refs:   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_RAMRead              0001EB08 
               stack 1 = 00000000 ( 00000003 )
               stack 2 = 00000023 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EB2B - 0001EB31 (0x7 bytes), align: 0
  Segment part 64.            Intra module refs:   MTProcessLedControl
                                                   MT_RAMRead
                                                   MT_RAMWrite
                                                   MT_TaskInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine14           0001EB2B 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EB32 - 0001EB4C (0x1b bytes), align: 0
  Segment part 65.            Intra module refs:   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_RAMWrite             0001EB32 
               stack 1 = 00000000 ( 00000003 )
               stack 2 = 00000023 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EB4D - 0001EB78 (0x2c bytes), align: 0
  Segment part 67.            Intra module refs:   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_Reset                0001EB4D 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000023 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EB79 - 0001EB90 (0x18 bytes), align: 0
  Segment part 68.            Intra module refs:   MT_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_SendErrorNotification
                                   0001EB79 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000A ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EB91 - 0001EBA0 (0x10 bytes), align: 0
  Segment part 69.            Intra module refs:   MT_IndReset
                                                   MT_SendErrorNotification
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0001EB91 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EBA1 - 0001EBE8 (0x48 bytes), align: 0
  Segment part 70.            Intra module refs:   MT_ProcessGetDeviceInfo
                                                   MT_ProcessGetNvInfo
                                                   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ReverseBytes         0001EBA1        ?Subroutine4 (MT_ZDO)
                                                   MT_ZdoCommandProcessing (MT_ZDO)
                                                   zdo_MT_CopyRevExtAddr (MT_ZDO)
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000023 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EBE9 - 0001EBF8 (0x10 bytes), align: 0
  Segment part 71.            Intra module refs:   ?Subroutine1
                                                   MT_ProcessDebugMsg
                                                   MT_ReverseBytes
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine12           0001EBE9 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EBF9 - 0001EC78 (0x80 bytes), align: 0
  Segment part 72.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_SendSPIRespMsg       0001EBF9        MT_ZdoCommandProcessing (MT_ZDO)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000011 )
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001672 - 00001681 (0x10 bytes), align: 0
  Segment part 10.            Intra module refs:   Segment part 9
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001682 - 00001691 (0x10 bytes), align: 0
  Segment part 12.            Intra module refs:   Segment part 11
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001692 - 00001695 (0x4 bytes), align: 0
  Segment part 14.            Intra module refs:   MTVersionString
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001696 - 00001699 (0x4 bytes), align: 0
  Segment part 23.            Intra module refs:   __Constant_ffffffff
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000169A - 0000169D (0x4 bytes), align: 0
  Segment part 25.            Intra module refs:   __Constant_0
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000169E - 000016A1 (0x4 bytes), align: 0
  Segment part 27.            Intra module refs:   __Constant_3e8
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000016A2 - 000016A5 (0x4 bytes), align: 0
  Segment part 29.            Intra module refs:   __Constant_53544159
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A8 - 000000A8 (0x1 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN0                 000000A8 

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\MT_AF.r51
    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\MT_NWK.r51
    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\MT_ZDO.r51
  PROGRAM MODULE, NAME : MT_ZDO

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E47F - 0000E482 (0x4 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _zdoCallbackSub         0000E47F        ?Subroutine6 (ZDApp)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   ZDApp_BindRsp (ZDApp)
                                                   ZDApp_EndDeviceBindRsp (ZDApp)
                                                   ZDApp_IEEEAddrRspCB (ZDApp)
                                                   ZDApp_MatchDescRspCB (ZDApp)
                                                   ZDApp_NwkAddrRspCB (ZDApp)
                                                   ZDApp_ServerDiscRspCB (ZDApp)
                                                   ZDApp_SimpleDescRspCB (ZDApp)
                                                   ZDApp_UnbindRsp (ZDApp)
                                                   ZDApp_UserDescRspCB (ZDApp)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028000 - 0002848F (0x490 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ZdoCommandProcessing
                                   00028000        MT_ProcessSerialCommand (MTEL)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000007C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028490 - 00028498 (0x9 bytes), align: 0
  Segment part 8.             Intra module refs:   MT_ZdoCommandProcessing
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine25           00028490 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028499 - 0002849F (0x7 bytes), align: 0
  Segment part 9.             Intra module refs:   ?Subroutine25
                                                   MT_ZdoCommandProcessing
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine47           00028499 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000284A0 - 000284A7 (0x8 bytes), align: 0
  Segment part 10.            Intra module refs:   ?Subroutine47
                                                   ?Subroutine52
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine58           000284A0 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000284A8 - 000284B3 (0xc bytes), align: 0
  Segment part 11.            Intra module refs:   MT_ZdoCommandProcessing
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine24           000284A8 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000284B4 - 000284BF (0xc bytes), align: 0
  Segment part 12.            Intra module refs:   MT_ZdoCommandProcessing
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine22           000284B4 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000284C0 - 000284C3 (0x4 bytes), align: 0
  Segment part 13.            Intra module refs:   ?Subroutine21
                                                   ?Subroutine22
                                                   ?Subroutine6
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine45           000284C0 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000284C4 - 000284C7 (0x4 bytes), align: 0
  Segment part 14.            Intra module refs:   ?Subroutine44
                                                   ?Subroutine45
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine54           000284C4 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000284C8 - 000284CE (0x7 bytes), align: 0
  Segment part 15.            Intra module refs:   ?Subroutine50
                                                   ?Subroutine54
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine60           000284C8 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000284CF - 000284E5 (0x17 bytes), align: 0
  Segment part 16.            Intra module refs:   MT_ZdoCommandProcessing
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine21           000284CF 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000284E6 - 000284F0 (0xb bytes), align: 0
  Segment part 17.            Intra module refs:   ?Subroutine21
                                                   MT_ZdoCommandProcessing
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine46           000284E6 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000284F1 - 000284F9 (0x9 bytes), align: 0
  Segment part 18.            Intra module refs:   MT_ZdoCommandProcessing
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine18           000284F1 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000284FA - 00028501 (0x8 bytes), align: 0
  Segment part 19.            Intra module refs:   ?Subroutine18
                                                   ?Subroutine37
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine59           000284FA 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028502 - 00028514 (0x13 bytes), align: 0
  Segment part 20.            Intra module refs:   MT_ZdoCommandProcessing
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine15           00028502 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028515 - 00028520 (0xc bytes), align: 0
  Segment part 21.            Intra module refs:   MT_ZdoCommandProcessing
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine14           00028515 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028521 - 00028535 (0x15 bytes), align: 0
  Segment part 22.            Intra module refs:   MT_ZdoCommandProcessing
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           00028521 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028536 - 00028544 (0xf bytes), align: 0
  Segment part 23.            Intra module refs:   MT_ZdoCommandProcessing
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           00028536 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028545 - 0002854A (0x6 bytes), align: 0
  Segment part 24.            Intra module refs:   MT_ZdoCommandProcessing
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            00028545 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002854B - 0002856F (0x25 bytes), align: 0
  Segment part 25.            Intra module refs:   ?Subroutine7
                                                   MT_ZdoCommandProcessing
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine39           0002854B 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028570 - 0002858F (0x20 bytes), align: 0
  Segment part 26.            Intra module refs:   MT_ZdoCommandProcessing
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            00028570 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028590 - 0002859D (0xe bytes), align: 0
  Segment part 27.            Intra module refs:   MT_ZdoCommandProcessing
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            00028590 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002859E - 000285BB (0x1e bytes), align: 0
  Segment part 28.            Intra module refs:   MT_ZdoCommandProcessing
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0002859E 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000285BC - 000285C2 (0x7 bytes), align: 0
  Segment part 29.            Intra module refs:   ?Subroutine24
                                                   ?Subroutine3
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine50           000285BC 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000285C3 - 000285C8 (0x6 bytes), align: 0
  Segment part 30.            Intra module refs:   ?Subroutine10
                                                   ?Subroutine3
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine41           000285C3 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000285C9 - 000285CE (0x6 bytes), align: 0
  Segment part 31.            Intra module refs:   ?Subroutine41
                                                   ?Subroutine6
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine52           000285C9 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000285CF - 000285D2 (0x4 bytes), align: 0
  Segment part 32.            Intra module refs:   MT_ZdoCommandProcessing
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            000285CF 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000285D3 - 000285E0 (0xe bytes), align: 0
  Segment part 33.            Intra module refs:   ?Subroutine1
                                                   ?Subroutine2
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine37           000285D3 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000285E1 - 000285E9 (0x9 bytes), align: 0
  Segment part 34.            Intra module refs:   MT_ZdoCommandProcessing
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            000285E1 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000285EA - 000285FC (0x13 bytes), align: 0
  Segment part 35.            Intra module refs:   ?Subroutine1
                                                   ?Subroutine3
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine44           000285EA 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000285FD - 0002860C (0x10 bytes), align: 0
  Segment part 36.            Intra module refs:   MT_ZdoCommandProcessing
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            000285FD 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002860D - 00028610 (0x4 bytes), align: 0
  Segment part 37.            Intra module refs:   ?Subroutine0
                                                   ?Subroutine4
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine38           0002860D 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028611 - 00028631 (0x21 bytes), align: 0
  Segment part 38.            Intra module refs:   ?Subroutine37
                                                   ?Subroutine38
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine51           00028611 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028632 - 00028641 (0x10 bytes), align: 0
  Segment part 39.            Intra module refs:   ?Subroutine51
                                                   MT_ZdoCommandProcessing
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine56           00028632 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028642 - 0002865D (0x1c bytes), align: 0
  Segment part 40.            Intra module refs:   zdo_MTCB_NwkIEEEAddrRspCB
                                                   zdo_MT_MakeExtAddr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zdo_MT_CopyRevExtAddr   00028642 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000013 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002865E - 00028666 (0x9 bytes), align: 0
  Segment part 41.            Intra module refs:   zdo_MT_CopyRevExtAddr
                                                   zdo_MT_MakeExtAddr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine63           0002865E 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028667 - 00028685 (0x1f bytes), align: 0
  Segment part 42.            Intra module refs:   MT_ZdoCommandProcessing
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zdo_MT_MakeExtAddr      00028667 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000073 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028686 - 00028690 (0xb bytes), align: 0
  Segment part 43.            Intra module refs:   ?Subroutine63
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine36           00028686 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028691 - 00028825 (0x195 bytes), align: 0
  Segment part 44.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zdo_MTCB_NwkIEEEAddrRspCB
                                   00028691        ZDApp_IEEEAddrRspCB (ZDApp)
                                                   ZDApp_NwkAddrRspCB (ZDApp)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000008 ( 00000013 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028826 - 00028826 (0x1 bytes), align: 0
  Segment part 45.            Intra module refs:   zdo_MTCB_NwkIEEEAddrRspCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine29           00028826 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028827 - 0002882C (0x6 bytes), align: 0
  Segment part 46.            Intra module refs:   ?Subroutine17
                                                   ?Subroutine29
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine61           00028827 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002882D - 00028835 (0x9 bytes), align: 0
  Segment part 47.            Intra module refs:   zdo_MTCB_NwkIEEEAddrRspCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine19           0002882D 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028836 - 0002883A (0x5 bytes), align: 0
  Segment part 48.            Intra module refs:   zdo_MTCB_NwkIEEEAddrRspCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine17           00028836 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002883B - 00028842 (0x8 bytes), align: 0
  Segment part 49.            Intra module refs:   zdo_MTCB_NwkIEEEAddrRspCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            0002883B 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028843 - 00028849 (0x7 bytes), align: 0
  Segment part 50.            Intra module refs:   ?Subroutine17
                                                   ?Subroutine9
                                                   zdo_MTCB_MatchActiveEPRspCB
                                                   zdo_MTCB_NwkIEEEAddrRspCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine42           00028843 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002884A - 00028959 (0x110 bytes), align: 0
  Segment part 51.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zdo_MTCB_NodeDescRspCB
                                   0002884A        ZDApp_NodeDescRspCB (ZDApp)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000002 ( 0000001B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002895A - 00028961 (0x8 bytes), align: 0
  Segment part 52.            Intra module refs:   zdo_MTCB_BindRspCB
                                                   zdo_MTCB_NodeDescRspCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine64           0002895A 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028962 - 00028965 (0x4 bytes), align: 0
  Segment part 53.            Intra module refs:   zdo_MTCB_NodeDescRspCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine32           00028962 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028966 - 0002896D (0x8 bytes), align: 0
  Segment part 54.            Intra module refs:   ?Subroutine30
                                                   ?Subroutine32
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine49           00028966 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002896E - 00028973 (0x6 bytes), align: 0
  Segment part 55.            Intra module refs:   zdo_MTCB_NodeDescRspCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine30           0002896E 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028974 - 00028A04 (0x91 bytes), align: 0
  Segment part 56.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zdo_MTCB_PowerDescRspCB
                                   00028974        ZDApp_PowerDescRspCB (ZDApp)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000002 ( 00000013 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028A05 - 00028A09 (0x5 bytes), align: 0
  Segment part 57.            Intra module refs:   zdo_MTCB_NodeDescRspCB
                                                   zdo_MTCB_PowerDescRspCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine33           00028A05 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028A0A - 00028A0A (0x1 bytes), align: 0
  Segment part 58.            Intra module refs:   ?Subroutine26
                                                   ?Subroutine33
                                                   ?Subroutine49
                                                   zdo_MTCB_PowerDescRspCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine55           00028A0A 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028A0B - 00028A0F (0x5 bytes), align: 0
  Segment part 59.            Intra module refs:   ?Subroutine23
                                                   ?Subroutine55
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine62           00028A0B 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028A10 - 00028A16 (0x7 bytes), align: 0
  Segment part 60.            Intra module refs:   zdo_MTCB_NodeDescRspCB
                                                   zdo_MTCB_PowerDescRspCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine31           00028A10 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028A17 - 00028A1A (0x4 bytes), align: 0
  Segment part 61.            Intra module refs:   zdo_MTCB_NodeDescRspCB
                                                   zdo_MTCB_PowerDescRspCB
                                                   zdo_MTCB_ServerDiscRspCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine28           00028A17 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028A1B - 00028A26 (0xc bytes), align: 0
  Segment part 62.            Intra module refs:   ?Subroutine27
                                                   ?Subroutine28
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine48           00028A1B 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028A27 - 00028A2C (0x6 bytes), align: 0
  Segment part 63.            Intra module refs:   zdo_MTCB_NodeDescRspCB
                                                   zdo_MTCB_PowerDescRspCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine26           00028A27 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028A2D - 00028A40 (0x14 bytes), align: 0
  Segment part 64.            Intra module refs:   zdo_MTCB_NodeDescRspCB
                                                   zdo_MTCB_PowerDescRspCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           00028A2D 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028A41 - 00028B79 (0x139 bytes), align: 0
  Segment part 65.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zdo_MTCB_SimpleDescRspCB
                                   00028A41        ZDApp_SimpleDescRspCB (ZDApp)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000003 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028B7A - 00028B81 (0x8 bytes), align: 0
  Segment part 66.            Intra module refs:   MT_ZdoCommandProcessing
                                                   zdo_MTCB_NwkIEEEAddrRspCB
                                                   zdo_MTCB_SimpleDescRspCB
                                                   zdo_MTCB_UserDescRspCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine57           00028B7A 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028B82 - 00028B8D (0xc bytes), align: 0
  Segment part 67.            Intra module refs:   zdo_MTCB_SimpleDescRspCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine35           00028B82 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028B8E - 00028B95 (0x8 bytes), align: 0
  Segment part 68.            Intra module refs:   zdo_MTCB_NodeDescRspCB
                                                   zdo_MTCB_SimpleDescRspCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine23           00028B8E 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028B96 - 00028BA6 (0x11 bytes), align: 0
  Segment part 69.            Intra module refs:   zdo_MTCB_SimpleDescRspCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine20           00028B96 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028BA7 - 00028BB1 (0xb bytes), align: 0
  Segment part 70.            Intra module refs:   zdo_MTCB_SimpleDescRspCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine16           00028BA7 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028BB2 - 00028BB8 (0x7 bytes), align: 0
  Segment part 71.            Intra module refs:   ?Subroutine16
                                                   ?Subroutine8
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine40           00028BB2 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028BB9 - 00028BC5 (0xd bytes), align: 0
  Segment part 72.            Intra module refs:   zdo_MTCB_SimpleDescRspCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            00028BB9 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028BC6 - 00028BF7 (0x32 bytes), align: 0
  Segment part 73.            Intra module refs:   zdo_MTCB_SimpleDescRspCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            00028BC6 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028BF8 - 00028BFB (0x4 bytes), align: 0
  Segment part 74.            Intra module refs:   ?Subroutine5
                                                   zdo_MTCB_SimpleDescRspCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine43           00028BF8 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028BFC - 00028C04 (0x9 bytes), align: 0
  Segment part 75.            Intra module refs:   ?Subroutine40
                                                   ?Subroutine43
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine53           00028BFC 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028C05 - 00028CC2 (0xbe bytes), align: 0
  Segment part 76.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zdo_MTCB_MatchActiveEPRspCB
                                   00028C05        ZDApp_ActiveEPRspCB (ZDApp)
                                                   ZDApp_MatchDescRspCB (ZDApp)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000005 ( 00000022 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028CC3 - 00028CCA (0x8 bytes), align: 0
  Segment part 77.            Intra module refs:   zdo_MTCB_MatchActiveEPRspCB
                                                   zdo_MTCB_PowerDescRspCB
                                                   zdo_MTCB_SimpleDescRspCB
                                                   zdo_MTCB_UserDescRspCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine12           00028CC3 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028CCB - 00028D0A (0x40 bytes), align: 0
  Segment part 78.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zdo_MTCB_BindRspCB      00028CCB        ZDApp_BindRsp (ZDApp)
                                                   ZDApp_EndDeviceBindRsp (ZDApp)
                                                   ZDApp_UnbindRsp (ZDApp)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028D0B - 00028DA3 (0x99 bytes), align: 0
  Segment part 79.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zdo_MTCB_UserDescRspCB
                                   00028D0B        ZDApp_UserDescRspCB (ZDApp)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000004 ( 00000013 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028DA4 - 00028DAC (0x9 bytes), align: 0
  Segment part 80.            Intra module refs:   zdo_MTCB_SimpleDescRspCB
                                                   zdo_MTCB_UserDescRspCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine34           00028DA4 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028DAD - 00028DB6 (0xa bytes), align: 0
  Segment part 82.            Intra module refs:   zdo_MTCB_ServerDiscRspCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine65           00028DAD 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028DB7 - 00028DBC (0x6 bytes), align: 0
  Segment part 83.            Intra module refs:   zdo_MTCB_BindRspCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine27           00028DB7 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028DBD - 00028DFD (0x41 bytes), align: 0
  Segment part 84.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zdo_MTCB_ServerDiscRspCB
                                   00028DBD        ZDApp_ServerDiscRspCB (ZDApp)
               calls direct
               stack 1 = 00000000 ( 00000003 )
               stack 2 = 00000001 ( 00000005 )

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\OSAL.r51
  PROGRAM MODULE, NAME : OSAL

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E483 - 0000E484 (0x2 bytes), align: 0
  Segment part 12.            Intra module refs:   osal_init_system
                                                   osal_msg_receive
                                                   osal_msg_send
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_qHead              0000E483 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E8A8 - 0002E8B3 (0xc bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_strlen             0002E8A8        MT_ProcessSerialCommand (MTEL)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E8B4 - 0002E8F4 (0x41 bytes), align: 0
  Segment part 18.            Intra module refs:   osal_cpyExtAddr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_memcpy             0002E8B4        ?Subroutine21 (ZDApp)
                                                   ?Subroutine23 (ZDObject)
                                                   ?Subroutine6 (zmac_cb)
                                                   APSDE_DataIndication (APSMEDE_CB)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MAC_MlmeGetReq (mac_pib)
                                                   MAC_MlmeSetReq (mac_pib)
                                                   MTProcessAppMsg (MTEL)
                                                   MT_BuildAndSendZToolCB (MTEL)
                                                   MT_BuildSPIMsg (MTEL)
                                                   MT_ZdoCommandProcessing (MT_ZDO)
                                                   NLDE_BuildMsg (nwk_util)
                                                   NLME_GetRequest (NLMEDE)
                                                   SampleApp_Init (SampleApp)
                                                   Segment part 120 (APSMEDE)
                                                   Segment part 29 (APS)
                                                   Segment part 31 (APSMEDE_CB)
                                                   Segment part 36 (mac_main)
                                                   ZDApp_AutoFindDestinationEx (ZDApp)
                                                   ZDApp_SendMsg (ZDApp)
                                                   ZDO_CopyMatchInfo (ZDObject)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_ProcessUserDescSet (ZDObject)
                                                   ZDP_EPRsp (ZDProfile)
                                                   ZDP_UserDescRsp (ZDProfile)
                                                   ZDP_UserDescSet (ZDProfile)
                                                   ZMacDataReq (zmac)
                                                   afBuildMSGIncoming (AF)
                                                   aps_AddGroup (aps_groups)
                                                   aps_GroupsWriteNV (aps_groups)
                                                   macBuildBeacon (mac_coord)
                                                   macScanRxBeacon (mac_scan)
                                                   macStartBegin (mac_coord)
                                                   nwk_BeaconFromNative (nwk)
                                                   nwk_BeaconToNative (nwk)
                                                   nwk_data_ind_processing (nwk)
                                                   sAddrExtCpy (saddr)
                                                   zdo_MTCB_UserDescRspCB (MT_ZDO)
                                                   zgInit (ZGlobals)
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000E ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E8F5 - 0002E8F9 (0x5 bytes), align: 0
  Segment part 19.            Intra module refs:   osal_cpyExtAddr
                                                   osal_memcpy
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine20           0002E8F5 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E8FA - 0002E91D (0x24 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_cpyExtAddr         0002E8FA        ?Subroutine26 (ZDApp)
                                                   AddrMgrExtAddrSet (AddrMgr)
                                                   MT_ZdoCommandProcessing (MT_ZDO)
                                                   NIB_init (nwk_globals)
                                                   NLME_LeaveCmdCnf (nwk_util)
                                                   NLME_LeaveCmdProcess (nwk_util)
                                                   Segment part 111 (nwk)
                                                   Segment part 34 (nwk_util)
                                                   ZDMatchSendState (ZDObject)
                                                   ZDO_NetworkDiscoveryConfirmCB (ZDApp)
                                                   ZDO_ProcessEndDeviceBindReq (ZDObject)
                                                   ZDP_BindUnbindReq (ZDProfile)
                                                   ZDP_EndDeviceBindReq (ZDProfile)
                                                   ZDP_NwkAddrReq (ZDProfile)
                                                   ZMacGetReq (zmac)
                                                   ZMacSetReq (zmac)
                                                   nwk_beacon_notify_ind_processing (nwk)
                                                   nwk_start_coord (nwk)
                                                   zdo_MT_CopyRevExtAddr (MT_ZDO)
                                                   zdpProcessAddrReq (ZDProfile)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E91E - 0002E93F (0x22 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_memset             0002E91E        AddrMgrExtAddrSet (AddrMgr)
                                                   AddrMgrInit (AddrMgr)
                                                   AssocInit (AssocList)
                                                   AssocRemove (AssocList)
                                                   HalUARTOpen (hal_uart)
                                                   MT_ProcessGetDeviceInfo (MTEL)
                                                   MT_ProcessGetNV (MTEL)
                                                   MT_ProcessGetNvInfo (MTEL)
                                                   NIB_init (nwk_globals)
                                                   NLDE_DataReqAlloc (NLMEDE)
                                                   NLME_LeaveCmdCnf (nwk_util)
                                                   NLME_LeaveCmdProcess (nwk_util)
                                                   ZDAppSetupProtoVersion (ZDApp)
                                                   ZDApp_InitUserDesc (ZDApp)
                                                   ZDO_MatchEndDeviceBind (ZDObject)
                                                   ZDP_UserDescSet (ZDProfile)
                                                   ZMacScanReq (zmac)
                                                   macSecCpy (mac_mgmt)
                                                   nwk_beacon_notify_ind_processing (nwk)
                                                   pollDMA (hal_uart)
                                                   zdo_MTCB_UserDescRspCB (MT_ZDO)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E940 - 0002E944 (0x5 bytes), align: 0
  Segment part 23.            Intra module refs:   osal_msg_extract
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine23           0002E940 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E945 - 0002E9C4 (0x80 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_build_uint32       0002E945        nwk_data_ind_processing (nwk)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E9C5 - 0002E9C9 (0x5 bytes), align: 0
  Segment part 25.            Intra module refs:   osal_build_uint32
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine24           0002E9C5 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E9CA - 0002E9D8 (0xf bytes), align: 0
  Segment part 26.            Intra module refs:   osal_build_uint32
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            0002E9CA 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E9D9 - 0002E9DE (0x6 bytes), align: 0
  Segment part 27.            Intra module refs:   osal_build_uint32
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0002E9D9 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E9DF - 0002E9FA (0x1c bytes), align: 0
  Segment part 28.            Intra module refs:   ?Subroutine1
                                                   osal_build_uint32
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine15           0002E9DF 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E9FB - 0002EA00 (0x6 bytes), align: 0
  Segment part 34.            Intra module refs:   osal_msg_dequeue
                                                   osal_msg_extract
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine16           0002E9FB 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EA01 - 0002EA3F (0x3f bytes), align: 0
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_ExtAddrEqual       0002EA01        APSME_LookupNwkAddr (APSMEDE)
                                                   AddrMgrEntryLookupExt (AddrMgr)
                                                   AssocGetWithAddress (AssocList)
                                                   NLME_LeaveCmdProcess (nwk_util)
                                                   NLME_RejoinRspCmdProcess (nwk_util)
                                                   ZDO_LeaveCnf (ZDApp)
                                                   ZDP_NwkAddrReq (ZDProfile)
                                                   zdpProcessAddrReq (ZDProfile)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000009 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EA40 - 0002EA4B (0xc bytes), align: 0
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_rand               0002EA40        RTG_BcastTimeout (rtg)
                                                   SampleApp_ProcessEvent (SampleApp)
                                                   ZDOInitDevice (ZDApp)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EA4C - 0002EAA6 (0x5b bytes), align: 0
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_allocate       0002EA4C        ?Subroutine10 (MTEL)
                                                   ?Subroutine24 (ZDApp)
                                                   APSDE_DataIndication (APSMEDE_CB)
                                                   APS_CmdInd (APS)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MAC_McpsDataAlloc (mac_data)
                                                   MTProcessAppMsg (MTEL)
                                                   NLME_RejoinReqCmdProcess (nwk_util)
                                                   NLME_RejoinRspCmdProcess (nwk_util)
                                                   OnBoard_SendKeys (OnBoard)
                                                   SPIMgr_ProcessZToolData (SPIMgr)
                                                   ZDApp_MatchDescRspCB (ZDApp)
                                                   ZDApp_SendMsg (ZDApp)
                                                   ZDApp_SendNewDstAddr (ZDApp)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_UpdateNwkStatus (ZDObject)
                                                   afBuildMSGIncoming (AF)
                                                   afDataConfirm (AF)
                                                   macAllocTxBuffer (mac_data)
                                                   macBuildBeacon (mac_coord)
                                                   macDataRxMemAlloc (mac_data)
                                                   macSendDataMsg (mac_main)
                                                   macSendMsg (mac_main)
                                                   nwkBuildDataCnf (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EAA7 - 0002EAD4 (0x2e bytes), align: 0
  Segment part 39.            Intra module refs:   osal_msg_send
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_deallocate     0002EAA7        APSDE_DataIndication (APSMEDE_CB)
                                                   APS_event_loop (APS)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MT_ProcessCommand (MTEL)
                                                   MT_ProcessDebugMsg (MTEL)
                                                   SPIMgr_ProcessZToolData (SPIMgr)
                                                   SampleApp_ProcessEvent (SampleApp)
                                                   ZDApp_event_loop (ZDApp)
                                                   macApiPending (mac_mgmt)
                                                   macDataReset (mac_data)
                                                   macDataRxMemFree (mac_data)
                                                   macEventLoop (mac_main)
                                                   macMainReset (mac_main)
                                                   macRxCompleteCallback (mac_data)
                                                   nwk_event_loop (nwk)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 0000000C ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EAD5 - 0002EADE (0xa bytes), align: 0
  Segment part 40.            Intra module refs:   osal_init_system
                                                   osal_msg_deallocate
                                                   osal_rand
                                                   osal_self
                                                   osal_strlen
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine19           0002EAD5 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EADF - 0002EB5E (0x80 bytes), align: 0
  Segment part 41.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_send           0002EADF        ?Subroutine18 (ZDApp)
                                                   ?Subroutine28 (ZDObject)
                                                   ?Subroutine8 (AF)
                                                   APS_CmdInd (APS)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MTProcessAppMsg (MTEL)
                                                   MT_BuildAndSendZToolCB (MTEL)
                                                   NLME_RejoinReqCmdProcess (nwk_util)
                                                   NLME_RejoinRspCmdProcess (nwk_util)
                                                   OnBoard_SendKeys (OnBoard)
                                                   SPIMgr_ProcessZToolData (SPIMgr)
                                                   Segment part 14 (APSMEDE_CB)
                                                   Segment part 31 (mac_data)
                                                   ZDApp_SendMsg (ZDApp)
                                                   ZDApp_SendNewDstAddr (ZDApp)
                                                   macSendDataMsg (mac_main)
                                                   macSendMsg (mac_main)
                                                   nwkBuildDataCnf (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EB5F - 0002EB63 (0x5 bytes), align: 0
  Segment part 42.            Intra module refs:   osal_msg_receive
                                                   osal_msg_send
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine25           0002EB5F 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EB64 - 0002EBD5 (0x72 bytes), align: 0
  Segment part 43.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_receive        0002EB64        APS_event_loop (APS)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   MT_ProcessEvent (MTEL)
                                                   SampleApp_ProcessEvent (SampleApp)
                                                   ZDApp_event_loop (ZDApp)
                                                   macEventLoop (mac_main)
                                                   macMainReset (mac_main)
                                                   nwk_event_loop (nwk)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EBD6 - 0002EBDD (0x8 bytes), align: 0
  Segment part 44.            Intra module refs:   osal_memcpy
                                                   osal_msg_receive
                                                   osal_start_system
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0002EBD6 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EBDE - 0002EC0D (0x30 bytes), align: 0
  Segment part 45.            Intra module refs:   osal_msg_send
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_enqueue        0002EBDE        macIndirectExpire (mac_coord)
                                                   macRxCompleteCallback (mac_data)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000C ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EC0E - 0002EC13 (0x6 bytes), align: 0
  Segment part 46.            Intra module refs:   osal_msg_enqueue
                                                   osal_msg_push
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine22           0002EC0E 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EC14 - 0002EC1E (0xb bytes), align: 0
  Segment part 47.            Intra module refs:   osal_msg_enqueue
                                                   osal_msg_enqueue_max
                                                   osal_msg_receive
                                                   osal_msg_send
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           0002EC14 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EC1F - 0002EC78 (0x5a bytes), align: 0
  Segment part 48.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_dequeue        0002EC1F        macDataReset (mac_data)
                                                   macEventLoop (mac_main)
                                                   macIndirectExpire (mac_coord)
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EC79 - 0002EC7D (0x5 bytes), align: 0
  Segment part 49.            Intra module refs:   osal_ExtAddrEqual
                                                   osal_memset
                                                   osal_msg_allocate
                                                   osal_msg_dequeue
                                                   osal_msg_enqueue_max
                                                   osal_set_event
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine21           0002EC79 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EC7E - 0002EC87 (0xa bytes), align: 0
  Segment part 50.            Intra module refs:   osal_msg_deallocate
                                                   osal_msg_dequeue
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           0002EC7E 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EC88 - 0002ECB7 (0x30 bytes), align: 0
  Segment part 51.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_push           0002EC88        macIndirectRequeueFrame (mac_coord)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002ECB8 - 0002ECC4 (0xd bytes), align: 0
  Segment part 52.            Intra module refs:   ?Subroutine22
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           0002ECB8 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002ECC5 - 0002ECCA (0x6 bytes), align: 0
  Segment part 53.            Intra module refs:   osal_msg_enqueue
                                                   osal_msg_enqueue_max
                                                   osal_msg_extract
                                                   osal_msg_push
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0002ECC5 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002ECCB - 0002ED28 (0x5e bytes), align: 0
  Segment part 54.            Intra module refs:   osal_msg_receive
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_extract        0002ECCB        macApiPurgeReq (mac_coord)
                                                   macDataTxSend (mac_data)
                                                   macIndirectExpire (mac_coord)
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000E ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002ED29 - 0002ED32 (0xa bytes), align: 0
  Segment part 55.            Intra module refs:   osal_msg_enqueue
                                                   osal_msg_enqueue_max
                                                   osal_msg_extract
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine14           0002ED29 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002ED33 - 0002ED39 (0x7 bytes), align: 0
  Segment part 56.            Intra module refs:   osal_msg_extract
                                                   osal_msg_push
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine12           0002ED33 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002ED3A - 0002ED41 (0x8 bytes), align: 0
  Segment part 57.            Intra module refs:   ?Subroutine11
                                                   ?Subroutine12
                                                   ?Subroutine13
                                                   ?Subroutine14
                                                   osal_msg_extract
                                                   osal_msg_receive
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine18           0002ED3A 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002ED42 - 0002ED8F (0x4e bytes), align: 0
  Segment part 58.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_enqueue_max    0002ED42        macDataTxEnqueue (mac_data)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002ED90 - 0002EDCF (0x40 bytes), align: 0
  Segment part 59.            Intra module refs:   osal_msg_send
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_set_event          0002ED90        ?Subroutine9 (ZDApp)
                                                   HalLedBlink (hal_led)
                                                   NLDE_DataCnf (NLMEDE_CB)
                                                   RTG_BcastTimeout (rtg)
                                                   RTG_DataReq (rtg)
                                                   macSetEvent (mac_main)
                                                   nwkDB_Add (nwk_bufs)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
                                                   osalTimerUpdate (OSAL_Timers)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000C ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EDD0 - 0002EDDF (0x10 bytes), align: 0
  Segment part 61.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_int_enable         0002EDD0        main (ZMain)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EDE0 - 0002EDEF (0x10 bytes), align: 0
  Segment part 62.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_int_disable        0002EDE0        InitBoard (OnBoard)
                                                   ZMacInit (zmac)
                                                   main (ZMain)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EDF0 - 0002EE37 (0x48 bytes), align: 0
  Segment part 63.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_init_system        0002EDF0        main (ZMain)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EE38 - 0002EEEE (0xb7 bytes), align: 0
  Segment part 64.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_start_system       0002EE38        main (ZMain)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EEEF - 0002EEF2 (0x4 bytes), align: 0
  Segment part 65.            Intra module refs:   osal_start_system
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            0002EEEF 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EEF3 - 0002EEFD (0xb bytes), align: 0
  Segment part 66.            Intra module refs:   ?Subroutine3
                                                   ?Subroutine7
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine17           0002EEF3 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EEFE - 0002EF1B (0x1e bytes), align: 0
  Segment part 67.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_self               0002EEFE        osal_start_timer (OSAL_Timers)
                                                   osal_stop_timer (OSAL_Timers)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EF1C - 0002EF24 (0x9 bytes), align: 0
  Segment part 68.            Intra module refs:   osal_self
                                                   osal_start_system
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0002EF1C 

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\OSAL_Memory.r51
  PROGRAM MODULE, NAME : OSAL_Memory

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E485 - 0000E485 (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   osal_mem_alloc
                                                   osal_mem_free
                                                   osal_mem_init
           LOCAL                   ADDRESS         
           =====                   =======         
           ready                   0000E485 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E486 - 0000E487 (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   ?Subroutine0
                                                   osal_mem_alloc
                                                   osal_mem_free
                                                   osal_mem_init
           LOCAL                   ADDRESS         
           =====                   =======         
           ff1                     0000E486 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E488 - 0000E489 (0x2 bytes), align: 0
  Segment part 9.             Intra module refs:   osal_mem_alloc
                                                   osal_mem_init
                                                   osal_mem_kick
           LOCAL                   ADDRESS         
           =====                   =======         
           ff2                     0000E488 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E48A - 0000F489 (0x1000 bytes), align: 0
  Segment part 10.            Intra module refs:   Segment part 12
           LOCAL                   ADDRESS         
           =====                   =======         
           _theHeap                0000E48A 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FBD8 - 0000FBD9 (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   osal_mem_init
           LOCAL                   ADDRESS         
           =====                   =======         
           theHeap                 0000FBD8 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003C24E - 0003C2B5 (0x68 bytes), align: 0
  Segment part 13.            Intra module refs:   osal_mem_alloc
                                                   osal_mem_free
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_init           0003C24E        osal_init_system (OSAL)
               calls direct, is recursive
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 0000000E ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003C2B6 - 0003C2BC (0x7 bytes), align: 0
  Segment part 14.            Intra module refs:   osal_mem_init
                                                   osal_mem_kick
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0003C2B6 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003C2BD - 0003C2D1 (0x15 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_kick           0003C2BD        osal_init_system (OSAL)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003C2D2 - 0003C2DD (0xc bytes), align: 0
  Segment part 16.            Intra module refs:   osal_mem_init
                                                   osal_mem_kick
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0003C2D2 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003C2DE - 0003C3E8 (0x10b bytes), align: 0
  Segment part 17.            Intra module refs:   osal_mem_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_alloc          0003C2DE        ?Subroutine94 (ZDObject)
                                                   AddrMgrInit (AddrMgr)
                                                   AssocMakeList (AssocList)
                                                   HalUARTOpen (hal_uart)
                                                   MT_BuildAndSendZToolResponse (MTEL)
                                                   MT_ProcessDebugStr (MTEL)
                                                   MT_ProcessGetDeviceInfo (MTEL)
                                                   MT_ProcessGetNV (MTEL)
                                                   MT_ProcessGetNvInfo (MTEL)
                                                   MT_SendSPIRespMsg (MTEL)
                                                   NLDE_BuildMsg (nwk_util)
                                                   NLDE_DataReqAlloc (NLMEDE)
                                                   NLDE_FrameDataLoad (APSMEDE)
                                                   NLDE_SendMsg (nwk_util)
                                                   ZDApp_AutoFindDestinationEx (ZDApp)
                                                   ZDO_CreateAlignedUINT16List (ZDObject)
                                                   ZDO_MatchEndDeviceBind (ZDObject)
                                                   ZDO_ProcessAddrRsp (ZDObject)
                                                   ZMacScanReq (zmac)
                                                   afRegisterExtended (AF)
                                                   aps_AddGroup (aps_groups)
                                                   macStartBegin (mac_coord)
                                                   nwkDB_CreateHdr (nwk_bufs)
                                                   nwk_beacon_notify_ind_processing (nwk)
                                                   nwk_data_ind_processing (nwk)
                                                   nwk_globals_init (nwk_globals)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalTaskAdd (OSAL_Tasks)
                                                   osal_msg_allocate (OSAL)
                                                   zdo_MTCB_NwkIEEEAddrRspCB (MT_ZDO)
                                                   zdo_MTCB_SimpleDescRspCB (MT_ZDO)
                                                   zdo_MTCB_UserDescRspCB (MT_ZDO)
               calls direct, is recursive
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003C3E9 - 0003C3F3 (0xb bytes), align: 0
  Segment part 18.            Intra module refs:   ?Subroutine0
                                                   osal_mem_alloc
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0003C3E9 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003C3F4 - 0003C448 (0x55 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_free           0003C3F4        ?Subroutine21 (ZDObject)
                                                   ?Subroutine3 (AF)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MT_BuildAndSendZToolResponse (MTEL)
                                                   MT_ProcessDebugStr (MTEL)
                                                   MT_ProcessGetDeviceInfo (MTEL)
                                                   MT_ProcessGetNV (MTEL)
                                                   MT_ProcessGetNvInfo (MTEL)
                                                   MT_SendSPIRespMsg (MTEL)
                                                   NLDE_BuildMsg (nwk_util)
                                                   NLDE_DataReq (NLMEDE)
                                                   NLDE_DataReqSend (nwk_util)
                                                   NLDE_SendMsg (nwk_util)
                                                   Segment part 108 (APSMEDE)
                                                   Segment part 41 (nwk_bufs)
                                                   Segment part 68 (mac_coord)
                                                   ZDApp_SendEndDeviceBindReq (ZDApp)
                                                   ZMacReset (zmac)
                                                   aps_RemoveGroup (aps_groups)
                                                   nwkDB_DeleteRecAll (nwk_bufs)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
                                                   nwk_data_ind_processing (nwk)
                                                   osalDeleteTimer (OSAL_Timers)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_msg_deallocate (OSAL)
                                                   zdo_MTCB_NwkIEEEAddrRspCB (MT_ZDO)
                                                   zdo_MTCB_SimpleDescRspCB (MT_ZDO)
                                                   zdo_MTCB_UserDescRspCB (MT_ZDO)
                                                   zdpProcessAddrReq (ZDProfile)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000016A6 - 000016A7 (0x2 bytes), align: 0
  Segment part 12.            Intra module refs:   theHeap

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\OSAL_Nv.r51
  PROGRAM MODULE, NAME : OSAL_Nv

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000AB - 000000AB (0x1 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FWT                     000000AB 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000AC - 000000AC (0x1 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FADDRL                  000000AC 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000AD - 000000AD (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FADDRH                  000000AD 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000AE - 000000AE (0x1 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FCTL                    000000AE 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D1 - 000000D1 (0x1 bytes), align: 0
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMAIRQ                  000000D1 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D6 - 000000D6 (0x1 bytes), align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMAARM                  000000D6 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F48A - 0000F48D (0x4 bytes), align: 0
  Segment part 12.            Intra module refs:   osal_nv_init
                                                   writeWord
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FBuff                   0000F48A 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F48E - 0000F491 (0x4 bytes), align: 0
  Segment part 13.            Intra module refs:   ?Subroutine62
                                                   ?Subroutine64
                                                   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           pgOff                   0000F48E 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F492 - 0000F495 (0x4 bytes), align: 0
  Segment part 14.            Intra module refs:   ?Subroutine4
                                                   ?Subroutine63
           LOCAL                   ADDRESS         
           =====                   =======         
           pgLost                  0000F492 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F496 - 0000F496 (0x1 bytes), align: 0
  Segment part 15.            Intra module refs:   ?Subroutine7
                                                   compactPage
                                                   initItem
                                                   initItem2
                                                   initNV
                                                   osal_nv_write
                                                   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
           pgRes                   0000F496 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F497 - 0000F497 (0x1 bytes), align: 0
  Segment part 16.            Intra module refs:   findItem
                                                   initPage
                                                   osal_nv_item_len
                                                   osal_nv_read
                                                   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           findPg                  0000F497 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F498 - 0000F498 (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   compactPage
                                                   osal_nv_item_init
                                                   osal_nv_write
                                                   writeWord
           LOCAL                   ADDRESS         
           =====                   =======         
           failF                   0000F498 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019EB1 - 0001A0A3 (0x1f3 bytes), align: 0
  Segment part 20.            Intra module refs:   osal_nv_init
                                                   osal_nv_item_init
                                                   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           initNV                  00019EB1 
               calls direct
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000022 ( 0000001A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A0A4 - 0001A0AB (0x8 bytes), align: 0
  Segment part 21.            Intra module refs:   initNV
                                                   osal_nv_item_len
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine66           0001A0A4 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A0AC - 0001A0E4 (0x39 bytes), align: 0
  Segment part 22.            Intra module refs:   compactPage
                                                   initNV
                                                   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
           setPageUse              0001A0AC 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000020 ( 00000008 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A0E5 - 0001A0EB (0x7 bytes), align: 0
  Segment part 23.            Intra module refs:   osal_nv_init
                                                   setPageUse
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine67           0001A0E5 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A0EC - 0001A2AA (0x1bf bytes), align: 0
  Segment part 24.            Intra module refs:   findItem
                                                   initNV
           LOCAL                   ADDRESS         
           =====                   =======         
           initPage                0001A0EC 
               calls direct, is recursive
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000001A ( 00000019 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A2AB - 0001A4AE (0x204 bytes), align: 0
  Segment part 25.            Intra module refs:   initItem
                                                   initNV
                                                   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           compactPage             0001A2AB 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000022 ( 00000024 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A4AF - 0001A4B3 (0x5 bytes), align: 0
  Segment part 26.            Intra module refs:   compactPage
                                                   initItem
                                                   osal_nv_item_init
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine68           0001A4AF 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A4B4 - 0001A4B8 (0x5 bytes), align: 0
  Segment part 27.            Intra module refs:   compactPage
                                                   initPage
                                                   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine45           0001A4B4 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A4B9 - 0001A4BD (0x5 bytes), align: 0
  Segment part 28.            Intra module refs:   compactPage
                                                   initPage
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine32           0001A4B9 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A4BE - 0001A4C8 (0xb bytes), align: 0
  Segment part 29.            Intra module refs:   ?Subroutine32
                                                   setItem
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine63           0001A4BE 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A4C9 - 0001A4DD (0x15 bytes), align: 0
  Segment part 30.            Intra module refs:   compactPage
                                                   setItem
                                                   setPageUse
                                                   writeWordH
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine29           0001A4C9 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A4DE - 0001A4E9 (0xc bytes), align: 0
  Segment part 31.            Intra module refs:   compactPage
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine15           0001A4DE 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A4EA - 0001A4F4 (0xb bytes), align: 0
  Segment part 32.            Intra module refs:   compactPage
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           0001A4EA 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A4F5 - 0001A4FA (0x6 bytes), align: 0
  Segment part 33.            Intra module refs:   ?Subroutine11
                                                   ?Subroutine12
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine72           0001A4F5 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A4FB - 0001A4FE (0x4 bytes), align: 0
  Segment part 34.            Intra module refs:   compactPage
                                                   initPage
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           0001A4FB 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A4FF - 0001A50B (0xd bytes), align: 0
  Segment part 35.            Intra module refs:   ?Subroutine10
                                                   ?Subroutine9
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine56           0001A4FF 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A50C - 0001A513 (0x8 bytes), align: 0
  Segment part 36.            Intra module refs:   compactPage
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            0001A50C 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A514 - 0001A524 (0x11 bytes), align: 0
  Segment part 37.            Intra module refs:   ?Subroutine45
                                                   ?Subroutine7
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine62           0001A514 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A525 - 0001A57E (0x5a bytes), align: 0
  Segment part 38.            Intra module refs:   initPage
                                                   osal_nv_item_init
                                                   osal_nv_item_len
                                                   osal_nv_read
                                                   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           findItem                0001A525 
               calls direct, is recursive
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000022 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A57F - 0001A613 (0x95 bytes), align: 0
  Segment part 39.            Intra module refs:   osal_nv_item_init
           LOCAL                   ADDRESS         
           =====                   =======         
           initItem                0001A57F 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000010 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A614 - 0001A6AA (0x97 bytes), align: 0
  Segment part 40.            Intra module refs:   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           initItem2               0001A614 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000024 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A6AB - 0001A6AE (0x4 bytes), align: 0
  Segment part 41.            Intra module refs:   initItem
                                                   initItem2
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine52           0001A6AB 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A6AF - 0001A6BF (0x11 bytes), align: 0
  Segment part 42.            Intra module refs:   ?Subroutine51
                                                   ?Subroutine52
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine64           0001A6AF 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A6C0 - 0001A6C4 (0x5 bytes), align: 0
  Segment part 43.            Intra module refs:   initItem
                                                   initItem2
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine51           0001A6C0 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A6C5 - 0001A6CA (0x6 bytes), align: 0
  Segment part 44.            Intra module refs:   initItem2
                                                   initPage
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine47           0001A6C5 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A6CB - 0001A6D9 (0xf bytes), align: 0
  Segment part 45.            Intra module refs:   initItem
                                                   initItem2
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine46           0001A6CB 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A6DA - 0001A6DE (0x5 bytes), align: 0
  Segment part 46.            Intra module refs:   initItem
                                                   initItem2
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine44           0001A6DA 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A6DF - 0001A6E7 (0x9 bytes), align: 0
  Segment part 47.            Intra module refs:   ?Subroutine44
                                                   ?Subroutine47
                                                   compactPage
                                                   initItem
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine61           0001A6DF 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A6E8 - 0001A6F0 (0x9 bytes), align: 0
  Segment part 48.            Intra module refs:   initItem
                                                   initItem2
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine25           0001A6E8 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A6F1 - 0001A77E (0x8e bytes), align: 0
  Segment part 49.            Intra module refs:   ?Subroutine72
                                                   initPage
           LOCAL                   ADDRESS         
           =====                   =======         
           setItem                 0001A6F1 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000022 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A77F - 0001A783 (0x5 bytes), align: 0
  Segment part 50.            Intra module refs:   findItem
                                                   initItem2
                                                   setItem
                                                   writeWord
                                                   writeWordD
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine74           0001A77F 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A784 - 0001A80A (0x87 bytes), align: 0
  Segment part 51.            Intra module refs:   compactPage
                                                   initPage
                                                   osal_nv_write
                                                   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
           calcChkF                0001A784 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000022 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A80B - 0001A811 (0x7 bytes), align: 0
  Segment part 52.            Intra module refs:   ?Subroutine5
                                                   calcChkF
                                                   compactPage
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine70           0001A80B 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A812 - 0001A859 (0x48 bytes), align: 0
  Segment part 53.            Intra module refs:   compactPage
                                                   initNV
                                                   initPage
                                                   osal_nv_item_len
                                                   osal_nv_write
                                                   setItem
                                                   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
           readHdr                 0001A812 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000022 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A85A - 0001A8F3 (0x9a bytes), align: 0
  Segment part 54.            Intra module refs:   ?Subroutine6
                                                   setItem
                                                   setPageUse
                                                   writeItem
                                                   writeWordD
                                                   writeWordH
           LOCAL                   ADDRESS         
           =====                   =======         
           writeWord               0001A85A 
               calls direct
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 0000001C ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A8F4 - 0001A8FC (0x9 bytes), align: 0
  Segment part 55.            Intra module refs:   compactPage
                                                   writeWord
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine37           0001A8F4 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A8FD - 0001A92E (0x32 bytes), align: 0
  Segment part 56.            Intra module refs:   compactPage
                                                   initNV
                                                   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           writeWordD              0001A8FD 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000022 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A92F - 0001A975 (0x47 bytes), align: 0
  Segment part 57.            Intra module refs:   compactPage
                                                   osal_nv_write
                                                   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
           writeWordH              0001A92F 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000022 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A976 - 0001A97C (0x7 bytes), align: 0
  Segment part 58.            Intra module refs:   writeWord
                                                   writeWordH
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine31           0001A976 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A97D - 0001AB04 (0x188 bytes), align: 0
  Segment part 59.            Intra module refs:   compactPage
                                                   osal_nv_write
                                                   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
           writeBuf                0001A97D 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000024 ( 00000018 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AB05 - 0001AB0D (0x9 bytes), align: 0
  Segment part 60.            Intra module refs:   writeBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine53           0001AB05 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AB0E - 0001AB11 (0x4 bytes), align: 0
  Segment part 61.            Intra module refs:   writeBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine39           0001AB0E 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AB12 - 0001AB15 (0x4 bytes), align: 0
  Segment part 62.            Intra module refs:   ?Subroutine38
                                                   ?Subroutine39
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine59           0001AB12 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AB16 - 0001AB1E (0x9 bytes), align: 0
  Segment part 63.            Intra module refs:   ?Subroutine59
                                                   ?Subroutine60
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine69           0001AB16 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AB1F - 0001AB27 (0x9 bytes), align: 0
  Segment part 64.            Intra module refs:   writeBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine38           0001AB1F 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AB28 - 0001AB38 (0x11 bytes), align: 0
  Segment part 65.            Intra module refs:   writeBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine30           0001AB28 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AB39 - 0001AB3D (0x5 bytes), align: 0
  Segment part 66.            Intra module refs:   writeBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine24           0001AB39 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AB3E - 0001AB43 (0x6 bytes), align: 0
  Segment part 67.            Intra module refs:   writeBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine22           0001AB3E 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AB44 - 0001AB49 (0x6 bytes), align: 0
  Segment part 68.            Intra module refs:   writeBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine16           0001AB44 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AB4A - 0001AB4F (0x6 bytes), align: 0
  Segment part 69.            Intra module refs:   compactPage
                                                   initPage
                                                   osal_nv_write
                                                   writeBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine14           0001AB4A 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AB50 - 0001AD7D (0x22e bytes), align: 0
  Segment part 70.            Intra module refs:   compactPage
                                                   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           xferBuf                 0001AB50 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000026 ( 0000001C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AD7E - 0001AD87 (0xa bytes), align: 0
  Segment part 71.            Intra module refs:   calcChkF
                                                   osal_nv_read
                                                   osal_nv_write
                                                   readHdr
                                                   writeBuf
                                                   writeItem
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine75           0001AD7E 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AD88 - 0001AD91 (0xa bytes), align: 0
  Segment part 72.            Intra module refs:   ?Subroutine1
                                                   ?Subroutine22
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine54           0001AD88 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AD92 - 0001AD9A (0x9 bytes), align: 0
  Segment part 73.            Intra module refs:   osal_nv_write
                                                   writeBuf
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine50           0001AD92 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AD9B - 0001ADAB (0x11 bytes), align: 0
  Segment part 74.            Intra module refs:   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine49           0001AD9B 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001ADAC - 0001ADBC (0x11 bytes), align: 0
  Segment part 75.            Intra module refs:   osal_nv_read
                                                   readHdr
                                                   writeBuf
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine48           0001ADAC 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001ADBD - 0001ADC2 (0x6 bytes), align: 0
  Segment part 76.            Intra module refs:   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine41           0001ADBD 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001ADC3 - 0001ADD0 (0xe bytes), align: 0
  Segment part 77.            Intra module refs:   calcChkF
                                                   osal_nv_read
                                                   writeBuf
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine40           0001ADC3 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001ADD1 - 0001ADD6 (0x6 bytes), align: 0
  Segment part 78.            Intra module refs:   initPage
                                                   osal_nv_write
                                                   writeBuf
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine35           0001ADD1 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001ADD7 - 0001ADE0 (0xa bytes), align: 0
  Segment part 79.            Intra module refs:   writeBuf
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine34           0001ADD7 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001ADE1 - 0001ADEF (0xf bytes), align: 0
  Segment part 80.            Intra module refs:   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine28           0001ADE1 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001ADF0 - 0001ADF5 (0x6 bytes), align: 0
  Segment part 81.            Intra module refs:   ?Subroutine28
                                                   ?Subroutine41
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine60           0001ADF0 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001ADF6 - 0001ADFF (0xa bytes), align: 0
  Segment part 82.            Intra module refs:   writeBuf
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine26           0001ADF6 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AE00 - 0001AE05 (0x6 bytes), align: 0
  Segment part 83.            Intra module refs:   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine17           0001AE00 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AE06 - 0001AE17 (0x12 bytes), align: 0
  Segment part 84.            Intra module refs:   writeBuf
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            0001AE06 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AE18 - 0001AE1F (0x8 bytes), align: 0
  Segment part 85.            Intra module refs:   writeBuf
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            0001AE18 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AE20 - 0001AE25 (0x6 bytes), align: 0
  Segment part 86.            Intra module refs:   writeBuf
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0001AE20 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AE26 - 0001AE36 (0x11 bytes), align: 0
  Segment part 87.            Intra module refs:   osal_nv_read
                                                   writeBuf
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0001AE26 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AE37 - 0001AFCD (0x197 bytes), align: 0
  Segment part 88.            Intra module refs:   initItem
                                                   initItem2
           LOCAL                   ADDRESS         
           =====                   =======         
           writeItem               0001AE37 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000010 ( 0000001C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AFCE - 0001AFDA (0xd bytes), align: 0
  Segment part 89.            Intra module refs:   compactPage
                                                   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine43           0001AFCE 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AFDB - 0001AFE5 (0xb bytes), align: 0
  Segment part 90.            Intra module refs:   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine42           0001AFDB 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AFE6 - 0001AFED (0x8 bytes), align: 0
  Segment part 91.            Intra module refs:   initItem
                                                   osal_nv_item_init
                                                   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine21           0001AFE6 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AFEE - 0001AFF5 (0x8 bytes), align: 0
  Segment part 92.            Intra module refs:   compactPage
                                                   osal_nv_read
                                                   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine19           0001AFEE 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AFF6 - 0001B03F (0x4a bytes), align: 0
  Segment part 93.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_nv_init            0001AFF6        main (ZMain)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B040 - 0001B0A7 (0x68 bytes), align: 0
  Segment part 94.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_nv_item_init       0001B040        ZDApp_InitUserDesc (ZDApp)
                                                   ZDApp_LeaveCtrlInit (ZDApp)
                                                   zgInit (ZGlobals)
                                                   zgReadStartupOptions (ZGlobals)
                                                   zmain_ext_addr (ZMain)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000002 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B0A8 - 0001B105 (0x5e bytes), align: 0
  Segment part 95.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_nv_item_len        0001B0A8        MT_ProcessGetNV (MTEL)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   MT_ProcessSetNV (MTEL)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B106 - 0001B109 (0x4 bytes), align: 0
  Segment part 96.            Intra module refs:   calcChkF
                                                   osal_nv_item_len
                                                   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine18           0001B106 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B10A - 0001B10F (0x6 bytes), align: 0
  Segment part 97.            Intra module refs:   ?Subroutine11
                                                   ?Subroutine12
                                                   ?Subroutine15
                                                   ?Subroutine16
                                                   ?Subroutine17
                                                   ?Subroutine18
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine55           0001B10A 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B110 - 0001B4F4 (0x3e5 bytes), align: 0
  Segment part 98.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_nv_write           0001B110        MT_ProcessSerialCommand (MTEL)
                                                   MT_ProcessSetNV (MTEL)
                                                   Segment part 19 (AssocList)
                                                   ZDApp_LeaveCtrlSet (ZDApp)
                                                   ZDApp_LeaveCtrlStartup (ZDApp)
                                                   ZDO_ProcessUserDescSet (ZDObject)
                                                   aps_GroupsWriteNV (aps_groups)
                                                   zgInit (ZGlobals)
                                                   zgWriteStartupOptions (ZGlobals)
               calls direct
               stack 1 = 00000000 ( 00000004 )
               stack 2 = 00000004 ( 00000026 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B4F5 - 0001B4FA (0x6 bytes), align: 0
  Segment part 99.            Intra module refs:   ?Subroutine1
                                                   osal_nv_read
                                                   osal_nv_write
                                                   writeBuf
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine71           0001B4F5 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B4FB - 0001B503 (0x9 bytes), align: 0
  Segment part 100.           Intra module refs:   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine27           0001B4FB 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B504 - 0001B506 (0x3 bytes), align: 0
  Segment part 101.           Intra module refs:   osal_nv_write
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine23           0001B504 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B507 - 0001B50B (0x5 bytes), align: 0
  Segment part 102.           Intra module refs:   ?Subroutine2
                                                   ?Subroutine23
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine73           0001B507 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B50C - 0001B513 (0x8 bytes), align: 0
  Segment part 103.           Intra module refs:   ?Subroutine2
                                                   ?Subroutine23
                                                   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine57           0001B50C 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B514 - 0001B51B (0x8 bytes), align: 0
  Segment part 104.           Intra module refs:   compactPage
                                                   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine20           0001B514 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B51C - 0001B527 (0xc bytes), align: 0
  Segment part 105.           Intra module refs:   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           0001B51C 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B528 - 0001B52F (0x8 bytes), align: 0
  Segment part 106.           Intra module refs:   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine12           0001B528 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B530 - 0001B534 (0x5 bytes), align: 0
  Segment part 107.           Intra module refs:   osal_nv_write
                                                   setItem
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            0001B530 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B535 - 0001B544 (0x10 bytes), align: 0
  Segment part 108.           Intra module refs:   compactPage
                                                   initItem
                                                   initItem2
                                                   osal_nv_read
                                                   osal_nv_write
                                                   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0001B535 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B545 - 0001B54F (0xb bytes), align: 0
  Segment part 109.           Intra module refs:   osal_nv_write
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0001B545 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B550 - 0001B560 (0x11 bytes), align: 0
  Segment part 110.           Intra module refs:   osal_nv_write
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001B550 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B561 - 0001B5F6 (0x96 bytes), align: 0
  Segment part 111.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_nv_read            0001B561        MT_ProcessGetDeviceInfo (MTEL)
                                                   MT_ProcessGetNV (MTEL)
                                                   MT_ProcessGetNvInfo (MTEL)
                                                   ZDApp_InitUserDesc (ZDApp)
                                                   ZDApp_LeaveCtrlInit (ZDApp)
                                                   ZDO_ProcessUserDescReq (ZDObject)
                                                   zgInit (ZGlobals)
                                                   zgReadStartupOptions (ZGlobals)
                                                   zgWriteStartupOptions (ZGlobals)
                                                   zmain_ext_addr (ZMain)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000004 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B5F7 - 0001B611 (0x1b bytes), align: 0
  Segment part 112.           Intra module refs:   osal_nv_read
                                                   readHdr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0001B5F7 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B612 - 0001B617 (0x6 bytes), align: 0
  Segment part 113.           Intra module refs:   ?Subroutine1
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine58           0001B612 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B618 - 0001B620 (0x9 bytes), align: 0
  Segment part 114.           Intra module refs:   ?Subroutine24
                                                   ?Subroutine58
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine65           0001B618 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FBDA - 0000FBDD (0x4 bytes), align: 0
  Segment part 18.            Intra module refs:   ?Subroutine48
                                                   ?Subroutine49
                                                   RTG_DataReq (rtg)
                                                   calcChkF
                                                   halAssertHazardLights (hal_assert)
                                                   macScanStartTimer (mac_scan)
                                                   nwk_data_ind_processing (nwk)
                                                   osal_nv_write
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_1            0000FBDA 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000016A8 - 000016AB (0x4 bytes), align: 0
  Segment part 19.            Intra module refs:   __Constant_1

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\OSAL_PwrMgr.r51
  PROGRAM MODULE, NAME : OSAL_PwrMgr

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000F499 - 0000F49F (0x7 bytes), align: 0
  Segment part 6.             Intra module refs:   osal_pwrmgr_device
                                                   osal_pwrmgr_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pwrmgr_attribute        0000F499 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003D4C1 - 0003D4CE (0xe bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_pwrmgr_init        0003D4C1        osal_init_system (OSAL)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003D4CF - 0003D4D6 (0x8 bytes), align: 0
  Segment part 8.             Intra module refs:   osal_pwrmgr_device
                                                   osal_pwrmgr_init
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0003D4CF 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003D4D7 - 0003D4E0 (0xa bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_pwrmgr_device      0003D4D7        ZDApp_NetworkStartEvt (ZDApp)
                                                   ZDApp_event_loop (ZDApp)
               stack 1 = 00000000 ( 00000002 )

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\OSAL_SampleApp.r51
  PROGRAM MODULE, NAME : OSAL_SampleApp

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003CFAF - 0003D0AD (0xff bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalAddTasks            0003CFAF        osal_init_system (OSAL)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000E )

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\OSAL_Tasks.r51
  PROGRAM MODULE, NAME : OSAL_Tasks

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000F4A0 - 0000F4A1 (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   osalFindTask
                                                   osalInitTasks
                                                   osalNextActiveTask
                                                   osalTaskAdd
                                                   osalTaskInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tasksHead               0000F4A0 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F4A2 - 0000F4A3 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   ?Subroutine1
                                                   ?Subroutine2
                                                   osalInitTasks
                                                   osalTaskInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           activeTask              0000F4A2        osal_self (OSAL)
                                                   osal_start_system (OSAL)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F4A4 - 0000F4A4 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   osalTaskAdd
                                                   osalTaskInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           taskIDs                 0000F4A4 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003C449 - 0003C45D (0x15 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalTaskInit            0003C449        osal_init_system (OSAL)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003C45E - 0003C464 (0x7 bytes), align: 0
  Segment part 10.            Intra module refs:   osalFindTask
                                                   osalNextActiveTask
                                                   osalTaskInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0003C45E 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003C465 - 0003C558 (0xf4 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalTaskAdd             0003C465        osalAddTasks (OSAL_SampleApp)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000003 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003C559 - 0003C55E (0x6 bytes), align: 0
  Segment part 12.            Intra module refs:   osalTaskAdd
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0003C559 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003C55F - 0003C563 (0x5 bytes), align: 0
  Segment part 13.            Intra module refs:   ?Subroutine0
                                                   ?Subroutine1
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0003C55F 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003C564 - 0003C5B2 (0x4f bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalInitTasks           0003C564        osal_init_system (OSAL)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003C5B3 - 0003C5BE (0xc bytes), align: 0
  Segment part 15.            Intra module refs:   osalInitTasks
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0003C5B3 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003C5BF - 0003C5C8 (0xa bytes), align: 0
  Segment part 16.            Intra module refs:   osalInitTasks
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0003C5BF 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003C5C9 - 0003C5FE (0x36 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalNextActiveTask      0003C5C9        osal_start_system (OSAL)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003C5FF - 0003C62F (0x31 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalFindTask            0003C5FF        osal_msg_send (OSAL)
                                                   osal_set_event (OSAL)
               stack 1 = 00000000 ( 00000002 )

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\OSAL_Timers.r51
  PROGRAM MODULE, NAME : OSAL_Timers

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000F4A5 - 0000F4A6 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   ?Subroutine1
                                                   osalAddTimer
                                                   osalDeleteTimer
                                                   osalFindTimer
                                                   osalTimerUpdate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timerHead               0000F4A5 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F4A7 - 0000F4AA (0x4 bytes), align: 0
  Segment part 8.             Intra module refs:   osalTimerInit
                                                   osal_timer_hw_setup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tmr_count               0000F4A7 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F4AB - 0000F4AC (0x2 bytes), align: 0
  Segment part 9.             Intra module refs:   osalTimerInit
                                                   osal_update_timers
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tmr_decr_time           0000F4AB 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F4AD - 0000F4AD (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   osalTimerInit
                                                   osal_start_timerEx
                                                   osal_timer_activate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timerActive             0000F4AD 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F4AE - 0000F4B1 (0x4 bytes), align: 0
  Segment part 11.            Intra module refs:   osalTimerInit
                                                   osalTimerUpdate
                                                   osal_GetSystemClock
           LOCAL                   ADDRESS         
           =====                   =======         
           osal_systemClock        0000F4AE 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003905A - 00039098 (0x3f bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalTimerInit           0003905A        osal_init_system (OSAL)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039099 - 00039131 (0x99 bytes), align: 0
  Segment part 17.            Intra module refs:   osal_start_timerEx
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalAddTimer            00039099 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000C ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039132 - 0003916D (0x3c bytes), align: 0
  Segment part 18.            Intra module refs:   osalAddTimer
                                                   osal_get_timeoutEx
                                                   osal_stop_timerEx
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalFindTimer           00039132 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000E ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003916E - 00039175 (0x8 bytes), align: 0
  Segment part 19.            Intra module refs:   osalDeleteTimer
                                                   osalFindTimer
                                                   osal_start_timer
                                                   osal_stop_timer
                                                   osal_timer_activate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0003916E 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039176 - 000391E7 (0x72 bytes), align: 0
  Segment part 20.            Intra module refs:   osal_stop_timerEx
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalDeleteTimer         00039176 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000C ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000391E8 - 000391ED (0x6 bytes), align: 0
  Segment part 21.            Intra module refs:   osalAddTimer
                                                   osalDeleteTimer
                                                   osalTimerUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            000391E8 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000391EE - 000391F7 (0xa bytes), align: 0
  Segment part 22.            Intra module refs:   osalDeleteTimer
                                                   osalFindTimer
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            000391EE 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000391F8 - 00039220 (0x29 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_start_timer        000391F8        HalLedUpdate (hal_led)
                                                   RTG_Init (rtg)
                                                   RTG_TimerEvent (rtg)
                                                   ZDO_StartDevice (ZDObject)
                                                   nwk_event_loop (nwk)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039221 - 00039269 (0x49 bytes), align: 0
  Segment part 24.            Intra module refs:   osal_start_timer
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_start_timerEx      00039221        ?Subroutine7 (ZDApp)
                                                   APS_SetEndDeviceBindTimeout (APS)
                                                   HalKeyConfig (hal_key)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   NLME_PermitJoiningSet (NLMEDE)
                                                   RTG_BcastAdd (rtg)
                                                   RTG_BcastTimerHandler (rtg)
                                                   SampleApp_ProcessEvent (SampleApp)
                                                   halProcessKeyInterrupt (hal_key)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000009 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003926A - 00039286 (0x1d bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_stop_timer         0003926A        nwk_event_loop (nwk)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039287 - 000392C6 (0x40 bytes), align: 0
  Segment part 26.            Intra module refs:   osal_stop_timer
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_stop_timerEx       00039287        APS_SetEndDeviceBindTimeout (APS)
                                                   HalKeyConfig (hal_key)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000009 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000392C7 - 000392FD (0x37 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_get_timeoutEx      000392C7        AddrMgrWriteNVRequest (ZDApp)
                                                   NLDE_DataCnf (NLMEDE_CB)
                                                   Segment part 17 (nwk_bufs)
                                                   Segment part 83 (rtg)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000392FE - 00039302 (0x5 bytes), align: 0
  Segment part 28.            Intra module refs:   osalTimerInit
                                                   osal_GetSystemClock
                                                   osal_get_timeoutEx
                                                   osal_start_timerEx
                                                   osal_stop_timerEx
                                                   osal_timer_hw_setup
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            000392FE 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039303 - 00039319 (0x17 bytes), align: 0
  Segment part 29.            Intra module refs:   osalTimerInit
                                                   osal_start_timerEx
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_timer_activate     00039303 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000C ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003931A - 00039346 (0x2d bytes), align: 0
  Segment part 31.            Intra module refs:   osal_timer_activate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_timer_hw_setup     0003931A 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000009 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039347 - 00039350 (0xa bytes), align: 0
  Segment part 33.            Intra module refs:   osal_update_timers
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            00039347 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039351 - 00039467 (0x117 bytes), align: 0
  Segment part 34.            Intra module refs:   osal_update_timers
           LOCAL                   ADDRESS         
           =====                   =======         
           osalTimerUpdate         00039351 
               calls direct
               stack 1 = 00000002 ( 00000001 )
               stack 2 = 00000000 ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039468 - 00039470 (0x9 bytes), align: 0
  Segment part 35.            Intra module refs:   osalDeleteTimer
                                                   osalTimerUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            00039468 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039471 - 00039484 (0x14 bytes), align: 0
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_update_timers      00039471        Onboard_TimerCallBack (OnBoard)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039485 - 0003949C (0x18 bytes), align: 0
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_GetSystemClock     00039485        HalLedBlink (hal_led)
                                                   HalLedUpdate (hal_led)
                                                   MT_ProcessSerialCommand (MTEL)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000C )

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\OnBoard.r51
  PROGRAM MODULE, NAME : OnBoard

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 0000008F - 0000008F (0x1 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0INP                   0000008F 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BE - 000000BE (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SLEEP                   000000BE 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000FE - 000000FE (0x1 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1DIR                   000000FE 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F4B2 - 0000F4B2 (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   InitBoard
                                                   OnBoard_KeyCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OnboardKeyIntEnable     0000F4B2 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F4B3 - 0000F4B3 (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   InitBoard
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OnboardTimerIntEnable   0000F4B3 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F4B4 - 0000F4BB (0x8 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aExtendedAddress        0000F4B4        ZMacGetReq (zmac)
                                                   ZMacReset (zmac)
                                                   ZMacSetReq (zmac)
                                                   zmain_ext_addr (ZMain)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FBDE - 0000FBDE (0x1 bytes), align: 0
  Segment part 13.            Intra module refs:   OnBoard_SendKeys
                                                   RegisterForKeys
           LOCAL                   ADDRESS         
           =====                   =======         
           registeredKeysTaskID    0000FBDE 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003C630 - 0003C70D (0xde bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InitBoard               0003C630        main (ZMain)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003C70E - 0003C724 (0x17 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RegisterForKeys         0003C70E        SampleApp_Init (SampleApp)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003C725 - 0003C773 (0x4f bytes), align: 0
  Segment part 17.            Intra module refs:   OnBoard_KeyCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OnBoard_SendKeys        0003C725        MT_ProcessSerialCommand (MTEL)
               calls direct
               stack 1 = 00000002 ( 00000001 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003C774 - 0003C79E (0x2b bytes), align: 0
  Segment part 18.            Intra module refs:   InitBoard
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OnBoard_KeyCallback     0003C774 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003C79F - 0003C7A5 (0x7 bytes), align: 0
  Segment part 20.            Intra module refs:   OnBoard_KeyCallback
                                                   Onboard_TimerCallBack
                                                   RegisterForKeys
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0003C79F 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003C7A6 - 0003C7C8 (0x23 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Onboard_rand            0003C7A6        osal_rand (OSAL)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003C7C9 - 0003C7E2 (0x1a bytes), align: 0
  Segment part 23.            Intra module refs:   InitBoard
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Onboard_wait            0003C7C9        zmain_ext_addr (ZMain)
                                                   zmain_vdd_check (ZMain)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000B ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003C7E3 - 0003C7FB (0x19 bytes), align: 0
  Segment part 24.            Intra module refs:   InitBoard
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Onboard_TimerCallBack   0003C7E3 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000016AC - 000016AC (0x1 bytes), align: 0
  Segment part 14.            Intra module refs:   registeredKeysTaskID

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\SPIMgr.r51
  PROGRAM MODULE, NAME : SPIMgr

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000F4BC - 0000F4BC (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   SPIMgr_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           App_TaskID              0000F4BC 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F4BD - 0000F4BD (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   SPIMgr_ProcessZToolData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           state                   0000F4BD 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F4BE - 0000F4BF (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   SPIMgr_ProcessZToolData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CMD_Token               0000F4BE 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F4C0 - 0000F4C0 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   SPIMgr_ProcessZToolData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LEN_Token               0000F4C0 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F4C1 - 0000F4C1 (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   SPIMgr_ProcessZToolData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FSC_Token               0000F4C1 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F4C2 - 0000F4C3 (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   ?Subroutine3
                                                   ?Subroutine5
                                                   SPIMgr_ProcessZToolData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SPI_Msg                 0000F4C2 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F4C4 - 0000F4C4 (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   SPIMgr_ProcessZToolData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tempDataLen             0000F4C4 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FBDF - 0000FBE0 (0x2 bytes), align: 0
  Segment part 13.            Intra module refs:   SPIMgr_ProcessZToolData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Short_Addr              0000FBDF 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039CAB - 00039D28 (0x7e bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SPIMgr_Init             00039CAB        MT_TaskInit (MTEL)
               calls direct
               stack 1 = 00000000 ( 00000003 )
               stack 2 = 00000000 ( 0000001E )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039D29 - 00039D2F (0x7 bytes), align: 0
  Segment part 18.            Intra module refs:   SPIMgr_Init
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            00039D29 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039D30 - 00039D54 (0x25 bytes), align: 0
  Segment part 20.            Intra module refs:   SPIMgr_ProcessZToolData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SPIMgr_CalcFCS          00039D30        MT_BuildSPIMsg (MTEL)
                                                   MT_ProcessCommand (MTEL)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000C ( 00000009 )
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F4C5 - 0000F4C6 (0x2 bytes), align: 0
  Segment part 15.            Intra module refs:   ?Subroutine0
                                                   SPIMgr_ProcessZToolData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Uart_len                0000F4C5 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F4C7 - 0000F4F8 (0x32 bytes), align: 0
  Segment part 16.            Intra module refs:   ?Subroutine0
                                                   SPIMgr_ProcessZToolData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Uart_Rx_Data            0000F4C7 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039D55 - 0003A057 (0x303 bytes), align: 0
  Segment part 21.            Intra module refs:   SPIMgr_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SPIMgr_ProcessZToolData
                                   00039D55 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A058 - 0003A065 (0xe bytes), align: 0
  Segment part 22.            Intra module refs:   SPIMgr_ProcessZToolData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0003A058 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A066 - 0003A069 (0x4 bytes), align: 0
  Segment part 23.            Intra module refs:   SPIMgr_ProcessZToolData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0003A066 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A06A - 0003A070 (0x7 bytes), align: 0
  Segment part 24.            Intra module refs:   ?Subroutine1
                                                   ?Subroutine2
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0003A06A 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A071 - 0003A078 (0x8 bytes), align: 0
  Segment part 25.            Intra module refs:   SPIMgr_ProcessZToolData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0003A071 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A079 - 0003A084 (0xc bytes), align: 0
  Segment part 26.            Intra module refs:   ?Subroutine1
                                                   ?Subroutine4
                                                   SPIMgr_ProcessZToolData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0003A079 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A085 - 0003A096 (0x12 bytes), align: 0
  Segment part 27.            Intra module refs:   SPIMgr_ProcessZToolData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0003A085 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000016AD - 000016AE (0x2 bytes), align: 0
  Segment part 14.            Intra module refs:   Short_Addr

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\SampleApp.r51
  PROGRAM MODULE, NAME : SampleApp

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000F4F9 - 0000F68A (0x192 bytes), align: 0
  Segment part 10.            Intra module refs:   ?Subroutine2
                                                   SampleApp_MessageMSGCB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           JoinNode                0000F4F9        SPIMgr_ProcessZToolData (SPIMgr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F68B - 0000F6CC (0x42 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RfTx                    0000F68B        SPIMgr_ProcessZToolData (SPIMgr)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FBE1 - 0000FBE8 (0x8 bytes), align: 0
  Segment part 6.             Intra module refs:   SampleApp_Init
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FBE9 - 0000FC03 (0x1b bytes), align: 0
  Segment part 8.             Intra module refs:   SampleApp_ProcessEvent
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC04 - 0000FC07 (0x4 bytes), align: 0
  Segment part 12.            Intra module refs:   Segment part 15
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SampleApp_ClusterList   0000FC04 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC08 - 0000FC13 (0xc bytes), align: 0
  Segment part 14.            Intra module refs:   SampleApp_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SampleApp_SimpleDesc    0000FC08 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F6CD - 0000F6D2 (0x6 bytes), align: 0
  Segment part 16.            Intra module refs:   SampleApp_Init
                                                   SampleApp_SendFlashMessage
                                                   SampleApp_SendPeriodicMessage
                                                   SendData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SampleApp_epDesc        0000F6CD 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F6D3 - 0000F6D3 (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   SampleApp_Init
                                                   SampleApp_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SampleApp_TaskID        0000F6D3 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F6D4 - 0000F6D4 (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   SampleApp_Init
                                                   SampleApp_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SampleApp_NwkState      0000F6D4 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F6D5 - 0000F6D5 (0x1 bytes), align: 0
  Segment part 19.            Intra module refs:   SampleApp_Init
                                                   SampleApp_SendFlashMessage
                                                   SampleApp_SendPeriodicMessage
                                                   SendData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SampleApp_TransID       0000F6D5 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F6D6 - 0000F6D9 (0x4 bytes), align: 0
  Segment part 20.            Intra module refs:   SampleApp_Init
                                                   SampleApp_SendPeriodicMessage
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SampleApp_Periodic_DstAddr
                                   0000F6D6 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F6DA - 0000F6DD (0x4 bytes), align: 0
  Segment part 21.            Intra module refs:   SampleApp_Init
                                                   SampleApp_SendFlashMessage
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SampleApp_Flash_DstAddr
                                   0000F6DA 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F6DE - 0000F6EF (0x12 bytes), align: 0
  Segment part 22.            Intra module refs:   SampleApp_HandleKeys
                                                   SampleApp_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SampleApp_Group         0000F6DE 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F6F0 - 0000F6F0 (0x1 bytes), align: 0
  Segment part 23.            Intra module refs:   SampleApp_SendPeriodicMessage
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SampleAppPeriodicCounter
                                   0000F6F0 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F6F1 - 0000F6F1 (0x1 bytes), align: 0
  Segment part 24.            Intra module refs:   SampleApp_SendFlashMessage
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SampleAppFlashCounter   0000F6F1 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038AF5 - 00038BA8 (0xb4 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SampleApp_Init          00038AF5        osalAddTasks (OSAL_SampleApp)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F6F2 - 0000F723 (0x32 bytes), align: 0
  Segment part 25.            Intra module refs:   ?Subroutine1
                                                   ?Subroutine3
                                                   SampleApp_MessageMSGCB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RxBuf                   0000F6F2 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F724 - 0000F725 (0x2 bytes), align: 0
  Segment part 27.            Intra module refs:   SampleApp_MessageMSGCB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           clear                   0000F724 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038BA9 - 00038CBA (0x112 bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SampleApp_ProcessEvent
                                   00038BA9        osalAddTasks (OSAL_SampleApp)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038CBB - 00038CBF (0x5 bytes), align: 0
  Segment part 30.            Intra module refs:   SampleApp_MessageMSGCB
                                                   SampleApp_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            00038CBB 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038CC0 - 00038D0D (0x4e bytes), align: 0
  Segment part 31.            Intra module refs:   SampleApp_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SampleApp_HandleKeys    00038CC0 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000C ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038D0E - 00038EDB (0x1ce bytes), align: 0
  Segment part 32.            Intra module refs:   SampleApp_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SampleApp_MessageMSGCB
                                   00038D0E 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000C ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038EDC - 00038EE7 (0xc bytes), align: 0
  Segment part 33.            Intra module refs:   SampleApp_MessageMSGCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            00038EDC 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038EE8 - 00038EF0 (0x9 bytes), align: 0
  Segment part 34.            Intra module refs:   SampleApp_MessageMSGCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            00038EE8 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038EF1 - 00038EFE (0xe bytes), align: 0
  Segment part 35.            Intra module refs:   SampleApp_MessageMSGCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            00038EF1 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038EFF - 00038F13 (0x15 bytes), align: 0
  Segment part 36.            Intra module refs:   SampleApp_MessageMSGCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00038EFF 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038F14 - 00038F5D (0x4a bytes), align: 0
  Segment part 37.            Intra module refs:   SampleApp_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SampleApp_SendPeriodicMessage
                                   00038F14 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000C ( 00000013 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038F5E - 00038FD7 (0x7a bytes), align: 0
  Segment part 38.            Intra module refs:   SampleApp_HandleKeys
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SampleApp_SendFlashMessage
                                   00038F5E 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000A ( 00000016 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038FD8 - 00039051 (0x7a bytes), align: 0
  Segment part 39.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SendData                00038FD8        SPIMgr_ProcessZToolData (SPIMgr)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000017 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039052 - 00039059 (0x8 bytes), align: 0
  Segment part 40.            Intra module refs:   SampleApp_HandleKeys
                                                   SampleApp_SendFlashMessage
                                                   SampleApp_SendPeriodicMessage
                                                   SendData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            00039052 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000016AF - 000016B6 (0x8 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 6
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000016B7 - 000016D1 (0x1b bytes), align: 0
  Segment part 9.             Intra module refs:   Segment part 8
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000016D2 - 000016D5 (0x4 bytes), align: 0
  Segment part 13.            Intra module refs:   SampleApp_ClusterList
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000016D6 - 000016E1 (0xc bytes), align: 0
  Segment part 15.            Intra module refs:   SampleApp_SimpleDesc

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\SampleAppHw.r51
  PROGRAM MODULE, NAME : SampleAppHw

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000F3 - 000000F3 (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0SEL                   000000F3 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000FD - 000000FD (0x1 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0DIR                   000000FD 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000080 - 00000080 (0x1 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P0                   00000080 

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\ZDApp.r51
  PROGRAM MODULE, NAME : ZDApp

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000F726 - 0000F72E (0x9 bytes), align: 0
  Segment part 10.            Intra module refs:   ZDApp_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDAppNwkAddr            0000F726        ?Subroutine25 (ZDObject)
                                                   ?Subroutine39 (ZDObject)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_ProcessServerDiscReq (ZDObject)
                                                   ZDO_ProcessSimpleDescReq (ZDObject)
                                                   ZDO_ProcessUserDescSet (ZDObject)
                                                   ZDO_UpdateNwkStatus (ZDObject)
                                                   ZDP_NwkAddrReq (ZDProfile)
                                                   ZDP_SimpleDescMsg (ZDProfile)
                                                   zdpProcessAddrReq (ZDProfile)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F72F - 0000F72F (0x1 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _tmpRejoinState         0000F72F        nwk_beacon_notify_ind_processing (nwk)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F730 - 0000F730 (0x1 bytes), align: 0
  Segment part 14.            Intra module refs:   ?Subroutine7
                                                   ?Subroutine8
                                                   ?Subroutine9
                                                   AddrMgrWriteNVRequest
                                                   Segment part 31
                                                   ZDApp_Init
                                                   ZDApp_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDAppTaskID             0000F730        Segment part 14 (APSMEDE_CB)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F731 - 0000F731 (0x1 bytes), align: 0
  Segment part 15.            Intra module refs:   ZDApp_NetworkStartEvt
                                                   ZDApp_event_loop
                                                   ZDO_NetworkFormationConfirmCB
                                                   ZDO_StartRouterConfirmCB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkStatus               0000F731 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F732 - 0000F733 (0x2 bytes), align: 0
  Segment part 16.            Intra module refs:   ?Subroutine14
                                                   ZDApp_AutoFindDestinationEx
                                                   ZDApp_MatchDescRspCB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_AutoFindMode_epDesc
                                   0000F732 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F734 - 0000F734 (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   ?Subroutine3
                                                   ZDApp_LeaveCtrlSet
                                                   ZDApp_LeaveCtrlStartup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_LeaveCtrl         0000F734 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC14 - 0000FC14 (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   ZDAppCheckForHoldKey
                                                   ZDApp_Init
                                                   ZDApp_NetworkStartEvt
                                                   ZDApp_StartUpFromApp
                                                   ZDApp_event_loop
                                                   ZDOInitDevice
                                                   ZDO_NetworkFormationConfirmCB
                                                   ZDO_StartRouterConfirmCB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devState                0000FC14        MT_ProcessGetDeviceInfo (MTEL)
                                                   ZDO_StartDevice (ZDObject)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC15 - 0000FC15 (0x1 bytes), align: 0
  Segment part 20.            Intra module refs:   ZDApp_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devStartMode            0000FC15 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F735 - 0000F735 (0x1 bytes), align: 0
  Segment part 22.            Intra module refs:   ZDApp_IEEEAddrRspCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ZDApp_IEEEAddrRsp_TaskID
                                   0000F735 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F736 - 0000F736 (0x1 bytes), align: 0
  Segment part 23.            Intra module refs:   ZDApp_NwkAddrRspCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ZDApp_NwkAddrRsp_TaskID
                                   0000F736 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F737 - 0000F737 (0x1 bytes), align: 0
  Segment part 24.            Intra module refs:   ZDApp_MatchDescRspCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ZDApp_MatchDescRsp_TaskID
                                   0000F737 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC16 - 0000FC16 (0x1 bytes), align: 0
  Segment part 26.            Intra module refs:   ZDApp_BindRsp
                                                   ZDApp_UnbindRsp
           LOCAL                   ADDRESS         
           =====                   =======         
           ZDApp_BindUnbindRsp_TaskID
                                   0000FC16 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC17 - 0000FC18 (0x2 bytes), align: 0
  Segment part 28.            Intra module refs:   ?Subroutine35
                                                   ZDAppSetupProtoVersion
                                                   ZDO_NetworkDiscoveryConfirmCB
           LOCAL                   ADDRESS         
           =====                   =======         
           sPVerList               0000FC17 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC19 - 0000FC1E (0x6 bytes), align: 0
  Segment part 30.            Intra module refs:   ZDApp_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_epDesc            0000FC19        fillAndSend (ZDProfile)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC1F - 0000FC22 (0x4 bytes), align: 0
  Segment part 36.            Intra module refs:   ZDApp_ServerDiscRspCB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_80000        0000FC1F 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C8A6 - 0001C942 (0x9d bytes), align: 0
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_Init              0001C8A6        osalAddTasks (OSAL_SampleApp)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C943 - 0001CA34 (0xf2 bytes), align: 0
  Segment part 39.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_event_loop        0001C943        osalAddTasks (OSAL_SampleApp)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CA35 - 0001CA3E (0xa bytes), align: 0
  Segment part 40.            Intra module refs:   AddrMgrWriteNVRequest
                                                   ZDApp_InMsgCB
                                                   ZDApp_InitUserDesc
                                                   ZDApp_LeaveCtrlInit
                                                   ZDApp_LeaveCtrlSet
                                                   ZDApp_LeaveCtrlStartup
                                                   ZDApp_event_loop
                                                   ZDOInitDevice
                                                   ZDO_LeaveInd
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine40           0001CA35 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CA3F - 0001CAAA (0x6c bytes), align: 0
  Segment part 41.            Intra module refs:   ZDApp_Init
                                                   ZDApp_StartUpFromApp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDOInitDevice           0001CA3F 
               calls direct
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000001 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CAAB - 0001CAB6 (0xc bytes), align: 0
  Segment part 42.            Intra module refs:   ?Subroutine2
                                                   ZDApp_AutoFindDestinationEx
                                                   ZDApp_MatchDescRspCB
                                                   ZDApp_SendNewDstAddr
                                                   ZDOInitDevice
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine29           0001CAAB 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CAB7 - 0001CABE (0x8 bytes), align: 0
  Segment part 44.            Intra module refs:   ZDApp_SendEndDeviceBindReq
                                                   ZDO_LeaveCnf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine41           0001CAB7 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CABF - 0001CB1D (0x5f bytes), align: 0
  Segment part 46.            Intra module refs:   ZDApp_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_NetworkStartEvt   0001CABF 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 0000000A ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CB1E - 0001CB63 (0x46 bytes), align: 0
  Segment part 49.            Intra module refs:   ZDApp_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDAppSetupProtoVersion
                                   0001CB1E 
               calls direct
               stack 1 = 00000002 ( 00000003 )
               stack 2 = 00000001 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CB64 - 0001CBEB (0x88 bytes), align: 0
  Segment part 50.            Intra module refs:   ZDApp_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_InitUserDesc      0001CB64 
               calls direct
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000001 ( 0000001F )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CBEC - 0001CC04 (0x19 bytes), align: 0
  Segment part 51.            Intra module refs:   ZDApp_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDAppCheckForHoldKey    0001CBEC 
               calls direct
               stack 1 = 00000002 ( 00000002 )
               stack 2 = 00000001 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CC05 - 0001CC21 (0x1d bytes), align: 0
  Segment part 52.            Intra module refs:   ZDApp_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_ProcessOSALMsg    0001CC05 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 0000000A ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CC22 - 0001CCF6 (0xd5 bytes), align: 0
  Segment part 53.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_SendEndDeviceBindReq
                                   0001CC22        MT_ZdoCommandProcessing (MT_ZDO)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000001D )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CCF7 - 0001CCFA (0x4 bytes), align: 0
  Segment part 54.            Intra module refs:   ZDApp_SendEndDeviceBindReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           0001CCF7 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CCFB - 0001CD04 (0xa bytes), align: 0
  Segment part 55.            Intra module refs:   ?Subroutine10
                                                   ?Subroutine13
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine31           0001CCFB 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CD05 - 0001CD0B (0x7 bytes), align: 0
  Segment part 56.            Intra module refs:   ZDApp_SendEndDeviceBindReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           0001CD05 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CD0C - 0001CE32 (0x127 bytes), align: 0
  Segment part 57.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_AutoFindDestinationEx
                                   0001CD0C        MT_ZdoCommandProcessing (MT_ZDO)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000020 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CE33 - 0001CE3A (0x8 bytes), align: 0
  Segment part 58.            Intra module refs:   ZDApp_AutoFindDestinationEx
                                                   ZDApp_MatchDescRspCB
                                                   ZDApp_SendEndDeviceBindReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine14           0001CE33 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CE3B - 0001CE4C (0x12 bytes), align: 0
  Segment part 59.            Intra module refs:   ZDApp_LeaveReset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_ResetTimerStart   0001CE3B 
               calls direct
               stack 1 = 00000002 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CE4D - 0001CE97 (0x4b bytes), align: 0
  Segment part 61.            Intra module refs:   ZDOInitDevice
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_LeaveCtrlInit     0001CE4D 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000C ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CE98 - 0001CED3 (0x3c bytes), align: 0
  Segment part 62.            Intra module refs:   ZDApp_LeaveReset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_LeaveCtrlSet      0001CE98 
               calls direct
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CED4 - 0001CF27 (0x54 bytes), align: 0
  Segment part 64.            Intra module refs:   ZDOInitDevice
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_LeaveCtrlStartup
                                   0001CED4 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000C ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CF28 - 0001CF35 (0xe bytes), align: 0
  Segment part 65.            Intra module refs:   ZDApp_LeaveCtrlInit
                                                   ZDApp_LeaveCtrlStartup
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0001CF28 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CF36 - 0001CF4C (0x17 bytes), align: 0
  Segment part 66.            Intra module refs:   ?Subroutine22
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_LeaveReset        0001CF36 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 0000000C ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CF4D - 0001CF55 (0x9 bytes), align: 0
  Segment part 68.            Intra module refs:   ZDApp_EndDeviceBindReqCB
                                                   ZDApp_LeaveReset
                                                   ZDApp_NetworkInit
                                                   ZDApp_NetworkStartEvt
                                                   ZDApp_ResetTimerStart
                                                   ZDO_NetworkFormationConfirmCB
                                                   ZDO_StartRouterConfirmCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine46           0001CF4D 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CF56 - 0001CF60 (0xb bytes), align: 0
  Segment part 69.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_EndDeviceBindReqCB
                                   0001CF56        ZDO_ProcessEndDeviceBindReq (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CF61 - 0001D012 (0xb2 bytes), align: 0
  Segment part 70.            Intra module refs:   ZDApp_MatchDescRspCB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_SendNewDstAddr    0001CF61 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000015 ( 00000015 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D013 - 0001D01D (0xb bytes), align: 0
  Segment part 73.            Intra module refs:   ZDApp_BindRsp
                                                   ZDApp_UnbindRsp
                                                   ZDO_NetworkDiscoveryConfirmCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            0001D013 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D01E - 0001D085 (0x68 bytes), align: 0
  Segment part 74.            Intra module refs:   ?Subroutine8
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_SendMsg           0001D01E 
               calls direct
               stack 1 = 00000002 ( 00000001 )
               stack 2 = 0000001B ( 00000013 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D086 - 0001D193 (0x10e bytes), align: 0
  Segment part 75.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_NwkAddrRspCB      0001D086        ZDO_ProcessAddrRsp (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000006 ( 0000001A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D194 - 0001D282 (0xef bytes), align: 0
  Segment part 76.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_IEEEAddrRspCB     0001D194        ZDO_ProcessAddrRsp (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000006 ( 0000001A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D283 - 0001D28B (0x9 bytes), align: 0
  Segment part 77.            Intra module refs:   ZDApp_IEEEAddrRspCB
                                                   ZDApp_NwkAddrRspCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine26           0001D283 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D28C - 0001D298 (0xd bytes), align: 0
  Segment part 78.            Intra module refs:   ZDApp_IEEEAddrRspCB
                                                   ZDApp_NwkAddrRspCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine24           0001D28C 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D299 - 0001D2A3 (0xb bytes), align: 0
  Segment part 79.            Intra module refs:   ZDApp_IEEEAddrRspCB
                                                   ZDApp_NwkAddrRspCB
                                                   ZDApp_SendNewDstAddr
                                                   ZDO_LeaveInd
                                                   ZDO_NetworkDiscoveryConfirmCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine23           0001D299 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D2A4 - 0001D2AE (0xb bytes), align: 0
  Segment part 80.            Intra module refs:   ZDApp_IEEEAddrRspCB
                                                   ZDApp_MatchDescRspCB
                                                   ZDApp_NwkAddrRspCB
                                                   ZDApp_SendNewDstAddr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine21           0001D2A4 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D2AF - 0001D2B6 (0x8 bytes), align: 0
  Segment part 81.            Intra module refs:   ZDApp_IEEEAddrRspCB
                                                   ZDApp_MatchDescRspCB
                                                   ZDApp_NwkAddrRspCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine18           0001D2AF 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D2B7 - 0001D2C3 (0xd bytes), align: 0
  Segment part 82.            Intra module refs:   ZDApp_IEEEAddrRspCB
                                                   ZDApp_MatchDescRspCB
                                                   ZDApp_SendNewDstAddr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine17           0001D2B7 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D2C4 - 0001D2CB (0x8 bytes), align: 0
  Segment part 83.            Intra module refs:   ZDApp_IEEEAddrRspCB
                                                   ZDApp_NwkAddrRspCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0001D2C4 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D2CC - 0001D2F7 (0x2c bytes), align: 0
  Segment part 84.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_NodeDescRspCB     0001D2CC        ZDO_ProcessNodeDescRsp (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000002 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D2F8 - 0001D2FC (0x5 bytes), align: 0
  Segment part 85.            Intra module refs:   ZDApp_NodeDescRspCB
                                                   ZDApp_PowerDescRspCB
                                                   ZDApp_UserDescRspCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine43           0001D2F8 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D2FD - 0001D32A (0x2e bytes), align: 0
  Segment part 86.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_PowerDescRspCB    0001D2FD        ZDO_ProcessPowerDescRsp (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000002 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D32B - 0001D337 (0xd bytes), align: 0
  Segment part 87.            Intra module refs:   ZDApp_ActiveEPRspCB
                                                   ZDApp_NodeDescRspCB
                                                   ZDApp_PowerDescRspCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            0001D32B 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D338 - 0001D379 (0x42 bytes), align: 0
  Segment part 88.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_SimpleDescRspCB   0001D338        ZDO_ProcessSimpleDescRsp (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000003 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D37A - 0001D37E (0x5 bytes), align: 0
  Segment part 89.            Intra module refs:   ZDApp_SimpleDescRspCB
                                                   ZDO_NetworkDiscoveryConfirmCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine44           0001D37A 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D37F - 0001D3C9 (0x4b bytes), align: 0
  Segment part 90.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_ActiveEPRspCB     0001D37F        ZDO_ProcessEPListRsp (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000002 ( 00000015 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D3CA - 0001D4E9 (0x120 bytes), align: 0
  Segment part 91.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_MatchDescRspCB    0001D3CA        ZDO_ProcessEPListRsp (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000002 ( 00000017 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D4EA - 0001D4F3 (0xa bytes), align: 0
  Segment part 92.            Intra module refs:   ZDApp_ActiveEPRspCB
                                                   ZDApp_IEEEAddrRspCB
                                                   ZDApp_MatchDescRspCB
                                                   ZDApp_NwkAddrRspCB
                                                   ZDApp_SendMsg
                                                   ZDApp_SendNewDstAddr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine42           0001D4EA 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D4F4 - 0001D4F9 (0x6 bytes), align: 0
  Segment part 93.            Intra module refs:   ZDApp_MatchDescRspCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine19           0001D4F4 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D4FA - 0001D4FD (0x4 bytes), align: 0
  Segment part 94.            Intra module refs:   ?Subroutine14
                                                   ?Subroutine16
                                                   ?Subroutine19
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine33           0001D4FA 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D4FE - 0001D506 (0x9 bytes), align: 0
  Segment part 95.            Intra module refs:   ?Subroutine31
                                                   ?Subroutine33
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine37           0001D4FE 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D507 - 0001D50D (0x7 bytes), align: 0
  Segment part 96.            Intra module refs:   ZDApp_MatchDescRspCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine16           0001D507 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D50E - 0001D513 (0x6 bytes), align: 0
  Segment part 97.            Intra module refs:   ?Subroutine16
                                                   ZDApp_AutoFindDestinationEx
                                                   ZDApp_SendEndDeviceBindReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine32           0001D50E 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D514 - 0001D521 (0xe bytes), align: 0
  Segment part 98.            Intra module refs:   ZDApp_IEEEAddrRspCB
                                                   ZDApp_MatchDescRspCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine12           0001D514 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D522 - 0001D527 (0x6 bytes), align: 0
  Segment part 99.            Intra module refs:   ?Subroutine12
                                                   ?Subroutine6
                                                   ZDApp_AutoFindDestinationEx
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine34           0001D522 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D528 - 0001D52B (0x4 bytes), align: 0
  Segment part 100.           Intra module refs:   ZDApp_MatchDescRspCB
                                                   ZDApp_SendNewDstAddr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0001D528 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D52C - 0001D530 (0x5 bytes), align: 0
  Segment part 101.           Intra module refs:   ?Subroutine1
                                                   ?Subroutine5
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine30           0001D52C 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D531 - 0001D538 (0x8 bytes), align: 0
  Segment part 102.           Intra module refs:   ?Subroutine27
                                                   ?Subroutine30
                                                   ZDApp_AutoFindDestinationEx
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine36           0001D531 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D539 - 0001D56F (0x37 bytes), align: 0
  Segment part 103.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_EndDeviceBindRsp
                                   0001D539        ZDO_ProcessBindUnbindRsp (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D570 - 0001D579 (0xa bytes), align: 0
  Segment part 104.           Intra module refs:   ZDApp_BindRsp
                                                   ZDApp_EndDeviceBindRsp
                                                   ZDApp_ServerDiscRspCB
                                                   ZDApp_UnbindRsp
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine45           0001D570 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D57A - 0001D5CB (0x52 bytes), align: 0
  Segment part 105.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_BindRsp           0001D57A        ZDO_ProcessBindUnbindRsp (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D5CC - 0001D61E (0x53 bytes), align: 0
  Segment part 106.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_UnbindRsp         0001D5CC        ZDO_ProcessBindUnbindRsp (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D61F - 0001D624 (0x6 bytes), align: 0
  Segment part 107.           Intra module refs:   ZDApp_BindRsp
                                                   ZDApp_UnbindRsp
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0001D61F 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D625 - 0001D62B (0x7 bytes), align: 0
  Segment part 108.           Intra module refs:   ZDApp_BindRsp
                                                   ZDApp_UnbindRsp
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001D625 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D62C - 0001D7B1 (0x186 bytes), align: 0
  Segment part 109.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_NetworkDiscoveryConfirmCB
                                   0001D62C        NLME_NetworkDiscoveryConfirm (NLMEDE_CB)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 0000001B )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D7B2 - 0001D7B6 (0x5 bytes), align: 0
  Segment part 110.           Intra module refs:   ZDO_NetworkDiscoveryConfirmCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine25           0001D7B2 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D7B7 - 0001D7C5 (0xf bytes), align: 0
  Segment part 111.           Intra module refs:   ?Subroutine25
                                                   ZDO_NetworkDiscoveryConfirmCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine35           0001D7B7 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D7C6 - 0001D7CB (0x6 bytes), align: 0
  Segment part 112.           Intra module refs:   ZDApp_InMsgCB
                                                   ZDApp_NwkAddrRspCB
                                                   ZDApp_SimpleDescRspCB
                                                   ZDO_NetworkDiscoveryConfirmCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine20           0001D7C6 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D7CC - 0001D7D2 (0x7 bytes), align: 0
  Segment part 113.           Intra module refs:   ZDApp_MatchDescRspCB
                                                   ZDO_NetworkDiscoveryConfirmCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0001D7CC 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D7D3 - 0001D7D9 (0x7 bytes), align: 0
  Segment part 114.           Intra module refs:   ?Subroutine4
                                                   ZDO_NetworkDiscoveryConfirmCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine28           0001D7D3 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D7DA - 0001D815 (0x3c bytes), align: 0
  Segment part 115.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_NetworkFormationConfirmCB
                                   0001D7DA        NLME_NetworkFormationConfirm (NLMEDE_CB)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D816 - 0001D822 (0xd bytes), align: 0
  Segment part 116.           Intra module refs:   ?Subroutine46
                                                   ZDApp_NetworkInit
                                                   ZDApp_event_loop
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            0001D816 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D823 - 0001D85E (0x3c bytes), align: 0
  Segment part 117.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_StartRouterConfirmCB
                                   0001D823        NLME_StartRouterConfirm (NLMEDE_CB)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D85F - 0001D86D (0xf bytes), align: 0
  Segment part 118.           Intra module refs:   ?Subroutine46
                                                   ZDAppCheckForHoldKey
                                                   ZDAppSetupProtoVersion
                                                   ZDApp_Init
                                                   ZDApp_ProcessOSALMsg
                                                   ZDApp_StartUpFromApp
                                                   ZDO_JoinIndicationCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine38           0001D85F 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D86E - 0001D87B (0xe bytes), align: 0
  Segment part 120.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_JoinIndicationCB    0001D86E        NLME_JoinIndication (NLMEDE_CB)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D87C - 0001D8C4 (0x49 bytes), align: 0
  Segment part 121.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_LeaveCnf            0001D87C        NLME_LeaveCnf (NLMEDE_CB)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D8C5 - 0001D958 (0x94 bytes), align: 0
  Segment part 122.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_LeaveInd            0001D8C5        NLME_LeaveInd (NLMEDE_CB)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D959 - 0001D967 (0xf bytes), align: 0
  Segment part 123.           Intra module refs:   ZDO_LeaveCnf
                                                   ZDO_LeaveInd
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine22           0001D959 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D968 - 0001D977 (0x10 bytes), align: 0
  Segment part 124.           Intra module refs:   ZDO_LeaveCnf
                                                   ZDO_LeaveInd
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           0001D968 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D978 - 0001D97A (0x3 bytes), align: 0
  Segment part 125.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_SyncIndicationCB    0001D978        NLME_SyncIndication (NLMEDE_CB)
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D97B - 0001D97D (0x3 bytes), align: 0
  Segment part 126.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_PollConfirmCB       0001D97B        NLME_PollConfirm (NLMEDE_CB)
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D97E - 0001D9A6 (0x29 bytes), align: 0
  Segment part 127.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrWriteNVRequest   0001D97E        AddrMgrEntryDataSave (AddrMgr)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D9A7 - 0001D9B9 (0x13 bytes), align: 0
  Segment part 128.           Intra module refs:   AddrMgrWriteNVRequest
                                                   ZDApp_NetworkInit
                                                   ZDApp_ResetTimerStart
                                                   ZDO_JoinIndicationCB
                                                   ZDO_NetworkDiscoveryConfirmCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            0001D9A7 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D9BA - 0001DA0E (0x55 bytes), align: 0
  Segment part 131.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_InMsgCB           0001D9BA        ZDP_IncomingData (ZDProfile)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000005 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DA0F - 0001DA6F (0x61 bytes), align: 0
  Segment part 132.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_UserDescRspCB     0001DA0F        ZDO_ProcessUserDescRsp (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000004 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DA70 - 0001DA79 (0xa bytes), align: 0
  Segment part 133.           Intra module refs:   ZDApp_AutoFindDestinationEx
                                                   ZDApp_BindRsp
                                                   ZDApp_MatchDescRspCB
                                                   ZDApp_SendEndDeviceBindReq
                                                   ZDApp_UnbindRsp
                                                   ZDApp_UserDescRspCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine15           0001DA70 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DA7A - 0001DABA (0x41 bytes), align: 0
  Segment part 135.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_ServerDiscRspCB   0001DA7A        ZDO_ProcessServerDiscRsp (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000001 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DABB - 0001DAC2 (0x8 bytes), align: 0
  Segment part 137.           Intra module refs:   ?Subroutine0
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine27           0001DABB 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DAC3 - 0001DAE1 (0x1f bytes), align: 0
  Segment part 139.           Intra module refs:   ZDOInitDevice
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_NetworkInit       0001DAC3 
               calls direct
               stack 1 = 00000002 ( 00000002 )
               stack 2 = 0000000C ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DAE2 - 0001DAFE (0x1d bytes), align: 0
  Segment part 145.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_StartUpFromApp    0001DAE2        MT_ZdoCommandProcessing (MT_ZDO)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000016E2 - 000016E2 (0x1 bytes), align: 0
  Segment part 19.            Intra module refs:   devState
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000016E3 - 000016E3 (0x1 bytes), align: 0
  Segment part 21.            Intra module refs:   devStartMode
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000016E4 - 000016E4 (0x1 bytes), align: 0
  Segment part 27.            Intra module refs:   ZDApp_BindUnbindRsp_TaskID
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000016E5 - 000016E6 (0x2 bytes), align: 0
  Segment part 29.            Intra module refs:   sPVerList
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000016E7 - 000016EC (0x6 bytes), align: 0
  Segment part 31.            Intra module refs:   ZDApp_epDesc
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000016ED - 000016F0 (0x4 bytes), align: 0
  Segment part 37.            Intra module refs:   __Constant_80000

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\ZDCache.r51
    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\ZDConfig.r51
  PROGRAM MODULE, NAME : ZDConfig

  SEGMENTS IN THE MODULE
  ======================
XDATA_I
  Relative segment, address: XDATA 0000FC23 - 0000FC2C (0xa bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_Config_Node_Descriptor
                                   0000FC23        NIB_init (nwk_globals)
                                                   ZDApp_InitUserDesc (ZDApp)
                                                   ZDApp_event_loop (ZDApp)
                                                   ZDO_LeaveInd (ZDApp)
                                                   ZDO_ProcessNodeDescReq (ZDObject)
                                                   ZDO_ProcessServerDiscReq (ZDObject)
                                                   ZDO_ProcessUserDescSet (ZDObject)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC2D - 0000FC2E (0x2 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_Config_Power_Descriptor
                                   0000FC2D        ZDO_ProcessPowerDescReq (ZDObject)
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000016F1 - 000016FA (0xa bytes), align: 0
  Segment part 7.             Intra module refs:   ZDO_Config_Node_Descriptor
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000016FB - 000016FC (0x2 bytes), align: 0
  Segment part 9.             Intra module refs:   ZDO_Config_Power_Descriptor

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\ZDObject.r51
  PROGRAM MODULE, NAME : ZDObject

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000F738 - 0000F76B (0x34 bytes), align: 0
  Segment part 6.             Intra module refs:   ZDO_MatchEndDeviceBind
                                                   ZDO_ProcessActiveEPReq
                                                   ZDO_ProcessMatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ZDOBuildBuf             0000F738 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F76C - 0000F76D (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   ?Subroutine102
                                                   ?Subroutine2
                                                   ?Subroutine24
                                                   ?Subroutine26
                                                   ?Subroutine33
                                                   ?Subroutine34
                                                   ?Subroutine44
                                                   ?Subroutine56
                                                   ?Subroutine64
                                                   ZDMatchSendState
                                                   ZDO_MatchEndDeviceBind
                                                   ZDO_ProcessBindUnbindRsp
                                                   ZDO_RemoveMatchMemory
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           matchED                 0000F76C 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013000 - 00013013 (0x14 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_Init                00013000        ZDApp_Init (ZDApp)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013014 - 0001308C (0x79 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_StartDevice         00013014        ZDApp_event_loop (ZDApp)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001308D - 00013091 (0x5 bytes), align: 0
  Segment part 10.            Intra module refs:   ZDO_ProcessServerDiscRsp
                                                   ZDO_StartDevice
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine91           0001308D 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013092 - 000130FC (0x6b bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_UpdateNwkStatus     00013092        ZDApp_event_loop (ZDApp)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000130FD - 0001317B (0x7f bytes), align: 0
  Segment part 12.            Intra module refs:   ?Subroutine37
           LOCAL                   ADDRESS         
           =====                   =======         
           ZDO_CompareClusterLists
                                   000130FD 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000001C ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001317C - 00013183 (0x8 bytes), align: 0
  Segment part 13.            Intra module refs:   ZDMatchSendState
                                                   ZDO_CompareClusterLists
                                                   ZDO_CopyMatchInfo
                                                   ZDO_ProcessActiveEPReq
                                                   ZDO_ProcessAddrRsp
                                                   ZDO_ProcessMatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine93           0001317C 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013184 - 0001318E (0xb bytes), align: 0
  Segment part 14.            Intra module refs:   ?Subroutine22
                                                   ?Subroutine59
                                                   ZDO_CompareClusterLists
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine80           00013184 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001318F - 00013194 (0x6 bytes), align: 0
  Segment part 15.            Intra module refs:   ZDO_AnyClusterMatches
                                                   ZDO_CompareClusterLists
                                                   ZDO_UpdateNwkStatus
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine58           0001318F 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013195 - 0001321C (0x88 bytes), align: 0
  Segment part 16.            Intra module refs:   ZDO_ProcessEndDeviceBindReq
                                                   ZDO_ProcessMatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ZDO_CreateAlignedUINT16List
                                   00013195 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000024 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001321D - 0001327D (0x61 bytes), align: 0
  Segment part 17.            Intra module refs:   ZDO_ProcessMatchDescReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_AnyClusterMatches   0001321D 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000020 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001327E - 000132DB (0x5e bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ProcessNodeDescReq
                                   0001327E        ZDP_IncomingData (ZDProfile)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000001 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000132DC - 000132E0 (0x5 bytes), align: 0
  Segment part 19.            Intra module refs:   ZDO_AnyClusterMatches
                                                   ZDO_ProcessBindUnbindRsp
                                                   ZDO_ProcessNodeDescReq
                                                   ZDO_ProcessPowerDescReq
                                                   ZDO_UpdateNwkStatus
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine92           000132DC 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000132E1 - 00013340 (0x60 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ProcessPowerDescReq
                                   000132E1        ZDP_IncomingData (ZDProfile)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000001 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013341 - 0001335B (0x1b bytes), align: 0
  Segment part 21.            Intra module refs:   ZDO_ProcessNodeDescReq
                                                   ZDO_ProcessPowerDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine25           00013341 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001335C - 0001340C (0xb1 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ProcessSimpleDescReq
                                   0001335C        ZDP_IncomingData (ZDProfile)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000001 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001340D - 000134BA (0xae bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ProcessActiveEPReq
                                   0001340D        ZDP_IncomingData (ZDProfile)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000001 ( 00000017 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000134BB - 0001391A (0x460 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ProcessMatchDescReq
                                   000134BB        ZDP_IncomingData (ZDProfile)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000001 ( 00000025 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001391B - 00013927 (0xd bytes), align: 0
  Segment part 25.            Intra module refs:   ZDO_ProcessMatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine49           0001391B 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013928 - 0001392B (0x4 bytes), align: 0
  Segment part 26.            Intra module refs:   ZDO_ProcessMatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine47           00013928 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001392C - 00013930 (0x5 bytes), align: 0
  Segment part 27.            Intra module refs:   ?Subroutine29
                                                   ?Subroutine47
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine78           0001392C 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013931 - 00013934 (0x4 bytes), align: 0
  Segment part 28.            Intra module refs:   ZDO_ProcessMatchDescReq
                                                   ZDO_UpdateNwkStatus
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine41           00013931 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013935 - 0001393B (0x7 bytes), align: 0
  Segment part 29.            Intra module refs:   ZDO_ProcessMatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine40           00013935 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001393C - 00013940 (0x5 bytes), align: 0
  Segment part 30.            Intra module refs:   ?Subroutine28
                                                   ?Subroutine40
                                                   ?Subroutine41
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine77           0001393C 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013941 - 00013946 (0x6 bytes), align: 0
  Segment part 31.            Intra module refs:   ?Subroutine77
                                                   ?Subroutine78
                                                   ZDMatchSendState
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine86           00013941 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013947 - 0001394D (0x7 bytes), align: 0
  Segment part 32.            Intra module refs:   ?Subroutine40
                                                   ?Subroutine79
                                                   ?Subroutine86
                                                   ZDO_ProcessMatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine89           00013947 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001394E - 00013957 (0xa bytes), align: 0
  Segment part 33.            Intra module refs:   ZDMatchSendState
                                                   ZDO_ProcessMatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine36           0001394E 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013958 - 0001395E (0x7 bytes), align: 0
  Segment part 34.            Intra module refs:   ZDO_ProcessMatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine30           00013958 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001395F - 00013963 (0x5 bytes), align: 0
  Segment part 35.            Intra module refs:   ZDO_ProcessMatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine29           0001395F 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013964 - 0001396A (0x7 bytes), align: 0
  Segment part 36.            Intra module refs:   ?Subroutine29
                                                   ?Subroutine30
                                                   ?Subroutine78
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine97           00013964 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001396B - 00013977 (0xd bytes), align: 0
  Segment part 37.            Intra module refs:   ZDO_ProcessMatchDescReq
                                                   ZDO_UpdateNwkStatus
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine28           0001396B 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013978 - 0001397D (0x6 bytes), align: 0
  Segment part 38.            Intra module refs:   ?Subroutine2
                                                   ?Subroutine28
                                                   ?Subroutine30
                                                   ?Subroutine48
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine79           00013978 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001397E - 00013983 (0x6 bytes), align: 0
  Segment part 39.            Intra module refs:   ZDO_ProcessAddrRsp
                                                   ZDO_ProcessMatchDescReq
                                                   ZDO_UpdateNwkStatus
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine20           0001397E 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013984 - 00013990 (0xd bytes), align: 0
  Segment part 40.            Intra module refs:   ZDO_ProcessMatchDescReq
                                                   ZDO_ProcessSimpleDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine12           00013984 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013991 - 00013B20 (0x190 bytes), align: 0
  Segment part 41.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ProcessEndDeviceBindReq
                                   00013991        ZDP_IncomingData (ZDProfile)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000001 ( 00000024 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013B21 - 00013B27 (0x7 bytes), align: 0
  Segment part 42.            Intra module refs:   ZDO_ProcessEndDeviceBindReq
                                                   ZDO_ProcessUserDescSet
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine35           00013B21 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013B28 - 00013B2C (0x5 bytes), align: 0
  Segment part 43.            Intra module refs:   ?Subroutine35
                                                   ?Subroutine85
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine101          00013B28 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013B2D - 00013B2D (0x1 bytes), align: 0
  Segment part 44.            Intra module refs:   ZDO_ProcessEndDeviceBindReq
                                                   ZDO_ProcessNodeDescRsp
                                                   ZDO_UpdateNwkStatus
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine19           00013B2D 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013B2E - 00013B33 (0x6 bytes), align: 0
  Segment part 45.            Intra module refs:   ?Subroutine19
                                                   ?Subroutine4
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine98           00013B2E 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013B34 - 00013B3A (0x7 bytes), align: 0
  Segment part 46.            Intra module refs:   ZDO_ProcessEndDeviceBindReq
                                                   ZDO_ProcessMatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine17           00013B34 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013B3B - 00013CD1 (0x197 bytes), align: 0
  Segment part 47.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ProcessAddrRsp      00013B3B        ZDP_IncomingData (ZDProfile)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000002 ( 0000001E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013CD2 - 00013CDB (0xa bytes), align: 0
  Segment part 48.            Intra module refs:   ZDO_ProcessAddrRsp
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine61           00013CD2 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013CDC - 00013CE8 (0xd bytes), align: 0
  Segment part 49.            Intra module refs:   ZDO_ProcessAddrRsp
                                                   ZDO_ProcessSimpleDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine46           00013CDC 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013CE9 - 00013CF5 (0xd bytes), align: 0
  Segment part 50.            Intra module refs:   ZDO_CopyMatchInfo
                                                   ZDO_ParseSimpleDescBuf
                                                   ZDO_ProcessAddrRsp
                                                   ZDO_ProcessEndDeviceBindReq
                                                   ZDO_ProcessMatchDescReq
                                                   ZDO_ProcessSimpleDescReq
                                                   ZDO_RemoveMatchMemory
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine21           00013CE9 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013CF6 - 00013CFA (0x5 bytes), align: 0
  Segment part 51.            Intra module refs:   ZDMatchSendState
                                                   ZDO_ProcessAddrRsp
                                                   ZDO_ProcessMatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            00013CF6 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013CFB - 00013E1B (0x121 bytes), align: 0
  Segment part 52.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ProcessNodeDescRsp
                                   00013CFB        ZDP_IncomingData (ZDProfile)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000019 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013E1C - 00013E23 (0x8 bytes), align: 0
  Segment part 53.            Intra module refs:   ?Subroutine5
                                                   ZDO_ProcessNodeDescRsp
                                                   ZDO_ProcessPowerDescRsp
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine71           00013E1C 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013E24 - 00013E28 (0x5 bytes), align: 0
  Segment part 54.            Intra module refs:   ZDMatchSendState
                                                   ZDO_ProcessAddrRsp
                                                   ZDO_ProcessMatchDescReq
                                                   ZDO_ProcessNodeDescRsp
                                                   ZDO_ProcessSimpleDescRsp
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine62           00013E24 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013E29 - 00013E30 (0x8 bytes), align: 0
  Segment part 55.            Intra module refs:   ZDO_ProcessNodeDescRsp
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00013E29 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013E31 - 00013E37 (0x7 bytes), align: 0
  Segment part 56.            Intra module refs:   ?Subroutine0
                                                   ZDO_ProcessNodeDescRsp
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine74           00013E31 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013E38 - 00013ECD (0x96 bytes), align: 0
  Segment part 57.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ProcessPowerDescRsp
                                   00013E38        ZDP_IncomingData (ZDProfile)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013ECE - 00013ED5 (0x8 bytes), align: 0
  Segment part 58.            Intra module refs:   ZDO_ParseSimpleDescBuf
                                                   ZDO_ProcessEPListRsp
                                                   ZDO_ProcessEndDeviceBindReq
                                                   ZDO_ProcessNodeDescRsp
                                                   ZDO_ProcessPowerDescRsp
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine104          00013ECE 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013ED6 - 00013F55 (0x80 bytes), align: 0
  Segment part 59.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ProcessSimpleDescRsp
                                   00013ED6        ZDP_IncomingData (ZDProfile)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000001D )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013F56 - 00013FCC (0x77 bytes), align: 0
  Segment part 60.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ProcessEPListRsp    00013F56        ZDP_IncomingData (ZDProfile)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000002 ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013FCD - 00013FD3 (0x7 bytes), align: 0
  Segment part 61.            Intra module refs:   ZDO_AnyClusterMatches
                                                   ZDO_ProcessAddrRsp
                                                   ZDO_ProcessEPListRsp
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine53           00013FCD 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013FD4 - 00014047 (0x74 bytes), align: 0
  Segment part 62.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ProcessBindUnbindRsp
                                   00013FD4        ZDP_IncomingData (ZDProfile)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000001 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014048 - 00014084 (0x3d bytes), align: 0
  Segment part 63.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ProcessServerDiscRsp
                                   00014048        ZDP_IncomingData (ZDProfile)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014085 - 000140D8 (0x54 bytes), align: 0
  Segment part 64.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ProcessServerDiscReq
                                   00014085        ZDP_IncomingData (ZDProfile)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000001 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000140D9 - 000140DD (0x5 bytes), align: 0
  Segment part 65.            Intra module refs:   ZDO_ProcessServerDiscReq
                                                   ZDO_ProcessUserDescRsp
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine105          000140D9 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000140DE - 000140E0 (0x3 bytes), align: 0
  Segment part 67.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_PermitJoiningTimeout
                                   000140DE        NLME_PermitJoiningEvent (NLMEDE)
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000140E1 - 0001413A (0x5a bytes), align: 0
  Segment part 68.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ProcessUserDescRsp
                                   000140E1        ZDP_IncomingData (ZDProfile)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001413B - 00014147 (0xd bytes), align: 0
  Segment part 69.            Intra module refs:   ZDMatchSendState
                                                   ZDO_ProcessAddrRsp
                                                   ZDO_ProcessMatchDescReq
                                                   ZDO_ProcessUserDescRsp
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine67           0001413B 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014148 - 0001414F (0x8 bytes), align: 0
  Segment part 70.            Intra module refs:   ZDO_CompareClusterLists
                                                   ZDO_MatchEndDeviceBind
                                                   ZDO_ProcessAddrRsp
                                                   ZDO_ProcessMatchDescReq
                                                   ZDO_ProcessServerDiscRsp
                                                   ZDO_ProcessUserDescRsp
                                                   ZDO_StartDevice
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine57           00014148 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014150 - 00014155 (0x6 bytes), align: 0
  Segment part 71.            Intra module refs:   ?Subroutine21
                                                   ?Subroutine23
                                                   ?Subroutine55
                                                   ?Subroutine56
                                                   ?Subroutine57
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine81           00014150 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014156 - 00014156 (0x1 bytes), align: 0
  Segment part 72.            Intra module refs:   ZDO_MatchEndDeviceBind
                                                   ZDO_ProcessUserDescRsp
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine51           00014156 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014157 - 0001415C (0x6 bytes), align: 0
  Segment part 73.            Intra module refs:   ?Subroutine2
                                                   ?Subroutine51
                                                   ZDO_ProcessMatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine99           00014157 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001415D - 00014212 (0xb6 bytes), align: 0
  Segment part 74.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ProcessUserDescReq
                                   0001415D        ZDP_IncomingData (ZDProfile)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000001 ( 00000023 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014213 - 0001421C (0xa bytes), align: 0
  Segment part 75.            Intra module refs:   ZDO_ProcessActiveEPReq
                                                   ZDO_ProcessUserDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine60           00014213 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001421D - 0001422C (0x10 bytes), align: 0
  Segment part 76.            Intra module refs:   ZDO_ProcessActiveEPReq
                                                   ZDO_ProcessUserDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine39           0001421D 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001422D - 00014393 (0x167 bytes), align: 0
  Segment part 78.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ProcessUserDescSet
                                   0001422D        ZDP_IncomingData (ZDProfile)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000001 ( 00000028 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014394 - 0001439B (0x8 bytes), align: 0
  Segment part 79.            Intra module refs:   ZDO_CreateAlignedUINT16List
                                                   ZDO_MatchEndDeviceBind
                                                   ZDO_ProcessSimpleDescReq
                                                   ZDO_ProcessSimpleDescRsp
                                                   ZDO_ProcessUserDescReq
                                                   ZDO_ProcessUserDescSet
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine103          00014394 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001439C - 000143A3 (0x8 bytes), align: 0
  Segment part 82.            Intra module refs:   ?Subroutine32
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine96           0001439C 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000143A4 - 000143AB (0x8 bytes), align: 0
  Segment part 87.            Intra module refs:   ZDO_ProcessAddrRsp
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine85           000143A4 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000143AC - 000143B1 (0x6 bytes), align: 0
  Segment part 89.            Intra module refs:   ?Subroutine72
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine100          000143AC 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000143B2 - 000144F5 (0x144 bytes), align: 0
  Segment part 90.            Intra module refs:   ZDO_ProcessSimpleDescRsp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ParseSimpleDescBuf
                                   000143B2 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000001A ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000144F6 - 000144FE (0x9 bytes), align: 0
  Segment part 91.            Intra module refs:   ZDO_ParseSimpleDescBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine65           000144F6 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000144FF - 0001450A (0xc bytes), align: 0
  Segment part 92.            Intra module refs:   ?Subroutine50
                                                   ?Subroutine65
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine94           000144FF 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001450B - 00014518 (0xe bytes), align: 0
  Segment part 93.            Intra module refs:   ZDO_ParseSimpleDescBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine32           0001450B 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014519 - 0001452F (0x17 bytes), align: 0
  Segment part 94.            Intra module refs:   ZDO_ParseSimpleDescBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine27           00014519 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014530 - 00014539 (0xa bytes), align: 0
  Segment part 95.            Intra module refs:   ?Subroutine27
                                                   ZDO_ProcessUserDescRsp
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine83           00014530 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001453A - 0001453D (0x4 bytes), align: 0
  Segment part 96.            Intra module refs:   ZDO_ParseSimpleDescBuf
                                                   ZDO_ProcessEndDeviceBindReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine15           0001453A 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001453E - 00014545 (0x8 bytes), align: 0
  Segment part 97.            Intra module refs:   ?Subroutine14
                                                   ?Subroutine15
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine72           0001453E 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014546 - 0001454A (0x5 bytes), align: 0
  Segment part 98.            Intra module refs:   ZDO_ParseSimpleDescBuf
                                                   ZDO_ProcessEndDeviceBindReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine14           00014546 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001454B - 0001455D (0x13 bytes), align: 0
  Segment part 99.            Intra module refs:   ZDO_ParseSimpleDescBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           0001454B 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001455E - 00014561 (0x4 bytes), align: 0
  Segment part 100.           Intra module refs:   ZDO_ParseSimpleDescBuf
                                                   ZDO_ProcessEndDeviceBindReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            0001455E 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014562 - 0001456A (0x9 bytes), align: 0
  Segment part 101.           Intra module refs:   ?Subroutine4
                                                   ?Subroutine8
                                                   ?Subroutine9
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine70           00014562 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001456B - 00014574 (0xa bytes), align: 0
  Segment part 102.           Intra module refs:   ?Subroutine70
                                                   ZDO_ProcessNodeDescRsp
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine88           0001456B 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014575 - 0001458E (0x1a bytes), align: 0
  Segment part 103.           Intra module refs:   ZDO_ParseSimpleDescBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            00014575 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001458F - 00014594 (0x6 bytes), align: 0
  Segment part 104.           Intra module refs:   ZDO_ParseSimpleDescBuf
                                                   ZDO_ProcessEndDeviceBindReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0001458F 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014595 - 00014828 (0x294 bytes), align: 0
  Segment part 105.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_MatchEndDeviceBind
                                   00014595        ZDApp_EndDeviceBindReqCB (ZDApp)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000001D )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014829 - 00014831 (0x9 bytes), align: 0
  Segment part 106.           Intra module refs:   ZDO_MatchEndDeviceBind
                                                   ZDO_ProcessMatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine52           00014829 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014832 - 00014837 (0x6 bytes), align: 0
  Segment part 107.           Intra module refs:   ZDO_MatchEndDeviceBind
                                                   ZDO_ProcessMatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine48           00014832 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014838 - 00014841 (0xa bytes), align: 0
  Segment part 108.           Intra module refs:   ZDO_MatchEndDeviceBind
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine44           00014838 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014842 - 00014848 (0x7 bytes), align: 0
  Segment part 109.           Intra module refs:   ZDMatchSendState
                                                   ZDO_MatchEndDeviceBind
                                                   ZDO_RemoveMatchMemory
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine43           00014842 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014849 - 0001484F (0x7 bytes), align: 0
  Segment part 110.           Intra module refs:   ZDO_MatchEndDeviceBind
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine42           00014849 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014850 - 0001485A (0xb bytes), align: 0
  Segment part 111.           Intra module refs:   ZDO_MatchEndDeviceBind
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine37           00014850 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001485B - 00014864 (0xa bytes), align: 0
  Segment part 112.           Intra module refs:   ZDO_MatchEndDeviceBind
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine31           0001485B 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014865 - 00014871 (0xd bytes), align: 0
  Segment part 113.           Intra module refs:   ZDMatchSendState
                                                   ZDO_MatchEndDeviceBind
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine24           00014865 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014872 - 0001487E (0xd bytes), align: 0
  Segment part 114.           Intra module refs:   ZDMatchSendState
                                                   ZDO_MatchEndDeviceBind
                                                   ZDO_ProcessEPListRsp
                                                   ZDO_ProcessEndDeviceBindReq
                                                   ZDO_ProcessMatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine18           00014872 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001487F - 0001488C (0xe bytes), align: 0
  Segment part 115.           Intra module refs:   ZDO_MatchEndDeviceBind
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine16           0001487F 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001488D - 0001492E (0xa2 bytes), align: 0
  Segment part 116.           Intra module refs:   ZDMatchSendState
                                                   ZDO_MatchEndDeviceBind
           LOCAL                   ADDRESS         
           =====                   =======         
           ZDO_RemoveMatchMemory   0001488D 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000025 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001492F - 00014A17 (0xe9 bytes), align: 0
  Segment part 117.           Intra module refs:   ZDO_MatchEndDeviceBind
           LOCAL                   ADDRESS         
           =====                   =======         
           ZDO_CopyMatchInfo       0001492F 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000018 ( 00000013 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014A18 - 00014A19 (0x2 bytes), align: 0
  Segment part 118.           Intra module refs:   ZDO_CopyMatchInfo
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine69           00014A18 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014A1A - 00014A22 (0x9 bytes), align: 0
  Segment part 119.           Intra module refs:   ?Subroutine68
                                                   ?Subroutine69
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine95           00014A1A 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014A23 - 00014A26 (0x4 bytes), align: 0
  Segment part 120.           Intra module refs:   ZDO_CopyMatchInfo
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine68           00014A23 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014A27 - 00014A38 (0x12 bytes), align: 0
  Segment part 121.           Intra module refs:   ZDO_CopyMatchInfo
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine63           00014A27 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014A39 - 00014A44 (0xc bytes), align: 0
  Segment part 122.           Intra module refs:   ZDO_CopyMatchInfo
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine59           00014A39 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014A45 - 00014A50 (0xc bytes), align: 0
  Segment part 123.           Intra module refs:   ZDO_CopyMatchInfo
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine50           00014A45 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014A51 - 00014A5D (0xd bytes), align: 0
  Segment part 124.           Intra module refs:   ZDO_CopyMatchInfo
                                                   ZDO_MatchEndDeviceBind
                                                   ZDO_ProcessMatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine23           00014A51 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014A5E - 00014A70 (0x13 bytes), align: 0
  Segment part 125.           Intra module refs:   ZDO_CopyMatchInfo
                                                   ZDO_ProcessEndDeviceBindReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           00014A5E 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014A71 - 00014D14 (0x2a4 bytes), align: 0
  Segment part 126.           Intra module refs:   ZDO_EndDeviceBindMatchTimeoutCB
                                                   ZDO_MatchEndDeviceBind
                                                   ZDO_ProcessBindUnbindRsp
           LOCAL                   ADDRESS         
           =====                   =======         
           ZDMatchSendState        00014A71 
               calls direct
               stack 1 = 00000002 ( 00000001 )
               stack 2 = 00000018 ( 0000002D )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014D15 - 00014D1E (0xa bytes), align: 0
  Segment part 127.           Intra module refs:   ZDMatchSendState
                                                   ZDO_CopyMatchInfo
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine66           00014D15 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014D1F - 00014D2B (0xd bytes), align: 0
  Segment part 128.           Intra module refs:   ZDMatchSendState
                                                   ZDO_MatchEndDeviceBind
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine64           00014D1F 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014D2C - 00014D3B (0x10 bytes), align: 0
  Segment part 129.           Intra module refs:   ZDMatchSendState
                                                   ZDO_MatchEndDeviceBind
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine56           00014D2C 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014D3C - 00014D47 (0xc bytes), align: 0
  Segment part 130.           Intra module refs:   ZDMatchSendState
                                                   ZDO_MatchEndDeviceBind
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine55           00014D3C 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014D48 - 00014D54 (0xd bytes), align: 0
  Segment part 131.           Intra module refs:   ZDMatchSendState
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine54           00014D48 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014D55 - 00014D59 (0x5 bytes), align: 0
  Segment part 132.           Intra module refs:   ?Subroutine22
                                                   ?Subroutine31
                                                   ?Subroutine42
                                                   ?Subroutine54
                                                   ?Subroutine7
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine102          00014D55 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014D5A - 00014D5D (0x4 bytes), align: 0
  Segment part 133.           Intra module refs:   ZDMatchSendState
                                                   ZDO_MatchEndDeviceBind
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine45           00014D5A 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014D5E - 00014D62 (0x5 bytes), align: 0
  Segment part 134.           Intra module refs:   ?Subroutine16
                                                   ?Subroutine23
                                                   ?Subroutine38
                                                   ?Subroutine44
                                                   ?Subroutine45
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine76           00014D5E 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014D63 - 00014D6C (0xa bytes), align: 0
  Segment part 135.           Intra module refs:   ?Subroutine75
                                                   ?Subroutine76
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine87           00014D63 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014D6D - 00014D75 (0x9 bytes), align: 0
  Segment part 136.           Intra module refs:   ZDMatchSendState
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine38           00014D6D 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014D76 - 00014D81 (0xc bytes), align: 0
  Segment part 137.           Intra module refs:   ZDMatchSendState
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine34           00014D76 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014D82 - 00014D8D (0xc bytes), align: 0
  Segment part 138.           Intra module refs:   ZDMatchSendState
                                                   ZDO_MatchEndDeviceBind
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine33           00014D82 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014D8E - 00014D97 (0xa bytes), align: 0
  Segment part 139.           Intra module refs:   ZDMatchSendState
                                                   ZDO_MatchEndDeviceBind
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine26           00014D8E 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014D98 - 00014D9D (0x6 bytes), align: 0
  Segment part 140.           Intra module refs:   ?Subroutine24
                                                   ?Subroutine26
                                                   ?Subroutine31
                                                   ?Subroutine33
                                                   ?Subroutine34
                                                   ?Subroutine37
                                                   ?Subroutine42
                                                   ?Subroutine43
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine75           00014D98 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014D9E - 00014DB5 (0x18 bytes), align: 0
  Segment part 141.           Intra module refs:   ZDMatchSendState
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine22           00014D9E 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014DB6 - 00014DBE (0x9 bytes), align: 0
  Segment part 142.           Intra module refs:   ?Subroutine22
                                                   ZDO_ProcessSimpleDescRsp
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine84           00014DB6 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014DBF - 00014DC5 (0x7 bytes), align: 0
  Segment part 143.           Intra module refs:   ZDMatchSendState
                                                   ZDO_MatchEndDeviceBind
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            00014DBF 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014DC6 - 00014DD4 (0xf bytes), align: 0
  Segment part 144.           Intra module refs:   ZDMatchSendState
                                                   ZDO_MatchEndDeviceBind
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            00014DC6 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014DD5 - 00014DE3 (0xf bytes), align: 0
  Segment part 145.           Intra module refs:   ZDMatchSendState
                                                   ZDO_MatchEndDeviceBind
           LOCAL                   ADDRESS         
           =====                   =======         
           ZDO_EndDeviceBindMatchTimeoutCB
                                   00014DD5 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014DE4 - 00014DED (0xa bytes), align: 0
  Segment part 146.           Intra module refs:   ZDO_EndDeviceBindMatchTimeoutCB
                                                   ZDO_Init
                                                   ZDO_RemoveMatchMemory
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine90           00014DE4 

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\ZDProfile.r51
  PROGRAM MODULE, NAME : ZDProfile

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000F76E - 0000F76E (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   ?Subroutine2
                                                   ?Subroutine70
                                                   ZDP_IEEEAddrReq
                                                   ZDP_NwkAddrReq
                                                   ZDP_ServerDiscReq
                                                   ZDP_UserDescSet
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_TransID             0000F76E        ZDMatchSendState (ZDObject)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F76F - 0000F7BE (0x50 bytes), align: 0
  Segment part 8.             Intra module refs:   Segment part 10
           LOCAL                   ADDRESS         
           =====                   =======         
           ZDP_Buf                 0000F76F 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC2F - 0000FC30 (0x2 bytes), align: 0
  Segment part 9.             Intra module refs:   ?Subroutine14
                                                   ?Subroutine17
                                                   ?Subroutine18
                                                   ?Subroutine19
                                                   ?Subroutine23
                                                   ?Subroutine25
                                                   ?Subroutine48
                                                   ?Subroutine5
                                                   ZDP_GenericRsp
                                                   ZDP_SimpleDescMsg
                                                   ZDP_UserDescRsp
                                                   fillAndSend
           LOCAL                   ADDRESS         
           =====                   =======         
           ZDP_TmpBuf              0000FC2F 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F7BF - 0000F7BF (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   ZDP_BindUnbindReq
                                                   ZDP_EPRsp
                                                   ZDP_SendData
                                                   ZDP_ServerDiscReq
                                                   fillAndSend
                                                   zdpProcessAddrReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ZDP_TxOptions           0000F7BF 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B621 - 0001B6CE (0xae bytes), align: 0
  Segment part 12.            Intra module refs:   ?Subroutine2
                                                   ?Subroutine63
                                                   ?Subroutine70
                                                   ZDP_EPRsp
                                                   ZDP_IEEEAddrReq
                                                   ZDP_NodeDescMsg
                                                   ZDP_NwkAddrReq
                                                   ZDP_SendData
                                                   ZDP_ServerDiscReq
                                                   ZDP_SimpleDescMsg
                                                   ZDP_UserDescRsp
                                                   ZDP_UserDescSet
                                                   zdpProcessAddrReq
           LOCAL                   ADDRESS         
           =====                   =======         
           fillAndSend             0001B621 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000018 ( 0000001C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B6CF - 0001B6D6 (0x8 bytes), align: 0
  Segment part 13.            Intra module refs:   ZDP_SimpleDescMsg
                                                   fillAndSend
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine62           0001B6CF 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B6D7 - 0001B749 (0x73 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_SendData            0001B6D7        ?Subroutine56 (ZDObject)
                                                   ZDMatchSendState (ZDObject)
                                                   ZDO_MatchEndDeviceBind (ZDObject)
                                                   ZDO_ProcessUserDescSet (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000005 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B74A - 0001B75D (0x14 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_NWKAddrOfInterestReq
                                   0001B74A        MT_ZdoCommandProcessing (MT_ZDO)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000001 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B75E - 0001B771 (0x14 bytes), align: 0
  Segment part 16.            Intra module refs:   ZDP_NWKAddrOfInterestReq
                                                   ZDP_SimpleDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine70           0001B75E 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B772 - 0001B795 (0x24 bytes), align: 0
  Segment part 17.            Intra module refs:   ?Subroutine70
                                                   ?Subroutine71
                                                   ZDP_GenericRsp
                                                   ZDP_PowerDescMsg
                                                   ZDP_ServerDiscRsp
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine63           0001B772 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B796 - 0001B826 (0x91 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_NwkAddrReq          0001B796        MT_ZdoCommandProcessing (MT_ZDO)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000017 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B827 - 0001B82E (0x8 bytes), align: 0
  Segment part 19.            Intra module refs:   ZDP_NodeDescMsg
                                                   ZDP_NwkAddrReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine64           0001B827 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B82F - 0001B838 (0xa bytes), align: 0
  Segment part 20.            Intra module refs:   ZDP_IEEEAddrReq
                                                   ZDP_NwkAddrReq
                                                   ZDP_ServerDiscReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine32           0001B82F 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B839 - 0001B88C (0x54 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_IEEEAddrReq         0001B839        MT_ZdoCommandProcessing (MT_ZDO)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000015 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B88D - 0001B891 (0x5 bytes), align: 0
  Segment part 22.            Intra module refs:   ZDP_IEEEAddrReq
                                                   ZDP_ServerDiscReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine71           0001B88D 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B892 - 0001B97D (0xec bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_MatchDescReq        0001B892        MT_ZdoCommandProcessing (MT_ZDO)
                                                   ZDApp_AutoFindDestinationEx (ZDApp)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000008 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B97E - 0001B981 (0x4 bytes), align: 0
  Segment part 24.            Intra module refs:   ZDP_MatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine29           0001B97E 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B982 - 0001B98A (0x9 bytes), align: 0
  Segment part 25.            Intra module refs:   ?Subroutine29
                                                   ?Subroutine50
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine60           0001B982 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B98B - 0001B98E (0x4 bytes), align: 0
  Segment part 26.            Intra module refs:   ZDP_MatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine15           0001B98B 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B98F - 0001B993 (0x5 bytes), align: 0
  Segment part 27.            Intra module refs:   ZDP_MatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           0001B98F 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B994 - 0001B9AE (0x1b bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_SimpleDescReq       0001B994        MT_ZdoCommandProcessing (MT_ZDO)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000001 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B9AF - 0001B9BC (0xe bytes), align: 0
  Segment part 29.            Intra module refs:   ZDP_NWKAddrOfInterestReq
                                                   ZDP_SimpleDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0001B9AF 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B9BD - 0001B9C4 (0x8 bytes), align: 0
  Segment part 30.            Intra module refs:   ?Subroutine11
                                                   ?Subroutine21
                                                   ?Subroutine26
                                                   ?Subroutine5
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine48           0001B9BD 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B9C5 - 0001B9C6 (0x2 bytes), align: 0
  Segment part 31.            Intra module refs:   ?Subroutine48
                                                   ?Subroutine5
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine61           0001B9C5 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B9C7 - 0001B9CD (0x7 bytes), align: 0
  Segment part 32.            Intra module refs:   ?Subroutine61
                                                   ZDP_BindUnbindReq
                                                   zdpProcessAddrReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine65           0001B9C7 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B9CE - 0001BA81 (0xb4 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_UserDescSet         0001B9CE        MT_ZdoCommandProcessing (MT_ZDO)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000002 ( 00000013 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BA82 - 0001BAE0 (0x5f bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_ServerDiscReq       0001BA82        MT_ZdoCommandProcessing (MT_ZDO)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000015 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BAE1 - 0001BCE8 (0x208 bytes), align: 0
  Segment part 35.            Intra module refs:   ZDP_IncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           zdpProcessAddrReq       0001BAE1 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000019 ( 00000018 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BCE9 - 0001BCEC (0x4 bytes), align: 0
  Segment part 36.            Intra module refs:   zdpProcessAddrReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine16           0001BCE9 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BCED - 0001BCF3 (0x7 bytes), align: 0
  Segment part 37.            Intra module refs:   ?Subroutine16
                                                   ?Subroutine8
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine47           0001BCED 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BCF4 - 0001BDAE (0xbb bytes), align: 0
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_NodeDescMsg         0001BCF4        ZDO_ProcessNodeDescReq (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000003 ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BDAF - 0001BDB9 (0xb bytes), align: 0
  Segment part 39.            Intra module refs:   ZDP_MatchDescReq
                                                   ZDP_NodeDescMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine33           0001BDAF 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BDBA - 0001BDBF (0x6 bytes), align: 0
  Segment part 40.            Intra module refs:   ZDP_NodeDescMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine12           0001BDBA 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BDC0 - 0001BDC3 (0x4 bytes), align: 0
  Segment part 41.            Intra module refs:   ?Subroutine12
                                                   ZDP_NodeDescMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine52           0001BDC0 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BDC4 - 0001BDCC (0x9 bytes), align: 0
  Segment part 42.            Intra module refs:   ?Subroutine43
                                                   ?Subroutine52
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine56           0001BDC4 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BDCD - 0001BDD2 (0x6 bytes), align: 0
  Segment part 43.            Intra module refs:   ?Subroutine22
                                                   ?Subroutine56
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine66           0001BDCD 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BDD3 - 0001BDD6 (0x4 bytes), align: 0
  Segment part 44.            Intra module refs:   ZDP_NodeDescMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            0001BDD3 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BDD7 - 0001BDDE (0x8 bytes), align: 0
  Segment part 45.            Intra module refs:   ?Subroutine7
                                                   ?Subroutine9
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine43           0001BDD7 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BDDF - 0001BDE4 (0x6 bytes), align: 0
  Segment part 46.            Intra module refs:   ZDP_NodeDescMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            0001BDDF 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BDE5 - 0001BE29 (0x45 bytes), align: 0
  Segment part 47.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_PowerDescMsg        0001BDE5        ZDO_ProcessPowerDescReq (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000003 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BE2A - 0001BE2B (0x2 bytes), align: 0
  Segment part 48.            Intra module refs:   ZDP_NodeDescMsg
                                                   ZDP_PowerDescMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine28           0001BE2A 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BE2C - 0001BE30 (0x5 bytes), align: 0
  Segment part 49.            Intra module refs:   ?Subroutine28
                                                   ?Subroutine40
                                                   ?Subroutine8
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine68           0001BE2C 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BE31 - 0001BE3C (0xc bytes), align: 0
  Segment part 50.            Intra module refs:   ZDP_PowerDescMsg
                                                   ZDP_SendData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine22           0001BE31 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BE3D - 0001BFEA (0x1ae bytes), align: 0
  Segment part 51.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_SimpleDescMsg       0001BE3D        ZDO_ProcessSimpleDescReq (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000004 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BFEB - 0001BFF2 (0x8 bytes), align: 0
  Segment part 52.            Intra module refs:   ?Subroutine19
                                                   ZDP_SimpleDescMsg
                                                   fillAndSend
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine49           0001BFEB 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BFF3 - 0001BFFB (0x9 bytes), align: 0
  Segment part 53.            Intra module refs:   ZDP_SimpleDescMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine40           0001BFF3 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BFFC - 0001C002 (0x7 bytes), align: 0
  Segment part 54.            Intra module refs:   ZDP_SimpleDescMsg
                                                   ZDP_UserDescSet
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine36           0001BFFC 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C003 - 0001C007 (0x5 bytes), align: 0
  Segment part 55.            Intra module refs:   ZDP_NodeDescMsg
                                                   ZDP_SimpleDescMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine24           0001C003 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C008 - 0001C00D (0x6 bytes), align: 0
  Segment part 56.            Intra module refs:   ?Subroutine19
                                                   ?Subroutine24
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine67           0001C008 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C00E - 0001C018 (0xb bytes), align: 0
  Segment part 57.            Intra module refs:   ZDP_BindUnbindReq
                                                   ZDP_MatchDescReq
                                                   ZDP_SendData
                                                   ZDP_SimpleDescMsg
                                                   ZDP_UserDescSet
                                                   zdpProcessAddrReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine18           0001C00E 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C019 - 0001C026 (0xe bytes), align: 0
  Segment part 58.            Intra module refs:   ZDP_SimpleDescMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            0001C019 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C027 - 0001C02E (0x8 bytes), align: 0
  Segment part 59.            Intra module refs:   ?Subroutine45
                                                   ?Subroutine6
                                                   ZDP_SimpleDescMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine59           0001C027 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C02F - 0001C036 (0x8 bytes), align: 0
  Segment part 60.            Intra module refs:   ZDP_SimpleDescMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0001C02F 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C037 - 0001C043 (0xd bytes), align: 0
  Segment part 61.            Intra module refs:   ?Subroutine4
                                                   ?Subroutine6
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine50           0001C037 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C044 - 0001C04F (0xc bytes), align: 0
  Segment part 62.            Intra module refs:   ZDP_SimpleDescMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0001C044 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C050 - 0001C056 (0x7 bytes), align: 0
  Segment part 63.            Intra module refs:   ?Subroutine3
                                                   ?Subroutine4
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine45           0001C050 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C057 - 0001C10D (0xb7 bytes), align: 0
  Segment part 64.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_EPRsp               0001C057        ZDO_ProcessActiveEPReq (ZDObject)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000007 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C10E - 0001C111 (0x4 bytes), align: 0
  Segment part 65.            Intra module refs:   ZDP_EPRsp
                                                   ZDP_UserDescRsp
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine72           0001C10E 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C112 - 0001C11B (0xa bytes), align: 0
  Segment part 66.            Intra module refs:   ?Subroutine72
                                                   ?Subroutine73
                                                   ZDP_MatchDescReq
                                                   ZDP_UserDescSet
                                                   zdpProcessAddrReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine69           0001C112 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C11C - 0001C1C3 (0xa8 bytes), align: 0
  Segment part 67.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_UserDescRsp         0001C11C        ZDO_ProcessUserDescReq (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000003 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C1C4 - 0001C1CC (0x9 bytes), align: 0
  Segment part 68.            Intra module refs:   ZDP_PowerDescMsg
                                                   ZDP_UserDescRsp
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine39           0001C1C4 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C1CD - 0001C1D4 (0x8 bytes), align: 0
  Segment part 69.            Intra module refs:   ZDP_BindUnbindReq
                                                   ZDP_MatchDescReq
                                                   ZDP_UserDescRsp
                                                   zdpProcessAddrReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine20           0001C1CD 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C1D5 - 0001C20F (0x3b bytes), align: 0
  Segment part 70.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_ServerDiscRsp       0001C1D5        ZDO_ProcessServerDiscReq (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000004 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C210 - 0001C274 (0x65 bytes), align: 0
  Segment part 71.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_GenericRsp          0001C210        ZDApp_InMsgCB (ZDApp)
                                                   ZDO_ProcessActiveEPReq (ZDObject)
                                                   ZDO_ProcessNodeDescReq (ZDObject)
                                                   ZDO_ProcessPowerDescReq (ZDObject)
                                                   ZDO_ProcessUserDescReq (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000004 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C275 - 0001C27B (0x7 bytes), align: 0
  Segment part 72.            Intra module refs:   ZDP_GenericRsp
                                                   ZDP_SimpleDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine21           0001C275 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C27C - 0001C28A (0xf bytes), align: 0
  Segment part 73.            Intra module refs:   ZDP_EPRsp
                                                   ZDP_GenericRsp
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine17           0001C27C 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C28B - 0001C3A4 (0x11a bytes), align: 0
  Segment part 74.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_EndDeviceBindReq    0001C28B        MT_ZdoCommandProcessing (MT_ZDO)
                                                   ZDApp_SendEndDeviceBindReq (ZDApp)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000009 ( 00000015 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C3A5 - 0001C3A9 (0x5 bytes), align: 0
  Segment part 75.            Intra module refs:   ZDP_BindUnbindReq
                                                   ZDP_EndDeviceBindReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine73           0001C3A5 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C3AA - 0001C3AD (0x4 bytes), align: 0
  Segment part 76.            Intra module refs:   ZDP_EndDeviceBindReq
                                                   ZDP_MatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine35           0001C3AA 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C3AE - 0001C3B1 (0x4 bytes), align: 0
  Segment part 77.            Intra module refs:   ?Subroutine34
                                                   ?Subroutine35
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine53           0001C3AE 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C3B2 - 0001C3B7 (0x6 bytes), align: 0
  Segment part 78.            Intra module refs:   ZDP_EndDeviceBindReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine34           0001C3B2 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C3B8 - 0001C3C0 (0x9 bytes), align: 0
  Segment part 79.            Intra module refs:   ZDP_EndDeviceBindReq
                                                   ZDP_MatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine19           0001C3B8 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C3C1 - 0001C3CF (0xf bytes), align: 0
  Segment part 80.            Intra module refs:   ZDP_BindUnbindReq
                                                   ZDP_EndDeviceBindReq
                                                   ZDP_MatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0001C3C1 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C3D0 - 0001C3D6 (0x7 bytes), align: 0
  Segment part 81.            Intra module refs:   ZDP_EndDeviceBindReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0001C3D0 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C3D7 - 0001C3DD (0x7 bytes), align: 0
  Segment part 82.            Intra module refs:   ?Subroutine1
                                                   ?Subroutine15
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine46           0001C3D7 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C3DE - 0001C3ED (0x10 bytes), align: 0
  Segment part 83.            Intra module refs:   ?Subroutine44
                                                   ?Subroutine46
                                                   ?Subroutine53
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine55           0001C3DE 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C3EE - 0001C3F6 (0x9 bytes), align: 0
  Segment part 84.            Intra module refs:   ZDP_EndDeviceBindReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001C3EE 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C3F7 - 0001C3FF (0x9 bytes), align: 0
  Segment part 85.            Intra module refs:   ?Subroutine0
                                                   ?Subroutine1
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine51           0001C3F7 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C400 - 0001C407 (0x8 bytes), align: 0
  Segment part 86.            Intra module refs:   ?Subroutine0
                                                   ?Subroutine10
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine44           0001C400 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C408 - 0001C51C (0x115 bytes), align: 0
  Segment part 87.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_BindUnbindReq       0001C408        MT_ZdoCommandProcessing (MT_ZDO)
                                                   ZDMatchSendState (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000008 ( 00000015 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C51D - 0001C524 (0x8 bytes), align: 0
  Segment part 88.            Intra module refs:   ?Subroutine30
                                                   ?Subroutine47
                                                   ZDP_BindUnbindReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine58           0001C51D 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C525 - 0001C528 (0x4 bytes), align: 0
  Segment part 89.            Intra module refs:   ZDP_BindUnbindReq
                                                   zdpProcessAddrReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine38           0001C525 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C529 - 0001C52C (0x4 bytes), align: 0
  Segment part 90.            Intra module refs:   ?Subroutine31
                                                   ?Subroutine38
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine54           0001C529 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C52D - 0001C535 (0x9 bytes), align: 0
  Segment part 91.            Intra module refs:   ?Subroutine47
                                                   ?Subroutine54
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine57           0001C52D 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C536 - 0001C53F (0xa bytes), align: 0
  Segment part 92.            Intra module refs:   ZDP_BindUnbindReq
                                                   ZDP_EndDeviceBindReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine37           0001C536 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C540 - 0001C547 (0x8 bytes), align: 0
  Segment part 93.            Intra module refs:   ZDP_BindUnbindReq
                                                   zdpProcessAddrReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine31           0001C540 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C548 - 0001C54C (0x5 bytes), align: 0
  Segment part 94.            Intra module refs:   ZDP_BindUnbindReq
                                                   ZDP_SimpleDescMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine30           0001C548 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C54D - 0001C550 (0x4 bytes), align: 0
  Segment part 95.            Intra module refs:   ZDP_BindUnbindReq
                                                   ZDP_GenericRsp
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine26           0001C54D 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C551 - 0001C559 (0x9 bytes), align: 0
  Segment part 96.            Intra module refs:   ZDP_BindUnbindReq
                                                   ZDP_EndDeviceBindReq
                                                   ZDP_NwkAddrReq
                                                   ZDP_SendData
                                                   ZDP_UserDescSet
                                                   zdpProcessAddrReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine25           0001C551 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C55A - 0001C565 (0xc bytes), align: 0
  Segment part 97.            Intra module refs:   ZDP_BindUnbindReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           0001C55A 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C566 - 0001C56F (0xa bytes), align: 0
  Segment part 98.            Intra module refs:   ZDP_BindUnbindReq
                                                   zdpProcessAddrReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            0001C566 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C570 - 0001C86A (0x2fb bytes), align: 0
  Segment part 99.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_IncomingData        0001C570        ZDApp_ProcessOSALMsg (ZDApp)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000001B )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C86B - 0001C877 (0xd bytes), align: 0
  Segment part 100.           Intra module refs:   ZDP_IncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine42           0001C86B 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C878 - 0001C883 (0xc bytes), align: 0
  Segment part 101.           Intra module refs:   ZDP_IncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine41           0001C878 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C884 - 0001C88C (0x9 bytes), align: 0
  Segment part 102.           Intra module refs:   ZDP_BindUnbindReq
                                                   ZDP_IncomingData
                                                   ZDP_ServerDiscReq
                                                   ZDP_ServerDiscRsp
                                                   zdpProcessAddrReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine23           0001C884 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C88D - 0001C895 (0x9 bytes), align: 0
  Segment part 103.           Intra module refs:   ZDP_EPRsp
                                                   ZDP_GenericRsp
                                                   ZDP_IEEEAddrReq
                                                   ZDP_IncomingData
                                                   ZDP_NodeDescMsg
                                                   ZDP_PowerDescMsg
                                                   ZDP_SendData
                                                   ZDP_ServerDiscRsp
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine14           0001C88D 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C896 - 0001C8A5 (0x10 bytes), align: 0
  Segment part 104.           Intra module refs:   ZDP_IncomingData
                                                   ZDP_NwkAddrReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           0001C896 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000016FD - 000016FE (0x2 bytes), align: 0
  Segment part 10.            Intra module refs:   ZDP_TmpBuf

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\ZDSecMgr.r51
  PROGRAM MODULE, NAME : ZDSecMgr

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003D4FF, align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDSecMgrInit            0003D4FF        ZDO_Init (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003D4FF - 0003D511 (0x13 bytes), align: 0
  Segment part 7.             Intra module refs:   ZDSecMgrConfig
                                                   ZDSecMgrInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0003D4FF 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003D512 - 0003D513 (0x2 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDSecMgrConfig          0003D512        ZDO_StartDevice (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000002 )

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\ZGlobals.r51
  PROGRAM MODULE, NAME : ZGlobals

  SEGMENTS IN THE MODULE
  ======================
XDATA_I
  Relative segment, address: XDATA 0000FC31 - 0000FC32 (0x2 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgResponsePollRate      0000FC31        NLME_RejoinRspCmdProcess (nwk_util)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC33 - 0000FC33 (0x1 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgMaxDataRetries        0000FC33        nwk_MacDataBuffersAdd (nwk_bufs)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC34 - 0000FC37 (0x4 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgDefaultChannelList    0000FC34        ZDO_StartDevice (ZDObject)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC38 - 0000FC38 (0x1 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgDefaultStartingScanDuration
                                   0000FC38        ZDO_StartDevice (ZDObject)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC39 - 0000FC39 (0x1 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgStackProfile          0000FC39        ZDO_NetworkDiscoveryConfirmCB (ZDApp)
                                                   nwk_start_coord (nwk)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC3A - 0000FC3A (0x1 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgIndirectMsgTimeout    0000FC3A        NIB_init (nwk_globals)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F7C0 - 0000F7C0 (0x1 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgSecurityLevel         0000F7C0        NIB_init (nwk_globals)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC3B - 0000FC3B (0x1 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgRouteExpiryTime       0000FC3B        NIB_init (nwk_globals)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F7C1 - 0000F7C8 (0x8 bytes), align: 0
  Segment part 29.            Intra module refs:   zgInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgExtendedPANID         0000F7C1        NIB_init (nwk_globals)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC3C - 0000FC3C (0x1 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgMaxBcastRetires       0000FC3C        NIB_init (nwk_globals)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC3D - 0000FC3D (0x1 bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgPassiveAckTimeout     0000FC3D        NIB_init (nwk_globals)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC3E - 0000FC3E (0x1 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgBcastDeliveryTime     0000FC3E        NIB_init (nwk_globals)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC3F - 0000FC3F (0x1 bytes), align: 0
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgNwkMode               0000FC3F        NLME_NetworkFormationRequest (NLMEDE)
                                                   RTG_GetNextHop (rtg)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC40 - 0000FC40 (0x1 bytes), align: 0
  Segment part 44.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgApscMaxFrameRetries   0000FC40        NLDE_DataCnf (NLMEDE_CB)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC41 - 0000FC42 (0x2 bytes), align: 0
  Segment part 46.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgApscAckWaitDurationPolled
                                   0000FC41        NLDE_DataCnf (NLMEDE_CB)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC43 - 0000FC44 (0x2 bytes), align: 0
  Segment part 50.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgApsDefaultMaxBindingTime
                                   0000FC43        APS_Init (APS)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F7C9 - 0000F7D8 (0x10 bytes), align: 0
  Segment part 52.            Intra module refs:   zgInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgPreConfigKey          0000F7C9 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC45 - 0000FC46 (0x2 bytes), align: 0
  Segment part 54.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgConfigPANID           0000FC45        NLME_NetworkFormationRequest (NLMEDE)
                                                   ZDO_NetworkDiscoveryConfirmCB (ZDApp)
                                                   ZDO_StartDevice (ZDObject)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00001ABF - 00001AC4 (0x6 bytes), align: 0
  Segment part 61.            Intra module refs:   zgInit
           LOCAL                   ADDRESS         
           =====                   =======         
           zgItemTable             00001ABF 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003C037 - 0003C163 (0x12d bytes), align: 0
  Segment part 62.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgInit                  0003C037        main (ZMain)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000013 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003C164 - 0003C1B8 (0x55 bytes), align: 0
  Segment part 63.            Intra module refs:   zgInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgReadStartupOptions    0003C164 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000F ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003C1B9 - 0003C1C2 (0xa bytes), align: 0
  Segment part 64.            Intra module refs:   zgReadStartupOptions
                                                   zgWriteStartupOptions
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0003C1B9 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003C1C3 - 0003C1D3 (0x11 bytes), align: 0
  Segment part 65.            Intra module refs:   zgReadStartupOptions
                                                   zgWriteStartupOptions
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0003C1C3 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003C1D4 - 0003C24D (0x7a bytes), align: 0
  Segment part 66.            Intra module refs:   zgInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgWriteStartupOptions   0003C1D4 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000F ( 0000000F )
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000016FF - 00001700 (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   zgResponsePollRate
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001701 - 00001701 (0x1 bytes), align: 0
  Segment part 15.            Intra module refs:   zgMaxDataRetries
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001702 - 00001705 (0x4 bytes), align: 0
  Segment part 19.            Intra module refs:   zgDefaultChannelList
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001706 - 00001706 (0x1 bytes), align: 0
  Segment part 21.            Intra module refs:   zgDefaultStartingScanDuration
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001707 - 00001707 (0x1 bytes), align: 0
  Segment part 23.            Intra module refs:   zgStackProfile
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001708 - 00001708 (0x1 bytes), align: 0
  Segment part 25.            Intra module refs:   zgIndirectMsgTimeout
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001709 - 00001709 (0x1 bytes), align: 0
  Segment part 28.            Intra module refs:   zgRouteExpiryTime
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000170A - 0000170A (0x1 bytes), align: 0
  Segment part 31.            Intra module refs:   zgMaxBcastRetires
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000170B - 0000170B (0x1 bytes), align: 0
  Segment part 33.            Intra module refs:   zgPassiveAckTimeout
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000170C - 0000170C (0x1 bytes), align: 0
  Segment part 35.            Intra module refs:   zgBcastDeliveryTime
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000170D - 0000170D (0x1 bytes), align: 0
  Segment part 37.            Intra module refs:   zgNwkMode
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000170E - 0000170E (0x1 bytes), align: 0
  Segment part 45.            Intra module refs:   zgApscMaxFrameRetries
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000170F - 00001710 (0x2 bytes), align: 0
  Segment part 47.            Intra module refs:   zgApscAckWaitDurationPolled
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001711 - 00001712 (0x2 bytes), align: 0
  Segment part 51.            Intra module refs:   zgApsDefaultMaxBindingTime
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001713 - 00001714 (0x2 bytes), align: 0
  Segment part 55.            Intra module refs:   zgConfigPANID

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\ZMain.r51
  PROGRAM MODULE, NAME : ZMain

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000081 - 00000081 (0x1 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SP                      00000081 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000EBF - 00000F76 (0xb8 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    00000EBF        ?call_main (?cmain)
               calls direct
               stack 1 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000F77 - 00000F83 (0xd bytes), align: 0
  Segment part 11.            Intra module refs:   main
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00000F77 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000F84 - 00000FF8 (0x75 bytes), align: 0
  Segment part 12.            Intra module refs:   main
           LOCAL                   ADDRESS         
           =====                   =======         
           zmain_vdd_check         00000F84 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000FF9 - 000010E3 (0xeb bytes), align: 0
  Segment part 13.            Intra module refs:   main
           LOCAL                   ADDRESS         
           =====                   =======         
           zmain_ext_addr          00000FF9 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000D )
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000090 - 00000090 (0x1 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P1                   00000090 

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\chipcon_banked_code_support.r51
  LIBRARY MODULE, NAME : ?BANKED_CODE_SUPPORT

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 00000086 - 000000A7 (0x22 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?BCALL                  00000086        ?Subroutine0 (ZDSecMgr)
                                                   ?Subroutine0 (hal_drivers)
                                                   ?Subroutine0 (mac_low_level)
                                                   ?Subroutine0 (mac_radio)
                                                   ?Subroutine1 (mac_csp_tx)
                                                   ?Subroutine10 (hal_lcd)
                                                   ?Subroutine10 (hal_led)
                                                   ?Subroutine15 (MTEL)
                                                   ?Subroutine15 (hal_timer)
                                                   ?Subroutine19 (OSAL)
                                                   ?Subroutine2 (mac_backoff_timer)
                                                   ?Subroutine2 (mac_csp_tx)
                                                   ?Subroutine20 (mac_rx)
                                                   ?Subroutine38 (ZDApp)
                                                   ?Subroutine4 (OSAL_Timers)
                                                   ?Subroutine46 (ZDApp)
                                                   ?Subroutine5 (OSAL_Timers)
                                                   ?Subroutine5 (mac_tx)
                                                   ?Subroutine63 (MT_ZDO)
                                                   ?Subroutine63 (ZDProfile)
                                                   ?Subroutine7 (zmac)
                                                   ?Subroutine70 (ZDProfile)
                                                   ?Subroutine9 (hal_lcd)
                                                   ?Subroutine90 (ZDObject)
                                                   ?call_main (?cmain)
                                                   AF_DataRequest (AF)
                                                   APSDE_DataConfirm (APSMEDE_CB)
                                                   APSDE_DataIndication (APSMEDE_CB)
                                                   APSDE_DataReq (APSMEDE)
                                                   APSDE_DataReqMTU (APSMEDE)
                                                   APSDE_FrameAlloc (APSMEDE)
                                                   APSDE_FrameBlkFree (APSMEDE)
                                                   APSDE_FrameBlkInit (APSMEDE)
                                                   APSDE_FrameHdrInit (APSMEDE)
                                                   APSDE_FrameHdrSet (APSMEDE)
                                                   APSDE_FrameSend (APSMEDE)
                                                   APSDE_ParseMsg (aps_util)
                                                   APSME_FrameSecInit (APSMEDE)
                                                   APSME_LookupNwkAddr (APSMEDE)
                                                   APSME_SecurityNM (APSMEDE)
                                                   APS_CmdInd (APS)
                                                   APS_SetEndDeviceBindTimeout (APS)
                                                   APS_event_loop (APS)
                                                   AddrMgrEntryAdd (AddrMgr)
                                                   AddrMgrEntryAddRef (AddrMgr)
                                                   AddrMgrEntryGet (AddrMgr)
                                                   AddrMgrEntryLookupExt (AddrMgr)
                                                   AddrMgrEntryLookupNwk (AddrMgr)
                                                   AddrMgrEntryRelease (AddrMgr)
                                                   AddrMgrEntrySet (AddrMgr)
                                                   AddrMgrEntryUpdate (AddrMgr)
                                                   AddrMgrEntryUpdateEx (AddrMgr)
                                                   AddrMgrInit (AddrMgr)
                                                   AddrMgrNwkAddrLookup (AddrMgr)
                                                   AddrMgrWriteNVRequest (ZDApp)
                                                   AssocAddNew (AssocList)
                                                   AssocGetWithAddress (AssocList)
                                                   AssocIsChild (AssocList)
                                                   AssocMakeList (AssocList)
                                                   AssocRemove (AssocList)
                                                   HalDriverInit (hal_drivers)
                                                   HalKeyConfig (hal_key)
                                                   HalKeyPoll (hal_key)
                                                   HalLcdInit (hal_lcd)
                                                   HalLedBlink (hal_led)
                                                   HalLedSet (hal_led)
                                                   HalLedUpdate (hal_led)
                                                   HalTimerConfig (hal_timer)
                                                   HalTimerStart (hal_timer)
                                                   HalTimerStop (hal_timer)
                                                   HalTimerTick (hal_timer)
                                                   HalUARTOpen (hal_uart)
                                                   HalUARTPoll (hal_uart)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   Hal_ProcessPoll (hal_drivers)
                                                   InitBoard (OnBoard)
                                                   MAC_CbackCheckPending (zmac_cb)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MAC_McpsDataAlloc (mac_data)
                                                   MAC_MlmeGetReq (mac_pib)
                                                   MAC_MlmeResetReq (mac_mgmt)
                                                   MAC_MlmeSetReq (mac_pib)
                                                   MTProcessAppMsg (MTEL)
                                                   MTProcessAppRspMsg (MTEL)
                                                   MTProcessLedControl (MTEL)
                                                   MT_BuildAndSendZToolCB (MTEL)
                                                   MT_BuildAndSendZToolResponse (MTEL)
                                                   MT_BuildSPIMsg (MTEL)
                                                   MT_ProcessCommand (MTEL)
                                                   MT_ProcessDebugMsg (MTEL)
                                                   MT_ProcessDebugStr (MTEL)
                                                   MT_ProcessEvent (MTEL)
                                                   MT_ProcessGetDeviceInfo (MTEL)
                                                   MT_ProcessGetNV (MTEL)
                                                   MT_ProcessGetNvInfo (MTEL)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   MT_ProcessSetNV (MTEL)
                                                   MT_SendSPIRespMsg (MTEL)
                                                   MT_TaskInit (MTEL)
                                                   MT_ZdoCommandProcessing (MT_ZDO)
                                                   NIB_init (nwk_globals)
                                                   NLDE_BuildFrameControl (nwk_util)
                                                   NLDE_BuildMsg (nwk_util)
                                                   NLDE_DataCnf (NLMEDE_CB)
                                                   NLDE_DataIndSend (nwk_util)
                                                   NLDE_DataIndication (NLMEDE_CB)
                                                   NLDE_DataReq (NLMEDE)
                                                   NLDE_DataReqAlloc (NLMEDE)
                                                   NLDE_DataReqSend (nwk_util)
                                                   NLDE_FrameDataLoad (APSMEDE)
                                                   NLDE_GetHandle (nwk_util)
                                                   NLDE_ParseMsg (nwk_util)
                                                   NLDE_ParseMsg2 (nwk_util)
                                                   NLDE_SendMsg (nwk_util)
                                                   NLME_CmdCnf (nwk_util)
                                                   NLME_CmdDataReqAlloc (nwk_util)
                                                   NLME_GetNeighborLinkInfo (nwk_util)
                                                   NLME_GetProtocolVersion (nwk_util)
                                                   NLME_GetRequest (NLMEDE)
                                                   NLME_IsAddressBroadcast (nwk_util)
                                                   NLME_LeaveCmdCnf (nwk_util)
                                                   NLME_LeaveCmdProcess (nwk_util)
                                                   NLME_LeaveCmdSend (nwk_util)
                                                   NLME_LeaveRsp (NLMEDE)
                                                   NLME_PermitJoiningEvent (NLMEDE)
                                                   NLME_PermitJoiningSet (NLMEDE)
                                                   NLME_RTG_BcastAdd (nwk_util)
                                                   NLME_RejoinReqCmdProcess (nwk_util)
                                                   NLME_RejoinRspCmdProcess (nwk_util)
                                                   NLME_RejoinRspSend (nwk_util)
                                                   NLME_RemoveChild (nwk_util)
                                                   NLME_RemoveFromNeighborTable (nwk_util)
                                                   NLME_RouteDiscoveryIndication (NLMEDE_CB)
                                                   NLME_RouteDiscoveryRequest (rtg)
                                                   NLME_SetAssocFlags (nwk_util)
                                                   NLME_SetBroadcastFilter (nwk_util)
                                                   NwkCommandPktProcessing (nwk)
                                                   OnBoard_KeyCallback (OnBoard)
                                                   OnBoard_SendKeys (OnBoard)
                                                   Onboard_TimerCallBack (OnBoard)
                                                   Onboard_rand (OnBoard)
                                                   RTG_AddRtgEntry (rtg)
                                                   RTG_AllocNewAddress (rtg)
                                                   RTG_BcastAdd (rtg)
                                                   RTG_BcastHold (rtg)
                                                   RTG_BcastTimeout (rtg)
                                                   RTG_BcastTimerHandler (rtg)
                                                   RTG_CalcAddress (rtg)
                                                   RTG_CheckRtDiscEntry (rtg)
                                                   RTG_CheckRtStatus (rtg)
                                                   RTG_DataReq (rtg)
                                                   RTG_DeAllocAddress (rtg)
                                                   RTG_GetLinkCost (rtg)
                                                   RTG_GetNextHop (rtg)
                                                   RTG_GetNextTreeHop (rtg)
                                                   RTG_GetPrevHop (rtg)
                                                   RTG_GetRoutingAddress (rtg)
                                                   RTG_GetRtgEntry (rtg)
                                                   RTG_GetTreeRoute (rtg)
                                                   RTG_IndirectTimeout (rtg)
                                                   RTG_Init (rtg)
                                                   RTG_ProcessRErr (rtg)
                                                   RTG_ProcessRrep (rtg)
                                                   RTG_ProcessRreq (rtg)
                                                   RTG_ProcessRtDiscBits (rtg)
                                                   RTG_RemoveRtgEntry (rtg)
                                                   RTG_RouteMaintanence (rtg)
                                                   RTG_SendRErr (rtg)
                                                   RTG_SendRrep (rtg)
                                                   RTG_TimerEvent (rtg)
                                                   RTG_UpdateNeighborEntry (nwk_util)
                                                   RTG_UpdateRtDiscEntry (rtg)
                                                   SPIMgr_Init (SPIMgr)
                                                   SPIMgr_ProcessZToolData (SPIMgr)
                                                   SSP_GetMicLen (ssp)
                                                   SSP_NwkSecurity (ssp)
                                                   SampleApp_HandleKeys (SampleApp)
                                                   SampleApp_Init (SampleApp)
                                                   SampleApp_MessageMSGCB (SampleApp)
                                                   SampleApp_ProcessEvent (SampleApp)
                                                   SampleApp_SendFlashMessage (SampleApp)
                                                   SampleApp_SendPeriodicMessage (SampleApp)
                                                   Segment part 110 (APSMEDE)
                                                   Segment part 14 (mac_coord)
                                                   Segment part 15 (hal_aes)
                                                   Segment part 16 (AddrMgr)
                                                   Segment part 17 (NLMEDE_CB)
                                                   Segment part 19 (AssocList)
                                                   Segment part 19 (NLMEDE)
                                                   Segment part 27 (mac_scan)
                                                   Segment part 29 (mac_timer)
                                                   Segment part 32 (APSMEDE)
                                                   Segment part 34 (mac_data)
                                                   Segment part 34 (mac_device)
                                                   Segment part 38 (AssocList)
                                                   Segment part 45 (mac_device)
                                                   Segment part 62 (mac_data)
                                                   Segment part 65 (mac_coord)
                                                   Segment part 73 (mac_mgmt)
                                                   Segment part 9 (AddrMgr)
                                                   SendData (SampleApp)
                                                   SetContrast (hal_lcd)
                                                   WriteLCD (hal_lcd)
                                                   ZDAppCheckForHoldKey (ZDApp)
                                                   ZDAppSetupProtoVersion (ZDApp)
                                                   ZDApp_ActiveEPRspCB (ZDApp)
                                                   ZDApp_AutoFindDestinationEx (ZDApp)
                                                   ZDApp_BindRsp (ZDApp)
                                                   ZDApp_EndDeviceBindRsp (ZDApp)
                                                   ZDApp_IEEEAddrRspCB (ZDApp)
                                                   ZDApp_InMsgCB (ZDApp)
                                                   ZDApp_Init (ZDApp)
                                                   ZDApp_InitUserDesc (ZDApp)
                                                   ZDApp_LeaveCtrlInit (ZDApp)
                                                   ZDApp_LeaveCtrlSet (ZDApp)
                                                   ZDApp_LeaveCtrlStartup (ZDApp)
                                                   ZDApp_LeaveReset (ZDApp)
                                                   ZDApp_MatchDescRspCB (ZDApp)
                                                   ZDApp_NetworkStartEvt (ZDApp)
                                                   ZDApp_NodeDescRspCB (ZDApp)
                                                   ZDApp_NwkAddrRspCB (ZDApp)
                                                   ZDApp_PowerDescRspCB (ZDApp)
                                                   ZDApp_ProcessOSALMsg (ZDApp)
                                                   ZDApp_SendEndDeviceBindReq (ZDApp)
                                                   ZDApp_SendMsg (ZDApp)
                                                   ZDApp_SendNewDstAddr (ZDApp)
                                                   ZDApp_ServerDiscRspCB (ZDApp)
                                                   ZDApp_SimpleDescRspCB (ZDApp)
                                                   ZDApp_StartUpFromApp (ZDApp)
                                                   ZDApp_UnbindRsp (ZDApp)
                                                   ZDApp_UserDescRspCB (ZDApp)
                                                   ZDApp_event_loop (ZDApp)
                                                   ZDMatchSendState (ZDObject)
                                                   ZDOInitDevice (ZDApp)
                                                   ZDO_CopyMatchInfo (ZDObject)
                                                   ZDO_CreateAlignedUINT16List (ZDObject)
                                                   ZDO_Init (ZDObject)
                                                   ZDO_JoinIndicationCB (ZDApp)
                                                   ZDO_LeaveCnf (ZDApp)
                                                   ZDO_LeaveInd (ZDApp)
                                                   ZDO_MatchEndDeviceBind (ZDObject)
                                                   ZDO_NetworkDiscoveryConfirmCB (ZDApp)
                                                   ZDO_NetworkFormationConfirmCB (ZDApp)
                                                   ZDO_ParseSimpleDescBuf (ZDObject)
                                                   ZDO_ProcessActiveEPReq (ZDObject)
                                                   ZDO_ProcessAddrRsp (ZDObject)
                                                   ZDO_ProcessBindUnbindRsp (ZDObject)
                                                   ZDO_ProcessEPListRsp (ZDObject)
                                                   ZDO_ProcessEndDeviceBindReq (ZDObject)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_ProcessNodeDescReq (ZDObject)
                                                   ZDO_ProcessNodeDescRsp (ZDObject)
                                                   ZDO_ProcessPowerDescReq (ZDObject)
                                                   ZDO_ProcessPowerDescRsp (ZDObject)
                                                   ZDO_ProcessServerDiscReq (ZDObject)
                                                   ZDO_ProcessServerDiscRsp (ZDObject)
                                                   ZDO_ProcessSimpleDescReq (ZDObject)
                                                   ZDO_ProcessSimpleDescRsp (ZDObject)
                                                   ZDO_ProcessUserDescReq (ZDObject)
                                                   ZDO_ProcessUserDescRsp (ZDObject)
                                                   ZDO_ProcessUserDescSet (ZDObject)
                                                   ZDO_RemoveMatchMemory (ZDObject)
                                                   ZDO_StartDevice (ZDObject)
                                                   ZDO_StartRouterConfirmCB (ZDApp)
                                                   ZDO_UpdateNwkStatus (ZDObject)
                                                   ZDP_BindUnbindReq (ZDProfile)
                                                   ZDP_EPRsp (ZDProfile)
                                                   ZDP_EndDeviceBindReq (ZDProfile)
                                                   ZDP_GenericRsp (ZDProfile)
                                                   ZDP_IEEEAddrReq (ZDProfile)
                                                   ZDP_IncomingData (ZDProfile)
                                                   ZDP_MatchDescReq (ZDProfile)
                                                   ZDP_NodeDescMsg (ZDProfile)
                                                   ZDP_NwkAddrReq (ZDProfile)
                                                   ZDP_SendData (ZDProfile)
                                                   ZDP_ServerDiscReq (ZDProfile)
                                                   ZDP_SimpleDescMsg (ZDProfile)
                                                   ZDP_UserDescRsp (ZDProfile)
                                                   ZDP_UserDescSet (ZDProfile)
                                                   ZMacDataReq (zmac)
                                                   ZMacGetReq (zmac)
                                                   ZMacInit (zmac)
                                                   ZMacReset (zmac)
                                                   ZMacScanReq (zmac)
                                                   ZMacSendNoData (zmac)
                                                   ZMacSetReq (zmac)
                                                   ZMacStartReq (zmac)
                                                   afBuildMSGIncoming (AF)
                                                   afDataConfirm (AF)
                                                   afDataReqMTU (AF)
                                                   afFindEndPointDesc (AF)
                                                   afFindSimpleDesc (AF)
                                                   afGetReflector (AF)
                                                   afIncomingData (AF)
                                                   afRegister (AF)
                                                   afRegisterExtended (AF)
                                                   apsGenerateAck (aps_util)
                                                   apsProcessAck (aps_util)
                                                   aps_AddGroup (aps_groups)
                                                   aps_GroupsWriteNV (aps_groups)
                                                   aps_RemoveGroup (aps_groups)
                                                   compactPage (OSAL_Nv)
                                                   cspPrepForTxProgram (mac_csp_tx)
                                                   fillAndSend (ZDProfile)
                                                   findItem (OSAL_Nv)
                                                   halAssertHandler (hal_assert)
                                                   halKeyPort0Isr (hal_key)
                                                   halKeyPort1Isr (hal_key)
                                                   halKeyPort2Isr (hal_key)
                                                   halProcessKeyInterrupt (hal_key)
                                                   halProcessTimer1 (hal_timer)
                                                   halProcessTimer3 (hal_timer)
                                                   halProcessTimer4 (hal_timer)
                                                   halTimerSendCallBack (hal_timer)
                                                   initItem (OSAL_Nv)
                                                   initItem2 (OSAL_Nv)
                                                   initNV (OSAL_Nv)
                                                   initPage (OSAL_Nv)
                                                   macAllocTxBuffer (mac_data)
                                                   macApiAssociateReq (mac_device)
                                                   macApiDisassociateReq (mac_mgmt)
                                                   macApiOrphanRsp (mac_coord)
                                                   macApiPending (mac_mgmt)
                                                   macApiPollReq (mac_device)
                                                   macApiPurgeReq (mac_coord)
                                                   macApiScanReq (mac_scan)
                                                   macApiStartReq (mac_coord)
                                                   macAssocDataReq (mac_device)
                                                   macAssocDataReqComplete (mac_device)
                                                   macAssocDataRxInd (mac_device)
                                                   macAssocFailed (mac_device)
                                                   macAssocFrameResponseTimeout (mac_device)
                                                   macAssociateCnf (mac_device)
                                                   macBackoffTimerCancelTrigger (mac_backoff_timer)
                                                   macBackoffTimerCapture (mac_backoff_timer)
                                                   macBackoffTimerCompareIsr (mac_backoff_timer)
                                                   macBackoffTimerCount (mac_backoff_timer)
                                                   macBackoffTimerInit (mac_backoff_timer)
                                                   macBackoffTimerReset (mac_backoff_timer)
                                                   macBackoffTimerRolloverCallback (mac_timer)
                                                   macBackoffTimerSetRollover (mac_backoff_timer)
                                                   macBackoffTimerSetTrigger (mac_backoff_timer)
                                                   macBackoffTimerTriggerCallback (mac_timer)
                                                   macBuildAssociateRsp (mac_coord)
                                                   macBuildBeacon (mac_coord)
                                                   macBuildBeaconNotifyInd (mac_mgmt)
                                                   macBuildCommonReq (mac_mgmt)
                                                   macBuildDataFrame (mac_data)
                                                   macBuildDisassociateReq (mac_mgmt)
                                                   macBuildHeader (mac_mgmt)
                                                   macBuildPendAddr (mac_coord)
                                                   macBuildRealign (mac_coord)
                                                   macCbackForEvent (mac_main)
                                                   macCheckSched (mac_data)
                                                   macCommStatusInd (mac_mgmt)
                                                   macConflictSyncLossInd (mac_mgmt)
                                                   macCoordAddrCmp (mac_mgmt)
                                                   macCoordReset (mac_coord)
                                                   macCspForceTxDoneIfPending (mac_csp_tx)
                                                   macCspTxGoCsma (mac_csp_tx)
                                                   macCspTxGoSlotted (mac_csp_tx)
                                                   macCspTxIntIsr (mac_csp_tx)
                                                   macCspTxPrepCsmaSlotted (mac_csp_tx)
                                                   macCspTxPrepCsmaUnslotted (mac_csp_tx)
                                                   macCspTxPrepSlotted (mac_csp_tx)
                                                   macCspTxRequestAckTimeoutCallback (mac_csp_tx)
                                                   macCspTxStopIsr (mac_csp_tx)
                                                   macDataReset (mac_data)
                                                   macDataRxMemAlloc (mac_data)
                                                   macDataTxComplete (mac_data)
                                                   macDataTxEnqueue (mac_data)
                                                   macDataTxSend (mac_data)
                                                   macDataTxTimeAvailable (mac_data)
                                                   macDefaultAction (mac_mgmt)
                                                   macDestAddrCmp (mac_mgmt)
                                                   macDestSAddrCmp (mac_mgmt)
                                                   macDisassocComplete (mac_mgmt)
                                                   macEventLoop (mac_main)
                                                   macExecute (mac_main)
                                                   macGetCoordAddress (mac_mgmt)
                                                   macIndirectExpire (mac_coord)
                                                   macIndirectMark (mac_coord)
                                                   macIndirectRequeueFrame (mac_coord)
                                                   macIndirectSend (mac_coord)
                                                   macIndirectTxFrame (mac_coord)
                                                   macLowLevelInit (mac_low_level)
                                                   macLowLevelReset (mac_low_level)
                                                   macMainReset (mac_main)
                                                   macMcuAndT2PEROF2 (mac_mcu)
                                                   macMcuInit (mac_mcu)
                                                   macMcuOrT2PEROF2 (mac_mcu)
                                                   macMcuOverflowSetCompare (mac_mcu)
                                                   macMcuOverflowSetCount (mac_mcu)
                                                   macMcuRecordMaxRssiStart (mac_mcu)
                                                   macMcuRecordMaxRssiStop (mac_mcu)
                                                   macMcuRfIsr (mac_mcu)
                                                   macMcuTimer2Isr (mac_mcu)
                                                   macMemReadRxFifo (mac_mem)
                                                   macMemWriteTxFifo (mac_mem)
                                                   macPibReset (mac_pib)
                                                   macPollCnf (mac_device)
                                                   macPollDataReqComplete (mac_device)
                                                   macPollDataRxInd (mac_device)
                                                   macPollFrameResponseTimeout (mac_device)
                                                   macPollRxAssocRsp (mac_device)
                                                   macPollRxDisassoc (mac_device)
                                                   macRadioEnergyDetectStop (mac_radio)
                                                   macRadioReset (mac_radio)
                                                   macRadioSetChannel (mac_radio)
                                                   macRadioSetTxPower (mac_radio)
                                                   macRadioStartScan (mac_radio)
                                                   macRadioUpdateChannel (mac_radio)
                                                   macRxAckTxDoneCallback (mac_rx)
                                                   macRxAssocRsp (mac_device)
                                                   macRxAssociateReq (mac_coord)
                                                   macRxBeacon (mac_mgmt)
                                                   macRxBeaconReq (mac_coord)
                                                   macRxCheckPendingCallback (mac_data)
                                                   macRxCompleteCallback (mac_data)
                                                   macRxCoordRealign (mac_device)
                                                   macRxDataReq (mac_coord)
                                                   macRxDisable (mac_rx_onoff)
                                                   macRxDisassoc (mac_mgmt)
                                                   macRxEnable (mac_rx_onoff)
                                                   macRxHaltCleanup (mac_rx)
                                                   macRxHardDisable (mac_rx_onoff)
                                                   macRxOffRequest (mac_rx_onoff)
                                                   macRxOnRequest (mac_rx_onoff)
                                                   macRxOrphan (mac_coord)
                                                   macRxPanConflict (mac_coord)
                                                   macRxPromiscuousMode (mac_rx)
                                                   macRxSoftEnable (mac_rx_onoff)
                                                   macRxThresholdIsr (mac_rx)
                                                   macRxTxReset (mac_rx)
                                                   macScanComplete (mac_scan)
                                                   macScanFailedInProgress (mac_scan)
                                                   macScanNextChan (mac_scan)
                                                   macScanRxBeacon (mac_scan)
                                                   macScanRxCoordRealign (mac_scan)
                                                   macScanStartTimer (mac_scan)
                                                   macSendDataMsg (mac_main)
                                                   macSendMsg (mac_main)
                                                   macSetEvent (mac_main)
                                                   macSleepWakeUp (mac_sleep)
                                                   macStartBegin (mac_coord)
                                                   macStartComplete (mac_coord)
                                                   macStartContinue (mac_coord)
                                                   macStartFrameResponseTimer (mac_device)
                                                   macStartResponseTimer (mac_device)
                                                   macStartSetParams (mac_coord)
                                                   macTimer (mac_timer)
                                                   macTimerAddTimer (mac_timer)
                                                   macTimerCancel (mac_timer)
                                                   macTimerRecalcUnaligned (mac_timer)
                                                   macTimerUpdateBackoffTimer (mac_timer)
                                                   macTxAckNotReceivedCallback (mac_tx)
                                                   macTxAckReceivedCallback (mac_tx)
                                                   macTxChannelBusyCallback (mac_tx)
                                                   macTxCompleteCallback (mac_data)
                                                   macTxDoneCallback (mac_tx)
                                                   macTxFrame (mac_tx)
                                                   macTxStartQueuedFrame (mac_tx)
                                                   macTxTimestampCallback (mac_tx)
                                                   main (ZMain)
                                                   nwkBuildDataCnf (nwk)
                                                   nwkDB_Add (nwk_bufs)
                                                   nwkDB_CreateHdr (nwk_bufs)
                                                   nwkDB_DeleteRecAll (nwk_bufs)
                                                   nwkDB_FindMatch (nwk_bufs)
                                                   nwkDB_UserDataLoad (nwk_util)
                                                   nwkSimulateDataCnf (nwk)
                                                   nwk_BeaconFromNative (nwk)
                                                   nwk_BeaconToNative (nwk)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
                                                   nwk_MacDataBuffersDealloc (nwk_bufs)
                                                   nwk_MacDataBuffersFull (nwk_bufs)
                                                   nwk_ScanPANChanSelect (nwk)
                                                   nwk_ScanPANChanVerify (nwk)
                                                   nwk_SendNextDataBuf (nwk_bufs)
                                                   nwk_associate_ind_processing (nwk)
                                                   nwk_beacon_notify_ind_processing (nwk)
                                                   nwk_comm_status_ind_processing (nwk)
                                                   nwk_data_cnf_processing (nwk)
                                                   nwk_data_ind_processing (nwk)
                                                   nwk_data_req_send (nwk)
                                                   nwk_event_loop (nwk)
                                                   nwk_globals_init (nwk_globals)
                                                   nwk_init (nwk)
                                                   nwk_orphan_ind_processing (nwk)
                                                   nwk_scan_cnf_processing (nwk)
                                                   nwk_start_cnf_processing (nwk)
                                                   nwk_start_coord (nwk)
                                                   osalAddTasks (OSAL_SampleApp)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalDeleteTimer (OSAL_Timers)
                                                   osalInitTasks (OSAL_Tasks)
                                                   osalTaskAdd (OSAL_Tasks)
                                                   osalTimerInit (OSAL_Timers)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_cpyExtAddr (OSAL)
                                                   osal_get_timeoutEx (OSAL_Timers)
                                                   osal_init_system (OSAL)
                                                   osal_mem_alloc (OSAL_Memory)
                                                   osal_mem_free (OSAL_Memory)
                                                   osal_mem_init (OSAL_Memory)
                                                   osal_memset (OSAL)
                                                   osal_msg_allocate (OSAL)
                                                   osal_msg_deallocate (OSAL)
                                                   osal_msg_receive (OSAL)
                                                   osal_msg_send (OSAL)
                                                   osal_nv_init (OSAL_Nv)
                                                   osal_nv_item_init (OSAL_Nv)
                                                   osal_nv_item_len (OSAL_Nv)
                                                   osal_nv_read (OSAL_Nv)
                                                   osal_nv_write (OSAL_Nv)
                                                   osal_set_event (OSAL)
                                                   osal_start_system (OSAL)
                                                   osal_start_timer (OSAL_Timers)
                                                   osal_start_timerEx (OSAL_Timers)
                                                   osal_stop_timer (OSAL_Timers)
                                                   osal_stop_timerEx (OSAL_Timers)
                                                   osal_timer_activate (OSAL_Timers)
                                                   osal_timer_hw_setup (OSAL_Timers)
                                                   pollDMA (hal_uart)
                                                   rxAddrIsr (mac_rx)
                                                   rxDiscardFrame (mac_rx)
                                                   rxDiscardIsr (mac_rx)
                                                   rxDone (mac_rx)
                                                   rxFcsIsr (mac_rx)
                                                   rxHaltCleanupFinalStep (mac_rx)
                                                   rxPayloadIsr (mac_rx)
                                                   rxPostRxUpdates (mac_rx)
                                                   rxStartIsr (mac_rx)
                                                   sAddrCmp (saddr)
                                                   sAddrCpy (saddr)
                                                   sAddrExtCpy (saddr)
                                                   setItem (OSAL_Nv)
                                                   setPageUse (OSAL_Nv)
                                                   txComplete (mac_tx)
                                                   txCsmaGo (mac_tx)
                                                   txCsmaPrep (mac_tx)
                                                   txGo (mac_tx)
                                                   writeBuf (OSAL_Nv)
                                                   writeItem (OSAL_Nv)
                                                   writeWord (OSAL_Nv)
                                                   writeWordD (OSAL_Nv)
                                                   writeWordH (OSAL_Nv)
                                                   xferBuf (OSAL_Nv)
                                                   zdo_MTCB_BindRspCB (MT_ZDO)
                                                   zdo_MTCB_MatchActiveEPRspCB (MT_ZDO)
                                                   zdo_MTCB_NodeDescRspCB (MT_ZDO)
                                                   zdo_MTCB_NwkIEEEAddrRspCB (MT_ZDO)
                                                   zdo_MTCB_PowerDescRspCB (MT_ZDO)
                                                   zdo_MTCB_ServerDiscRspCB (MT_ZDO)
                                                   zdo_MTCB_SimpleDescRspCB (MT_ZDO)
                                                   zdo_MTCB_UserDescRspCB (MT_ZDO)
                                                   zdo_MT_CopyRevExtAddr (MT_ZDO)
                                                   zdpProcessAddrReq (ZDProfile)
                                                   zgInit (ZGlobals)
                                                   zgReadStartupOptions (ZGlobals)
                                                   zgWriteStartupOptions (ZGlobals)
                                                   zmain_ext_addr (ZMain)
                                                   zmain_vdd_check (ZMain)
           ?BRET                   0000009A        ?BANKED_LEAVE_XDATA (?BANKED_LEAVE_XDATA)
                                                   ?Subroutine0 (OSAL_PwrMgr)
                                                   ?Subroutine0 (OnBoard)
                                                   ?Subroutine0 (ZDSecMgr)
                                                   ?Subroutine0 (hal_adc)
                                                   ?Subroutine0 (hal_drivers)
                                                   ?Subroutine0 (mac_csp_tx)
                                                   ?Subroutine0 (mac_low_level)
                                                   ?Subroutine0 (mac_radio)
                                                   ?Subroutine0 (nwk_globals)
                                                   ?Subroutine0 (wxl_uart)
                                                   ?Subroutine1 (hal_key)
                                                   ?Subroutine1 (mac_rx_onoff)
                                                   ?Subroutine10 (hal_led)
                                                   ?Subroutine13 (hal_timer)
                                                   ?Subroutine14 (MTEL)
                                                   ?Subroutine19 (OSAL)
                                                   ?Subroutine2 (OSAL_Memory)
                                                   ?Subroutine2 (hal_key)
                                                   ?Subroutine20 (mac_rx)
                                                   ?Subroutine21 (hal_uart)
                                                   ?Subroutine3 (OSAL_Tasks)
                                                   ?Subroutine3 (mac_mcu)
                                                   ?Subroutine3 (mac_tx)
                                                   ?Subroutine30 (AF)
                                                   ?Subroutine38 (ZDApp)
                                                   ?Subroutine4 (mac_mcu)
                                                   ?Subroutine5 (OSAL_Timers)
                                                   ?Subroutine6 (SPIMgr)
                                                   ?Subroutine65 (MT_ZDO)
                                                   ?Subroutine67 (OSAL_Nv)
                                                   ?Subroutine8 (zmac_cb)
                                                   ?Subroutine9 (hal_lcd)
                                                   ?Subroutine90 (ZDObject)
                                                   APSME_CmdPktNM (APSMEDE)
                                                   HalDmaInit (hal_dma)
                                                   NLME_CmdBcast (nwk_util)
                                                   NLME_GetCoordExtAddr (nwk_util)
                                                   NLME_GetExtAddr (nwk_util)
                                                   NLME_PermitJoiningTimeout (ZDObject)
                                                   Onboard_wait (OnBoard)
                                                   Segment part 14 (mac_coord)
                                                   Segment part 15 (hal_aes)
                                                   Segment part 16 (AddrMgr)
                                                   Segment part 17 (NLMEDE_CB)
                                                   Segment part 18 (aps_groups)
                                                   Segment part 19 (NLMEDE)
                                                   Segment part 19 (nwk)
                                                   Segment part 22 (APS)
                                                   Segment part 23 (nwk_bufs)
                                                   Segment part 27 (mac_scan)
                                                   Segment part 29 (mac_main)
                                                   Segment part 34 (mac_data)
                                                   Segment part 38 (AssocList)
                                                   Segment part 40 (APSMEDE)
                                                   Segment part 46 (mac_device)
                                                   Segment part 50 (rtg)
                                                   Segment part 68 (APSMEDE)
                                                   Segment part 7 (APSMEDE_CB)
                                                   Segment part 73 (mac_mgmt)
                                                   Segment part 79 (nwk_util)
                                                   Segment part 8 (mac_pwr)
                                                   Write595 (hal_lcd)
                                                   ZDO_PollConfirmCB (ZDApp)
                                                   ZDO_SyncIndicationCB (ZDApp)
                                                   delay1 (hal_lcd)
                                                   delay_us (hal_lcd)
                                                   halAssertHandler (hal_assert)
                                                   macApiPwrOnReq (mac_pwr)
                                                   macBackoffTimerReset (mac_backoff_timer)
                                                   macFrameDuration (mac_data)
                                                   macMcuRandomByte (mac_mcu)
                                                   macMcuTimerCapture (mac_mcu)
                                                   macNoAction (mac_mgmt)
                                                   macPibIndex (mac_pib)
                                                   macPibReset (mac_pib)
                                                   macSleepWakeUp (mac_sleep)
                                                   nwk_Status (nwk_globals)
                                                   osal_int_disable (OSAL)
                                                   osal_int_enable (OSAL)
                                                   radioComputeED (mac_radio)
                                                   strlen (?strlen)

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\chipcon_cexit.r51
  LIBRARY MODULE, NAME : ?cexit

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 000000A8 - 000000AC (0x5 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           exit                    000000A8        ?call_main (?cmain)
           ?ROM_MONITOR_NOPS       000000A8 

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\chipcon_cstartup.r51
  PROGRAM MODULE, NAME : CSTARTUP

  SEGMENTS IN THE MODULE
  ======================
REGISTERS
  Relative segment, address: DATA 00000000, align: 0
  Segment part 0.             Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?REGISTERS              00000000 
    -------------------------------------------------------------------------
ISTACK
  Relative segment, address: IDATA 00000040, align: 0
  Segment part 1.             Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ISTACK_START           00000040 
    -------------------------------------------------------------------------
XSTACK
  Relative segment, address: XDATA 0000E008, align: 0
  Segment part 3.             Intra module refs:   ?RESET_XSP
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSTACK_START           0000E008 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000002 (0x3 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   Segment part 6
           LOCAL                   ADDRESS         
           =====                   =======         
           ?reset_vector           00000000 
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000AD - 000000B2 (0x6 bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   ?reset_vector
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __program_start         000000AD        Absolute parts (?ABS_ENTRY_MOD)
           ?RESET_SP               000000B0 
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000B3 - 000000B8 (0x6 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?RESET_XSP              000000B3        ?XSP (VIRTUAL_REGISTERS)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000B9 - 000000B9 (0x1 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?RESET_CODE_BANK        000000B9        Absolute parts (?BANKED_CODE_SUPPORT)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000BA - 000000BC (0x3 bytes), align: 0
  Segment part 11.            Intra module refs:   Absolute parts
           LOCAL                   ADDRESS         
           =====                   =======         
           __call_main             000000BA 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : VIRTUAL_REGISTERS

  SEGMENTS IN THE MODULE
  ======================
BREG
  Relative segment, address: BIT 00000020.0 - 00000020.7 (0x8 bits), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?B0                     00000020.0      Absolute parts (CSTARTUP)
    -------------------------------------------------------------------------
VREG
  Relative segment, address: DATA 00000008, align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V0                     00000008        ?BANKED_ENTER_XDATA (?BANKED_ENTER_XDATA)
                                                   ?BANKED_LEAVE_XDATA (?BANKED_LEAVE_XDATA)
                                                   ?FUNC_ENTER_XDATA (?FUNC_ENTER_XDATA)
                                                   ?FUNC_LEAVE_XDATA (?FUNC_LEAVE_XDATA)
                                                   ?INTERRUPT_ENTER_XSP (?INTERRUPT_ENTER_XSP)
                                                   ?INTERRUPT_LEAVE_XSP (?INTERRUPT_LEAVE_XSP)
                                                   ?Subroutine0 (MTEL)
                                                   ?Subroutine0 (MT_ZDO)
                                                   ?Subroutine0 (OSAL_Nv)
                                                   ?Subroutine0 (ZDProfile)
                                                   ?Subroutine0 (ZGlobals)
                                                   ?Subroutine0 (mac_backoff_timer)
                                                   ?Subroutine0 (mac_mcu)
                                                   ?Subroutine0 (zmac_cb)
                                                   ?Subroutine1 (OSAL)
                                                   ?Subroutine1 (mac_mcu)
                                                   ?Subroutine1 (zmac_cb)
                                                   ?Subroutine10 (MTEL)
                                                   ?Subroutine10 (MT_ZDO)
                                                   ?Subroutine10 (hal_uart)
                                                   ?Subroutine11 (MTEL)
                                                   ?Subroutine11 (ZDObject)
                                                   ?Subroutine12 (MT_ZDO)
                                                   ?Subroutine12 (OSAL_Nv)
                                                   ?Subroutine12 (mac_rx)
                                                   ?Subroutine13 (MT_ZDO)
                                                   ?Subroutine13 (OSAL_Nv)
                                                   ?Subroutine13 (ZDObject)
                                                   ?Subroutine14 (MT_ZDO)
                                                   ?Subroutine14 (hal_uart)
                                                   ?Subroutine15 (MT_ZDO)
                                                   ?Subroutine15 (OSAL)
                                                   ?Subroutine15 (mac_rx)
                                                   ?Subroutine17 (ZDApp)
                                                   ?Subroutine17 (ZDProfile)
                                                   ?Subroutine18 (MT_ZDO)
                                                   ?Subroutine18 (ZDProfile)
                                                   ?Subroutine19 (OSAL_Nv)
                                                   ?Subroutine2 (MTEL)
                                                   ?Subroutine2 (OSAL_Nv)
                                                   ?Subroutine2 (hal_led)
                                                   ?Subroutine2 (mac_backoff_timer)
                                                   ?Subroutine20 (ZDProfile)
                                                   ?Subroutine21 (MT_ZDO)
                                                   ?Subroutine21 (OSAL_Nv)
                                                   ?Subroutine22 (AF)
                                                   ?Subroutine23 (MT_ZDO)
                                                   ?Subroutine24 (MT_ZDO)
                                                   ?Subroutine25 (ZDObject)
                                                   ?Subroutine27 (ZDObject)
                                                   ?Subroutine3 (MT_ZDO)
                                                   ?Subroutine3 (OSAL_Nv)
                                                   ?Subroutine3 (ZDApp)
                                                   ?Subroutine3 (zmac_cb)
                                                   ?Subroutine30 (OSAL_Nv)
                                                   ?Subroutine31 (ZDProfile)
                                                   ?Subroutine32 (ZDApp)
                                                   ?Subroutine33 (ZDProfile)
                                                   ?Subroutine34 (OSAL_Nv)
                                                   ?Subroutine35 (ZDApp)
                                                   ?Subroutine37 (MT_ZDO)
                                                   ?Subroutine38 (OSAL_Nv)
                                                   ?Subroutine39 (MT_ZDO)
                                                   ?Subroutine4 (MT_ZDO)
                                                   ?Subroutine4 (zmac_cb)
                                                   ?Subroutine40 (ZDProfile)
                                                   ?Subroutine42 (OSAL_Nv)
                                                   ?Subroutine42 (ZDProfile)
                                                   ?Subroutine43 (OSAL_Nv)
                                                   ?Subroutine44 (MT_ZDO)
                                                   ?Subroutine46 (ZDObject)
                                                   ?Subroutine47 (MT_ZDO)
                                                   ?Subroutine47 (OSAL_Nv)
                                                   ?Subroutine48 (OSAL_Nv)
                                                   ?Subroutine49 (OSAL_Nv)
                                                   ?Subroutine49 (ZDObject)
                                                   ?Subroutine49 (ZDProfile)
                                                   ?Subroutine5 (MT_ZDO)
                                                   ?Subroutine5 (OSAL)
                                                   ?Subroutine5 (mac_mcu)
                                                   ?Subroutine5 (zmac_cb)
                                                   ?Subroutine50 (MT_ZDO)
                                                   ?Subroutine50 (ZDObject)
                                                   ?Subroutine51 (MT_ZDO)
                                                   ?Subroutine52 (MT_ZDO)
                                                   ?Subroutine54 (MT_ZDO)
                                                   ?Subroutine54 (ZDObject)
                                                   ?Subroutine55 (ZDProfile)
                                                   ?Subroutine57 (OSAL_Nv)
                                                   ?Subroutine57 (ZDProfile)
                                                   ?Subroutine58 (MT_ZDO)
                                                   ?Subroutine58 (ZDProfile)
                                                   ?Subroutine59 (MT_ZDO)
                                                   ?Subroutine59 (OSAL_Nv)
                                                   ?Subroutine59 (ZDObject)
                                                   ?Subroutine6 (MTEL)
                                                   ?Subroutine6 (MT_ZDO)
                                                   ?Subroutine6 (ZDApp)
                                                   ?Subroutine6 (hal_led)
                                                   ?Subroutine60 (MT_ZDO)
                                                   ?Subroutine60 (ZDObject)
                                                   ?Subroutine61 (ZDObject)
                                                   ?Subroutine63 (ZDObject)
                                                   ?Subroutine65 (ZDObject)
                                                   ?Subroutine66 (ZDObject)
                                                   ?Subroutine67 (ZDObject)
                                                   ?Subroutine7 (zmac_cb)
                                                   ?Subroutine73 (OSAL_Nv)
                                                   ?Subroutine8 (MT_ZDO)
                                                   ?Subroutine8 (OSAL)
                                                   ?Subroutine8 (OSAL_Nv)
                                                   ?Subroutine80 (ZDObject)
                                                   ?Subroutine95 (ZDObject)
                                                   ?Subroutine96 (ZDObject)
                                                   ?Subroutine99 (ZDObject)
                                                   AF_DataRequest (AF)
                                                   APSDE_DataIndication (APSMEDE_CB)
                                                   APSDE_DataReq (APSMEDE)
                                                   APSDE_FrameAlloc (APSMEDE)
                                                   APSDE_FrameHdrInit (APSMEDE)
                                                   APSDE_FrameHdrSet (APSMEDE)
                                                   APSDE_ParseMsg (aps_util)
                                                   APSME_LookupNwkAddr (APSMEDE)
                                                   APS_CmdInd (APS)
                                                   APS_event_loop (APS)
                                                   AddrMgrEntryAdd (AddrMgr)
                                                   AddrMgrEntryAddRef (AddrMgr)
                                                   AddrMgrEntryGet (AddrMgr)
                                                   AddrMgrEntryLookupExt (AddrMgr)
                                                   AddrMgrEntryLookupNwk (AddrMgr)
                                                   AddrMgrEntryRelease (AddrMgr)
                                                   AddrMgrEntryUpdate (AddrMgr)
                                                   AddrMgrEntryUpdateEx (AddrMgr)
                                                   AddrMgrExtAddrValid (AddrMgr)
                                                   AssocAddNew (AssocList)
                                                   AssocCount (AssocList)
                                                   AssocGetWithAddress (AssocList)
                                                   AssocIsChild (AssocList)
                                                   AssocMakeList (AssocList)
                                                   AssocRemove (AssocList)
                                                   HalAdcRead (hal_adc)
                                                   HalKeyPoll (hal_key)
                                                   HalLedBlink (hal_led)
                                                   HalLedSet (hal_led)
                                                   HalLedUpdate (hal_led)
                                                   HalTimerConfig (hal_timer)
                                                   HalTimerStart (hal_timer)
                                                   HalUARTOpen (hal_uart)
                                                   HalUARTPoll (hal_uart)
                                                   HalUARTRead (hal_uart)
                                                   HalUARTWrite (hal_uart)
                                                   InitBoard (OnBoard)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MAC_McpsDataAlloc (mac_data)
                                                   MAC_MlmeGetReq (mac_pib)
                                                   MAC_MlmeResetReq (mac_mgmt)
                                                   MAC_MlmeSetReq (mac_pib)
                                                   MTProcessAppMsg (MTEL)
                                                   MTProcessAppRspMsg (MTEL)
                                                   MT_BuildAndSendZToolCB (MTEL)
                                                   MT_BuildAndSendZToolResponse (MTEL)
                                                   MT_BuildSPIMsg (MTEL)
                                                   MT_ProcessCommand (MTEL)
                                                   MT_ProcessDebugMsg (MTEL)
                                                   MT_ProcessDebugStr (MTEL)
                                                   MT_ProcessGetDeviceInfo (MTEL)
                                                   MT_ProcessGetNV (MTEL)
                                                   MT_ProcessGetNvInfo (MTEL)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   MT_ProcessSetNV (MTEL)
                                                   MT_Reset (MTEL)
                                                   MT_ReverseBytes (MTEL)
                                                   MT_SendSPIRespMsg (MTEL)
                                                   MT_ZdoCommandProcessing (MT_ZDO)
                                                   NLDE_BuildFrameControl (nwk_util)
                                                   NLDE_BuildMsg (nwk_util)
                                                   NLDE_DataCnf (NLMEDE_CB)
                                                   NLDE_DataIndication (NLMEDE_CB)
                                                   NLDE_DataReq (NLMEDE)
                                                   NLDE_DataReqAlloc (NLMEDE)
                                                   NLDE_DataReqSend (nwk_util)
                                                   NLDE_ParseFrameControl (nwk_util)
                                                   NLDE_ParseMsg (nwk_util)
                                                   NLDE_ParseMsg2 (nwk_util)
                                                   NLDE_SendMsg (nwk_util)
                                                   NLME_GetNeighborLinkInfo (nwk_util)
                                                   NLME_GetRequest (NLMEDE)
                                                   NLME_IsAddressBroadcast (nwk_util)
                                                   NLME_LeaveCmdCnf (nwk_util)
                                                   NLME_LeaveCmdProcess (nwk_util)
                                                   NLME_LeaveCmdSend (nwk_util)
                                                   NLME_NetworkFormationRequest (NLMEDE)
                                                   NLME_RejoinReqCmdProcess (nwk_util)
                                                   NLME_RejoinRspCmdProcess (nwk_util)
                                                   NLME_RejoinRspSend (nwk_util)
                                                   NLME_RemoveChild (nwk_util)
                                                   NLME_RouteDiscoveryRequest (rtg)
                                                   NLME_SetAssocFlags (nwk_util)
                                                   NLME_SetRequest (NLMEDE)
                                                   NwkCommandPktProcessing (nwk)
                                                   RTG_AddRtgEntry (rtg)
                                                   RTG_AllocNewAddress (rtg)
                                                   RTG_BcastAdd (rtg)
                                                   RTG_BcastChk (rtg)
                                                   RTG_BcastDel (rtg)
                                                   RTG_BcastHold (rtg)
                                                   RTG_BcastTimeout (rtg)
                                                   RTG_BcastTimerHandler (rtg)
                                                   RTG_CalcAddress (rtg)
                                                   RTG_CheckRtDiscEntry (rtg)
                                                   RTG_CheckRtStatus (rtg)
                                                   RTG_DataReq (rtg)
                                                   RTG_DeAllocAddress (rtg)
                                                   RTG_FillCSkipTable (rtg)
                                                   RTG_GetAncestors (rtg)
                                                   RTG_GetLinkCost (rtg)
                                                   RTG_GetNextTreeHop (rtg)
                                                   RTG_GetPrevHop (rtg)
                                                   RTG_GetRoutingAddress (rtg)
                                                   RTG_GetRtDiscEntry (rtg)
                                                   RTG_GetTreeRoute (rtg)
                                                   RTG_IndirectTimeout (rtg)
                                                   RTG_Init (rtg)
                                                   RTG_MultiplyCskip (rtg)
                                                   RTG_ProcessRrep (rtg)
                                                   RTG_ProcessRreq (rtg)
                                                   RTG_RouteMaintanence (rtg)
                                                   RTG_SendRErr (rtg)
                                                   RTG_SendRrep (rtg)
                                                   RTG_TimerEvent (rtg)
                                                   RTG_UpdateNeighborEntry (nwk_util)
                                                   RTG_UpdateRtDiscEntry (rtg)
                                                   SPIMgr_ProcessZToolData (SPIMgr)
                                                   SSP_NwkSecurity (ssp)
                                                   SampleApp_Init (SampleApp)
                                                   SampleApp_MessageMSGCB (SampleApp)
                                                   SampleApp_ProcessEvent (SampleApp)
                                                   SampleApp_SendFlashMessage (SampleApp)
                                                   SampleApp_SendPeriodicMessage (SampleApp)
                                                   Segment part 10 (APSMEDE_CB)
                                                   Segment part 10 (aps_util)
                                                   Segment part 103 (nwk_util)
                                                   Segment part 11 (NLMEDE_CB)
                                                   Segment part 114 (nwk_util)
                                                   Segment part 116 (APSMEDE)
                                                   Segment part 117 (APSMEDE)
                                                   Segment part 14 (mac_pib)
                                                   Segment part 16 (mac_pib)
                                                   Segment part 19 (AssocList)
                                                   Segment part 22 (aps_util)
                                                   Segment part 27 (AddrMgr)
                                                   Segment part 27 (mac_timer)
                                                   Segment part 28 (rtg)
                                                   Segment part 29 (rtg)
                                                   Segment part 31 (mac_coord)
                                                   Segment part 31 (rtg)
                                                   Segment part 32 (mac_coord)
                                                   Segment part 32 (nwk_util)
                                                   Segment part 32 (rtg)
                                                   Segment part 32 (ssp)
                                                   Segment part 33 (nwk_util)
                                                   Segment part 34 (nwk_util)
                                                   Segment part 35 (mac_main)
                                                   Segment part 35 (nwk_util)
                                                   Segment part 37 (mac_mgmt)
                                                   Segment part 38 (mac_main)
                                                   Segment part 38 (nwk_util)
                                                   Segment part 39 (APS)
                                                   Segment part 41 (mac_coord)
                                                   Segment part 42 (NLMEDE)
                                                   Segment part 44 (AddrMgr)
                                                   Segment part 48 (AddrMgr)
                                                   Segment part 50 (APS)
                                                   Segment part 52 (nwk)
                                                   Segment part 52 (nwk_util)
                                                   Segment part 54 (AddrMgr)
                                                   Segment part 58 (AddrMgr)
                                                   Segment part 59 (nwk_util)
                                                   Segment part 59 (rtg)
                                                   Segment part 60 (AddrMgr)
                                                   Segment part 60 (nwk_util)
                                                   Segment part 61 (NLMEDE)
                                                   Segment part 62 (NLMEDE)
                                                   Segment part 62 (nwk_util)
                                                   Segment part 62 (rtg)
                                                   Segment part 63 (NLMEDE)
                                                   Segment part 63 (mac_data)
                                                   Segment part 65 (NLMEDE)
                                                   Segment part 65 (nwk)
                                                   Segment part 66 (nwk)
                                                   Segment part 68 (APS)
                                                   Segment part 7 (aps_util)
                                                   Segment part 70 (mac_data)
                                                   Segment part 70 (rtg)
                                                   Segment part 79 (rtg)
                                                   Segment part 84 (APSMEDE)
                                                   Segment part 89 (rtg)
                                                   Segment part 91 (rtg)
                                                   Segment part 92 (APSMEDE)
                                                   Segment part 97 (nwk)
                                                   SendData (SampleApp)
                                                   Uart_Baud_rate (wxl_uart)
                                                   ZDApp_ActiveEPRspCB (ZDApp)
                                                   ZDApp_AutoFindDestinationEx (ZDApp)
                                                   ZDApp_BindRsp (ZDApp)
                                                   ZDApp_EndDeviceBindRsp (ZDApp)
                                                   ZDApp_IEEEAddrRspCB (ZDApp)
                                                   ZDApp_InMsgCB (ZDApp)
                                                   ZDApp_InitUserDesc (ZDApp)
                                                   ZDApp_LeaveCtrlInit (ZDApp)
                                                   ZDApp_LeaveCtrlSet (ZDApp)
                                                   ZDApp_LeaveCtrlStartup (ZDApp)
                                                   ZDApp_MatchDescRspCB (ZDApp)
                                                   ZDApp_NodeDescRspCB (ZDApp)
                                                   ZDApp_NwkAddrRspCB (ZDApp)
                                                   ZDApp_PowerDescRspCB (ZDApp)
                                                   ZDApp_SendEndDeviceBindReq (ZDApp)
                                                   ZDApp_SendMsg (ZDApp)
                                                   ZDApp_SendNewDstAddr (ZDApp)
                                                   ZDApp_ServerDiscRspCB (ZDApp)
                                                   ZDApp_SimpleDescRspCB (ZDApp)
                                                   ZDApp_UnbindRsp (ZDApp)
                                                   ZDApp_UserDescRspCB (ZDApp)
                                                   ZDApp_event_loop (ZDApp)
                                                   ZDMatchSendState (ZDObject)
                                                   ZDOInitDevice (ZDApp)
                                                   ZDO_AnyClusterMatches (ZDObject)
                                                   ZDO_CompareClusterLists (ZDObject)
                                                   ZDO_CopyMatchInfo (ZDObject)
                                                   ZDO_CreateAlignedUINT16List (ZDObject)
                                                   ZDO_LeaveInd (ZDApp)
                                                   ZDO_MatchEndDeviceBind (ZDObject)
                                                   ZDO_NetworkDiscoveryConfirmCB (ZDApp)
                                                   ZDO_ParseSimpleDescBuf (ZDObject)
                                                   ZDO_ProcessActiveEPReq (ZDObject)
                                                   ZDO_ProcessAddrRsp (ZDObject)
                                                   ZDO_ProcessBindUnbindRsp (ZDObject)
                                                   ZDO_ProcessEPListRsp (ZDObject)
                                                   ZDO_ProcessEndDeviceBindReq (ZDObject)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_ProcessNodeDescReq (ZDObject)
                                                   ZDO_ProcessNodeDescRsp (ZDObject)
                                                   ZDO_ProcessPowerDescReq (ZDObject)
                                                   ZDO_ProcessPowerDescRsp (ZDObject)
                                                   ZDO_ProcessServerDiscReq (ZDObject)
                                                   ZDO_ProcessServerDiscRsp (ZDObject)
                                                   ZDO_ProcessSimpleDescReq (ZDObject)
                                                   ZDO_ProcessSimpleDescRsp (ZDObject)
                                                   ZDO_ProcessUserDescReq (ZDObject)
                                                   ZDO_ProcessUserDescRsp (ZDObject)
                                                   ZDO_ProcessUserDescSet (ZDObject)
                                                   ZDO_StartDevice (ZDObject)
                                                   ZDO_UpdateNwkStatus (ZDObject)
                                                   ZDP_BindUnbindReq (ZDProfile)
                                                   ZDP_EPRsp (ZDProfile)
                                                   ZDP_EndDeviceBindReq (ZDProfile)
                                                   ZDP_GenericRsp (ZDProfile)
                                                   ZDP_IEEEAddrReq (ZDProfile)
                                                   ZDP_IncomingData (ZDProfile)
                                                   ZDP_MatchDescReq (ZDProfile)
                                                   ZDP_NWKAddrOfInterestReq (ZDProfile)
                                                   ZDP_NodeDescMsg (ZDProfile)
                                                   ZDP_NwkAddrReq (ZDProfile)
                                                   ZDP_PowerDescMsg (ZDProfile)
                                                   ZDP_SendData (ZDProfile)
                                                   ZDP_ServerDiscReq (ZDProfile)
                                                   ZDP_ServerDiscRsp (ZDProfile)
                                                   ZDP_SimpleDescMsg (ZDProfile)
                                                   ZDP_SimpleDescReq (ZDProfile)
                                                   ZDP_UserDescRsp (ZDProfile)
                                                   ZDP_UserDescSet (ZDProfile)
                                                   ZMacDataReq (zmac)
                                                   ZMacScanReq (zmac)
                                                   ZMacSendNoData (zmac)
                                                   ZMacSetReq (zmac)
                                                   afBuildMSGIncoming (AF)
                                                   afDataConfirm (AF)
                                                   afDataReqMTU (AF)
                                                   afFindSimpleDesc (AF)
                                                   afIncomingData (AF)
                                                   afRegister (AF)
                                                   afRegisterExtended (AF)
                                                   apsProcessAck (aps_util)
                                                   aps_AddGroup (aps_groups)
                                                   aps_GroupsWriteNV (aps_groups)
                                                   calcChkF (OSAL_Nv)
                                                   compactPage (OSAL_Nv)
                                                   fillAndSend (ZDProfile)
                                                   findItem (OSAL_Nv)
                                                   halAssertHazardLights (hal_assert)
                                                   halTimerSendCallBack (hal_timer)
                                                   halTimerSetCount (hal_timer)
                                                   initItem (OSAL_Nv)
                                                   initItem2 (OSAL_Nv)
                                                   initNV (OSAL_Nv)
                                                   initPage (OSAL_Nv)
                                                   macAllocTxBuffer (mac_data)
                                                   macApiDisassociateReq (mac_mgmt)
                                                   macApiPurgeReq (mac_coord)
                                                   macApiScanReq (mac_scan)
                                                   macApiStartReq (mac_coord)
                                                   macBackoffTimerCancelTrigger (mac_backoff_timer)
                                                   macBackoffTimerCapture (mac_backoff_timer)
                                                   macBackoffTimerCompareIsr (mac_backoff_timer)
                                                   macBackoffTimerCount (mac_backoff_timer)
                                                   macBackoffTimerInit (mac_backoff_timer)
                                                   macBackoffTimerRolloverCallback (mac_timer)
                                                   macBackoffTimerSetRollover (mac_backoff_timer)
                                                   macBackoffTimerSetTrigger (mac_backoff_timer)
                                                   macBackoffTimerTriggerCallback (mac_timer)
                                                   macBuildBeacon (mac_coord)
                                                   macBuildBeaconNotifyInd (mac_mgmt)
                                                   macBuildCommonReq (mac_mgmt)
                                                   macBuildHeader (mac_mgmt)
                                                   macBuildPendAddr (mac_coord)
                                                   macBuildRealign (mac_coord)
                                                   macCbackForEvent (mac_main)
                                                   macCspTxRequestAckTimeoutCallback (mac_csp_tx)
                                                   macDataTxSend (mac_data)
                                                   macDestSAddrCmp (mac_mgmt)
                                                   macEventLoop (mac_main)
                                                   macExecute (mac_main)
                                                   macFrameDuration (mac_data)
                                                   macIndirectExpire (mac_coord)
                                                   macIndirectMark (mac_coord)
                                                   macIndirectSend (mac_coord)
                                                   macMcuOverflowSetCompare (mac_mcu)
                                                   macMcuOverflowSetCount (mac_mcu)
                                                   macMemReadRxFifo (mac_mem)
                                                   macMemWriteTxFifo (mac_mem)
                                                   macRadioSetTxPower (mac_radio)
                                                   macRxAssocRsp (mac_device)
                                                   macRxCompleteCallback (mac_data)
                                                   macRxDisassoc (mac_mgmt)
                                                   macScanCnfInit (mac_scan)
                                                   macScanNextChan (mac_scan)
                                                   macScanRxBeacon (mac_scan)
                                                   macScanRxCoordRealign (mac_scan)
                                                   macScanStartTimer (mac_scan)
                                                   macSendDataMsg (mac_main)
                                                   macSendMsg (mac_main)
                                                   macStartBegin (mac_coord)
                                                   macStartFrameResponseTimer (mac_device)
                                                   macStartResponseTimer (mac_device)
                                                   macTimer (mac_timer)
                                                   macTimerAddTimer (mac_timer)
                                                   macTimerCancel (mac_timer)
                                                   macTimerRecalcUnaligned (mac_timer)
                                                   macTimerUpdateBackoffTimer (mac_timer)
                                                   macTxAckReceivedCallback (mac_tx)
                                                   macTxTimestampCallback (mac_tx)
                                                   main (ZMain)
                                                   memcpy (?memcpy)
                                                   nwkDB_Add (nwk_bufs)
                                                   nwkDB_CreateHdr (nwk_bufs)
                                                   nwkDB_FindMatch (nwk_bufs)
                                                   nwk_BeaconFromNative (nwk)
                                                   nwk_BeaconToNative (nwk)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
                                                   nwk_ScanPANChanSelect (nwk)
                                                   nwk_ScanPANChanVerify (nwk)
                                                   nwk_associate_ind_processing (nwk)
                                                   nwk_beacon_notify_ind_processing (nwk)
                                                   nwk_comm_status_ind_processing (nwk)
                                                   nwk_data_cnf_processing (nwk)
                                                   nwk_data_ind_processing (nwk)
                                                   nwk_data_req_send (nwk)
                                                   nwk_event_loop (nwk)
                                                   nwk_orphan_ind_processing (nwk)
                                                   nwk_start_coord (nwk)
                                                   nwkbufs_hold (nwk_bufs)
                                                   osalAddTasks (OSAL_SampleApp)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalTaskAdd (OSAL_Tasks)
                                                   osalTimerInit (OSAL_Timers)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_ExtAddrEqual (OSAL)
                                                   osal_GetSystemClock (OSAL_Timers)
                                                   osal_build_uint32 (OSAL)
                                                   osal_cpyExtAddr (OSAL)
                                                   osal_get_timeoutEx (OSAL_Timers)
                                                   osal_mem_alloc (OSAL_Memory)
                                                   osal_memcpy (OSAL)
                                                   osal_memset (OSAL)
                                                   osal_msg_allocate (OSAL)
                                                   osal_msg_dequeue (OSAL)
                                                   osal_msg_enqueue_max (OSAL)
                                                   osal_msg_extract (OSAL)
                                                   osal_msg_receive (OSAL)
                                                   osal_msg_send (OSAL)
                                                   osal_nv_item_init (OSAL_Nv)
                                                   osal_nv_item_len (OSAL_Nv)
                                                   osal_nv_read (OSAL_Nv)
                                                   osal_nv_write (OSAL_Nv)
                                                   osal_start_system (OSAL)
                                                   osal_start_timerEx (OSAL_Timers)
                                                   osal_stop_timerEx (OSAL_Timers)
                                                   osal_timer_hw_setup (OSAL_Timers)
                                                   pollDMA (hal_uart)
                                                   readHdr (OSAL_Nv)
                                                   rxFcsIsr (mac_rx)
                                                   rxStartIsr (mac_rx)
                                                   sAddrExtCmp (saddr)
                                                   sAddrExtCpy (saddr)
                                                   setItem (OSAL_Nv)
                                                   txCsmaPrep (mac_tx)
                                                   writeBuf (OSAL_Nv)
                                                   writeItem (OSAL_Nv)
                                                   writeWord (OSAL_Nv)
                                                   writeWordD (OSAL_Nv)
                                                   xferBuf (OSAL_Nv)
                                                   zdo_MTCB_MatchActiveEPRspCB (MT_ZDO)
                                                   zdo_MTCB_NwkIEEEAddrRspCB (MT_ZDO)
                                                   zdo_MTCB_PowerDescRspCB (MT_ZDO)
                                                   zdo_MTCB_SimpleDescRspCB (MT_ZDO)
                                                   zdo_MTCB_UserDescRspCB (MT_ZDO)
                                                   zdpProcessAddrReq (ZDProfile)
                                                   zgInit (ZGlobals)
                                                   zgReadStartupOptions (ZGlobals)
                                                   zgWriteStartupOptions (ZGlobals)
                                                   zmain_ext_addr (ZMain)
    -------------------------------------------------------------------------
XSP
  Relative segment, address: DATA 00000010 - 00000011 (0x2 bytes), align: 0
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSP                    00000010        ?ADD_XSTACK_DISP0_8 (?ADD_XSTACK_DISP8)
                                                   ?ALLOC_XSTACK8 (?ALLOC_XSTACK8)
                                                   ?BANKED_ENTER_XDATA (?BANKED_ENTER_XDATA)
                                                   ?BANKED_LEAVE_XDATA (?BANKED_LEAVE_XDATA)
                                                   ?DEALLOC_XSTACK8 (?DEALLOC_XSTACK8)
                                                   ?FUNC_ENTER_XDATA (?FUNC_ENTER_XDATA)
                                                   ?FUNC_LEAVE_XDATA (?FUNC_LEAVE_XDATA)
                                                   ?INTERRUPT_ENTER_XSP (?INTERRUPT_ENTER_XSP)
                                                   ?INTERRUPT_LEAVE_XSP (?INTERRUPT_LEAVE_XSP)
                                                   ?PUSH_XSTACK8_C (?PUSH_XSTACK8_C)
                                                   ?PUSH_XSTACK8_X (?PUSH_XSTACK8_X)
                                                   ?RESET_XSP (CSTARTUP)
                                                   ?Subroutine0 (ZGlobals)
                                                   ?Subroutine0 (mac_mcu)
                                                   ?Subroutine1 (OSAL_Nv)
                                                   ?Subroutine11 (AF)
                                                   ?Subroutine11 (MT_ZDO)
                                                   ?Subroutine11 (OSAL_Nv)
                                                   ?Subroutine13 (AF)
                                                   ?Subroutine13 (ZDProfile)
                                                   ?Subroutine15 (OSAL_Nv)
                                                   ?Subroutine2 (MTEL)
                                                   ?Subroutine20 (MT_ZDO)
                                                   ?Subroutine28 (OSAL_Nv)
                                                   ?Subroutine29 (OSAL_Nv)
                                                   ?Subroutine29 (ZDApp)
                                                   ?Subroutine3 (hal_led)
                                                   ?Subroutine30 (OSAL_Nv)
                                                   ?Subroutine32 (ZDProfile)
                                                   ?Subroutine36 (ZDApp)
                                                   ?Subroutine37 (ZDProfile)
                                                   ?Subroutine4 (MTEL)
                                                   ?Subroutine46 (ZDObject)
                                                   ?Subroutine48 (MT_ZDO)
                                                   ?Subroutine51 (MT_ZDO)
                                                   ?Subroutine53 (OSAL_Nv)
                                                   ?Subroutine6 (AF)
                                                   ?Subroutine71 (ZDObject)
                                                   ?Subroutine8 (mac_rx)
                                                   ?Subroutine9 (hal_uart)
                                                   ?XSTACK_DISP0_8 (?XSTACK_DISP8)
                                                   AF_DataRequest (AF)
                                                   APSDE_DataIndication (APSMEDE_CB)
                                                   APSDE_DataReq (APSMEDE)
                                                   APSDE_FrameAlloc (APSMEDE)
                                                   APSME_LookupNwkAddr (APSMEDE)
                                                   AddrMgrEntryUpdate (AddrMgr)
                                                   AddrMgrNwkAddrLookup (AddrMgr)
                                                   AssocAddNew (AssocList)
                                                   AssocGetWithAddress (AssocList)
                                                   AssocRemove (AssocList)
                                                   HalAdcInit (hal_adc)
                                                   HalAdcRead (hal_adc)
                                                   HalLedBlink (hal_led)
                                                   HalLedUpdate (hal_led)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MTProcessAppMsg (MTEL)
                                                   MT_ProcessDebugMsg (MTEL)
                                                   MT_ProcessGetDeviceInfo (MTEL)
                                                   MT_ProcessGetNvInfo (MTEL)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   MT_SendSPIRespMsg (MTEL)
                                                   MT_ZdoCommandProcessing (MT_ZDO)
                                                   NLDE_DataIndication (NLMEDE_CB)
                                                   NLDE_DataReqSend (nwk_util)
                                                   NLDE_SendMsg (nwk_util)
                                                   NLME_CmdCnf (nwk_util)
                                                   NLME_GetCoordShortAddr (nwk_util)
                                                   NLME_GetProtocolVersion (nwk_util)
                                                   NLME_LeaveCmdCnf (nwk_util)
                                                   NLME_LeaveCmdProcess (nwk_util)
                                                   NLME_LeaveRsp (NLMEDE)
                                                   NLME_NetworkFormationRequest (NLMEDE)
                                                   NLME_RTG_BcastAdd (nwk_util)
                                                   NLME_SetAssocFlags (nwk_util)
                                                   RTG_BcastAdd (rtg)
                                                   RTG_DataReq (rtg)
                                                   RTG_FillCSkipTable (rtg)
                                                   RTG_GetAncestors (rtg)
                                                   RTG_GetRoutingAddress (rtg)
                                                   RTG_GetTreeRoute (rtg)
                                                   RTG_ProcessRreq (rtg)
                                                   RTG_SendRrep (rtg)
                                                   SPIMgr_Init (SPIMgr)
                                                   SampleApp_SendFlashMessage (SampleApp)
                                                   Segment part 101 (nwk_util)
                                                   Segment part 108 (nwk)
                                                   Segment part 111 (nwk)
                                                   Segment part 124 (nwk_util)
                                                   Segment part 143 (APSMEDE)
                                                   Segment part 15 (mac_device)
                                                   Segment part 19 (AssocList)
                                                   Segment part 190 (APSMEDE)
                                                   Segment part 23 (nwk)
                                                   Segment part 232 (APSMEDE)
                                                   Segment part 24 (aps_util)
                                                   Segment part 24 (mac_scan)
                                                   Segment part 25 (mac_scan)
                                                   Segment part 26 (AssocList)
                                                   Segment part 26 (rtg)
                                                   Segment part 35 (NLMEDE)
                                                   Segment part 36 (rtg)
                                                   Segment part 38 (mac_main)
                                                   Segment part 41 (mac_main)
                                                   Segment part 51 (nwk)
                                                   Segment part 55 (mac_coord)
                                                   Segment part 59 (mac_mgmt)
                                                   Segment part 62 (nwk)
                                                   Segment part 65 (mac_mgmt)
                                                   Segment part 86 (rtg)
                                                   SendData (SampleApp)
                                                   ZDAppSetupProtoVersion (ZDApp)
                                                   ZDApp_IEEEAddrRspCB (ZDApp)
                                                   ZDApp_Init (ZDApp)
                                                   ZDApp_InitUserDesc (ZDApp)
                                                   ZDApp_NwkAddrRspCB (ZDApp)
                                                   ZDApp_SendEndDeviceBindReq (ZDApp)
                                                   ZDMatchSendState (ZDObject)
                                                   ZDOInitDevice (ZDApp)
                                                   ZDO_LeaveInd (ZDApp)
                                                   ZDO_MatchEndDeviceBind (ZDObject)
                                                   ZDO_NetworkDiscoveryConfirmCB (ZDApp)
                                                   ZDO_ProcessAddrRsp (ZDObject)
                                                   ZDO_ProcessEndDeviceBindReq (ZDObject)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_ProcessNodeDescRsp (ZDObject)
                                                   ZDO_ProcessPowerDescRsp (ZDObject)
                                                   ZDO_ProcessSimpleDescReq (ZDObject)
                                                   ZDO_ProcessSimpleDescRsp (ZDObject)
                                                   ZDO_ProcessUserDescReq (ZDObject)
                                                   ZDO_ProcessUserDescSet (ZDObject)
                                                   ZDP_BindUnbindReq (ZDProfile)
                                                   ZDP_EPRsp (ZDProfile)
                                                   ZDP_EndDeviceBindReq (ZDProfile)
                                                   ZDP_GenericRsp (ZDProfile)
                                                   ZDP_IncomingData (ZDProfile)
                                                   ZDP_MatchDescReq (ZDProfile)
                                                   ZDP_NodeDescMsg (ZDProfile)
                                                   ZDP_PowerDescMsg (ZDProfile)
                                                   ZDP_ServerDiscRsp (ZDProfile)
                                                   ZDP_SimpleDescMsg (ZDProfile)
                                                   ZDP_UserDescRsp (ZDProfile)
                                                   ZMacReset (zmac)
                                                   ZMacStartReq (zmac)
                                                   afBuildMSGIncoming (AF)
                                                   afIncomingData (AF)
                                                   apsGenerateAck (aps_util)
                                                   apsProcessAck (aps_util)
                                                   aps_GroupsWriteNV (aps_groups)
                                                   calcChkF (OSAL_Nv)
                                                   compactPage (OSAL_Nv)
                                                   fillAndSend (ZDProfile)
                                                   halAssertHazardLights (hal_assert)
                                                   initNV (OSAL_Nv)
                                                   initPage (OSAL_Nv)
                                                   macApiStartReq (mac_coord)
                                                   macAssocDataReq (mac_device)
                                                   macAssociateCnf (mac_device)
                                                   macBuildBeacon (mac_coord)
                                                   macBuildHeader (mac_mgmt)
                                                   macCbackForEvent (mac_main)
                                                   macCommStatusInd (mac_mgmt)
                                                   macConflictSyncLossInd (mac_mgmt)
                                                   macEventLoop (mac_main)
                                                   macIndirectExpire (mac_coord)
                                                   macMcuOverflowCapture (mac_mcu)
                                                   macMcuOverflowCount (mac_mcu)
                                                   macMcuOverflowSetCompare (mac_mcu)
                                                   macMcuOverflowSetCount (mac_mcu)
                                                   macPollCnf (mac_device)
                                                   macRxAssocRsp (mac_device)
                                                   macRxAssociateReq (mac_coord)
                                                   macRxBeacon (mac_mgmt)
                                                   macRxCoordRealign (mac_device)
                                                   macRxDataReq (mac_coord)
                                                   macRxOrphan (mac_coord)
                                                   macScanFailedInProgress (mac_scan)
                                                   macScanNextChan (mac_scan)
                                                   macScanRxBeacon (mac_scan)
                                                   macStartFrameResponseTimer (mac_device)
                                                   nwk_ScanPANChanSelect (nwk)
                                                   nwk_ScanPANChanVerify (nwk)
                                                   nwk_associate_ind_processing (nwk)
                                                   nwk_beacon_notify_ind_processing (nwk)
                                                   nwk_data_cnf_processing (nwk)
                                                   nwk_data_ind_processing (nwk)
                                                   nwk_start_coord (nwk)
                                                   osalTaskAdd (OSAL_Tasks)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_nv_item_len (OSAL_Nv)
                                                   osal_nv_read (OSAL_Nv)
                                                   osal_nv_write (OSAL_Nv)
                                                   readHdr (OSAL_Nv)
                                                   rxAddrIsr (mac_rx)
                                                   rxStartIsr (mac_rx)
                                                   setItem (OSAL_Nv)
                                                   setPageUse (OSAL_Nv)
                                                   writeBuf (OSAL_Nv)
                                                   writeItem (OSAL_Nv)
                                                   writeWordH (OSAL_Nv)
                                                   xferBuf (OSAL_Nv)
                                                   zdo_MTCB_BindRspCB (MT_ZDO)
                                                   zdo_MTCB_MatchActiveEPRspCB (MT_ZDO)
                                                   zdo_MTCB_NwkIEEEAddrRspCB (MT_ZDO)
                                                   zdo_MTCB_ServerDiscRspCB (MT_ZDO)
                                                   zdo_MTCB_SimpleDescRspCB (MT_ZDO)
                                                   zdpProcessAddrReq (ZDProfile)
                                                   zgReadStartupOptions (ZGlobals)
                                                   zgWriteStartupOptions (ZGlobals)

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\flashDmaTrigger.r51
  LIBRARY MODULE, NAME : flashDmaTrigger

Absolute parts
           LOCAL                   ADDRESS         
           =====                   =======         
           __KEIL__                00000000 
  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000144 - 00000147 (0x4 bytes), align: 2
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halFlashDmaTrigger      00000144        writeWord (OSAL_Nv)

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\hal_adc.r51
  PROGRAM MODULE, NAME : hal_adc

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000B4 - 000000B4 (0x1 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCCON1                 000000B4 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000B5 - 000000B5 (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCCON2                 000000B5 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000B6 - 000000B6 (0x1 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCCON3                 000000B6 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BA - 000000BA (0x1 bytes), align: 0
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCL                    000000BA 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BB - 000000BB (0x1 bytes), align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCH                    000000BB 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F2 - 000000F2 (0x1 bytes), align: 0
  Segment part 7. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCCFG                  000000F2 
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00001AC5 - 00001AD6 (0x12 bytes), align: 0
  Segment part 13.            Intra module refs:   HalAdcCheckVdd
           LOCAL                   ADDRESS         
           =====                   =======         
           HalAdcVddLimit          00001AC5 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003CC41 - 0003CC7E (0x3e bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAdcInit              0003CC41        HalDriverInit (hal_drivers)
               stack 1 = 00000000 ( 00000003 )
               stack 2 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003CC7F - 0003CC85 (0x7 bytes), align: 0
  Segment part 15.            Intra module refs:   HalAdcCheckVdd
                                                   HalAdcInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0003CC7F 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003CC86 - 0003CD3C (0xb7 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAdcRead              0003CC86        HalKeyPoll (hal_key)
                                                   zmain_ext_addr (ZMain)
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003CD3D - 0003CD7F (0x43 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAdcCheckVdd          0003CD3D        ?Subroutine37 (OSAL_Nv)
                                                   zmain_vdd_check (ZMain)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000088 - 00000088 (0x1 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCON                 00000088 

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\hal_assert.r51
  PROGRAM MODULE, NAME : hal_assert

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000091 - 00000091 (0x1 bytes), align: 0
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFIM                    00000091 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003C980 - 0003C992 (0x13 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halAssertHandler        0003C980        cspPrepForTxProgram (mac_csp_tx)
                                                   macBackoffTimerSetRollover (mac_backoff_timer)
                                                   macBackoffTimerSetTrigger (mac_backoff_timer)
                                                   macBackoffTimerTriggerCallback (mac_timer)
                                                   macCspTxRequestAckTimeoutCallback (mac_csp_tx)
                                                   macCspTxStopIsr (mac_csp_tx)
                                                   macLowLevelReset (mac_low_level)
                                                   macMcuAndT2PEROF2 (mac_mcu)
                                                   macMcuInit (mac_mcu)
                                                   macMcuOrT2PEROF2 (mac_mcu)
                                                   macMcuOverflowSetCompare (mac_mcu)
                                                   macMcuOverflowSetCount (mac_mcu)
                                                   macMemReadRxFifo (mac_mem)
                                                   macMemWriteTxFifo (mac_mem)
                                                   macRadioSetChannel (mac_radio)
                                                   macRadioStartScan (mac_radio)
                                                   macRadioUpdateChannel (mac_radio)
                                                   macRxDisable (mac_rx_onoff)
                                                   macRxEnable (mac_rx_onoff)
                                                   macRxPromiscuousMode (mac_rx)
                                                   macRxSoftEnable (mac_rx_onoff)
                                                   macSleepWakeUp (mac_sleep)
                                                   macTimerRecalcUnaligned (mac_timer)
                                                   macTxChannelBusyCallback (mac_tx)
                                                   macTxFrame (mac_tx)
                                                   macTxStartQueuedFrame (mac_tx)
                                                   macTxTimestampCallback (mac_tx)
                                                   rxAddrIsr (mac_rx)
                                                   rxDiscardFrame (mac_rx)
                                                   rxStartIsr (mac_rx)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003C993 - 0003CADD (0x14b bytes), align: 0
  Segment part 20.            Intra module refs:   halAssertHandler
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halAssertHazardLights   0003C993 
               stack 1 = 00000002 ( 00000002 )
               stack 2 = 00000000 ( 00000015 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003CADE - 0003CAF2 (0x15 bytes), align: 0
  Segment part 21.            Intra module refs:   halAssertHazardLights
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0003CADE 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F7D9 - 0000F7D9 (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   halAssertHazardLights
           LOCAL                   ADDRESS         
           =====                   =======         
           halAssertHazardLights{7}{8}{18}::escape
                                   0000F7D9 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC47 - 0000FC4A (0x4 bytes), align: 0
  Segment part 17.            Intra module refs:   halAssertHazardLights
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_5800         0000FC47 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001715 - 00001718 (0x4 bytes), align: 0
  Segment part 18.            Intra module refs:   __Constant_5800

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\hal_dma.r51
  PROGRAM MODULE, NAME : hal_dma

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000D2 - 000000D2 (0x1 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMA1CFGL                000000D2 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D3 - 000000D3 (0x1 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMA1CFGH                000000D3 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D4 - 000000D4 (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMA0CFGL                000000D4 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D5 - 000000D5 (0x1 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMA0CFGH                000000D5 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F7DA - 0000F7E1 (0x8 bytes), align: 0
  Segment part 10.            Intra module refs:   HalDmaInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dmaCh0                  0000F7DA        osal_nv_init (OSAL_Nv)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F7E2 - 0000F801 (0x20 bytes), align: 0
  Segment part 11.            Intra module refs:   HalDmaInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dmaCh1234               0000F7E2        ?Subroutine8 (hal_uart)
                                                   ?Subroutine9 (hal_uart)
                                                   HalUARTInit (hal_uart)
                                                   aesDmaInit (hal_aes)
                                                   pollDMA (hal_uart)
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003D527 - 0003D537 (0x11 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalDmaInit              0003D527        HalDriverInit (hal_drivers)

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\hal_drivers.r51
  PROGRAM MODULE, NAME : hal_drivers

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000F802 - 0000F802 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   Hal_Init
                                                   Hal_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_TaskID              0000F802        HalKeyConfig (hal_key)
                                                   HalLedBlink (hal_led)
                                                   halProcessKeyInterrupt (hal_key)
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003D0AE - 0003D0B8 (0xb bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_Init                0003D0AE        osalAddTasks (OSAL_SampleApp)
               is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003D0B9 - 0003D0F9 (0x41 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalDriverInit           0003D0B9        main (ZMain)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003D0FA - 0003D103 (0xa bytes), align: 0
  Segment part 9.             Intra module refs:   HalDriverInit
                                                   Hal_Init
                                                   Hal_ProcessPoll
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0003D0FA 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003D104 - 0003D182 (0x7f bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_ProcessEvent        0003D104        osalAddTasks (OSAL_SampleApp)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003D183 - 0003D196 (0x14 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_ProcessPoll         0003D183        osal_start_system (OSAL)
               calls direct
               stack 1 = 00000000 ( 00000002 )

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\hal_key.r51
  PROGRAM MODULE, NAME : hal_key

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000089 - 00000089 (0x1 bytes), align: 0
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0IFG                   00000089 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000008C - 0000008C (0x1 bytes), align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PICTL                   0000008C 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F803 - 0000F803 (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   HalKeyInit
                                                   HalKeyPoll
           LOCAL                   ADDRESS         
           =====                   =======         
           halKeySavedKeys         0000F803 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F804 - 0000F806 (0x3 bytes), align: 0
  Segment part 19.            Intra module refs:   HalKeyConfig
                                                   HalKeyInit
                                                   HalKeyPoll
           LOCAL                   ADDRESS         
           =====                   =======         
           pHalKeyProcessFunction
                                   0000F804 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F807 - 0000F807 (0x1 bytes), align: 0
  Segment part 20.            Intra module refs:   HalKeyConfig
                                                   HalKeyPoll
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_KeyIntEnable        0000F807        Hal_ProcessEvent (hal_drivers)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F808 - 0000F808 (0x1 bytes), align: 0
  Segment part 22.            Intra module refs:   HalKeyConfig
                                                   HalKeyInit
           LOCAL                   ADDRESS         
           =====                   =======         
           HalKeyConfigured        0000F808 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003C7FC - 0003C81F (0x24 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyInit              0003C7FC        HalDriverInit (hal_drivers)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003C820 - 0003C826 (0x7 bytes), align: 0
  Segment part 24.            Intra module refs:   HalKeyInit
                                                   halProcessKeyInterrupt
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0003C820 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003C827 - 0003C8A0 (0x7a bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyConfig            0003C827        InitBoard (OnBoard)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000003 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003C8A1, align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyRead              0003C8A1        ZDAppCheckForHoldKey (ZDApp)
                                                   zmain_ext_addr (ZMain)
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003C8A1 - 0003C8A5 (0x5 bytes), align: 0
  Segment part 27.            Intra module refs:   HalKeyRead
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0003C8A1 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003C8A6 - 0003C940 (0x9b bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyPoll              0003C8A6        Hal_ProcessEvent (hal_drivers)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003C941 - 0003C949 (0x9 bytes), align: 0
  Segment part 29.            Intra module refs:   HalKeyConfig
                                                   HalKeyPoll
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0003C941 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003C94A - 0003C97F (0x36 bytes), align: 0
  Segment part 31.            Intra module refs:   halKeyPort0Isr
                                                   halKeyPort1Isr
                                                   halKeyPort2Isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halProcessKeyInterrupt
                                   0003C94A 
               calls direct
               stack 1 = 0000000F ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000010E4 - 00001100 (0x1d bytes), align: 0
  Segment part 34.            Intra module refs:   halKeyPort0Isr::??INTVEC 107
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halKeyPort0Isr          000010E4 
               interrupt function
               calls direct
               stack 1 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001101 - 00001105 (0x5 bytes), align: 0
  Segment part 35.            Intra module refs:   halKeyPort0Isr
                                                   halKeyPort1Isr
                                                   halKeyPort2Isr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            00001101 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001106 - 0000112C (0x27 bytes), align: 0
  Segment part 36.            Intra module refs:   halKeyPort1Isr::??INTVEC 123
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halKeyPort1Isr          00001106 
               interrupt function
               calls direct
               stack 1 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000112D - 00001153 (0x27 bytes), align: 0
  Segment part 37.            Intra module refs:   halKeyPort2Isr::??INTVEC 51
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halKeyPort2Isr          0000112D 
               interrupt function
               calls direct
               stack 1 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000035 (0x36 bytes), align: 0
  Segment part 10. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halKeyPort2Isr::??INTVEC 51
                                   00000033 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000006D (0x6e bytes), align: 0
  Segment part 11. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halKeyPort0Isr::??INTVEC 107
                                   0000006B 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000007D (0x7e bytes), align: 0
  Segment part 12. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halKeyPort1Isr::??INTVEC 123
                                   0000007B 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000B8 - 000000B8 (0x1 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN1                 000000B8 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C0 - 000000C0 (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IRCON                000000C0 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E8 - 000000E8 (0x1 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IRCON2               000000E8 

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\hal_lcd.r51
  PROGRAM MODULE, NAME : hal_lcd

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000FF - 000000FF (0x1 bytes), align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2DIR                   000000FF 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC4B - 0000FC4B (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   HalLcdInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ContrastValue           0000FC4B 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003BBB4 - 0003BBC0 (0xd bytes), align: 0
  Segment part 16.            Intra module refs:   WriteLCD
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           delay1                  0003BBB4 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000009 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003BBC1 - 0003BBED (0x2d bytes), align: 0
  Segment part 17.            Intra module refs:   HalLcdInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           delay_us                0003BBC1 
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000009 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003BBEE - 0003BC0C (0x1f bytes), align: 0
  Segment part 18.            Intra module refs:   WriteLCD
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Write595                0003BBEE 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000009 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003BC0D - 0003BC48 (0x3c bytes), align: 0
  Segment part 19.            Intra module refs:   ?Subroutine10
                                                   HalLcdInit
                                                   SetContrast
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WriteLCD                0003BC0D 
               calls direct
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000010 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003BC49 - 0003BC56 (0xe bytes), align: 0
  Segment part 20.            Intra module refs:   SetContrast
                                                   WriteLCD
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           0003BC49 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003BC57 - 0003BC7A (0x24 bytes), align: 0
  Segment part 22.            Intra module refs:   HalLcdInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SetContrast             0003BC57 
               calls direct
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003BC7B - 0003BC84 (0xa bytes), align: 0
  Segment part 24.            Intra module refs:   HalLcdInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            0003BC7B 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003BC85 - 0003BDFA (0x176 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdInit              0003BC85        HalDriverInit (hal_drivers)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001719 - 00001719 (0x1 bytes), align: 0
  Segment part 13.            Intra module refs:   ContrastValue
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A0 - 000000A0 (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P2                   000000A0 

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\hal_led.r51
  PROGRAM MODULE, NAME : hal_led

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000F809 - 0000F809 (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   HalLedBlink
                                                   HalLedOnOff
                                                   HalLedSet
           LOCAL                   ADDRESS         
           =====                   =======         
           HalLedState             0000F809 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F80A - 0000F80A (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   HalLedBlink
                                                   HalLedUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           preBlinkState           0000F80A 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F80B - 0000F82F (0x25 bytes), align: 0
  Segment part 10.            Intra module refs:   ?Subroutine10
                                                   HalLedBlink
                                                   HalLedSet
                                                   HalLedUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           HalLedStatusControl     0000F80B 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FB35 - 0001FB44 (0x10 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedInit              0001FB35        HalDriverInit (hal_drivers)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FB45 - 0001FBCC (0x88 bytes), align: 0
  Segment part 14.            Intra module refs:   HalLedBlink
                                                   HalLedInit
                                                   HalLedUpdate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedSet               0001FB45        InitBoard (OnBoard)
                                                   MTProcessLedControl (MTEL)
                                                   ZDApp_AutoFindDestinationEx (ZDApp)
                                                   ZDApp_EndDeviceBindRsp (ZDApp)
                                                   ZDApp_MatchDescRspCB (ZDApp)
                                                   ZDApp_SendEndDeviceBindReq (ZDApp)
                                                   ZDO_NetworkFormationConfirmCB (ZDApp)
                                                   ZDO_StartRouterConfirmCB (ZDApp)
                                                   zmain_ext_addr (ZMain)
               calls direct, is recursive
               stack 1 = 00000002 ( 00000001 )
               stack 2 = 0000001A ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FBCD - 0001FCED (0x121 bytes), align: 0
  Segment part 15.            Intra module refs:   HalLedSet
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedBlink             0001FBCD        SampleApp_MessageMSGCB (SampleApp)
                                                   SampleApp_ProcessEvent (SampleApp)
                                                   ZDApp_Init (ZDApp)
               calls direct, is recursive
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000B ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FCEE - 0001FCF5 (0x8 bytes), align: 0
  Segment part 16.            Intra module refs:   HalLedBlink
                                                   HalLedUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           0001FCEE 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FCF6 - 0001FCFE (0x9 bytes), align: 0
  Segment part 17.            Intra module refs:   HalLedBlink
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            0001FCF6 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FCFF - 0001FF54 (0x256 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedUpdate            0001FCFF        Hal_ProcessEvent (hal_drivers)
               calls direct
               stack 1 = 00000002 ( 00000002 )
               stack 2 = 00000000 ( 0000001A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FF55 - 0001FF5E (0xa bytes), align: 0
  Segment part 19.            Intra module refs:   HalLedUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            0001FF55 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FF5F - 0001FF62 (0x4 bytes), align: 0
  Segment part 20.            Intra module refs:   HalLedUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0001FF5F 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FF63 - 0001FF6C (0xa bytes), align: 0
  Segment part 21.            Intra module refs:   ?Subroutine4
                                                   ?Subroutine5
                                                   HalLedUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            0001FF63 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FF6D - 0001FF72 (0x6 bytes), align: 0
  Segment part 22.            Intra module refs:   HalLedUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0001FF6D 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FF73 - 0001FF80 (0xe bytes), align: 0
  Segment part 23.            Intra module refs:   HalLedUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0001FF73 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FF81 - 0001FF8A (0xa bytes), align: 0
  Segment part 24.            Intra module refs:   HalLedUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0001FF81 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FF8B - 0001FF94 (0xa bytes), align: 0
  Segment part 25.            Intra module refs:   ?Subroutine2
                                                   HalLedUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            0001FF8B 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FF95 - 0001FFEC (0x58 bytes), align: 0
  Segment part 26.            Intra module refs:   ?Subroutine3
                                                   HalLedSet
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedOnOff             0001FF95 
               stack 1 = 00000002 ( 00000002 )
               stack 2 = 0000001A ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FFED - 0001FFFB (0xf bytes), align: 0
  Segment part 27.            Intra module refs:   HalLedInit
                                                   HalLedOnOff
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           0001FFED 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC4C - 0000FC4F (0x4 bytes), align: 0
  Segment part 11.            Intra module refs:   HalLedUpdate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_64           0000FC4C 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000171A - 0000171D (0x4 bytes), align: 0
  Segment part 12.            Intra module refs:   __Constant_64

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\hal_sleep.r51
  PROGRAM MODULE, NAME : hal_sleep

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000087 - 00000087 (0x1 bytes), align: 0
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PCON                    00000087 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000095 - 00000095 (0x1 bytes), align: 0
  Segment part 7. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ST0                     00000095 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000096 - 00000096 (0x1 bytes), align: 0
  Segment part 8. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ST1                     00000096 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000097 - 00000097 (0x1 bytes), align: 0
  Segment part 9. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ST2                     00000097 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000009A - 0000009A (0x1 bytes), align: 0
  Segment part 10. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IEN2                    0000009A 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C6 - 000000C6 (0x1 bytes), align: 0
  Segment part 12. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLKCON                  000000C6 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001154 - 0000116A (0x17 bytes), align: 0
  Segment part 62.            Intra module refs:   halSleepTimerIsr::??INTVEC 43
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSleepTimerIsr        00001154 
               interrupt function
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000002D (0x2e bytes), align: 0
  Segment part 14. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSleepTimerIsr::??INTVEC 43
                                   0000002B 

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\hal_target.r51
    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\hal_timer.r51
  PROGRAM MODULE, NAME : hal_timer

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000CB - 000000CB (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T3CTL                   000000CB 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000CC - 000000CC (0x1 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T3CCTL0                 000000CC 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000CE - 000000CE (0x1 bytes), align: 0
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T3CCTL1                 000000CE 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E4 - 000000E4 (0x1 bytes), align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1CTL                   000000E4 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E5 - 000000E5 (0x1 bytes), align: 0
  Segment part 7. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1CCTL0                 000000E5 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E6 - 000000E6 (0x1 bytes), align: 0
  Segment part 8. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1CCTL1                 000000E6 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E7 - 000000E7 (0x1 bytes), align: 0
  Segment part 9. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1CCTL2                 000000E7 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000EB - 000000EB (0x1 bytes), align: 0
  Segment part 10. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T4CTL                   000000EB 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000EC - 000000EC (0x1 bytes), align: 0
  Segment part 11. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T4CCTL0                 000000EC 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000EE - 000000EE (0x1 bytes), align: 0
  Segment part 12. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T4CCTL1                 000000EE 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F830 - 0000F850 (0x21 bytes), align: 0
  Segment part 21.            Intra module refs:   ?Subroutine10
                                                   ?Subroutine8
                                                   HalTimerConfig
                                                   HalTimerInit
                                                   HalTimerInterruptEnable
                                                   HalTimerStart
                                                   HalTimerTick
                                                   halTimerSetCount
           LOCAL                   ADDRESS         
           =====                   =======         
           halTimerRecord          0000F830 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F851 - 0000F86E (0x1e bytes), align: 0
  Segment part 22.            Intra module refs:   ?Subroutine2
                                                   ?Subroutine5
                                                   ?Subroutine6
                                                   ?Subroutine7
                                                   HalTimerInit
           LOCAL                   ADDRESS         
           =====                   =======         
           halTimerChannel         0000F851 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E218 - 0002E2E9 (0xd2 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalTimerInit            0002E218        HalDriverInit (hal_drivers)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E2EA - 0002E2F1 (0x8 bytes), align: 0
  Segment part 24.            Intra module refs:   HalTimerInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0002E2EA 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E2F2 - 0002E37C (0x8b bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalTimerConfig          0002E2F2        InitBoard (OnBoard)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000003 ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E37D - 0002E436 (0xba bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalTimerStart           0002E37D        osal_timer_hw_setup (OSAL_Timers)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E437 - 0002E43B (0x5 bytes), align: 0
  Segment part 27.            Intra module refs:   HalTimerStart
                                                   halTimerSetCount
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine14           0002E437 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E43C - 0002E46C (0x31 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalTimerTick            0002E43C        Hal_ProcessPoll (hal_drivers)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E46D - 0002E4A5 (0x39 bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalTimerStop            0002E46D        osal_timer_hw_setup (OSAL_Timers)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E4A6 - 0002E50E (0x69 bytes), align: 0
  Segment part 30.            Intra module refs:   HalTimerStart
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimerSetCount        0002E4A6 
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000010 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E50F - 0002E513 (0x5 bytes), align: 0
  Segment part 31.            Intra module refs:   HalTimerConfig
                                                   halTimerSetCount
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0002E50F 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E514 - 0002E51C (0x9 bytes), align: 0
  Segment part 32.            Intra module refs:   ?Subroutine1
                                                   HalTimerConfig
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           0002E514 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E51D - 0002E559 (0x3d bytes), align: 0
  Segment part 33.            Intra module refs:   HalTimerStart
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimerSetPrescale     0002E51D 
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000010 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E55A - 0002E5DB (0x82 bytes), align: 0
  Segment part 34.            Intra module refs:   HalTimerStart
                                                   HalTimerStop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimerSetOpMode       0002E55A 
               stack 1 = 00000002 ( 00000002 )
               stack 2 = 00000010 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E5DC - 0002E609 (0x2e bytes), align: 0
  Segment part 35.            Intra module refs:   HalTimerStart
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimerSetChannelMode
                                   0002E5DC 
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000010 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E60A - 0002E612 (0x9 bytes), align: 0
  Segment part 36.            Intra module refs:   halTimerSetChannelMode
                                                   halTimerSetCount
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            0002E60A 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E613 - 0002E623 (0x11 bytes), align: 0
  Segment part 37.            Intra module refs:   halTimerSetChannelMode
                                                   halTimerSetCount
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            0002E613 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E624 - 0002E69E (0x7b bytes), align: 0
  Segment part 38.            Intra module refs:   HalTimerStart
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalTimerInterruptEnable
                                   0002E624 
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000010 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E69F - 0002E6AF (0x11 bytes), align: 0
  Segment part 39.            Intra module refs:   HalTimerInterruptEnable
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            0002E69F 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E6B0 - 0002E6CB (0x1c bytes), align: 0
  Segment part 40.            Intra module refs:   HalTimerInterruptEnable
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0002E6B0 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E6CC - 0002E6DF (0x14 bytes), align: 0
  Segment part 41.            Intra module refs:   HalTimerInterruptEnable
                                                   halTimerSetChannelMode
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0002E6CC 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E6E0 - 0002E6E8 (0x9 bytes), align: 0
  Segment part 42.            Intra module refs:   ?Subroutine2
                                                   halTimerSetCount
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine12           0002E6E0 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E6E9 - 0002E728 (0x40 bytes), align: 0
  Segment part 43.            Intra module refs:   halProcessTimer1
                                                   halProcessTimer3
                                                   halProcessTimer4
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimerSendCallBack    0002E6E9 
               calls direct
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E729 - 0002E737 (0xf bytes), align: 0
  Segment part 44.            Intra module refs:   halTimerSendCallBack
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            0002E729 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E738 - 0002E759 (0x22 bytes), align: 0
  Segment part 45.            Intra module refs:   HalTimerConfig
                                                   HalTimerStart
                                                   HalTimerStop
                                                   halProcessTimer1
                                                   halProcessTimer3
                                                   halProcessTimer4
                                                   halTimerSendCallBack
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimerRemap           0002E738 
               stack 1 = 00000002 ( 00000002 )
               stack 2 = 00000010 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E75A - 0002E760 (0x7 bytes), align: 0
  Segment part 46.            Intra module refs:   HalTimerInit
                                                   HalTimerInterruptEnable
                                                   HalTimerStop
                                                   HalTimerTick
                                                   halProcessTimer1
                                                   halProcessTimer3
                                                   halProcessTimer4
                                                   halTimerRemap
                                                   halTimerSetChannelMode
                                                   halTimerSetOpMode
                                                   halTimerSetPrescale
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           0002E75A 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E761 - 0002E7D8 (0x78 bytes), align: 0
  Segment part 47.            Intra module refs:   HalTimerTick
                                                   halTimer1Isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halProcessTimer1        0002E761 
               calls direct
               stack 1 = 0000000F ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E7D9 - 0002E831 (0x59 bytes), align: 0
  Segment part 48.            Intra module refs:   HalTimerTick
                                                   halTimer3Isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halProcessTimer3        0002E7D9 
               calls direct
               stack 1 = 0000000F ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E832 - 0002E837 (0x6 bytes), align: 0
  Segment part 49.            Intra module refs:   halProcessTimer1
                                                   halProcessTimer3
                                                   halProcessTimer4
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0002E832 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E838 - 0002E83D (0x6 bytes), align: 0
  Segment part 50.            Intra module refs:   halProcessTimer1
                                                   halProcessTimer3
                                                   halProcessTimer4
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0002E838 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E83E - 0002E84E (0x11 bytes), align: 0
  Segment part 51.            Intra module refs:   ?Subroutine3
                                                   ?Subroutine4
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           0002E83E 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E84F - 0002E8A7 (0x59 bytes), align: 0
  Segment part 52.            Intra module refs:   HalTimerTick
                                                   halTimer4Isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halProcessTimer4        0002E84F 
               calls direct
               stack 1 = 0000000F ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000116B - 00001176 (0xc bytes), align: 0
  Segment part 53.            Intra module refs:   halTimer1Isr::??INTVEC 75
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimer1Isr            0000116B 
               interrupt function
               calls direct
               stack 1 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001177 - 0000117E (0x8 bytes), align: 0
  Segment part 54.            Intra module refs:   halTimer1Isr
                                                   halTimer3Isr
                                                   halTimer4Isr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine15           00001177 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000117F - 0000118C (0xe bytes), align: 0
  Segment part 55.            Intra module refs:   halTimer3Isr::??INTVEC 91
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimer3Isr            0000117F 
               interrupt function
               calls direct
               stack 1 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000118D - 0000119A (0xe bytes), align: 0
  Segment part 56.            Intra module refs:   halTimer4Isr::??INTVEC 99
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimer4Isr            0000118D 
               interrupt function
               calls direct
               stack 1 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000004D (0x4e bytes), align: 0
  Segment part 13. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimer1Isr::??INTVEC 75
                                   0000004B 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000005D (0x5e bytes), align: 0
  Segment part 14. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimer3Isr::??INTVEC 91
                                   0000005B 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000065 (0x66 bytes), align: 0
  Segment part 15. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimer4Isr::??INTVEC 99
                                   00000063 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D8 - 000000D8 (0x1 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TIMIF                000000D8 

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\hal_uart.r51
  PROGRAM MODULE, NAME : hal_uart

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000086 - 00000086 (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U0CSR                   00000086 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C1 - 000000C1 (0x1 bytes), align: 0
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U0DBUF                  000000C1 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C2 - 000000C2 (0x1 bytes), align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U0BAUD                  000000C2 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C4 - 000000C4 (0x1 bytes), align: 0
  Segment part 7. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U0UCR                   000000C4 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C5 - 000000C5 (0x1 bytes), align: 0
  Segment part 8. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U0GCR                   000000C5 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D7 - 000000D7 (0x1 bytes), align: 0
  Segment part 11. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMAREQ                  000000D7 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F1 - 000000F1 (0x1 bytes), align: 0
  Segment part 12. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PERCFG                  000000F1 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F86F - 0000F870 (0x2 bytes), align: 0
  Segment part 22.            Intra module refs:   HalUARTOpen
                                                   HalUARTPoll
                                                   HalUARTRead
                                                   HalUARTWrite
                                                   Hal_UART_RxBufLen
           LOCAL                   ADDRESS         
           =====                   =======         
           cfg0                    0000F86F 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BAC1 - 0002BCE7 (0x227 bytes), align: 0
  Segment part 24.            Intra module refs:   HalUARTPoll
           LOCAL                   ADDRESS         
           =====                   =======         
           pollDMA                 0002BAC1 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000A ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BCE8 - 0002BCEC (0x5 bytes), align: 0
  Segment part 25.            Intra module refs:   HalUARTPoll
                                                   pollDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine19           0002BCE8 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BCED - 0002BCF4 (0x8 bytes), align: 0
  Segment part 26.            Intra module refs:   HalUARTOpen
                                                   HalUARTPoll
                                                   pollDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            0002BCED 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BCF5 - 0002BCFF (0xb bytes), align: 0
  Segment part 27.            Intra module refs:   pollDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            0002BCF5 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BD00 - 0002BD0B (0xc bytes), align: 0
  Segment part 28.            Intra module refs:   HalUARTPoll
                                                   pollDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0002BD00 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BD0C - 0002BD16 (0xb bytes), align: 0
  Segment part 29.            Intra module refs:   pollDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0002BD0C 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BD17 - 0002BD26 (0x10 bytes), align: 0
  Segment part 30.            Intra module refs:   pollDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0002BD17 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BD27 - 0002BD2B (0x5 bytes), align: 0
  Segment part 31.            Intra module refs:   ?Subroutine0
                                                   ?Subroutine12
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine20           0002BD27 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BD2C - 0002BD35 (0xa bytes), align: 0
  Segment part 32.            Intra module refs:   ?Subroutine0
                                                   pollDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine16           0002BD2C 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BD36 - 0002BD92 (0x5d bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTInit             0002BD36        HalDriverInit (hal_drivers)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BD93 - 0002BD99 (0x7 bytes), align: 0
  Segment part 34.            Intra module refs:   HalUARTInit
                                                   Hal_UART_RxBufLen
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine21           0002BD93 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BD9A - 0002BF22 (0x189 bytes), align: 0
  Segment part 35.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTOpen             0002BD9A        SPIMgr_Init (SPIMgr)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BF23 - 0002BF31 (0xf bytes), align: 0
  Segment part 36.            Intra module refs:   HalUARTOpen
                                                   pollDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine15           0002BF23 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BF32 - 0002BF3D (0xc bytes), align: 0
  Segment part 37.            Intra module refs:   HalUARTOpen
                                                   pollDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           0002BF32 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BF3E - 0002BF57 (0x1a bytes), align: 0
  Segment part 38.            Intra module refs:   HalUARTOpen
                                                   pollDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            0002BF3E 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BF58 - 0002BF5E (0x7 bytes), align: 0
  Segment part 39.            Intra module refs:   ?Subroutine15
                                                   ?Subroutine9
                                                   HalUARTOpen
                                                   HalUARTWrite
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine17           0002BF58 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BF5F - 0002BF71 (0x13 bytes), align: 0
  Segment part 40.            Intra module refs:   HalUARTOpen
                                                   pollDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            0002BF5F 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BF72 - 0002C093 (0x122 bytes), align: 0
  Segment part 42.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTPoll             0002BF72        Hal_ProcessPoll (hal_drivers)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C094 - 0002C09E (0xb bytes), align: 0
  Segment part 43.            Intra module refs:   HalUARTOpen
                                                   HalUARTPoll
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine14           0002C094 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C09F - 0002C0B8 (0x1a bytes), align: 0
  Segment part 44.            Intra module refs:   HalUARTPoll
                                                   pollDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0002C09F 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F871 - 0000F871 (0x1 bytes), align: 0
  Segment part 23.            Intra module refs:   HalUARTPoll
           LOCAL                   ADDRESS         
           =====                   =======         
           HalUARTPoll::tickShdw   0000F871 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C0B9 - 0002C11A (0x62 bytes), align: 0
  Segment part 45.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_UART_RxBufLen       0002C0B9        SPIMgr_ProcessZToolData (SPIMgr)
               stack 1 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C11B - 0002C123 (0x9 bytes), align: 0
  Segment part 46.            Intra module refs:   Hal_UART_RxBufLen
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine12           0002C11B 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C124 - 0002C1B7 (0x94 bytes), align: 0
  Segment part 47.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTRead             0002C124        SPIMgr_ProcessZToolData (SPIMgr)
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C1B8 - 0002C1BC (0x5 bytes), align: 0
  Segment part 48.            Intra module refs:   HalUARTRead
                                                   HalUARTWrite
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine22           0002C1B8 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C1BD - 0002C1C5 (0x9 bytes), align: 0
  Segment part 49.            Intra module refs:   HalUARTRead
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           0002C1BD 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C1C6 - 0002C1CF (0xa bytes), align: 0
  Segment part 50.            Intra module refs:   HalUARTOpen
                                                   HalUARTPoll
                                                   HalUARTRead
                                                   HalUARTWrite
                                                   pollDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0002C1C6 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C1D0 - 0002C1D5 (0x6 bytes), align: 0
  Segment part 51.            Intra module refs:   ?Subroutine2
                                                   ?Subroutine3
                                                   ?Subroutine4
                                                   ?Subroutine5
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine18           0002C1D0 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C1D6 - 0002C2F2 (0x11d bytes), align: 0
  Segment part 52.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTWrite            0002C1D6        ?Subroutine9 (MTEL)
                                                   MT_BuildAndSendZToolResponse (MTEL)
                                                   MT_ProcessCommand (MTEL)
                                                   MT_SendSPIRespMsg (MTEL)
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C2F3 - 0002C30D (0x1b bytes), align: 0
  Segment part 53.            Intra module refs:   HalUARTWrite
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           0002C2F3 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C30E - 0002C318 (0xb bytes), align: 0
  Segment part 54.            Intra module refs:   HalUARTPoll
                                                   HalUARTWrite
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0002C30E 

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\mac_backoff_timer.r51
  PROGRAM MODULE, NAME : mac_backoff_timer

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000A6 - 000000A6 (0x1 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2TLD                   000000A6 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A7 - 000000A7 (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2THD                   000000A7 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C3 - 000000C3 (0x1 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2CNF                   000000C3 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F872 - 0000F875 (0x4 bytes), align: 0
  Segment part 10.            Intra module refs:   ?Subroutine0
                                                   macBackoffTimerCapture
                                                   macBackoffTimerCount
                                                   macBackoffTimerSetRollover
                                                   macBackoffTimerSetTrigger
           LOCAL                   ADDRESS         
           =====                   =======         
           backoffTimerRollover    0000F872 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F876 - 0000F879 (0x4 bytes), align: 0
  Segment part 11.            Intra module refs:   macBackoffTimerCompareIsr
                                                   macBackoffTimerSetTrigger
           LOCAL                   ADDRESS         
           =====                   =======         
           backoffTimerTrigger     0000F876 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F87A - 0000F87A (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   ?Subroutine0
                                                   macBackoffTimerCompareIsr
                                                   macBackoffTimerInit
                                                   macBackoffTimerSetTrigger
           LOCAL                   ADDRESS         
           =====                   =======         
           compareState            0000F87A 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B943 - 0003B98D (0x4b bytes), align: 0
  Segment part 19.            Intra module refs:   macBackoffTimerReset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerInit     0003B943        macLowLevelInit (mac_low_level)
               calls direct
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B98E - 0003B9AA (0x1d bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerReset    0003B98E        macLowLevelReset (mac_low_level)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B9AB - 0003B9EB (0x41 bytes), align: 0
  Segment part 21.            Intra module refs:   macBackoffTimerInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerSetRollover
                                   0003B9AB        macBackoffTimerRolloverCallback (mac_timer)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000C ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B9EC - 0003BA28 (0x3d bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerCount    0003B9EC        macTimer (mac_timer)
                                                   macTimerUpdateBackoffTimer (mac_timer)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003BA29 - 0003BA42 (0x1a bytes), align: 0
  Segment part 24.            Intra module refs:   macBackoffTimerCapture
                                                   macBackoffTimerCount
                                                   macBackoffTimerSetRollover
                                                   macBackoffTimerSetTrigger
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0003BA29 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003BA43 - 0003BA7F (0x3d bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerCapture
                                   0003BA43        macTxTimestampCallback (mac_tx)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003BA80 - 0003BAEF (0x70 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerSetTrigger
                                   0003BA80        macTimerUpdateBackoffTimer (mac_timer)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003BAF0 - 0003BB17 (0x28 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerCancelTrigger
                                   0003BAF0        macTimerUpdateBackoffTimer (mac_timer)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003BB18 - 0003BB1C (0x5 bytes), align: 0
  Segment part 29.            Intra module refs:   macBackoffTimerCancelTrigger
                                                   macBackoffTimerCompareIsr
                                                   macBackoffTimerInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0003BB18 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003BB1D - 0003BB28 (0xc bytes), align: 0
  Segment part 30.            Intra module refs:   macBackoffTimerCancelTrigger
                                                   macBackoffTimerCompareIsr
                                                   macBackoffTimerSetTrigger
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0003BB1D 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003BB29 - 0003BBB3 (0x8b bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerCompareIsr
                                   0003BB29        macMcuTimer2Isr (mac_mcu)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC50 - 0000FC53 (0x4 bytes), align: 0
  Segment part 15.            Intra module refs:   macBackoffTimerInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_c0000        0000FC50 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000171E - 00001721 (0x4 bytes), align: 0
  Segment part 16.            Intra module refs:   __Constant_c0000

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\mac_cfg.r51
  PROGRAM MODULE, NAME : mac_cfg

  SEGMENTS IN THE MODULE
  ======================
XDATA_I
  Relative segment, address: XDATA 0000FC54 - 0000FC58 (0x5 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCfg                  0000FC54        MAC_McpsDataReq (mac_data)
                                                   macDataRxMemAlloc (mac_data)
                                                   macDataTxEnqueue (mac_data)
                                                   macRxDataReq (mac_coord)
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001722 - 00001726 (0x5 bytes), align: 0
  Segment part 7.             Intra module refs:   macCfg

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\mac_csp_tx.r51
  PROGRAM MODULE, NAME : mac_csp_tx

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000094 - 00000094 (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2CMP                   00000094 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A1 - 000000A1 (0x1 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2OF0                   000000A1 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E1 - 000000E1 (0x1 bytes), align: 0
  Segment part 7. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFST                    000000E1 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B408 - 0003B412 (0xb bytes), align: 0
  Segment part 14.            Intra module refs:   macCspTxCancelAckTimeoutCallback
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0003B408 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B413 - 0003B43F (0x2d bytes), align: 0
  Segment part 15.            Intra module refs:   macCspTxPrepCsmaSlotted
                                                   macCspTxPrepCsmaUnslotted
                                                   macCspTxPrepSlotted
           LOCAL                   ADDRESS         
           =====                   =======         
           cspPrepForTxProgram     0003B413 
               calls direct
               stack 1 = 00000002 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B440 - 0003B445 (0x6 bytes), align: 0
  Segment part 16.            Intra module refs:   cspPrepForTxProgram
                                                   macCspTxIntIsr
                                                   macCspTxStopIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0003B440 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B446 - 0003B45F (0x1a bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxPrepCsmaUnslotted
                                   0003B446        txCsmaPrep (mac_tx)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B460 - 0003B47F (0x20 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxPrepCsmaSlotted
                                   0003B460        txCsmaPrep (mac_tx)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B480 - 0003B4BB (0x3c bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxGoCsma          0003B480        txCsmaGo (mac_tx)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B4BC - 0003B4E6 (0x2b bytes), align: 0
  Segment part 20.            Intra module refs:   ?Subroutine1
                                                   ?Subroutine2
                                                   macCspForceTxDoneIfPending
                                                   macCspTxGoCsma
                                                   macCspTxGoSlotted
                                                   macCspTxPrepCsmaSlotted
                                                   macCspTxPrepCsmaUnslotted
                                                   macCspTxPrepSlotted
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0003B4BC 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B4E7 - 0003B4F7 (0x11 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxPrepSlotted     0003B4E7        macTxFrame (mac_tx)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B4F8 - 0003B546 (0x4f bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxGoSlotted       0003B4F8        txGo (mac_tx)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B547 - 0003B581 (0x3b bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspForceTxDoneIfPending
                                   0003B547        rxStartIsr (mac_rx)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B582 - 0003B640 (0xbf bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxRequestAckTimeoutCallback
                                   0003B582        macTxDoneCallback (mac_tx)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B641 - 0003B64C (0xc bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxCancelAckTimeoutCallback
                                   0003B641        macTxAckNotReceivedCallback (mac_tx)
                                                   macTxAckReceivedCallback (mac_tx)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B64D - 0003B67B (0x2f bytes), align: 0
  Segment part 26.            Intra module refs:   macCspForceTxDoneIfPending
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxIntIsr          0003B64D        macMcuRfIsr (mac_mcu)
               calls direct
               stack 1 = 00000002 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B67C - 0003B6BF (0x44 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxStopIsr         0003B67C        macMcuRfIsr (mac_mcu)
               calls direct
               stack 1 = 00000000 ( 00000002 )

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\mac_low_level.r51
  PROGRAM MODULE, NAME : mac_low_level

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003D2F5 - 0003D325 (0x31 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macLowLevelInit         0003D2F5        MAC_Init (mac_mgmt)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003D326 - 0003D32F (0xa bytes), align: 0
  Segment part 8.             Intra module refs:   macLowLevelInit
                                                   macLowLevelReset
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0003D326 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003D330 - 0003D364 (0x35 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macLowLevelReset        0003D330        MAC_MlmeResetReq (mac_mgmt)
               calls direct
               stack 1 = 00000000 ( 00000002 )

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\mac_mcu.r51
  PROGRAM MODULE, NAME : mac_mcu

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 0000009B - 0000009B (0x1 bytes), align: 0
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           S1CON                   0000009B 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000009C - 0000009C (0x1 bytes), align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2PEROF0                0000009C 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000009D - 0000009D (0x1 bytes), align: 0
  Segment part 7. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2PEROF1                0000009D 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000009E - 0000009E (0x1 bytes), align: 0
  Segment part 8. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2PEROF2                0000009E 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A2 - 000000A2 (0x1 bytes), align: 0
  Segment part 10. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2OF1                   000000A2 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A3 - 000000A3 (0x1 bytes), align: 0
  Segment part 11. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2OF2                   000000A3 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A4 - 000000A4 (0x1 bytes), align: 0
  Segment part 12. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2CAPLPL                000000A4 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A5 - 000000A5 (0x1 bytes), align: 0
  Segment part 13. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2CAPHPH                000000A5 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A9 - 000000A9 (0x1 bytes), align: 0
  Segment part 16. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IP0                     000000A9 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000B9 - 000000B9 (0x1 bytes), align: 0
  Segment part 18. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IP1                     000000B9 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BC - 000000BC (0x1 bytes), align: 0
  Segment part 19. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RNDL                    000000BC 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BD - 000000BD (0x1 bytes), align: 0
  Segment part 20. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RNDH                    000000BD 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E9 - 000000E9 (0x1 bytes), align: 0
  Segment part 24. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFIF                    000000E9 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F87B - 0000F87B (0x1 bytes), align: 0
  Segment part 32.            Intra module refs:   macMcuRecordMaxRssiStart
                                                   macMcuRecordMaxRssiStop
                                                   macMcuTimer2Isr
           LOCAL                   ADDRESS         
           =====                   =======         
           maxRssi                 0000F87B 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F87C - 0000F87C (0x1 bytes), align: 0
  Segment part 33.            Intra module refs:   macMcuAndT2PEROF2
                                                   macMcuInit
                                                   macMcuOrT2PEROF2
                                                   macMcuOverflowSetCompare
           LOCAL                   ADDRESS         
           =====                   =======         
           shadowPerof2            0000F87C 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A81D - 0003A910 (0xf4 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuInit              0003A81D        macLowLevelInit (mac_low_level)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A911 - 0003A91D (0xd bytes), align: 0
  Segment part 35.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuRandomByte        0003A911        Onboard_rand (OnBoard)
                                                   macRadioRandomByte (mac_radio)
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A91E - 0003A925 (0x8 bytes), align: 0
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuTimerCapture      0003A91E        macTxTimestampCallback (mac_tx)
                                                   rxStartIsr (mac_rx)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A926 - 0003A948 (0x23 bytes), align: 0
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuOverflowCount     0003A926        macBackoffTimerCount (mac_backoff_timer)
                                                   macBackoffTimerSetRollover (mac_backoff_timer)
                                                   macBackoffTimerSetTrigger (mac_backoff_timer)
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A949 - 0003A96D (0x25 bytes), align: 0
  Segment part 39.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuOverflowCapture   0003A949        macBackoffTimerCapture (mac_backoff_timer)
                                                   rxStartIsr (mac_rx)
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A96E - 0003A9AF (0x42 bytes), align: 0
  Segment part 40.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuOverflowSetCount
                                   0003A96E        macBackoffTimerCompareIsr (mac_backoff_timer)
                                                   macBackoffTimerInit (mac_backoff_timer)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A9B0 - 0003A9D7 (0x28 bytes), align: 0
  Segment part 41.            Intra module refs:   macMcuOverflowCapture
                                                   macMcuOverflowCount
                                                   macMcuOverflowSetCompare
                                                   macMcuOverflowSetCount
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0003A9B0 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A9D8 - 0003A9F1 (0x1a bytes), align: 0
  Segment part 42.            Intra module refs:   ?Subroutine5
                                                   macMcuOverflowSetCompare
                                                   macMcuOverflowSetCount
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0003A9D8 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A9F2 - 0003AA60 (0x6f bytes), align: 0
  Segment part 43.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuOverflowSetCompare
                                   0003A9F2        ?Subroutine2 (mac_backoff_timer)
                                                   macBackoffTimerCancelTrigger (mac_backoff_timer)
                                                   macBackoffTimerCompareIsr (mac_backoff_timer)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003AA61 - 0003AA6C (0xc bytes), align: 0
  Segment part 44.            Intra module refs:   macMcuOverflowSetCompare
                                                   macMcuOverflowSetCount
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0003AA61 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000119B - 000011D3 (0x39 bytes), align: 0
  Segment part 56.            Intra module refs:   macMcuTimer2Isr::??INTVEC 83
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuTimer2Isr         0000119B 
               interrupt function
               calls direct
               stack 1 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000011D4 - 000011D8 (0x5 bytes), align: 0
  Segment part 57.            Intra module refs:   macMcuRfIsr
                                                   macMcuTimer2Isr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            000011D4 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003AA6D - 0003AA99 (0x2d bytes), align: 0
  Segment part 45.            Intra module refs:   macMcuRecordMaxRssiStart
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuOrT2PEROF2        0003AA6D        macBackoffTimerInit (mac_backoff_timer)
               calls direct
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003AA9A - 0003AA9F (0x6 bytes), align: 0
  Segment part 46.            Intra module refs:   macMcuAndT2PEROF2
                                                   macMcuOrT2PEROF2
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            0003AA9A 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003AAA0 - 0003AAD0 (0x31 bytes), align: 0
  Segment part 47.            Intra module refs:   macMcuRecordMaxRssiStop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuAndT2PEROF2       0003AAA0        macBackoffTimerReset (mac_backoff_timer)
               calls direct
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003AAD1 - 0003AADA (0xa bytes), align: 0
  Segment part 48.            Intra module refs:   ?Subroutine6
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0003AAD1 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000011D9 - 0000125F (0x87 bytes), align: 0
  Segment part 58.            Intra module refs:   macMcuRfIsr::??INTVEC 131
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuRfIsr             000011D9 
               interrupt function
               calls direct
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003AADB - 0003AAF4 (0x1a bytes), align: 0
  Segment part 49.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuOrRFIM            0003AADB        macCspTxGoCsma (mac_csp_tx)
                                                   macCspTxGoSlotted (mac_csp_tx)
                                                   macCspTxRequestAckTimeoutCallback (mac_csp_tx)
                                                   macRxRadioPowerUpInit (mac_rx)
                                                   rxStartIsr (mac_rx)
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003AAF5 - 0003AAF9 (0x5 bytes), align: 0
  Segment part 50.            Intra module refs:   macMcuAndRFIM
                                                   macMcuOrRFIM
                                                   macMcuWriteRFIF
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0003AAF5 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003AAFA - 0003AB15 (0x1c bytes), align: 0
  Segment part 51.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuAndRFIM           0003AAFA        ?Subroutine1 (mac_csp_tx)
                                                   macCspForceTxDoneIfPending (mac_csp_tx)
                                                   macCspTxCancelAckTimeoutCallback (mac_csp_tx)
                                                   macCspTxIntIsr (mac_csp_tx)
                                                   macCspTxStopIsr (mac_csp_tx)
                                                   rxFcsIsr (mac_rx)
                                                   rxHaltCleanupFinalStep (mac_rx)
                                                   rxStartIsr (mac_rx)
                                                   txGo (mac_tx)
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003AB16 - 0003AB2E (0x19 bytes), align: 0
  Segment part 52.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuWriteRFIF         0003AB16        cspPrepForTxProgram (mac_csp_tx)
                                                   macCspTxRequestAckTimeoutCallback (mac_csp_tx)
                                                   rxStartIsr (mac_rx)
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003AB2F - 0003AB42 (0x14 bytes), align: 0
  Segment part 53.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuRecordMaxRssiStart
                                   0003AB2F        macRadioEnergyDetectStart (mac_radio)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003AB43 - 0003AB49 (0x7 bytes), align: 0
  Segment part 54.            Intra module refs:   macMcuInit
                                                   macMcuRecordMaxRssiStart
                                                   macMcuRecordMaxRssiStop
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0003AB43 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003AB4A - 0003AB5E (0x15 bytes), align: 0
  Segment part 55.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuRecordMaxRssiStop
                                   0003AB4A        macRadioEnergyDetectStop (mac_radio)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000055 (0x56 bytes), align: 0
  Segment part 25. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuTimer2Isr::??INTVEC 83
                                   00000053 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000085 (0x86 bytes), align: 0
  Segment part 26. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuRfIsr::??INTVEC 131
                                   00000083 

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\mac_mem.r51
  PROGRAM MODULE, NAME : mac_mem

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000D9 - 000000D9 (0x1 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFD                     000000D9 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003D279 - 0003D29D (0x25 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMemWriteRam          0003D279        macRadioSetIEEEAddr (mac_radio)
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003D29E - 0003D2C5 (0x28 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMemWriteTxFifo       0003D29E        macTxFrame (mac_tx)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003D2C6 - 0003D2CA (0x5 bytes), align: 0
  Segment part 11.            Intra module refs:   macMemReadRxFifo
                                                   macMemWriteRam
                                                   macMemWriteTxFifo
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0003D2C6 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003D2CB - 0003D2F4 (0x2a bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMemReadRxFifo        0003D2CB        ?Subroutine8 (mac_rx)
                                                   rxFcsIsr (mac_rx)
                                                   rxPayloadIsr (mac_rx)
                                                   rxStartIsr (mac_rx)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000009 )

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\mac_radio.r51
  PROGRAM MODULE, NAME : mac_radio

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000F87D - 0000F87D (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   macRadioInit
                                                   macRadioUpdateTxPower
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPhyTxPower           0000F87D 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F87E - 0000F87E (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   macRadioInit
                                                   macRadioUpdateChannel
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPhyChannel           0000F87E 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F87F - 0000F87F (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   macRadioInit
                                                   macRadioSetChannel
                                                   macRadioUpdateChannel
           LOCAL                   ADDRESS         
           =====                   =======         
           reqChannel              0000F87F 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F880 - 0000F880 (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   macRadioInit
                                                   macRadioSetTxPower
                                                   macRadioUpdateTxPower
           LOCAL                   ADDRESS         
           =====                   =======         
           reqTxPower              0000F880 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B6C0 - 0003B6D8 (0x19 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioInit            0003B6C0        macLowLevelInit (mac_low_level)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B6D9 - 0003B6DE (0x6 bytes), align: 0
  Segment part 12.            Intra module refs:   macRadioInit
                                                   macRadioSetPanCoordinator
                                                   macRadioSetPanID
                                                   macRadioSetShortAddr
                                                   macRadioStopScan
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0003B6D9 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B6DF - 0003B6ED (0xf bytes), align: 0
  Segment part 13.            Intra module refs:   ?Subroutine2
                                                   macRadioComputeLQI
                                                   macRadioEnergyDetectStart
                                                   macRadioEnergyDetectStop
                                                   macRadioRandomByte
                                                   macRadioReset
                                                   macRadioSetIEEEAddr
                                                   macRadioUpdateChannel
                                                   macRadioUpdateTxPower
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0003B6DF 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B6EE - 0003B700 (0x13 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioReset           0003B6EE        macLowLevelReset (mac_low_level)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B701 - 0003B70B (0xb bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioRandomByte      0003B701        macPibReset (mac_pib)
                                                   txCsmaPrep (mac_tx)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B70C - 0003B72E (0x23 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioSetPanCoordinator
                                   0003B70C        MAC_MlmeResetReq (mac_mgmt)
                                                   macStartSetParams (mac_coord)
               stack 1 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B72F - 0003B73A (0xc bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioSetPanID        0003B72F        MAC_MlmeResetReq (mac_mgmt)
                                                   MAC_MlmeSetReq (mac_pib)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B73B - 0003B749 (0xf bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioSetShortAddr    0003B73B        MAC_MlmeResetReq (mac_mgmt)
                                                   MAC_MlmeSetReq (mac_pib)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B74A - 0003B75E (0x15 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioSetIEEEAddr     0003B74A        MAC_MlmeResetReq (mac_mgmt)
                                                   MAC_MlmeSetReq (mac_pib)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B75F - 0003B798 (0x3a bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioSetTxPower      0003B75F        MAC_MlmeResetReq (mac_mgmt)
                                                   MAC_MlmeSetReq (mac_pib)
                                                   macDataTxSend (mac_data)
                                                   macTxCompleteCallback (mac_data)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B799 - 0003B7D2 (0x3a bytes), align: 0
  Segment part 21.            Intra module refs:   macRadioSetTxPower
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioUpdateTxPower   0003B799        rxPostRxUpdates (mac_rx)
                                                   txComplete (mac_tx)
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 0000000A ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B7D3 - 0003B80C (0x3a bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioSetChannel      0003B7D3        MAC_MlmeResetReq (mac_mgmt)
                                                   MAC_MlmeSetReq (mac_pib)
                                                   macDataTxSend (mac_data)
                                                   macTxCompleteCallback (mac_data)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B80D - 0003B811 (0x5 bytes), align: 0
  Segment part 23.            Intra module refs:   macRadioSetChannel
                                                   macRadioStartScan
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0003B80D 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B812 - 0003B865 (0x54 bytes), align: 0
  Segment part 24.            Intra module refs:   macRadioSetChannel
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioUpdateChannel   0003B812        txComplete (mac_tx)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000009 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B866 - 0003B8C0 (0x5b bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioStartScan       0003B866        macApiScanReq (mac_scan)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B8C1 - 0003B8D8 (0x18 bytes), align: 0
  Segment part 26.            Intra module refs:   macRadioReset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioStopScan        0003B8C1        macScanComplete (mac_scan)
               stack 1 = 00000002 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B8D9 - 0003B8E4 (0xc bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioEnergyDetectStart
                                   0003B8D9        macScanStartTimer (mac_scan)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B8E5 - 0003B8F7 (0x13 bytes), align: 0
  Segment part 28.            Intra module refs:   macRadioReset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioEnergyDetectStop
                                   0003B8E5        macScanNextChan (mac_scan)
               calls direct
               stack 1 = 00000002 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B8F8 - 0003B93B (0x44 bytes), align: 0
  Segment part 29.            Intra module refs:   ?Subroutine0
           LOCAL                   ADDRESS         
           =====                   =======         
           radioComputeED          0003B8F8 
               stack 1 = 00000002 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B93C - 0003B942 (0x7 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioComputeLQI      0003B93C        rxFcsIsr (mac_rx)
               calls direct
               stack 1 = 00000000 ( 00000002 )

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\mac_radio_defs.r51
  PROGRAM MODULE, NAME : mac_radio_defs

  SEGMENTS IN THE MODULE
  ======================
CODE_C
  Relative segment, address: CODE 00001AD7 - 00001AF0 (0x1a bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioDefsTxPowerTable
                                   00001AD7        macRadioSetTxPower (mac_radio)

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\mac_random.r51
    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\mac_rx.r51
  PROGRAM MODULE, NAME : mac_rx

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000F881 - 0000F881 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   macRxAckTxDoneCallback
                                                   macRxInit
                                                   rxDone
                                                   rxFcsIsr
                                                   rxHaltCleanupFinalStep
                                                   rxStartIsr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxActive             0000F881        halAssertHazardLights (hal_assert)
                                                   macRxOffRequest (mac_rx_onoff)
                                                   macTxFrame (mac_tx)
                                                   macTxStartQueuedFrame (mac_tx)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F882 - 0000F882 (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   macRxInit
                                                   macRxTxReset
                                                   rxStartIsr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxFilter             0000F882        macRadioStartScan (mac_radio)
                                                   macRadioStopScan (mac_radio)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F883 - 0000F883 (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   macRxAckTxDoneCallback
                                                   macRxInit
                                                   rxDone
                                                   rxFcsIsr
                                                   rxHaltCleanupFinalStep
                                                   rxStartIsr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxOutgoingAckFlag    0000F883        macRadioUpdateTxPower (mac_radio)
                                                   macRxOffRequest (mac_rx_onoff)
                                                   macTxFrame (mac_tx)
                                                   macTxStartQueuedFrame (mac_tx)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00001AF1 - 00001AF4 (0x4 bytes), align: 0
  Segment part 12.            Intra module refs:   ?Subroutine15
           LOCAL                   ADDRESS         
           =====                   =======         
           macRxAddrLen            00001AF1 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F884 - 0000F886 (0x3 bytes), align: 0
  Segment part 13.            Intra module refs:   ?Subroutine16
                                                   ?Subroutine2
                                                   macRxThresholdIsr
                                                   rxDiscardFrame
                                                   rxPrepPayload
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           pFuncRxState            0000F884 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F887 - 0000F888 (0x2 bytes), align: 0
  Segment part 14.            Intra module refs:   ?Subroutine19
                                                   ?Subroutine21
                                                   ?Subroutine3
                                                   ?Subroutine7
                                                   macRxInit
                                                   rxAddrIsr
                                                   rxFcsIsr
                                                   rxHaltCleanupFinalStep
                                                   rxPayloadIsr
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           pRxBuf                  0000F887 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F889 - 0000F88C (0x4 bytes), align: 0
  Segment part 15.            Intra module refs:   rxAddrIsr
                                                   rxFcsIsr
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxBuf                   0000F889 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F88D - 0000F88D (0x1 bytes), align: 0
  Segment part 16.            Intra module refs:   rxDiscardFrame
                                                   rxDiscardIsr
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxUnreadLen             0000F88D 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F88E - 0000F88E (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   ?Subroutine8
                                                   rxAddrIsr
                                                   rxDiscardFrame
                                                   rxDiscardIsr
                                                   rxPayloadIsr
                                                   rxPrepPayload
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxNextLen               0000F88E 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F88F - 0000F88F (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   rxPayloadIsr
                                                   rxPrepPayload
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxPayloadLen            0000F88F 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F890 - 0000F890 (0x1 bytes), align: 0
  Segment part 19.            Intra module refs:   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxFilter                0000F890 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F891 - 0000F891 (0x1 bytes), align: 0
  Segment part 20.            Intra module refs:   macRxInit
                                                   macRxPromiscuousMode
                                                   rxFcsIsr
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxPromiscuousMode       0000F891 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F892 - 0000F892 (0x1 bytes), align: 0
  Segment part 21.            Intra module refs:   macRxHaltCleanup
                                                   macRxInit
                                                   macRxThresholdIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxIsrActiveFlag         0000F892 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F893 - 0000F893 (0x1 bytes), align: 0
  Segment part 22.            Intra module refs:   macRxHaltCleanup
                                                   macRxInit
                                                   macRxThresholdIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxResetFlag             0000F893 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C319 - 0002C341 (0x29 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxInit               0002C319        macLowLevelInit (mac_low_level)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C342 - 0002C358 (0x17 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxRadioPowerUpInit   0002C342        macSleepWakeUp (mac_sleep)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C359 - 0002C371 (0x19 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxTxReset            0002C359        macLowLevelReset (mac_low_level)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C372 - 0002C390 (0x1f bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxHaltCleanup        0002C372        macCspTxIntIsr (mac_csp_tx)
                                                   macRxHardDisable (mac_rx_onoff)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C391 - 0002C3EF (0x5f bytes), align: 0
  Segment part 27.            Intra module refs:   macRxHaltCleanup
                                                   macRxThresholdIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxHaltCleanupFinalStep
                                   0002C391 
               calls direct
               stack 1 = 00000002 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C3F0 - 0002C3F9 (0xa bytes), align: 0
  Segment part 28.            Intra module refs:   macRxAckTxDoneCallback
                                                   macRxHaltCleanup
                                                   macRxInit
                                                   macRxPromiscuousMode
                                                   macRxRadioPowerUpInit
                                                   macRxThresholdIsr
                                                   macRxTxReset
                                                   rxDiscardIsr
                                                   rxDone
                                                   rxHaltCleanupFinalStep
                                                   rxPayloadIsr
                                                   rxPostRxUpdates
                                                   rxPrepPayload
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine20           0002C3F0 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C3FA - 0002C3FD (0x4 bytes), align: 0
  Segment part 29.            Intra module refs:   macRxInit
                                                   rxHaltCleanupFinalStep
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0002C3FA 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C3FE - 0002C40D (0x10 bytes), align: 0
  Segment part 30.            Intra module refs:   ?Subroutine0
                                                   ?Subroutine1
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine16           0002C3FE 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C40E - 0002C448 (0x3b bytes), align: 0
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxThresholdIsr       0002C40E        macMcuRfIsr (mac_mcu)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C449 - 0002C73A (0x2f2 bytes), align: 0
  Segment part 32.            Intra module refs:   ?Subroutine16
                                                   rxDiscardFrame
           LOCAL                   ADDRESS         
           =====                   =======         
           rxStartIsr              0002C449 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C73B - 0002C748 (0xe bytes), align: 0
  Segment part 33.            Intra module refs:   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine15           0002C73B 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C749 - 0002C74C (0x4 bytes), align: 0
  Segment part 34.            Intra module refs:   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           0002C749 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C74D - 0002C753 (0x7 bytes), align: 0
  Segment part 35.            Intra module refs:   ?Subroutine10
                                                   ?Subroutine9
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine17           0002C74D 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C754 - 0002C765 (0x12 bytes), align: 0
  Segment part 36.            Intra module refs:   rxAddrIsr
                                                   rxPayloadIsr
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0002C754 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C766 - 0002C849 (0xe4 bytes), align: 0
  Segment part 37.            Intra module refs:   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxAddrIsr               0002C766 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000001D )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C84A - 0002C84E (0x5 bytes), align: 0
  Segment part 38.            Intra module refs:   rxAddrIsr
                                                   rxDiscardFrame
                                                   rxFcsIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine22           0002C84A 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C84F - 0002C85A (0xc bytes), align: 0
  Segment part 39.            Intra module refs:   rxAddrIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine14           0002C84F 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C85B - 0002C869 (0xf bytes), align: 0
  Segment part 40.            Intra module refs:   rxAddrIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            0002C85B 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C86A - 0002C86E (0x5 bytes), align: 0
  Segment part 41.            Intra module refs:   ?Subroutine4
                                                   ?Subroutine6
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine21           0002C86A 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C86F - 0002C882 (0x14 bytes), align: 0
  Segment part 42.            Intra module refs:   rxAddrIsr
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0002C86F 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C883 - 0002C8B8 (0x36 bytes), align: 0
  Segment part 43.            Intra module refs:   ?Subroutine2
                                                   rxPayloadIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxPrepPayload           0002C883 
               stack 1 = 00000002 ( 00000002 )
               stack 2 = 0000001D ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C8B9 - 0002C905 (0x4d bytes), align: 0
  Segment part 44.            Intra module refs:   ?Subroutine2
           LOCAL                   ADDRESS         
           =====                   =======         
           rxPayloadIsr            0002C8B9 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C906 - 0002C909 (0x4 bytes), align: 0
  Segment part 45.            Intra module refs:   rxPayloadIsr
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           0002C906 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C90A - 0002C917 (0xe bytes), align: 0
  Segment part 46.            Intra module refs:   ?Subroutine11
                                                   ?Subroutine17
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine19           0002C90A 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C918 - 0002C9C1 (0xaa bytes), align: 0
  Segment part 47.            Intra module refs:   rxPrepPayload
           LOCAL                   ADDRESS         
           =====                   =======         
           rxFcsIsr                0002C918 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C9C2 - 0002C9C5 (0x4 bytes), align: 0
  Segment part 48.            Intra module refs:   rxFcsIsr
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           0002C9C2 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C9C6 - 0002C9D0 (0xb bytes), align: 0
  Segment part 49.            Intra module refs:   ?Subroutine12
                                                   ?Subroutine13
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine18           0002C9C6 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C9D1 - 0002C9D6 (0x6 bytes), align: 0
  Segment part 50.            Intra module refs:   rxFcsIsr
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine12           0002C9D1 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C9D7 - 0002C9DC (0x6 bytes), align: 0
  Segment part 51.            Intra module refs:   rxAddrIsr
                                                   rxFcsIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            0002C9D7 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C9DD - 0002C9F6 (0x1a bytes), align: 0
  Segment part 52.            Intra module refs:   rxFcsIsr
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            0002C9DD 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C9F7 - 0002C9FE (0x8 bytes), align: 0
  Segment part 53.            Intra module refs:   rxAddrIsr
                                                   rxFcsIsr
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0002C9F7 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C9FF - 0002CA08 (0xa bytes), align: 0
  Segment part 54.            Intra module refs:   rxFcsIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0002C9FF 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CA09 - 0002CA35 (0x2d bytes), align: 0
  Segment part 55.            Intra module refs:   ?Subroutine0
                                                   rxDiscardFrame
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxDone                  0002CA09 
               calls direct
               stack 1 = 00000002 ( 00000002 )
               stack 2 = 00000010 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CA36 - 0002CA4F (0x1a bytes), align: 0
  Segment part 56.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxAckTxDoneCallback
                                   0002CA36        macMcuRfIsr (mac_mcu)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CA50 - 0002CA6B (0x1c bytes), align: 0
  Segment part 57.            Intra module refs:   macRxAckTxDoneCallback
                                                   rxDone
                                                   rxHaltCleanupFinalStep
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxPostRxUpdates         0002CA50 
               calls direct
               stack 1 = 00000002 ( 00000002 )
               stack 2 = 0000000E ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CA6C - 0002CAC3 (0x58 bytes), align: 0
  Segment part 58.            Intra module refs:   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxDiscardFrame          0002CA6C 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000E ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CAC4 - 0002CAFF (0x3c bytes), align: 0
  Segment part 59.            Intra module refs:   rxDiscardFrame
           LOCAL                   ADDRESS         
           =====                   =======         
           rxDiscardIsr            0002CAC4 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CB00 - 0002CB14 (0x15 bytes), align: 0
  Segment part 60.            Intra module refs:   rxAddrIsr
                                                   rxDiscardIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            0002CB00 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CB15 - 0002CB22 (0xe bytes), align: 0
  Segment part 61.            Intra module refs:   rxDiscardIsr
                                                   rxFcsIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0002CB15 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CB23 - 0002CB5F (0x3d bytes), align: 0
  Segment part 62.            Intra module refs:   macRxTxReset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxPromiscuousMode    0002CB23 
               calls direct
               stack 1 = 00000002 ( 00000002 )

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\mac_rx_onoff.r51
  PROGRAM MODULE, NAME : mac_rx_onoff

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000F894 - 0000F894 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   macRxHardDisable
                                                   macRxOff
                                                   macRxOn
                                                   macRxOnOffInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxOnFlag             0000F894        macCspTxGoSlotted (mac_csp_tx)
                                                   rxStartIsr (mac_rx)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F895 - 0000F895 (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   macRxDisable
                                                   macRxEnable
                                                   macRxHardDisable
                                                   macRxOffRequest
                                                   macRxOnOffInit
                                                   macRxOnRequest
                                                   macRxSoftEnable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxEnableFlags        0000F895 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003CAF3 - 0003CB01 (0xf bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxOnOffInit          0003CAF3        macLowLevelInit (mac_low_level)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003CB02 - 0003CB0A (0x9 bytes), align: 0
  Segment part 12.            Intra module refs:   macRxHardDisable
                                                   macRxOff
                                                   macRxOn
                                                   macRxOnOffInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0003CB02 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003CB0B - 0003CB34 (0x2a bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxEnable             0003CB0B        MAC_MlmeSetReq (mac_pib)
                                                   macApiScanReq (mac_scan)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003CB35 - 0003CB3E (0xa bytes), align: 0
  Segment part 14.            Intra module refs:   macRxDisable
                                                   macRxEnable
                                                   macRxOffRequest
                                                   macRxOnRequest
                                                   macRxSoftEnable
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0003CB35 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003CB3F - 0003CB5E (0x20 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxSoftEnable         0003CB3F        macApiPollReq (mac_device)
                                                   macAssocDataReq (mac_device)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003CB5F - 0003CB8B (0x2d bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxDisable            0003CB5F        MAC_MlmeSetReq (mac_pib)
                                                   macAssocDataReqComplete (mac_device)
                                                   macAssocDataRxInd (mac_device)
                                                   macAssocFailed (mac_device)
                                                   macPollDataReqComplete (mac_device)
                                                   macPollDataRxInd (mac_device)
                                                   macPollFrameResponseTimeout (mac_device)
                                                   macRxAssocRsp (mac_device)
                                                   macScanComplete (mac_scan)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003CB8C - 0003CBAE (0x23 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxHardDisable        0003CB8C        macRxTxReset (mac_rx)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003CBAF - 0003CBCC (0x1e bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxOnRequest          0003CBAF        macRadioUpdateChannel (mac_radio)
                                                   macSleepWakeUp (mac_sleep)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003CBCD - 0003CC00 (0x34 bytes), align: 0
  Segment part 19.            Intra module refs:   macRxDisable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxOffRequest         0003CBCD        rxFcsIsr (mac_rx)
                                                   rxPostRxUpdates (mac_rx)
                                                   txComplete (mac_tx)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003CC01 - 0003CC1A (0x1a bytes), align: 0
  Segment part 20.            Intra module refs:   macRxEnable
                                                   macRxOnRequest
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxOn                 0003CC01        macCspTxGoCsma (mac_csp_tx)
                                                   macMcuInit (mac_mcu)
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000009 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003CC1B - 0003CC35 (0x1b bytes), align: 0
  Segment part 21.            Intra module refs:   macRxOffRequest
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxOff                0003CC1B        macMcuInit (mac_mcu)
                                                   macRadioUpdateChannel (mac_radio)
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000009 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003CC36 - 0003CC40 (0xb bytes), align: 0
  Segment part 22.            Intra module refs:   macRxHardDisable
                                                   macRxOff
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0003CC36 

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\mac_sleep.r51
  PROGRAM MODULE, NAME : mac_sleep

  SEGMENTS IN THE MODULE
  ======================
XDATA_I
  Relative segment, address: XDATA 0000FC59 - 0000FC59 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   macSleepWakeUp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSleepState           0000FC59        macLowLevelReset (mac_low_level)
                                                   macRadioStartScan (mac_radio)
                                                   macTxFrame (mac_tx)
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003D42B - 0003D478 (0x4e bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSleepWakeUp          0003D42B        macLowLevelReset (mac_low_level)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001727 - 00001727 (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   macSleepState

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\mac_tx.r51
  PROGRAM MODULE, NAME : mac_tx

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000F896 - 0000F896 (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   ?Subroutine3
                                                   macTxAckNotReceivedCallback
                                                   macTxAckReceivedCallback
                                                   macTxDoneCallback
                                                   macTxFrame
                                                   macTxStartQueuedFrame
                                                   txComplete
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxActive             0000F896        halAssertHazardLights (hal_assert)
                                                   macRadioSetChannel (mac_radio)
                                                   macRadioUpdateChannel (mac_radio)
                                                   macRadioUpdateTxPower (mac_radio)
                                                   macRxOffRequest (mac_rx_onoff)
                                                   rxStartIsr (mac_rx)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F897 - 0000F897 (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   macTxChannelBusyCallback
                                                   macTxFrame
                                                   macTxFrameRetransmit
                                                   txCsmaGo
                                                   txCsmaPrep
                                                   txGo
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxType               0000F897 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F898 - 0000F898 (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   macTxChannelBusyCallback
                                                   macTxFrame
                                                   txCsmaPrep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxBe                 0000F898 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F899 - 0000F899 (0x1 bytes), align: 0
  Segment part 13.            Intra module refs:   txCsmaGo
                                                   txCsmaPrep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxCsmaBackoffDelay   0000F899        macCspTxGoCsma (mac_csp_tx)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F89A - 0000F89A (0x1 bytes), align: 0
  Segment part 14.            Intra module refs:   macTxChannelBusyCallback
                                                   macTxFrame
           LOCAL                   ADDRESS         
           =====                   =======         
           nb                      0000F89A 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F89B - 0000F89B (0x1 bytes), align: 0
  Segment part 15.            Intra module refs:   macTxAckReceivedCallback
                                                   macTxFrame
           LOCAL                   ADDRESS         
           =====                   =======         
           txSeqn                  0000F89B 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F89C - 0000F89C (0x1 bytes), align: 0
  Segment part 16.            Intra module refs:   macTxDoneCallback
                                                   macTxFrame
           LOCAL                   ADDRESS         
           =====                   =======         
           txAckReq                0000F89C 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F89D - 0000F89D (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   ?Subroutine3
                                                   macTxFrame
                                                   macTxFrameRetransmit
                                                   txComplete
           LOCAL                   ADDRESS         
           =====                   =======         
           txRetransmitFlag        0000F89D 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000398A8 - 000398AE (0x7 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxInit               000398A8        macLowLevelInit (mac_low_level)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000398AF - 000399D3 (0x125 bytes), align: 0
  Segment part 20.            Intra module refs:   macTxFrameRetransmit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxFrame              000398AF        macDataTxSend (mac_data)
               calls direct, is recursive
               stack 1 = 00000002 ( 00000001 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000399D4 - 000399DF (0xc bytes), align: 0
  Segment part 21.            Intra module refs:   macTxFrame
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            000399D4 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000399E0 - 00039A1F (0x40 bytes), align: 0
  Segment part 22.            Intra module refs:   macTxChannelBusyCallback
                                                   macTxFrame
           LOCAL                   ADDRESS         
           =====                   =======         
           txCsmaPrep              000399E0 
               calls direct
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000009 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039A20 - 00039A43 (0x24 bytes), align: 0
  Segment part 23.            Intra module refs:   ?Subroutine2
           LOCAL                   ADDRESS         
           =====                   =======         
           txGo                    00039A20 
               calls direct, is recursive
               stack 1 = 00000002 ( 00000002 )
               stack 2 = 00000009 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039A44 - 00039A6F (0x2c bytes), align: 0
  Segment part 24.            Intra module refs:   macTxChannelBusyCallback
                                                   txGo
           LOCAL                   ADDRESS         
           =====                   =======         
           txCsmaGo                00039A44 
               calls direct, is recursive
               stack 1 = 00000002 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039A70 - 00039A83 (0x14 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxFrameRetransmit    00039A70        macTxCompleteCallback (mac_data)
               calls direct, is recursive
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039A84 - 00039A88 (0x5 bytes), align: 0
  Segment part 26.            Intra module refs:   macTxChannelBusyCallback
                                                   macTxFrameRetransmit
                                                   txCsmaGo
                                                   txGo
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            00039A84 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039A89 - 00039A98 (0x10 bytes), align: 0
  Segment part 27.            Intra module refs:   ?Subroutine5
                                                   macTxInit
                                                   macTxStartQueuedFrame
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            00039A89 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039A99 - 00039ACD (0x35 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxStartQueuedFrame   00039A99        rxPostRxUpdates (mac_rx)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039ACE - 00039AD6 (0x9 bytes), align: 0
  Segment part 29.            Intra module refs:   macTxFrame
                                                   macTxStartQueuedFrame
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            00039ACE 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039AD7 - 00039B44 (0x6e bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxChannelBusyCallback
                                   00039AD7        macCspTxStopIsr (mac_csp_tx)
               calls direct
               stack 1 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039B45 - 00039B88 (0x44 bytes), align: 0
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxDoneCallback       00039B45        macCspForceTxDoneIfPending (mac_csp_tx)
                                                   macCspTxStopIsr (mac_csp_tx)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039B89 - 00039BD3 (0x4b bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxAckReceivedCallback
                                   00039B89        rxStartIsr (mac_rx)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039BD4 - 00039BD8 (0x5 bytes), align: 0
  Segment part 33.            Intra module refs:   macTxAckNotReceivedCallback
                                                   macTxAckReceivedCallback
                                                   macTxDoneCallback
                                                   macTxFrame
                                                   txComplete
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            00039BD4 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039BD9 - 00039C0D (0x35 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxAckNotReceivedCallback
                                   00039BD9        macCspTxStopIsr (mac_csp_tx)
                                                   rxStartIsr (mac_rx)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039C0E - 00039C41 (0x34 bytes), align: 0
  Segment part 35.            Intra module refs:   macTxAckNotReceivedCallback
                                                   macTxAckReceivedCallback
                                                   macTxChannelBusyCallback
                                                   macTxDoneCallback
                                                   macTxFrame
                                                   txCsmaGo
           LOCAL                   ADDRESS         
           =====                   =======         
           txComplete              00039C0E 
               calls direct, is recursive
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039C42 - 00039C9A (0x59 bytes), align: 0
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxTimestampCallback
                                   00039C42        macCspTxIntIsr (mac_csp_tx)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039C9B - 00039CAA (0x10 bytes), align: 0
  Segment part 37.            Intra module refs:   macTxFrame
                                                   macTxTimestampCallback
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00039C9B 

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\menu_lcd.r51
    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\nwk_globals.r51
  PROGRAM MODULE, NAME : nwk_globals

  SEGMENTS IN THE MODULE
  ======================
CODE_C
  Relative segment, address: CODE 00001AF5 - 00001AF6 (0x2 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gNWK_MAX_DEVICE_LIST    00001AF5        RTG_BcastAdd (rtg)
                                                   RTG_BcastChk (rtg)
                                                   RTG_DataReq (rtg)
                                                   Segment part 28 (AssocList)
                                                   Segment part 31 (AssocList)
                                                   Segment part 34 (AssocList)
                                                   Segment part 48 (AssocList)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00001AF7 - 00001AF7 (0x1 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gNWK_MAX_DATABUFS_WAITING
                                   00001AF7        nwkDB_Add (nwk_bufs)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00001AF8 - 00001AF8 (0x1 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gNWK_MAX_DATABUFS_SCHEDULED
                                   00001AF8        nwkDB_Add (nwk_bufs)
                                                   nwk_MacDataBuffersFull (nwk_bufs)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00001AF9 - 00001AF9 (0x1 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gNWK_MAX_DATABUFS_TOTAL
                                   00001AF9        nwk_MacDataBuffersFull (nwk_bufs)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00001AFA - 00001AFA (0x1 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gNWK_INDIRECT_CNT_RTG_TMR
                                   00001AFA        RTG_Init (rtg)
                                                   RTG_TimerEvent (rtg)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00001AFB - 00001AFB (0x1 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gNWK_INDIRECT_MSG_MAX_PER
                                   00001AFB        nwkbufs_hold (nwk_bufs)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00001AFC - 00001AFC (0x1 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gNWK_INDIRECT_MSG_MAX_ALL
                                   00001AFC        nwkbufs_hold (nwk_bufs)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F89E - 0000F89F (0x2 bytes), align: 0
  Segment part 14.            Intra module refs:   nwk_globals_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Cskip                   0000F89E        RTG_DivideCskip (rtg)
                                                   RTG_GetAncestors (rtg)
                                                   RTG_MultiplyCskip (rtg)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC5A - 0000FC5F (0x6 bytes), align: 0
  Segment part 15.            Intra module refs:   nwk_globals_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CskipRtrs               0000FC5A        Segment part 108 (rtg)
                                                   nwk_start_coord (nwk)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC60 - 0000FC65 (0x6 bytes), align: 0
  Segment part 17.            Intra module refs:   nwk_globals_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CskipChldrn             0000FC60        nwk_start_coord (nwk)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000FC66 - 0000FC66 (0x1 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gMIN_TREE_LINK_COST     0000FC66        RTG_UpdateNeighborEntry (nwk_util)
                                                   nwk_beacon_notify_ind_processing (nwk)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F8A0 - 0000F9C5 (0x126 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AssociatedDevList       0000F8A0        AssocGetNextNode (AssocList)
                                                   AssocGetWithAddress (AssocList)
                                                   AssocInit (AssocList)
                                                   RTG_BcastAdd (rtg)
                                                   RTG_BcastChk (rtg)
                                                   RTG_DataReq (rtg)
                                                   Segment part 12 (AssocList)
                                                   Segment part 32 (AssocList)
                                                   Segment part 33 (AssocList)
                                                   Segment part 42 (AssocList)
                                                   Segment part 43 (AssocList)
                                                   Segment part 82 (rtg)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00001AFD - 00001AFD (0x1 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gMAX_RTG_ENTRIES        00001AFD        NLME_GetRequest (NLMEDE)
                                                   RTG_AddRtgEntry (rtg)
                                                   RTG_GetRtgEntry (rtg)
                                                   RTG_Init (rtg)
                                                   RTG_RemoveRtgEntry (rtg)
                                                   RTG_UpdateNeighborEntry (nwk_util)
                                                   Segment part 17 (rtg)
                                                   Segment part 73 (rtg)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00001AFE - 00001AFE (0x1 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gMAX_UNRESERVED_RTG_ENTRIES
                                   00001AFE        RTG_AddRtgEntry (rtg)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00001AFF - 00001AFF (0x1 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gMAX_RREQ_ENTRIES       00001AFF        RTG_CheckRtDiscEntry (rtg)
                                                   RTG_GetPrevHop (rtg)
                                                   RTG_GetRtDiscEntry (rtg)
                                                   RTG_Init (rtg)
                                                   RTG_TimerEvent (rtg)
                                                   RTG_UpdateRtDiscEntry (rtg)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00001B00 - 00001B00 (0x1 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gMAX_NEIGHBOR_ENTRIES   00001B00        NLME_GetNeighborIndex (nwk_util)
                                                   NLME_GetNeighborLinkInfo (nwk_util)
                                                   NLME_RemoveFromNeighborTable (nwk_util)
                                                   RTG_BcastAdd (rtg)
                                                   RTG_BcastChk (rtg)
                                                   RTG_DataReq (rtg)
                                                   RTG_GetNextHop (rtg)
                                                   RTG_UpdateNeighborEntry (nwk_util)
                                                   Segment part 60 (NLMEDE)
                                                   nwk_init (nwk)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F9C6 - 0000FA1D (0x58 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           neighborTable           0000F9C6        NLME_GetNeighborIndex (nwk_util)
                                                   NLME_GetNeighborLinkInfo (nwk_util)
                                                   NLME_GetRequest (NLMEDE)
                                                   RTG_BcastAdd (rtg)
                                                   RTG_BcastChk (rtg)
                                                   RTG_DataReq (rtg)
                                                   RTG_GetNextHop (rtg)
                                                   Segment part 74 (nwk)
                                                   Segment part 80 (nwk_util)
                                                   nwk_init (nwk)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FA1E - 0000FA95 (0x78 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           rtgTable                0000FA1E        NLME_GetRequest (NLMEDE)
                                                   RTG_GetRtgEntry (rtg)
                                                   RTG_TimerEvent (rtg)
                                                   RTG_UpdateNeighborEntry (nwk_util)
                                                   Segment part 46 (rtg)
                                                   Segment part 47 (rtg)
                                                   Segment part 48 (rtg)
                                                   Segment part 51 (rtg)
                                                   Segment part 97 (rtg)
                                                   Segment part 99 (rtg)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FA96 - 0000FAE5 (0x50 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           rtDiscTable             0000FA96        RTG_CheckRtDiscEntry (rtg)
                                                   RTG_GetPrevHop (rtg)
                                                   RTG_GetRtDiscEntry (rtg)
                                                   RTG_TimerEvent (rtg)
                                                   RTG_UpdateRtDiscEntry (rtg)
                                                   Segment part 59 (rtg)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FAE6 - 0000FB2D (0x48 bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bcastTable              0000FAE6        RTG_BcastAdd (rtg)
                                                   RTG_BcastChk (rtg)
                                                   RTG_BcastTimerHandler (rtg)
                                                   RTG_Init (rtg)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB2E - 0000FB36 (0x9 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bcastHoldHandle         0000FB2E        Segment part 79 (rtg)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB37 - 0000FB5A (0x24 bytes), align: 0
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bcastHoldAckMask        0000FB37        RTG_DataReq (rtg)
                                                   Segment part 89 (rtg)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00001B01 - 00001B01 (0x1 bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gMAX_BCAST              00001B01        RTG_BcastChk (rtg)
                                                   RTG_BcastDel (rtg)
                                                   RTG_BcastHold (rtg)
                                                   RTG_BcastTimerHandler (rtg)
                                                   RTG_DataReq (rtg)
                                                   Segment part 85 (rtg)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00001B02 - 00001B02 (0x1 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gAPS_MAX_GROUPS         00001B02        aps_AddGroup (aps_groups)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00001B03 - 00001B12 (0x10 bytes), align: 0
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           defaultKey              00001B03        zgInit (ZGlobals)
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003CEAA - 0003CEEA (0x41 bytes), align: 0
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_globals_init        0003CEAA        nwk_init (nwk)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003CEEB - 0003CEF1 (0x7 bytes), align: 0
  Segment part 38.            Intra module refs:   NIB_init
                                                   nwk_globals_init
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0003CEEB 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003CEF2 - 0003CFAB (0xba bytes), align: 0
  Segment part 39.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NIB_init                0003CEF2        nwk_init (nwk)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003CFAC - 0003CFAE (0x3 bytes), align: 0
  Segment part 40.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_Status              0003CFAC        nwk_ScanPANChanSelect (nwk)
                                                   nwk_associate_ind_processing (nwk)
                                                   nwk_orphan_ind_processing (nwk)
                                                   nwk_start_cnf_processing (nwk)
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001728 - 0000172D (0x6 bytes), align: 0
  Segment part 16.            Intra module refs:   CskipRtrs
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000172E - 00001733 (0x6 bytes), align: 0
  Segment part 18.            Intra module refs:   CskipChldrn
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001734 - 00001734 (0x1 bytes), align: 0
  Segment part 20.            Intra module refs:   gMIN_TREE_LINK_COST

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\saddr.r51
  PROGRAM MODULE, NAME : saddr

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003CD80 - 0003CDE8 (0x69 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sAddrCmp                0003CD80        macCoordAddrCmp (mac_mgmt)
                                                   macRxCoordRealign (mac_device)
                                                   macScanRxBeacon (mac_scan)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003CDE9 - 0003CDED (0x5 bytes), align: 0
  Segment part 7.             Intra module refs:   sAddrCmp
                                                   sAddrCpy
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0003CDE9 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003CDEE - 0003CE41 (0x54 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sAddrCpy                0003CDEE        macBuildBeaconNotifyInd (mac_mgmt)
                                                   macDisassocComplete (mac_mgmt)
                                                   macGetCoordAddress (mac_mgmt)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003CE42 - 0003CE82 (0x41 bytes), align: 0
  Segment part 9.             Intra module refs:   sAddrCmp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sAddrExtCmp             0003CE42        macDestAddrCmp (mac_mgmt)
                                                   macDestSAddrCmp (mac_mgmt)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000009 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003CE83 - 0003CEA9 (0x27 bytes), align: 0
  Segment part 10.            Intra module refs:   sAddrCpy
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sAddrExtCpy             0003CE83        ?Subroutine14 (mac_rx)
                                                   Segment part 55 (mac_coord)
                                                   macApiAssociateReq (mac_device)
                                                   macBuildHeader (mac_mgmt)
                                                   macBuildPendAddr (mac_coord)
                                                   macCommStatusInd (mac_mgmt)
                                                   macRxAssociateReq (mac_coord)
                                                   macRxDisassoc (mac_mgmt)
                                                   macRxOrphan (mac_coord)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000009 ( 0000000E )

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\wait.r51
    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\wxl_uart.r51
  PROGRAM MODULE, NAME : wxl_uart

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003D197 - 0003D1B7 (0x21 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           initUARTtest            0003D197        main (ZMain)
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003D1B8 - 0003D1BC (0x5 bytes), align: 0
  Segment part 18.            Intra module refs:   initUARTtest
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0003D1B8 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003D1BD - 0003D1F2 (0x36 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UartTX_Send_String      0003D1BD        SampleApp_MessageMSGCB (SampleApp)
                                                   SampleApp_ProcessEvent (SampleApp)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003D1F3 - 0003D278 (0x86 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Uart_Baud_rate          0003D1F3        main (ZMain)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000A )

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\zmac.r51
  PROGRAM MODULE, NAME : zmac

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000FB5B - 0000FB5E (0x4 bytes), align: 0
  Segment part 7.             Intra module refs:   ZMacScanReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _ScanChannels           0000FB5B 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000FB5F - 0000FB60 (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   ZMacReset
                                                   ZMacScanReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMac_ScanBuf            0000FB5F        ?Subroutine0 (zmac_cb)
                                                   MAC_CbackEvent (zmac_cb)
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001260 - 00001291 (0x32 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMacInit                00001260        main (ZMain)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001292 - 0000129B (0xa bytes), align: 0
  Segment part 10.            Intra module refs:   ZMacInit
                                                   ZMacReset
                                                   ZMacSetReq
                                                   ZMacStartReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            00001292 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000129C - 000012F5 (0x5a bytes), align: 0
  Segment part 12.            Intra module refs:   ZMacInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMacReset               0000129C 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000008 ( 00000009 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000012F6 - 00001319 (0x24 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMacGetReq              000012F6        MT_ProcessSerialCommand (MTEL)
                                                   NLME_GetCoordExtAddr (nwk_util)
                                                   NLME_GetExtAddr (nwk_util)
                                                   NLME_NetworkFormationRequest (NLMEDE)
                                                   Segment part 70 (nwk_util)
                                                   zgInit (ZGlobals)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000131A - 0000134B (0x32 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMacSetReq              0000131A        AssocAddNew (AssocList)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   NLME_PermitJoiningSet (NLMEDE)
                                                   NLME_RejoinRspCmdProcess (nwk_util)
                                                   NLME_SetAssocFlags (nwk_util)
                                                   nwk_start_coord (nwk)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000134C - 00001352 (0x7 bytes), align: 0
  Segment part 16.            Intra module refs:   ZMacScanReq
                                                   ZMacSendNoData
                                                   ZMacStartReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0000134C 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001353 - 00001361 (0xf bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMacAssociateRsp        00001353        nwk_associate_ind_processing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001362 - 00001370 (0xf bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMacOrphanRsp           00001362        nwk_orphan_ind_processing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001371 - 0000137A (0xa bytes), align: 0
  Segment part 20.            Intra module refs:   ZMacAssociateRsp
                                                   ZMacOrphanRsp
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00001371 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000137B - 00001381 (0x7 bytes), align: 0
  Segment part 21.            Intra module refs:   ?Subroutine0
                                                   ?Subroutine1
                                                   ?Subroutine2
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0000137B 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001382 - 00001496 (0x115 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMacScanReq             00001382        NLME_NetworkFormationRequest (NLMEDE)
                                                   Segment part 36 (NLMEDE)
                                                   Segment part 84 (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001497 - 0000149B (0x5 bytes), align: 0
  Segment part 24.            Intra module refs:   ZMacScanReq
                                                   ZMacSendNoData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            00001497 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000149C - 000014DC (0x41 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMacStartReq            0000149C        nwk_start_coord (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000014DD - 000014E6 (0xa bytes), align: 0
  Segment part 27.            Intra module refs:   ZMacAssociateRsp
                                                   ZMacGetReq
                                                   ZMacOrphanRsp
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            000014DD 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000014E7 - 000015AC (0xc6 bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMacDataReq             000014E7        nwk_data_req_send (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000015AD - 000015B4 (0x8 bytes), align: 0
  Segment part 30.            Intra module refs:   ZMacDataReq
                                                   ZMacScanReq
                                                   ZMacSendNoData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            000015AD 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000015B5 - 000015BF (0xb bytes), align: 0
  Segment part 31.            Intra module refs:   ZMacDataReq
                                                   ZMacStartReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            000015B5 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000015C0 - 00001622 (0x63 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMacSendNoData          000015C0        RTG_DataReq (rtg)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001623 - 0000162E (0xc bytes), align: 0
  Segment part 35.            Intra module refs:   ZMacSendNoData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            00001623 

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\CoordinatorEB\Obj\zmac_cb.r51
  PROGRAM MODULE, NAME : zmac_cb

  SEGMENTS IN THE MODULE
  ======================
CODE_C
  Relative segment, address: CODE 00001B13 - 00001B23 (0x11 bytes), align: 0
  Segment part 6.             Intra module refs:   ?Subroutine2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zmacCBSizeTable         00001B13 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A097 - 0003A0E7 (0x51 bytes), align: 0
  Segment part 8.             Intra module refs:   MAC_CbackEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           getZMacDynamicSize      0003A097 
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000015 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A0E8 - 0003A0EE (0x7 bytes), align: 0
  Segment part 9.             Intra module refs:   MAC_CbackCheckPending
                                                   getZMacDynamicSize
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            0003A0E8 
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00001B24 - 00001B34 (0x11 bytes), align: 0
  Segment part 7.             Intra module refs:   MAC_CbackEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zmacCBEventTable        00001B24 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A0EF - 0003A3ED (0x2ff bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_CbackEvent          0003A0EF        Segment part 15 (mac_device)
                                                   macCbackForEvent (mac_main)
                                                   macCommStatusInd (mac_mgmt)
                                                   macConflictSyncLossInd (mac_mgmt)
                                                   macDataRxInd (mac_data)
                                                   macDisassocComplete (mac_mgmt)
                                                   macRxAssociateReq (mac_coord)
                                                   macRxBeacon (mac_mgmt)
                                                   macRxCompleteCallback (mac_data)
                                                   macRxCoordRealign (mac_device)
                                                   macRxDataReq (mac_coord)
                                                   macRxDisassoc (mac_mgmt)
                                                   macRxOrphan (mac_coord)
                                                   macScanComplete (mac_scan)
                                                   macScanFailedInProgress (mac_scan)
                                                   macScanRxBeacon (mac_scan)
                                                   macStartComplete (mac_coord)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000018 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A3EE - 0003A3F6 (0x9 bytes), align: 0
  Segment part 11.            Intra module refs:   MAC_CbackEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            0003A3EE 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A3F7 - 0003A3FF (0x9 bytes), align: 0
  Segment part 12.            Intra module refs:   MAC_CbackEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            0003A3F7 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A400 - 0003A40A (0xb bytes), align: 0
  Segment part 13.            Intra module refs:   MAC_CbackEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0003A400 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A40B - 0003A414 (0xa bytes), align: 0
  Segment part 14.            Intra module refs:   MAC_CbackEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0003A40B 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A415 - 0003A421 (0xd bytes), align: 0
  Segment part 15.            Intra module refs:   MAC_CbackEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0003A415 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A422 - 0003A42D (0xc bytes), align: 0
  Segment part 16.            Intra module refs:   MAC_CbackEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0003A422 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A42E - 0003A43F (0x12 bytes), align: 0
  Segment part 17.            Intra module refs:   MAC_CbackEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0003A42E 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A440 - 0003A450 (0x11 bytes), align: 0
  Segment part 18.            Intra module refs:   MAC_CbackEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0003A440 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A451 - 0003A45F (0xf bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_CbackCheckPending   0003A451        macRxCheckPendingCallback (mac_data)
               calls direct
               stack 1 = 00000000 ( 00000002 )

    *************************************************************************

  FILE NAME : D:\Program Files\IAR Systems\Embedded Workbench 4.05 Evaluation version\8051\LIB\CLIB\cl-pli-blxd-1e16x01.r51
  LIBRARY MODULE, NAME : ?cmain

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 000000BD, align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cmain                  000000BD        __call_main (CSTARTUP)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000BD - 000000C5 (0x9 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __low_level_init_call   000000BD        __low_level_init (?low_level_init)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000C6 - 000000D5 (0x10 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_XDATA_Z          000000C6        AIB_MaxBindingTime (APS)
                                                   APSME_CmdPktHook (APSMEDE)
                                                   APSME_FrameSecApplyExtHook (APSMEDE)
                                                   APSME_FrameSecApplyHook (APSMEDE)
                                                   APSME_FrameSecRemoveHook (APSMEDE)
                                                   APSME_FrameSecSetupHook (APSMEDE)
                                                   APS_Counter (APS)
                                                   APS_TaskID (APS)
                                                   AddrMgrEntryData (AddrMgr)
                                                   AddrMgrEntryTotal (AddrMgr)
                                                   App_TaskID (SPIMgr)
                                                   AssociatedDevList (nwk_globals)
                                                   CMD_Token (SPIMgr)
                                                   Cskip (nwk_globals)
                                                   FBuff (OSAL_Nv)
                                                   FSC_Token (SPIMgr)
                                                   HalKeyConfigured (hal_key)
                                                   HalLedState (hal_led)
                                                   HalLedStatusControl (hal_led)
                                                   HalUARTPoll::tickShdw (hal_uart)
                                                   Hal_KeyIntEnable (hal_key)
                                                   Hal_TaskID (hal_drivers)
                                                   JoinNode (SampleApp)
                                                   LEN_Token (SPIMgr)
                                                   MT_TaskID (MTEL)
                                                   NLME_PermitJoiningDuration (NLMEDE)
                                                   NLME_ScanFields (NLMEDE)
                                                   NWK_TaskID (nwk)
                                                   NwkDescList (nwk)
                                                   OnboardKeyIntEnable (OnBoard)
                                                   OnboardTimerIntEnable (OnBoard)
                                                   RfTx (SampleApp)
                                                   RxBuf (SampleApp)
                                                   SPI_Msg (SPIMgr)
                                                   SSP_GetMicLenHook (ssp)
                                                   SSP_NwkSecurityHook (ssp)
                                                   SampleAppFlashCounter (SampleApp)
                                                   SampleAppPeriodicCounter (SampleApp)
                                                   SampleApp_Flash_DstAddr (SampleApp)
                                                   SampleApp_Group (SampleApp)
                                                   SampleApp_NwkState (SampleApp)
                                                   SampleApp_Periodic_DstAddr (SampleApp)
                                                   SampleApp_TaskID (SampleApp)
                                                   SampleApp_TransID (SampleApp)
                                                   SampleApp_epDesc (SampleApp)
                                                   Segment part 13 (mac_timer)
                                                   Segment part 6 (aps_groups)
                                                   Segment part 6 (nwk_util)
                                                   Segment part 7 (mac_scan)
                                                   Segment part 8 (rtg)
                                                   Uart_Rx_Data (SPIMgr)
                                                   Uart_len (SPIMgr)
                                                   ZDAppNwkAddr (ZDApp)
                                                   ZDAppTaskID (ZDApp)
                                                   ZDApp_AutoFindMode_epDesc (ZDApp)
                                                   ZDApp_IEEEAddrRsp_TaskID (ZDApp)
                                                   ZDApp_LeaveCtrl (ZDApp)
                                                   ZDApp_MatchDescRsp_TaskID (ZDApp)
                                                   ZDApp_NwkAddrRsp_TaskID (ZDApp)
                                                   ZDOBuildBuf (ZDObject)
                                                   ZDP_Buf (ZDProfile)
                                                   ZDP_TransID (ZDProfile)
                                                   ZDP_TxOptions (ZDProfile)
                                                   ZMac_ScanBuf (zmac)
                                                   _NIB (nwk)
                                                   _ScanChannels (zmac)
                                                   _theHeap (OSAL_Memory)
                                                   _tmpRejoinState (ZDApp)
                                                   _zdoCallbackSub (MT_ZDO)
                                                   aExtendedAddress (OnBoard)
                                                   activeTask (OSAL_Tasks)
                                                   apsfProcessAck (APS)
                                                   apsfSendFragmented (APS)
                                                   apsfSendOsalMsg (APS)
                                                   backoffTimerRollover (mac_backoff_timer)
                                                   backoffTimerTrigger (mac_backoff_timer)
                                                   bcastHoldAckMask (nwk_globals)
                                                   bcastHoldHandle (nwk_globals)
                                                   bcastTable (nwk_globals)
                                                   cfg0 (hal_uart)
                                                   clear (SampleApp)
                                                   cntIndirectHolding (nwk_bufs)
                                                   compareState (mac_backoff_timer)
                                                   debugCompId (MTEL)
                                                   debugThreshold (MTEL)
                                                   dmaCh0 (hal_dma)
                                                   dmaCh1234 (hal_dma)
                                                   epList (AF)
                                                   failF (OSAL_Nv)
                                                   ff1 (OSAL_Memory)
                                                   ff2 (OSAL_Memory)
                                                   findPg (OSAL_Nv)
                                                   gRTG_TBL_COMPRESSION (rtg)
                                                   halAssertHazardLights{7}{8}{18}::escape (hal_assert)
                                                   halKeySavedKeys (hal_key)
                                                   halTimerChannel (hal_timer)
                                                   halTimerRecord (hal_timer)
                                                   macCoord (mac_coord)
                                                   macData (mac_data)
                                                   macDataCheckTxTime (mac_data)
                                                   macDevice (mac_device)
                                                   macMain (mac_main)
                                                   macMgmt (mac_mgmt)
                                                   macPanCoordinator (mac_mgmt)
                                                   macPhyChannel (mac_radio)
                                                   macPhyTxPower (mac_radio)
                                                   macPib (mac_pib)
                                                   macPwr (mac_pwr)
                                                   macReset (mac_main)
                                                   macRxActive (mac_rx)
                                                   macRxEnableFlags (mac_rx_onoff)
                                                   macRxFilter (mac_rx)
                                                   macRxOnFlag (mac_rx_onoff)
                                                   macRxOutgoingAckFlag (mac_rx)
                                                   macTaskId (mac_main)
                                                   macTxActive (mac_tx)
                                                   macTxBe (mac_tx)
                                                   macTxCsmaBackoffDelay (mac_tx)
                                                   macTxType (mac_tx)
                                                   matchED (ZDObject)
                                                   maxRssi (mac_mcu)
                                                   nb (mac_tx)
                                                   neighborTable (nwk_globals)
                                                   nsduHandleCounter (nwk_util)
                                                   nwkDataBufQueue (nwk_bufs)
                                                   nwkStatus (ZDApp)
                                                   nwk_beaconPayload (nwk)
                                                   osal_qHead (OSAL)
                                                   osal_systemClock (OSAL_Timers)
                                                   pAPS_BindingTimeoutCB (APS)
                                                   pAPS_DataConfirmReflect (APS)
                                                   pAPS_DataIndReflect (APS)
                                                   pFuncRxState (mac_rx)
                                                   pHalKeyProcessFunction (hal_key)
                                                   pMacDataTx (mac_data)
                                                   pNLME_NetworkFormationConfirm (NLMEDE)
                                                   pRxBuf (mac_rx)
                                                   pgLost (OSAL_Nv)
                                                   pgOff (OSAL_Nv)
                                                   pgRes (OSAL_Nv)
                                                   pnwk_ScanJoiningOrphan (NLMEDE)
                                                   pnwk_ScanPANChanSelect (NLMEDE)
                                                   pnwk_ScanPANChanVerify (NLMEDE)
                                                   pnwk_associate_cnf_processing (NLMEDE)
                                                   preBlinkState (hal_led)
                                                   pwrmgr_attribute (OSAL_PwrMgr)
                                                   ready (OSAL_Memory)
                                                   reqChannel (mac_radio)
                                                   reqTxPower (mac_radio)
                                                   rreqCounter (rtg)
                                                   rtDiscTable (nwk_globals)
                                                   rtgTable (nwk_globals)
                                                   rxBuf (mac_rx)
                                                   rxFilter (mac_rx)
                                                   rxIsrActiveFlag (mac_rx)
                                                   rxNextLen (mac_rx)
                                                   rxPayloadLen (mac_rx)
                                                   rxPromiscuousMode (mac_rx)
                                                   rxResetFlag (mac_rx)
                                                   rxUnreadLen (mac_rx)
                                                   saveExtAddr (nwk_util)
                                                   save_cmd (MTEL)
                                                   savedResponseRate (NLMEDE)
                                                   shadowPerof2 (mac_mcu)
                                                   state (SPIMgr)
                                                   taskIDs (OSAL_Tasks)
                                                   tasksHead (OSAL_Tasks)
                                                   tempDataLen (SPIMgr)
                                                   timerActive (OSAL_Timers)
                                                   timerAlignedQ (mac_timer)
                                                   timerHead (OSAL_Timers)
                                                   timerUnalignedQ (mac_timer)
                                                   tmr_count (OSAL_Timers)
                                                   tmr_decr_time (OSAL_Timers)
                                                   txAckReq (mac_tx)
                                                   txRetransmitFlag (mac_tx)
                                                   txSeqn (mac_tx)
                                                   zgExtendedPANID (ZGlobals)
                                                   zgPreConfigKey (ZGlobals)
                                                   zgSecurityLevel (ZGlobals)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000D6 - 000000FE (0x29 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_XDATA_I          000000D6        ContrastValue (hal_lcd)
                                                   CskipChldrn (nwk_globals)
                                                   CskipRtrs (nwk_globals)
                                                   MTVersionString (MTEL)
                                                   NLME_AssocPermission (NLMEDE)
                                                   NLME_PermitJoining (NLMEDE)
                                                   SampleApp_ClusterList (SampleApp)
                                                   SampleApp_SimpleDesc (SampleApp)
                                                   Segment part 11 (MTEL)
                                                   Segment part 11 (mac_timer)
                                                   Segment part 6 (SampleApp)
                                                   Segment part 8 (SampleApp)
                                                   Segment part 9 (MTEL)
                                                   Segment part 9 (mac_timer)
                                                   Short_Addr (SPIMgr)
                                                   ZDApp_BindUnbindRsp_TaskID (ZDApp)
                                                   ZDApp_epDesc (ZDApp)
                                                   ZDO_Config_Node_Descriptor (ZDConfig)
                                                   ZDO_Config_Power_Descriptor (ZDConfig)
                                                   ZDP_TmpBuf (ZDProfile)
                                                   __Constant_0 (MTEL)
                                                   __Constant_1 (OSAL_Nv)
                                                   __Constant_30 (mac_coord)
                                                   __Constant_3e8 (MTEL)
                                                   __Constant_53544159 (MTEL)
                                                   __Constant_5800 (hal_assert)
                                                   __Constant_64 (hal_led)
                                                   __Constant_80000 (ZDApp)
                                                   __Constant_c0000 (mac_backoff_timer)
                                                   __Constant_ffffffff (MTEL)
                                                   _savedRejoinRspAddr (nwk_util)
                                                   baseEDMaxEnergy (nwk_util)
                                                   devStartMode (ZDApp)
                                                   devState (ZDApp)
                                                   gMIN_TREE_LINK_COST (nwk_globals)
                                                   macActionSet (mac_main)
                                                   macCfg (mac_cfg)
                                                   macDataBeaconRequeue (mac_data)
                                                   macDataCheckSched (mac_data)
                                                   macDataRequeueIndirect (mac_data)
                                                   macDataRxBeaconCritical (mac_data)
                                                   macDataSetSched (mac_data)
                                                   macDataTxBeaconComplete (mac_data)
                                                   macDataTxIndirect (mac_data)
                                                   macSleepState (mac_sleep)
                                                   macStateTbl (mac_main)
                                                   nwk_beaconPayloadSize (nwk)
                                                   registeredKeysTaskID (OnBoard)
                                                   sPVerList (ZDApp)
                                                   theHeap (OSAL_Memory)
                                                   zgApsDefaultMaxBindingTime (ZGlobals)
                                                   zgApscAckWaitDurationPolled (ZGlobals)
                                                   zgApscMaxFrameRetries (ZGlobals)
                                                   zgBcastDeliveryTime (ZGlobals)
                                                   zgConfigPANID (ZGlobals)
                                                   zgDefaultChannelList (ZGlobals)
                                                   zgDefaultStartingScanDuration (ZGlobals)
                                                   zgIndirectMsgTimeout (ZGlobals)
                                                   zgMaxBcastRetires (ZGlobals)
                                                   zgMaxDataRetries (ZGlobals)
                                                   zgNwkMode (ZGlobals)
                                                   zgPassiveAckTimeout (ZGlobals)
                                                   zgResponsePollRate (ZGlobals)
                                                   zgRouteExpiryTime (ZGlobals)
                                                   zgStackProfile (ZGlobals)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000FF - 00000127 (0x29 bytes), align: 0
  Segment part 31.            Intra module refs:   __low_level_init_call
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_IXDATA_I         000000FF 
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000128 - 0000013D (0x16 bytes), align: 0
  Segment part 32.            Intra module refs:   ?cmain
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?call_main              00000128 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_EQ_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000148 - 0000014A (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_EQ_X_REW             00000148 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000014B - 0000015F (0x15 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?L_EQ_X_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_EQ_X                 0000014B        NLME_SetAssocFlags (nwk_util)
                                                   RTG_BcastAdd (rtg)
                                                   RTG_CalcAddress (rtg)
                                                   RTG_DataReq (rtg)
                                                   ZDApp_ServerDiscRspCB (ZDApp)
                                                   macBackoffTimerRolloverCallback (mac_timer)
                                                   macBackoffTimerSetTrigger (mac_backoff_timer)
                                                   nwk_ScanPANChanSelect (nwk)
                                                   nwk_ScanPANChanVerify (nwk)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?SL_GT

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000160 - 00000162 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SL_GT_REW              00000160 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000163 - 00000177 (0x15 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?SL_GT_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SL_GT                  00000163        RTG_GetTreeRoute (rtg)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?SL_GT_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000178 - 0000017A (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SL_GT_X_REW            00000178 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000017B - 0000018F (0x15 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?SL_GT_X_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SL_GT_X                0000017B        macBackoffTimerRolloverCallback (mac_timer)
                                                   macBackoffTimerTriggerCallback (mac_timer)
                                                   macTimerAddTimer (mac_timer)
                                                   macTimerRecalcUnaligned (mac_timer)
                                                   macTimerUpdateBackoffTimer (mac_timer)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_GT

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000190 - 00000192 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_GT_REW              00000190 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000193 - 000001A2 (0x10 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?UL_GT_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_GT                  00000193        macBackoffTimerCapture (mac_backoff_timer)
                                                   macBackoffTimerCount (mac_backoff_timer)
                                                   macBackoffTimerSetRollover (mac_backoff_timer)
                                                   macBackoffTimerSetTrigger (mac_backoff_timer)
                                                   nwk_data_ind_processing (nwk)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_GT_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000001A3 - 000001A5 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_GT_X_REW            000001A3 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000001A6 - 000001B5 (0x10 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?UL_GT_X_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_GT_X                000001A6        HalLedUpdate (hal_led)
                                                   halAssertHazardLights (hal_assert)
                                                   macTimerUpdateBackoffTimer (mac_timer)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?G_EQ

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000001B6 - 000001C0 (0xb bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?G_EQ                   000001B6        rxDiscardFrame (mac_rx)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?C_GPTR_LOAD

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000001C1 - 000001DA (0x1a bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?C_GPTR_LOAD            000001C1        osal_memcpy (OSAL)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_TO_FLT

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000001DB - 000001DD (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_TO_FLT               000001DB 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000001DE - 000001F2 (0x15 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?L_TO_FLT
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_TO_FLT_REW           000001DE 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000001F3 - 000001F5 (0x3 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   ?L_TO_FLT_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_TO_FLT_REW          000001F3 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000001F6 - 00000252 (0x5d bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   ?L_TO_FLT_REW
                                                   ?UL_TO_FLT_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_TO_FLT              000001F6 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TO_L

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000253 - 00000255 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TO_UL_REW          00000253 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000256 - 00000260 (0xb bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?FLT_TO_UL_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TO_UL              00000256 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000261 - 00000263 (0x3 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TO_L_REW           00000261 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000264 - 00000297 (0x34 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   ?FLT_TO_L_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TO_L               00000264 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000298 - 000002A3 (0xc bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   ?FLT_TO_L
                                                   ?FLT_TO_UL
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000002A4 - 000002F2 (0x4f bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   ?FLT_TO_L
                                                   ?FLT_TO_UL

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_ZERO

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000002F3 - 000002F5 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_ZERO          000002F3 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000002F6 - 000002FF (0xa bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?FLT_TEST_ZERO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_ZERO_REW      000002F6        ?FLT_DIV (?FLT_DIV)
                                                   ?FLT_MUL (?FLT_MUL)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_ZERO_R1

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000300 - 00000302 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_ZERO_R1       00000300 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000303 - 0000030C (0xa bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?FLT_TEST_ZERO_R1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_ZERO_R1_REW   00000303        ?FLT_DIV (?FLT_DIV)
                                                   ?FLT_MUL (?FLT_MUL)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_INF

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000030D - 0000030F (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_INF_REW       0000030D        ?FLT_MUL (?FLT_MUL)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000310 - 00000321 (0x12 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?FLT_TEST_INF_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_INF           00000310        ?FLT_DIV (?FLT_DIV)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_INF_R1

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000322 - 00000324 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_INF_R1_REW    00000322        ?FLT_MUL (?FLT_MUL)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000325 - 00000336 (0x12 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?FLT_TEST_INF_R1_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_INF_R1        00000325        ?FLT_DIV (?FLT_DIV)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_NAN

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000337 - 00000339 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_NAN_REW       00000337 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000033A - 00000348 (0xf bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?FLT_TEST_NAN_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_NAN           0000033A        ?FLT_DIV (?FLT_DIV)
                                                   ?FLT_MUL (?FLT_MUL)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_NAN_R1

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000349 - 0000034B (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_NAN_R1_REW    00000349 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000034C - 0000035A (0xf bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?FLT_TEST_NAN_R1_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_NAN_R1        0000034C        ?FLT_DIV (?FLT_DIV)
                                                   ?FLT_MUL (?FLT_MUL)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_MUL

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000035B - 0000035D (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_MUL_REW            0000035B 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000035E - 000004DD (0x180 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?FLT_MUL_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_MUL                0000035E 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_DIV

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000004DE - 000004E0 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_DIV_REW            000004DE 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000004E1 - 000006C6 (0x1e6 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?FLT_DIV_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_DIV                000004E1 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_MUL

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000006C7 - 000006C9 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MUL                  000006C7        HalLedUpdate (hal_led)
                                                   halTimerSetCount (hal_timer)
                                                   macScanStartTimer (mac_scan)
                                                   macStartResponseTimer (mac_device)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000006CA - 00000746 (0x7d bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?L_MUL
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MUL_REW              000006CA 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_DIV_MOD

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000747, align: 0
  Segment part 0. ROOT.
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000747 - 000007B6 (0x70 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_DIV_MOD             00000747        HalLedUpdate (hal_led)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   halTimerSetCount (hal_timer)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_NEG

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000007B7 - 000007B9 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_NEG_REW              000007B7        ?L_TO_FLT_REW (?L_TO_FLT)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000007BA - 000007CA (0x11 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?L_NEG_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_NEG                  000007BA        macBackoffTimerRolloverCallback (mac_timer)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_NOT

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000007CB - 000007CD (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_NOT_REW              000007CB 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000007CE - 000007DD (0x10 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?L_NOT_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_NOT                  000007CE        MT_ProcessSerialCommand (MTEL)
                                                   RTG_CalcAddress (rtg)
                                                   RTG_DataReq (rtg)
                                                   macScanStartTimer (mac_scan)
                                                   nwk_ScanPANChanSelect (nwk)
                                                   nwk_ScanPANChanVerify (nwk)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_SHR

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000007DE - 000007E3 (0x6 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_SHR_REW             000007DE 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000007E4 - 000007E8 (0x5 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_SHR                 000007E4        MT_ProcessGetNvInfo (MTEL)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   macApiScanReq (mac_scan)
                                                   macMcuOverflowSetCompare (mac_mcu)
                                                   macMcuOverflowSetCount (mac_mcu)
                                                   macScanNextChan (mac_scan)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000007E9 - 000007FC (0x14 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   ?UL_SHR
                                                   ?UL_SHR_REW

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_SHL

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000007FD - 00000802 (0x6 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SHL                  000007FD        MT_ProcessSerialCommand (MTEL)
                                                   RTG_BcastAdd (rtg)
                                                   RTG_CalcAddress (rtg)
                                                   RTG_DataReq (rtg)
                                                   RTG_DeAllocAddress (rtg)
                                                   calcChkF (OSAL_Nv)
                                                   macScanStartTimer (mac_scan)
                                                   nwk_ScanPANChanSelect (nwk)
                                                   nwk_ScanPANChanVerify (nwk)
                                                   osal_build_uint32 (OSAL)
                                                   osal_nv_read (OSAL_Nv)
                                                   osal_nv_write (OSAL_Nv)
                                                   readHdr (OSAL_Nv)
                                                   writeBuf (OSAL_Nv)
                                                   xferBuf (OSAL_Nv)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000803 - 00000807 (0x5 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SHL_REW              00000803 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000808 - 0000081B (0x14 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   ?L_SHL
                                                   ?L_SHL_REW

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_ADD

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000081C - 0000081E (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_ADD_REW              0000081C 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000081F - 00000831 (0x13 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?L_ADD_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_ADD                  0000081F        MT_ProcessSerialCommand (MTEL)
                                                   calcChkF (OSAL_Nv)
                                                   macTimer (mac_timer)
                                                   osal_build_uint32 (OSAL)
                                                   osal_nv_read (OSAL_Nv)
                                                   osal_nv_write (OSAL_Nv)
                                                   readHdr (OSAL_Nv)
                                                   writeBuf (OSAL_Nv)
                                                   xferBuf (OSAL_Nv)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_ADD_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000832 - 00000834 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_ADD_X_REW            00000832 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000835 - 00000847 (0x13 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?L_ADD_X_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_ADD_X                00000835        HalLedUpdate (hal_led)
                                                   calcChkF (OSAL_Nv)
                                                   macScanStartTimer (mac_scan)
                                                   nwk_data_ind_processing (nwk)
                                                   osal_nv_read (OSAL_Nv)
                                                   osal_nv_write (OSAL_Nv)
                                                   readHdr (OSAL_Nv)
                                                   writeBuf (OSAL_Nv)
                                                   xferBuf (OSAL_Nv)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_ADD_TO_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000848 - 0000084A (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_ADD_TO_X_REW         00000848 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000084B - 0000085D (0x13 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?L_ADD_TO_X_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_ADD_TO_X             0000084B        halAssertHazardLights (hal_assert)
                                                   macTimerRecalcUnaligned (mac_timer)
                                                   osalTimerUpdate (OSAL_Timers)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_SUB

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000085E - 00000860 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SUB_REW              0000085E 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000861 - 00000874 (0x14 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?L_SUB_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SUB                  00000861 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_SUB_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000875 - 00000877 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SUB_X_REW            00000875 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000878 - 0000088F (0x18 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?L_SUB_X_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SUB_X                00000878 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_SUB_FROM_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000890 - 00000892 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SUB_FROM_X_REW       00000890 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000893 - 000008A6 (0x14 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?L_SUB_FROM_X_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SUB_FROM_X           00000893        macBackoffTimerRolloverCallback (mac_timer)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_AND_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000008A7 - 000008A9 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_AND_X_REW            000008A7 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000008AA - 000008BC (0x13 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?L_AND_X_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_AND_X                000008AA        RTG_CalcAddress (rtg)
                                                   RTG_DataReq (rtg)
                                                   ZDApp_ServerDiscRspCB (ZDApp)
                                                   nwk_ScanPANChanSelect (nwk)
                                                   nwk_ScanPANChanVerify (nwk)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_AND_TO_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000008BD - 000008BF (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_AND_TO_X_REW         000008BD 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000008C0 - 000008D2 (0x13 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?L_AND_TO_X_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_AND_TO_X             000008C0        MT_ProcessSerialCommand (MTEL)
                                                   RTG_CalcAddress (rtg)
                                                   RTG_DataReq (rtg)
                                                   macScanStartTimer (mac_scan)
                                                   nwk_ScanPANChanSelect (nwk)
                                                   nwk_ScanPANChanVerify (nwk)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_IOR_TO_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000008D3 - 000008D5 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_IOR_TO_X_REW         000008D3 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000008D6 - 000008E8 (0x13 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?L_IOR_TO_X_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_IOR_TO_X             000008D6        MT_ProcessSerialCommand (MTEL)
                                                   RTG_BcastAdd (rtg)
                                                   RTG_DataReq (rtg)
                                                   RTG_DeAllocAddress (rtg)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_MOV_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000008E9 - 000008F7 (0xf bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MOV_X                000008E9        ?Subroutine5 (mac_mcu)
                                                   APSDE_DataIndication (APSMEDE_CB)
                                                   AssocAddNew (AssocList)
                                                   HalLedUpdate (hal_led)
                                                   MT_ProcessGetNvInfo (MTEL)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   MT_Reset (MTEL)
                                                   NLDE_DataIndication (NLMEDE_CB)
                                                   NLME_NetworkFormationRequest (NLMEDE)
                                                   NLME_SetAssocFlags (nwk_util)
                                                   RTG_BcastAdd (rtg)
                                                   RTG_DataReq (rtg)
                                                   RTG_GetTreeRoute (rtg)
                                                   RTG_UpdateNeighborEntry (nwk_util)
                                                   ZDApp_ActiveEPRspCB (ZDApp)
                                                   ZDApp_BindRsp (ZDApp)
                                                   ZDApp_EndDeviceBindRsp (ZDApp)
                                                   ZDApp_IEEEAddrRspCB (ZDApp)
                                                   ZDApp_MatchDescRspCB (ZDApp)
                                                   ZDApp_NodeDescRspCB (ZDApp)
                                                   ZDApp_NwkAddrRspCB (ZDApp)
                                                   ZDApp_PowerDescRspCB (ZDApp)
                                                   ZDApp_ServerDiscRspCB (ZDApp)
                                                   ZDApp_SimpleDescRspCB (ZDApp)
                                                   ZDApp_UnbindRsp (ZDApp)
                                                   ZDApp_UserDescRspCB (ZDApp)
                                                   ZMacScanReq (zmac)
                                                   afBuildMSGIncoming (AF)
                                                   afIncomingData (AF)
                                                   halAssertHazardLights (hal_assert)
                                                   macApiScanReq (mac_scan)
                                                   macBackoffTimerCancelTrigger (mac_backoff_timer)
                                                   macBackoffTimerCapture (mac_backoff_timer)
                                                   macBackoffTimerCompareIsr (mac_backoff_timer)
                                                   macBackoffTimerCount (mac_backoff_timer)
                                                   macBackoffTimerInit (mac_backoff_timer)
                                                   macBackoffTimerRolloverCallback (mac_timer)
                                                   macBackoffTimerSetTrigger (mac_backoff_timer)
                                                   macBackoffTimerTriggerCallback (mac_timer)
                                                   macBuildBeaconNotifyInd (mac_mgmt)
                                                   macCbackForEvent (mac_main)
                                                   macMcuOverflowSetCompare (mac_mcu)
                                                   macMcuOverflowSetCount (mac_mcu)
                                                   macScanCnfInit (mac_scan)
                                                   macScanNextChan (mac_scan)
                                                   macScanStartTimer (mac_scan)
                                                   macStartResponseTimer (mac_device)
                                                   macTimer (mac_timer)
                                                   macTimerAddTimer (mac_timer)
                                                   macTimerRecalcUnaligned (mac_timer)
                                                   macTimerUpdateBackoffTimer (mac_timer)
                                                   nwk_ScanPANChanSelect (nwk)
                                                   nwk_ScanPANChanVerify (nwk)
                                                   nwk_data_ind_processing (nwk)
                                                   osalTimerInit (OSAL_Timers)
                                                   osal_GetSystemClock (OSAL_Timers)
                                                   osal_timer_hw_setup (OSAL_Timers)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_MOV_C

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000008F8 - 0000090A (0x13 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MOV_C                000008F8 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_MOV_TO_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000090B - 00000914 (0xa bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MOV_TO_X_REWX        0000090B 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000915 - 00000917 (0x3 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?L_MOV_TO_X_REWX
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MOV_TO_X_REW         00000915 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000918 - 00000926 (0xf bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   ?L_MOV_TO_X_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MOV_TO_X             00000918        AssocAddNew (AssocList)
                                                   HalLedUpdate (hal_led)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   MT_Reset (MTEL)
                                                   NLME_NetworkFormationRequest (NLMEDE)
                                                   RTG_BcastAdd (rtg)
                                                   RTG_UpdateNeighborEntry (nwk_util)
                                                   Segment part 20 (ssp)
                                                   ZMacScanReq (zmac)
                                                   afBuildMSGIncoming (AF)
                                                   halAssertHazardLights (hal_assert)
                                                   macApiScanReq (mac_scan)
                                                   macBackoffTimerRolloverCallback (mac_timer)
                                                   macBackoffTimerSetRollover (mac_backoff_timer)
                                                   macBackoffTimerSetTrigger (mac_backoff_timer)
                                                   macScanNextChan (mac_scan)
                                                   macTimer (mac_timer)
                                                   macTimerRecalcUnaligned (mac_timer)
                                                   macTimerUpdateBackoffTimer (mac_timer)
                                                   macTxTimestampCallback (mac_tx)
                                                   nwk_ScanPANChanSelect (nwk)
                                                   nwk_ScanPANChanVerify (nwk)
                                                   nwk_data_ind_processing (nwk)
                                                   osalTimerInit (OSAL_Timers)
                                                   rxStartIsr (mac_rx)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?MOVE_LONG8_XDATA_IDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000927 - 00000933 (0xd bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?MOVE_LONG8_XDATA_IDATA
                                   00000927        ?PUSH_XSTACK_I (?PUSH_XSTACK_I)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?MOVE_LONG8_XDATA_XDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000934 - 00000954 (0x21 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?MOVE_LONG8_XDATA_XDATA
                                   00000934        ?PUSH_XSTACK8_X (?PUSH_XSTACK8_X)
                                                   NLDE_SendMsg (nwk_util)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?MOVE_LONG8_XDATA_CODE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000955 - 00000976 (0x22 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?MOVE_LONG8_XDATA_CODE
                                   00000955        ?PUSH_XSTACK8_C (?PUSH_XSTACK8_C)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?S_DIV_MOD

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000977 - 000009B7 (0x41 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?S_DIV_MOD              000009B0        macCspTxRequestAckTimeoutCallback (mac_csp_tx)
                                                   macFrameDuration (mac_data)
                                                   radioComputeED (mac_radio)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000009B8 - 00000A10 (0x59 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?S_DIV_MOD
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_DIV_MOD             000009B8        RTG_DivideCskip (rtg)
                                                   RTG_GetAncestors (rtg)
                                                   macStartFrameResponseTimer (mac_device)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?SS_SHR

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000A11 - 00000A14 (0x4 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SS_SHR_REW             00000A11 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000A15 - 00000A17 (0x3 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SS_SHR                 00000A15        HalAdcRead (hal_adc)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000A18 - 00000A24 (0xd bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   ?SS_SHR
                                                   ?SS_SHR_REW

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_SHR

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000A25 - 00000A28 (0x4 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SHR_REW             00000A25 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000A29 - 00000A2B (0x3 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SHR                 00000A29        NLDE_ParseFrameControl (nwk_util)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
                                                   writeBuf (OSAL_Nv)
                                                   writeWord (OSAL_Nv)
                                                   xferBuf (OSAL_Nv)
                                                   zdo_MTCB_PowerDescRspCB (MT_ZDO)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000A2C - 00000A37 (0xc bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   ?US_SHR
                                                   ?US_SHR_REW

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?S_SHL

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000A38 - 00000A3A (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?S_SHL                  00000A38        MAC_MlmeGetReq (mac_pib)
                                                   MAC_MlmeSetReq (mac_pib)
                                                   NLDE_BuildFrameControl (nwk_util)
                                                   RTG_BcastAdd (rtg)
                                                   RTG_BcastTimerHandler (rtg)
                                                   RTG_CheckRtDiscEntry (rtg)
                                                   RTG_DataReq (rtg)
                                                   RTG_GetPrevHop (rtg)
                                                   RTG_GetRtDiscEntry (rtg)
                                                   RTG_Init (rtg)
                                                   RTG_UpdateRtDiscEntry (rtg)
                                                   halAssertHazardLights (hal_assert)
                                                   macBuildBeaconNotifyInd (mac_mgmt)
                                                   macBuildHeader (mac_mgmt)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
                                                   nwk_start_coord (nwk)
                                                   txCsmaPrep (mac_tx)
                                                   writeWord (OSAL_Nv)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000A3B - 00000A3D (0x3 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?S_SHL_REW              00000A3B 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000A3E - 00000A4A (0xd bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   ?S_SHL
                                                   ?S_SHL_REW

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?ALLOC_XSTACK8

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000A4B - 00000A59 (0xf bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ALLOC_XSTACK8          00000A4B        AF_DataRequest (AF)
                                                   APSDE_DataIndication (APSMEDE_CB)
                                                   APSDE_DataReq (APSMEDE)
                                                   APSDE_FrameAlloc (APSMEDE)
                                                   APSME_LookupNwkAddr (APSMEDE)
                                                   AddrMgrEntryUpdate (AddrMgr)
                                                   AddrMgrNwkAddrLookup (AddrMgr)
                                                   AssocAddNew (AssocList)
                                                   AssocGetWithAddress (AssocList)
                                                   AssocRemove (AssocList)
                                                   HalAdcInit (hal_adc)
                                                   HalAdcRead (hal_adc)
                                                   HalLedBlink (hal_led)
                                                   HalLedUpdate (hal_led)
                                                   HalUARTOpen (hal_uart)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MTProcessAppMsg (MTEL)
                                                   MT_IndReset (MTEL)
                                                   MT_ProcessDebugMsg (MTEL)
                                                   MT_ProcessGetDeviceInfo (MTEL)
                                                   MT_ProcessGetNvInfo (MTEL)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   MT_SendErrorNotification (MTEL)
                                                   MT_SendSPIRespMsg (MTEL)
                                                   MT_ZdoCommandProcessing (MT_ZDO)
                                                   NLDE_DataIndSend (nwk_util)
                                                   NLDE_DataIndication (NLMEDE_CB)
                                                   NLDE_DataReqSend (nwk_util)
                                                   NLDE_SendMsg (nwk_util)
                                                   NLME_CmdCnf (nwk_util)
                                                   NLME_GetCoordShortAddr (nwk_util)
                                                   NLME_GetProtocolVersion (nwk_util)
                                                   NLME_LeaveCmdCnf (nwk_util)
                                                   NLME_LeaveCmdProcess (nwk_util)
                                                   NLME_LeaveCmdSend (nwk_util)
                                                   NLME_LeaveRsp (NLMEDE)
                                                   NLME_NetworkFormationRequest (NLMEDE)
                                                   NLME_RTG_BcastAdd (nwk_util)
                                                   NLME_RejoinRspSend (nwk_util)
                                                   NLME_RouteDiscoveryRequest (rtg)
                                                   NLME_SetAssocFlags (nwk_util)
                                                   RTG_BcastAdd (rtg)
                                                   RTG_DataReq (rtg)
                                                   RTG_FillCSkipTable (rtg)
                                                   RTG_GetAncestors (rtg)
                                                   RTG_GetRoutingAddress (rtg)
                                                   RTG_GetTreeRoute (rtg)
                                                   RTG_ProcessRreq (rtg)
                                                   RTG_SendRErr (rtg)
                                                   RTG_SendRrep (rtg)
                                                   SPIMgr_Init (SPIMgr)
                                                   SampleApp_SendFlashMessage (SampleApp)
                                                   SendData (SampleApp)
                                                   ZDAppSetupProtoVersion (ZDApp)
                                                   ZDApp_AutoFindDestinationEx (ZDApp)
                                                   ZDApp_BindRsp (ZDApp)
                                                   ZDApp_IEEEAddrRspCB (ZDApp)
                                                   ZDApp_Init (ZDApp)
                                                   ZDApp_InitUserDesc (ZDApp)
                                                   ZDApp_MatchDescRspCB (ZDApp)
                                                   ZDApp_NwkAddrRspCB (ZDApp)
                                                   ZDApp_SendEndDeviceBindReq (ZDApp)
                                                   ZDApp_SendNewDstAddr (ZDApp)
                                                   ZDApp_UnbindRsp (ZDApp)
                                                   ZDMatchSendState (ZDObject)
                                                   ZDOInitDevice (ZDApp)
                                                   ZDO_LeaveInd (ZDApp)
                                                   ZDO_MatchEndDeviceBind (ZDObject)
                                                   ZDO_NetworkDiscoveryConfirmCB (ZDApp)
                                                   ZDO_ProcessAddrRsp (ZDObject)
                                                   ZDO_ProcessEndDeviceBindReq (ZDObject)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_ProcessNodeDescRsp (ZDObject)
                                                   ZDO_ProcessPowerDescRsp (ZDObject)
                                                   ZDO_ProcessSimpleDescReq (ZDObject)
                                                   ZDO_ProcessSimpleDescRsp (ZDObject)
                                                   ZDO_ProcessUserDescReq (ZDObject)
                                                   ZDO_ProcessUserDescSet (ZDObject)
                                                   ZDP_BindUnbindReq (ZDProfile)
                                                   ZDP_EPRsp (ZDProfile)
                                                   ZDP_EndDeviceBindReq (ZDProfile)
                                                   ZDP_GenericRsp (ZDProfile)
                                                   ZDP_IEEEAddrReq (ZDProfile)
                                                   ZDP_IncomingData (ZDProfile)
                                                   ZDP_MatchDescReq (ZDProfile)
                                                   ZDP_NodeDescMsg (ZDProfile)
                                                   ZDP_NwkAddrReq (ZDProfile)
                                                   ZDP_PowerDescMsg (ZDProfile)
                                                   ZDP_ServerDiscReq (ZDProfile)
                                                   ZDP_ServerDiscRsp (ZDProfile)
                                                   ZDP_SimpleDescMsg (ZDProfile)
                                                   ZDP_UserDescRsp (ZDProfile)
                                                   ZMacReset (zmac)
                                                   ZMacStartReq (zmac)
                                                   afBuildMSGIncoming (AF)
                                                   afIncomingData (AF)
                                                   apsGenerateAck (aps_util)
                                                   apsProcessAck (aps_util)
                                                   aps_GroupsWriteNV (aps_groups)
                                                   calcChkF (OSAL_Nv)
                                                   compactPage (OSAL_Nv)
                                                   fillAndSend (ZDProfile)
                                                   halAssertHazardLights (hal_assert)
                                                   initNV (OSAL_Nv)
                                                   initPage (OSAL_Nv)
                                                   macApiOrphanRsp (mac_coord)
                                                   macApiStartReq (mac_coord)
                                                   macAssocDataReq (mac_device)
                                                   macAssociateCnf (mac_device)
                                                   macBuildAssociateRsp (mac_coord)
                                                   macBuildBeacon (mac_coord)
                                                   macBuildHeader (mac_mgmt)
                                                   macCbackForEvent (mac_main)
                                                   macCommStatusInd (mac_mgmt)
                                                   macConflictSyncLossInd (mac_mgmt)
                                                   macDisassocComplete (mac_mgmt)
                                                   macEventLoop (mac_main)
                                                   macIndirectExpire (mac_coord)
                                                   macMcuOverflowCapture (mac_mcu)
                                                   macMcuOverflowCount (mac_mcu)
                                                   macMcuOverflowSetCompare (mac_mcu)
                                                   macMcuOverflowSetCount (mac_mcu)
                                                   macPollCnf (mac_device)
                                                   macRxAssocRsp (mac_device)
                                                   macRxAssociateReq (mac_coord)
                                                   macRxBeacon (mac_mgmt)
                                                   macRxCoordRealign (mac_device)
                                                   macRxDataReq (mac_coord)
                                                   macRxDisassoc (mac_mgmt)
                                                   macRxOrphan (mac_coord)
                                                   macScanFailedInProgress (mac_scan)
                                                   macScanNextChan (mac_scan)
                                                   macScanRxBeacon (mac_scan)
                                                   macScanRxCoordRealign (mac_scan)
                                                   macSendDataMsg (mac_main)
                                                   macSendMsg (mac_main)
                                                   macStartFrameResponseTimer (mac_device)
                                                   nwk_ScanPANChanSelect (nwk)
                                                   nwk_ScanPANChanVerify (nwk)
                                                   nwk_associate_ind_processing (nwk)
                                                   nwk_beacon_notify_ind_processing (nwk)
                                                   nwk_data_cnf_processing (nwk)
                                                   nwk_data_ind_processing (nwk)
                                                   nwk_orphan_ind_processing (nwk)
                                                   nwk_start_coord (nwk)
                                                   osalTaskAdd (OSAL_Tasks)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_nv_item_len (OSAL_Nv)
                                                   osal_nv_read (OSAL_Nv)
                                                   osal_nv_write (OSAL_Nv)
                                                   pollDMA (hal_uart)
                                                   readHdr (OSAL_Nv)
                                                   rxAddrIsr (mac_rx)
                                                   rxDiscardIsr (mac_rx)
                                                   rxStartIsr (mac_rx)
                                                   setItem (OSAL_Nv)
                                                   setPageUse (OSAL_Nv)
                                                   writeBuf (OSAL_Nv)
                                                   writeItem (OSAL_Nv)
                                                   writeWordH (OSAL_Nv)
                                                   xferBuf (OSAL_Nv)
                                                   zdo_MTCB_BindRspCB (MT_ZDO)
                                                   zdo_MTCB_MatchActiveEPRspCB (MT_ZDO)
                                                   zdo_MTCB_NodeDescRspCB (MT_ZDO)
                                                   zdo_MTCB_NwkIEEEAddrRspCB (MT_ZDO)
                                                   zdo_MTCB_PowerDescRspCB (MT_ZDO)
                                                   zdo_MTCB_ServerDiscRspCB (MT_ZDO)
                                                   zdo_MTCB_SimpleDescRspCB (MT_ZDO)
                                                   zdpProcessAddrReq (ZDProfile)
                                                   zgReadStartupOptions (ZGlobals)
                                                   zgWriteStartupOptions (ZGlobals)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DEALLOC_XSTACK8

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000A5A - 00000A6C (0x13 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DEALLOC_XSTACK8        00000A5A        ?Subroutine1 (ZGlobals)
                                                   ?Subroutine103 (ZDObject)
                                                   ?Subroutine104 (ZDObject)
                                                   ?Subroutine11 (hal_led)
                                                   ?Subroutine15 (MTEL)
                                                   ?Subroutine16 (MTEL)
                                                   ?Subroutine17 (MTEL)
                                                   ?Subroutine33 (AF)
                                                   ?Subroutine38 (ZDApp)
                                                   ?Subroutine40 (ZDApp)
                                                   ?Subroutine41 (ZDApp)
                                                   ?Subroutine42 (ZDApp)
                                                   ?Subroutine45 (ZDApp)
                                                   ?Subroutine5 (SampleApp)
                                                   ?Subroutine5 (mac_mcu)
                                                   ?Subroutine57 (MT_ZDO)
                                                   ?Subroutine6 (zmac)
                                                   ?Subroutine62 (ZDProfile)
                                                   ?Subroutine63 (ZDProfile)
                                                   ?Subroutine64 (MT_ZDO)
                                                   ?Subroutine64 (ZDProfile)
                                                   ?Subroutine65 (MT_ZDO)
                                                   ?Subroutine66 (OSAL_Nv)
                                                   ?Subroutine69 (ZDProfile)
                                                   ?Subroutine75 (OSAL_Nv)
                                                   ?Subroutine93 (ZDObject)
                                                   AF_DataRequest (AF)
                                                   APSDE_DataIndication (APSMEDE_CB)
                                                   APSDE_DataReq (APSMEDE)
                                                   APS_CmdInd (APS)
                                                   APS_event_loop (APS)
                                                   AddrMgrEntryUpdate (AddrMgr)
                                                   AssocAddNew (AssocList)
                                                   HalAdcInit (hal_adc)
                                                   HalAdcRead (hal_adc)
                                                   HalUARTOpen (hal_uart)
                                                   InitBoard (OnBoard)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MAC_MlmeGetReq (mac_pib)
                                                   MAC_MlmeSetReq (mac_pib)
                                                   MTProcessAppMsg (MTEL)
                                                   MT_BuildAndSendZToolCB (MTEL)
                                                   MT_BuildAndSendZToolResponse (MTEL)
                                                   MT_BuildSPIMsg (MTEL)
                                                   MT_ProcessDebugMsg (MTEL)
                                                   MT_ProcessDebugStr (MTEL)
                                                   MT_ProcessGetDeviceInfo (MTEL)
                                                   MT_ProcessGetNV (MTEL)
                                                   MT_ProcessGetNvInfo (MTEL)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   MT_SendSPIRespMsg (MTEL)
                                                   MT_ZdoCommandProcessing (MT_ZDO)
                                                   NLDE_BuildMsg (nwk_util)
                                                   NLDE_DataIndSend (nwk_util)
                                                   NLDE_DataIndication (NLMEDE_CB)
                                                   NLDE_DataReqSend (nwk_util)
                                                   NLDE_SendMsg (nwk_util)
                                                   NLME_GetRequest (NLMEDE)
                                                   NLME_RejoinRspSend (nwk_util)
                                                   NLME_RouteDiscoveryRequest (rtg)
                                                   NwkCommandPktProcessing (nwk)
                                                   RTG_GetRoutingAddress (rtg)
                                                   RTG_ProcessRrep (rtg)
                                                   RTG_ProcessRreq (rtg)
                                                   RTG_SendRErr (rtg)
                                                   SPIMgr_Init (SPIMgr)
                                                   SampleApp_Init (SampleApp)
                                                   SampleApp_MessageMSGCB (SampleApp)
                                                   SampleApp_SendFlashMessage (SampleApp)
                                                   Segment part 110 (nwk)
                                                   Segment part 113 (nwk)
                                                   Segment part 19 (AssocList)
                                                   Segment part 194 (APSMEDE)
                                                   Segment part 212 (APSMEDE)
                                                   Segment part 23 (mac_device)
                                                   Segment part 24 (AssocList)
                                                   Segment part 26 (mac_main)
                                                   Segment part 31 (APSMEDE)
                                                   Segment part 32 (AddrMgr)
                                                   Segment part 33 (mac_mgmt)
                                                   Segment part 38 (NLMEDE)
                                                   Segment part 42 (nwk_util)
                                                   Segment part 46 (mac_device)
                                                   Segment part 47 (mac_coord)
                                                   Segment part 55 (APSMEDE)
                                                   Segment part 56 (mac_mgmt)
                                                   Segment part 57 (NLMEDE)
                                                   Segment part 67 (rtg)
                                                   Segment part 77 (nwk_util)
                                                   Segment part 78 (rtg)
                                                   Segment part 79 (nwk_util)
                                                   Segment part 89 (nwk_util)
                                                   Segment part 9 (AddrMgr)
                                                   SendData (SampleApp)
                                                   ZDApp_ActiveEPRspCB (ZDApp)
                                                   ZDApp_AutoFindDestinationEx (ZDApp)
                                                   ZDApp_IEEEAddrRspCB (ZDApp)
                                                   ZDApp_InMsgCB (ZDApp)
                                                   ZDApp_InitUserDesc (ZDApp)
                                                   ZDApp_LeaveCtrlInit (ZDApp)
                                                   ZDApp_LeaveCtrlStartup (ZDApp)
                                                   ZDApp_MatchDescRspCB (ZDApp)
                                                   ZDApp_NodeDescRspCB (ZDApp)
                                                   ZDApp_NwkAddrRspCB (ZDApp)
                                                   ZDApp_PowerDescRspCB (ZDApp)
                                                   ZDApp_SendEndDeviceBindReq (ZDApp)
                                                   ZDApp_SendMsg (ZDApp)
                                                   ZDApp_SendNewDstAddr (ZDApp)
                                                   ZDApp_ServerDiscRspCB (ZDApp)
                                                   ZDApp_SimpleDescRspCB (ZDApp)
                                                   ZDApp_UserDescRspCB (ZDApp)
                                                   ZDMatchSendState (ZDObject)
                                                   ZDO_CopyMatchInfo (ZDObject)
                                                   ZDO_MatchEndDeviceBind (ZDObject)
                                                   ZDO_NetworkDiscoveryConfirmCB (ZDApp)
                                                   ZDO_ProcessActiveEPReq (ZDObject)
                                                   ZDO_ProcessAddrRsp (ZDObject)
                                                   ZDO_ProcessEPListRsp (ZDObject)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_ProcessNodeDescReq (ZDObject)
                                                   ZDO_ProcessNodeDescRsp (ZDObject)
                                                   ZDO_ProcessPowerDescReq (ZDObject)
                                                   ZDO_ProcessPowerDescRsp (ZDObject)
                                                   ZDO_ProcessServerDiscReq (ZDObject)
                                                   ZDO_ProcessServerDiscRsp (ZDObject)
                                                   ZDO_ProcessSimpleDescReq (ZDObject)
                                                   ZDO_ProcessSimpleDescRsp (ZDObject)
                                                   ZDO_ProcessUserDescReq (ZDObject)
                                                   ZDO_ProcessUserDescRsp (ZDObject)
                                                   ZDO_ProcessUserDescSet (ZDObject)
                                                   ZDO_StartDevice (ZDObject)
                                                   ZDP_BindUnbindReq (ZDProfile)
                                                   ZDP_EPRsp (ZDProfile)
                                                   ZDP_EndDeviceBindReq (ZDProfile)
                                                   ZDP_IEEEAddrReq (ZDProfile)
                                                   ZDP_IncomingData (ZDProfile)
                                                   ZDP_MatchDescReq (ZDProfile)
                                                   ZDP_NodeDescMsg (ZDProfile)
                                                   ZDP_NwkAddrReq (ZDProfile)
                                                   ZDP_SendData (ZDProfile)
                                                   ZDP_ServerDiscReq (ZDProfile)
                                                   ZDP_SimpleDescMsg (ZDProfile)
                                                   ZDP_UserDescRsp (ZDProfile)
                                                   ZDP_UserDescSet (ZDProfile)
                                                   ZMacDataReq (zmac)
                                                   afBuildMSGIncoming (AF)
                                                   afIncomingData (AF)
                                                   afRegister (AF)
                                                   apsGenerateAck (aps_util)
                                                   apsProcessAck (aps_util)
                                                   aps_AddGroup (aps_groups)
                                                   aps_GroupsWriteNV (aps_groups)
                                                   compactPage (OSAL_Nv)
                                                   fillAndSend (ZDProfile)
                                                   halAssertHazardLights (hal_assert)
                                                   initItem (OSAL_Nv)
                                                   initItem2 (OSAL_Nv)
                                                   initPage (OSAL_Nv)
                                                   macApiAssociateReq (mac_device)
                                                   macApiOrphanRsp (mac_coord)
                                                   macApiPurgeReq (mac_coord)
                                                   macApiStartReq (mac_coord)
                                                   macAssocDataReq (mac_device)
                                                   macBackoffTimerRolloverCallback (mac_timer)
                                                   macBuildAssociateRsp (mac_coord)
                                                   macBuildBeacon (mac_coord)
                                                   macBuildCommonReq (mac_mgmt)
                                                   macBuildDataFrame (mac_data)
                                                   macBuildDisassociateReq (mac_mgmt)
                                                   macBuildHeader (mac_mgmt)
                                                   macBuildRealign (mac_coord)
                                                   macDataTxSend (mac_data)
                                                   macIndirectExpire (mac_coord)
                                                   macIndirectSend (mac_coord)
                                                   macIndirectTxFrame (mac_coord)
                                                   macRxBeacon (mac_mgmt)
                                                   macRxDataReq (mac_coord)
                                                   macRxDisassoc (mac_mgmt)
                                                   macScanFailedInProgress (mac_scan)
                                                   macScanNextChan (mac_scan)
                                                   macScanRxBeacon (mac_scan)
                                                   macScanRxCoordRealign (mac_scan)
                                                   macScanStartTimer (mac_scan)
                                                   macSendDataMsg (mac_main)
                                                   macSendMsg (mac_main)
                                                   macStartBegin (mac_coord)
                                                   macStartFrameResponseTimer (mac_device)
                                                   macStartResponseTimer (mac_device)
                                                   nwk_BeaconFromNative (nwk)
                                                   nwk_BeaconToNative (nwk)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
                                                   nwk_associate_ind_processing (nwk)
                                                   nwk_beacon_notify_ind_processing (nwk)
                                                   nwk_data_cnf_processing (nwk)
                                                   nwk_data_ind_processing (nwk)
                                                   nwk_event_loop (nwk)
                                                   nwk_globals_init (nwk_globals)
                                                   osalAddTasks (OSAL_SampleApp)
                                                   osalTaskAdd (OSAL_Tasks)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_cpyExtAddr (OSAL)
                                                   osal_memset (OSAL)
                                                   osal_msg_receive (OSAL)
                                                   osal_nv_item_init (OSAL_Nv)
                                                   osal_nv_write (OSAL_Nv)
                                                   pollDMA (hal_uart)
                                                   rxAddrIsr (mac_rx)
                                                   rxDiscardIsr (mac_rx)
                                                   rxStartIsr (mac_rx)
                                                   sAddrExtCpy (saddr)
                                                   setItem (OSAL_Nv)
                                                   setPageUse (OSAL_Nv)
                                                   writeItem (OSAL_Nv)
                                                   writeWordH (OSAL_Nv)
                                                   zdo_MTCB_MatchActiveEPRspCB (MT_ZDO)
                                                   zdo_MTCB_PowerDescRspCB (MT_ZDO)
                                                   zdo_MTCB_UserDescRspCB (MT_ZDO)
                                                   zdpProcessAddrReq (ZDProfile)
                                                   zgInit (ZGlobals)
                                                   zgReadStartupOptions (ZGlobals)
                                                   zgWriteStartupOptions (ZGlobals)
                                                   zmain_ext_addr (ZMain)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?ADD_XSTACK_DISP8

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000A6D - 00000A80 (0x14 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ADD_XSTACK_DISP0_8     00000A6D        ?PUSH_XSTACK_I (?PUSH_XSTACK_I)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?XSTACK_DISP8

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000A81 - 00000A8A (0xa bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSTACK_DISP0_8         00000A81        ?Subroutine5 (mac_mcu)
                                                   ?Subroutine63 (ZDProfile)
                                                   AF_DataRequest (AF)
                                                   APSDE_DataIndication (APSMEDE_CB)
                                                   APSDE_DataReq (APSMEDE)
                                                   APSDE_FrameAlloc (APSMEDE)
                                                   APS_SetEndDeviceBindTimeout (APS)
                                                   AddrMgrEntryUpdate (AddrMgr)
                                                   AddrMgrEntryUpdateEx (AddrMgr)
                                                   AddrMgrNwkAddrLookup (AddrMgr)
                                                   AssocAddNew (AssocList)
                                                   AssocGetWithAddress (AssocList)
                                                   AssocRemove (AssocList)
                                                   HalKeyConfig (hal_key)
                                                   HalLedBlink (hal_led)
                                                   HalLedUpdate (hal_led)
                                                   HalTimerConfig (hal_timer)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MT_BuildAndSendZToolResponse (MTEL)
                                                   MT_BuildSPIMsg (MTEL)
                                                   MT_ProcessDebugMsg (MTEL)
                                                   MT_ProcessGetNvInfo (MTEL)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   MT_ZdoCommandProcessing (MT_ZDO)
                                                   NLDE_DataIndSend (nwk_util)
                                                   NLDE_DataIndication (NLMEDE_CB)
                                                   NLDE_DataReqSend (nwk_util)
                                                   NLDE_SendMsg (nwk_util)
                                                   NLME_CmdCnf (nwk_util)
                                                   NLME_LeaveCmdCnf (nwk_util)
                                                   NLME_LeaveCmdProcess (nwk_util)
                                                   NLME_LeaveCmdSend (nwk_util)
                                                   NLME_LeaveRsp (NLMEDE)
                                                   NLME_NetworkFormationRequest (NLMEDE)
                                                   NLME_RTG_BcastAdd (nwk_util)
                                                   NLME_RejoinRspSend (nwk_util)
                                                   NLME_RouteDiscoveryRequest (rtg)
                                                   NLME_SetAssocFlags (nwk_util)
                                                   NwkCommandPktProcessing (nwk)
                                                   RTG_AddRtgEntry (rtg)
                                                   RTG_BcastAdd (rtg)
                                                   RTG_FillCSkipTable (rtg)
                                                   RTG_GetAncestors (rtg)
                                                   RTG_ProcessRreq (rtg)
                                                   RTG_SendRErr (rtg)
                                                   RTG_SendRrep (rtg)
                                                   RTG_UpdateNeighborEntry (nwk_util)
                                                   RTG_UpdateRtDiscEntry (rtg)
                                                   SPIMgr_Init (SPIMgr)
                                                   SampleApp_SendFlashMessage (SampleApp)
                                                   Segment part 194 (APSMEDE)
                                                   SendData (SampleApp)
                                                   ZDApp_ActiveEPRspCB (ZDApp)
                                                   ZDApp_AutoFindDestinationEx (ZDApp)
                                                   ZDApp_BindRsp (ZDApp)
                                                   ZDApp_IEEEAddrRspCB (ZDApp)
                                                   ZDApp_InMsgCB (ZDApp)
                                                   ZDApp_MatchDescRspCB (ZDApp)
                                                   ZDApp_NodeDescRspCB (ZDApp)
                                                   ZDApp_NwkAddrRspCB (ZDApp)
                                                   ZDApp_PowerDescRspCB (ZDApp)
                                                   ZDApp_SendEndDeviceBindReq (ZDApp)
                                                   ZDApp_SendNewDstAddr (ZDApp)
                                                   ZDApp_ServerDiscRspCB (ZDApp)
                                                   ZDApp_SimpleDescRspCB (ZDApp)
                                                   ZDApp_UnbindRsp (ZDApp)
                                                   ZDApp_UserDescRspCB (ZDApp)
                                                   ZDMatchSendState (ZDObject)
                                                   ZDO_AnyClusterMatches (ZDObject)
                                                   ZDO_CompareClusterLists (ZDObject)
                                                   ZDO_LeaveInd (ZDApp)
                                                   ZDO_MatchEndDeviceBind (ZDObject)
                                                   ZDO_NetworkDiscoveryConfirmCB (ZDApp)
                                                   ZDO_ProcessActiveEPReq (ZDObject)
                                                   ZDO_ProcessAddrRsp (ZDObject)
                                                   ZDO_ProcessBindUnbindRsp (ZDObject)
                                                   ZDO_ProcessEPListRsp (ZDObject)
                                                   ZDO_ProcessEndDeviceBindReq (ZDObject)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_ProcessNodeDescReq (ZDObject)
                                                   ZDO_ProcessNodeDescRsp (ZDObject)
                                                   ZDO_ProcessPowerDescReq (ZDObject)
                                                   ZDO_ProcessServerDiscReq (ZDObject)
                                                   ZDO_ProcessSimpleDescReq (ZDObject)
                                                   ZDO_ProcessUserDescReq (ZDObject)
                                                   ZDO_ProcessUserDescSet (ZDObject)
                                                   ZDP_BindUnbindReq (ZDProfile)
                                                   ZDP_EPRsp (ZDProfile)
                                                   ZDP_EndDeviceBindReq (ZDProfile)
                                                   ZDP_GenericRsp (ZDProfile)
                                                   ZDP_IEEEAddrReq (ZDProfile)
                                                   ZDP_IncomingData (ZDProfile)
                                                   ZDP_MatchDescReq (ZDProfile)
                                                   ZDP_NodeDescMsg (ZDProfile)
                                                   ZDP_NwkAddrReq (ZDProfile)
                                                   ZDP_PowerDescMsg (ZDProfile)
                                                   ZDP_SendData (ZDProfile)
                                                   ZDP_ServerDiscReq (ZDProfile)
                                                   ZDP_ServerDiscRsp (ZDProfile)
                                                   ZDP_SimpleDescMsg (ZDProfile)
                                                   ZDP_UserDescRsp (ZDProfile)
                                                   ZDP_UserDescSet (ZDProfile)
                                                   afBuildMSGIncoming (AF)
                                                   afIncomingData (AF)
                                                   afRegisterExtended (AF)
                                                   apsGenerateAck (aps_util)
                                                   apsProcessAck (aps_util)
                                                   aps_GroupsWriteNV (aps_groups)
                                                   compactPage (OSAL_Nv)
                                                   fillAndSend (ZDProfile)
                                                   halAssertHazardLights (hal_assert)
                                                   initItem (OSAL_Nv)
                                                   initItem2 (OSAL_Nv)
                                                   initNV (OSAL_Nv)
                                                   initPage (OSAL_Nv)
                                                   macApiOrphanRsp (mac_coord)
                                                   macApiStartReq (mac_coord)
                                                   macAssocDataReq (mac_device)
                                                   macAssociateCnf (mac_device)
                                                   macBuildAssociateRsp (mac_coord)
                                                   macBuildBeacon (mac_coord)
                                                   macBuildCommonReq (mac_mgmt)
                                                   macBuildHeader (mac_mgmt)
                                                   macBuildRealign (mac_coord)
                                                   macCbackForEvent (mac_main)
                                                   macCommStatusInd (mac_mgmt)
                                                   macConflictSyncLossInd (mac_mgmt)
                                                   macDestSAddrCmp (mac_mgmt)
                                                   macDisassocComplete (mac_mgmt)
                                                   macEventLoop (mac_main)
                                                   macMcuOverflowCapture (mac_mcu)
                                                   macMcuOverflowCount (mac_mcu)
                                                   macMcuOverflowSetCompare (mac_mcu)
                                                   macMcuOverflowSetCount (mac_mcu)
                                                   macPollCnf (mac_device)
                                                   macRxAssociateReq (mac_coord)
                                                   macRxBeacon (mac_mgmt)
                                                   macRxCoordRealign (mac_device)
                                                   macRxDataReq (mac_coord)
                                                   macRxDisassoc (mac_mgmt)
                                                   macRxOrphan (mac_coord)
                                                   macScanFailedInProgress (mac_scan)
                                                   macScanNextChan (mac_scan)
                                                   macScanRxBeacon (mac_scan)
                                                   macTimer (mac_timer)
                                                   macTimerRecalcUnaligned (mac_timer)
                                                   memcpy (?memcpy)
                                                   memset (?memset)
                                                   nwkDB_Add (nwk_bufs)
                                                   nwk_ScanPANChanSelect (nwk)
                                                   nwk_ScanPANChanVerify (nwk)
                                                   nwk_associate_ind_processing (nwk)
                                                   nwk_beacon_notify_ind_processing (nwk)
                                                   nwk_data_cnf_processing (nwk)
                                                   nwk_data_ind_processing (nwk)
                                                   nwk_orphan_ind_processing (nwk)
                                                   nwk_start_coord (nwk)
                                                   osalTaskAdd (OSAL_Tasks)
                                                   osal_memcpy (OSAL)
                                                   osal_msg_extract (OSAL)
                                                   osal_nv_item_init (OSAL_Nv)
                                                   osal_nv_item_len (OSAL_Nv)
                                                   osal_nv_read (OSAL_Nv)
                                                   osal_nv_write (OSAL_Nv)
                                                   rxAddrIsr (mac_rx)
                                                   rxStartIsr (mac_rx)
                                                   setItem (OSAL_Nv)
                                                   setPageUse (OSAL_Nv)
                                                   writeBuf (OSAL_Nv)
                                                   writeItem (OSAL_Nv)
                                                   writeWordH (OSAL_Nv)
                                                   xferBuf (OSAL_Nv)
                                                   zdo_MTCB_BindRspCB (MT_ZDO)
                                                   zdo_MTCB_MatchActiveEPRspCB (MT_ZDO)
                                                   zdo_MTCB_NodeDescRspCB (MT_ZDO)
                                                   zdo_MTCB_NwkIEEEAddrRspCB (MT_ZDO)
                                                   zdo_MTCB_PowerDescRspCB (MT_ZDO)
                                                   zdo_MTCB_ServerDiscRspCB (MT_ZDO)
                                                   zdo_MTCB_SimpleDescRspCB (MT_ZDO)
                                                   zdo_MTCB_UserDescRspCB (MT_ZDO)
                                                   zdpProcessAddrReq (ZDProfile)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?POP_BIT_ISP

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000A8B - 00000A9D (0x13 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?POP_BIT_ISP            00000A8B        macMcuRfIsr (mac_mcu)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?BANKED_ENTER_XDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000A9E - 00000B02 (0x65 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?BANKED_ENTER_XDATA     00000A9E        AF_DataRequest (AF)
                                                   APSDE_DataIndication (APSMEDE_CB)
                                                   APSDE_DataReq (APSMEDE)
                                                   APSDE_FrameAlloc (APSMEDE)
                                                   APSDE_FrameBlkInit (APSMEDE)
                                                   APSDE_FrameHdrInit (APSMEDE)
                                                   APSDE_FrameHdrSet (APSMEDE)
                                                   APSDE_FrameSend (APSMEDE)
                                                   APSDE_ParseMsg (aps_util)
                                                   APSME_CmdPkt (APSMEDE)
                                                   APSME_FrameSecInit (APSMEDE)
                                                   APSME_FrameSecurityRemove (APSMEDE)
                                                   APSME_LookupNwkAddr (APSMEDE)
                                                   APS_CmdInd (APS)
                                                   APS_SetEndDeviceBindTimeout (APS)
                                                   APS_event_loop (APS)
                                                   AddrMgrEntryAdd (AddrMgr)
                                                   AddrMgrEntryAddRef (AddrMgr)
                                                   AddrMgrEntryGet (AddrMgr)
                                                   AddrMgrEntryLookupExt (AddrMgr)
                                                   AddrMgrEntryLookupNwk (AddrMgr)
                                                   AddrMgrEntryRelease (AddrMgr)
                                                   AddrMgrEntrySet (AddrMgr)
                                                   AddrMgrEntryUpdate (AddrMgr)
                                                   AddrMgrEntryUpdateEx (AddrMgr)
                                                   AddrMgrExtAddrValid (AddrMgr)
                                                   AddrMgrInit (AddrMgr)
                                                   AddrMgrNwkAddrLookup (AddrMgr)
                                                   AddrMgrWriteNVRequest (ZDApp)
                                                   AssocAddNew (AssocList)
                                                   AssocCount (AssocList)
                                                   AssocGetNextNode (AssocList)
                                                   AssocGetWithAddress (AssocList)
                                                   AssocIsChild (AssocList)
                                                   AssocMakeList (AssocList)
                                                   AssocRemove (AssocList)
                                                   HalAdcRead (hal_adc)
                                                   HalKeyConfig (hal_key)
                                                   HalKeyPoll (hal_key)
                                                   HalLedBlink (hal_led)
                                                   HalLedSet (hal_led)
                                                   HalLedUpdate (hal_led)
                                                   HalTimerConfig (hal_timer)
                                                   HalTimerStart (hal_timer)
                                                   HalUARTOpen (hal_uart)
                                                   HalUARTPoll (hal_uart)
                                                   HalUARTRead (hal_uart)
                                                   HalUARTWrite (hal_uart)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   InitBoard (OnBoard)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MAC_McpsDataAlloc (mac_data)
                                                   MAC_MlmeGetReq (mac_pib)
                                                   MAC_MlmeResetReq (mac_mgmt)
                                                   MAC_MlmeSetReq (mac_pib)
                                                   MTProcessAppMsg (MTEL)
                                                   MTProcessAppRspMsg (MTEL)
                                                   MT_BuildAndSendZToolCB (MTEL)
                                                   MT_BuildAndSendZToolResponse (MTEL)
                                                   MT_BuildSPIMsg (MTEL)
                                                   MT_IndReset (MTEL)
                                                   MT_ProcessCommand (MTEL)
                                                   MT_ProcessDebugMsg (MTEL)
                                                   MT_ProcessDebugStr (MTEL)
                                                   MT_ProcessEvent (MTEL)
                                                   MT_ProcessGetDeviceInfo (MTEL)
                                                   MT_ProcessGetNV (MTEL)
                                                   MT_ProcessGetNvInfo (MTEL)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   MT_ProcessSetNV (MTEL)
                                                   MT_Reset (MTEL)
                                                   MT_ReverseBytes (MTEL)
                                                   MT_SendErrorNotification (MTEL)
                                                   MT_SendSPIRespMsg (MTEL)
                                                   MT_ZdoCommandProcessing (MT_ZDO)
                                                   NLDE_BuildFrameControl (nwk_util)
                                                   NLDE_BuildMsg (nwk_util)
                                                   NLDE_DataCnf (NLMEDE_CB)
                                                   NLDE_DataIndication (NLMEDE_CB)
                                                   NLDE_DataReq (NLMEDE)
                                                   NLDE_DataReqAlloc (NLMEDE)
                                                   NLDE_DataReqSend (nwk_util)
                                                   NLDE_FrameDataLoad (APSMEDE)
                                                   NLDE_GetHandle (nwk_util)
                                                   NLDE_ParseFrameControl (nwk_util)
                                                   NLDE_ParseMsg (nwk_util)
                                                   NLDE_ParseMsg2 (nwk_util)
                                                   NLDE_SendMsg (nwk_util)
                                                   NLME_CmdCnf (nwk_util)
                                                   NLME_CmdDataReqAlloc (nwk_util)
                                                   NLME_GetNeighborIndex (nwk_util)
                                                   NLME_GetNeighborLinkInfo (nwk_util)
                                                   NLME_GetRequest (NLMEDE)
                                                   NLME_IsAddressBroadcast (nwk_util)
                                                   NLME_LeaveCmdCnf (nwk_util)
                                                   NLME_LeaveCmdProcess (nwk_util)
                                                   NLME_LeaveCmdSend (nwk_util)
                                                   NLME_LeaveRsp (NLMEDE)
                                                   NLME_NetworkFormationRequest (NLMEDE)
                                                   NLME_RTG_BcastAdd (nwk_util)
                                                   NLME_RejoinReqCmdProcess (nwk_util)
                                                   NLME_RejoinRspCmdProcess (nwk_util)
                                                   NLME_RejoinRspSend (nwk_util)
                                                   NLME_RemoveChild (nwk_util)
                                                   NLME_RouteDiscoveryIndication (NLMEDE_CB)
                                                   NLME_RouteDiscoveryRequest (rtg)
                                                   NLME_SetAssocFlags (nwk_util)
                                                   NLME_SetBroadcastFilter (nwk_util)
                                                   NLME_SetRequest (NLMEDE)
                                                   NwkCommandPktProcessing (nwk)
                                                   OnBoard_SendKeys (OnBoard)
                                                   Onboard_rand (OnBoard)
                                                   RTG_AddRtgEntry (rtg)
                                                   RTG_AllocNewAddress (rtg)
                                                   RTG_BcastAdd (rtg)
                                                   RTG_BcastChk (rtg)
                                                   RTG_BcastDel (rtg)
                                                   RTG_BcastHold (rtg)
                                                   RTG_BcastTimeout (rtg)
                                                   RTG_BcastTimerHandler (rtg)
                                                   RTG_CalcAddress (rtg)
                                                   RTG_CheckRtDiscEntry (rtg)
                                                   RTG_CheckRtStatus (rtg)
                                                   RTG_DataReq (rtg)
                                                   RTG_DeAllocAddress (rtg)
                                                   RTG_FillCSkipTable (rtg)
                                                   RTG_GetAncestors (rtg)
                                                   RTG_GetLinkCost (rtg)
                                                   RTG_GetNextHop (rtg)
                                                   RTG_GetNextTreeHop (rtg)
                                                   RTG_GetPrevHop (rtg)
                                                   RTG_GetRoutingAddress (rtg)
                                                   RTG_GetRtDiscEntry (rtg)
                                                   RTG_GetRtgEntry (rtg)
                                                   RTG_GetTreeRoute (rtg)
                                                   RTG_IndirectTimeout (rtg)
                                                   RTG_Init (rtg)
                                                   RTG_MultiplyCskip (rtg)
                                                   RTG_ProcessRErr (rtg)
                                                   RTG_ProcessRrep (rtg)
                                                   RTG_ProcessRreq (rtg)
                                                   RTG_ProcessRtDiscBits (rtg)
                                                   RTG_RouteMaintanence (rtg)
                                                   RTG_SendRErr (rtg)
                                                   RTG_SendRrep (rtg)
                                                   RTG_TimerEvent (rtg)
                                                   RTG_UpdateNeighborEntry (nwk_util)
                                                   RTG_UpdateRtDiscEntry (rtg)
                                                   SPIMgr_CalcFCS (SPIMgr)
                                                   SPIMgr_ProcessZToolData (SPIMgr)
                                                   SSP_GetMicLen (ssp)
                                                   SSP_NwkSecurity (ssp)
                                                   SampleApp_HandleKeys (SampleApp)
                                                   SampleApp_Init (SampleApp)
                                                   SampleApp_MessageMSGCB (SampleApp)
                                                   SampleApp_ProcessEvent (SampleApp)
                                                   SampleApp_SendFlashMessage (SampleApp)
                                                   SampleApp_SendPeriodicMessage (SampleApp)
                                                   SendData (SampleApp)
                                                   SetContrast (hal_lcd)
                                                   UartTX_Send_String (wxl_uart)
                                                   Uart_Baud_rate (wxl_uart)
                                                   WriteLCD (hal_lcd)
                                                   ZDApp_ActiveEPRspCB (ZDApp)
                                                   ZDApp_AutoFindDestinationEx (ZDApp)
                                                   ZDApp_BindRsp (ZDApp)
                                                   ZDApp_EndDeviceBindRsp (ZDApp)
                                                   ZDApp_IEEEAddrRspCB (ZDApp)
                                                   ZDApp_InMsgCB (ZDApp)
                                                   ZDApp_InitUserDesc (ZDApp)
                                                   ZDApp_LeaveCtrlInit (ZDApp)
                                                   ZDApp_LeaveCtrlSet (ZDApp)
                                                   ZDApp_LeaveCtrlStartup (ZDApp)
                                                   ZDApp_MatchDescRspCB (ZDApp)
                                                   ZDApp_NodeDescRspCB (ZDApp)
                                                   ZDApp_NwkAddrRspCB (ZDApp)
                                                   ZDApp_PowerDescRspCB (ZDApp)
                                                   ZDApp_SendEndDeviceBindReq (ZDApp)
                                                   ZDApp_SendMsg (ZDApp)
                                                   ZDApp_SendNewDstAddr (ZDApp)
                                                   ZDApp_ServerDiscRspCB (ZDApp)
                                                   ZDApp_SimpleDescRspCB (ZDApp)
                                                   ZDApp_UnbindRsp (ZDApp)
                                                   ZDApp_UserDescRspCB (ZDApp)
                                                   ZDApp_event_loop (ZDApp)
                                                   ZDMatchSendState (ZDObject)
                                                   ZDOInitDevice (ZDApp)
                                                   ZDO_AnyClusterMatches (ZDObject)
                                                   ZDO_CompareClusterLists (ZDObject)
                                                   ZDO_CopyMatchInfo (ZDObject)
                                                   ZDO_CreateAlignedUINT16List (ZDObject)
                                                   ZDO_LeaveCnf (ZDApp)
                                                   ZDO_LeaveInd (ZDApp)
                                                   ZDO_MatchEndDeviceBind (ZDObject)
                                                   ZDO_NetworkDiscoveryConfirmCB (ZDApp)
                                                   ZDO_ParseSimpleDescBuf (ZDObject)
                                                   ZDO_ProcessActiveEPReq (ZDObject)
                                                   ZDO_ProcessAddrRsp (ZDObject)
                                                   ZDO_ProcessBindUnbindRsp (ZDObject)
                                                   ZDO_ProcessEPListRsp (ZDObject)
                                                   ZDO_ProcessEndDeviceBindReq (ZDObject)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_ProcessNodeDescReq (ZDObject)
                                                   ZDO_ProcessNodeDescRsp (ZDObject)
                                                   ZDO_ProcessPowerDescReq (ZDObject)
                                                   ZDO_ProcessPowerDescRsp (ZDObject)
                                                   ZDO_ProcessServerDiscReq (ZDObject)
                                                   ZDO_ProcessServerDiscRsp (ZDObject)
                                                   ZDO_ProcessSimpleDescReq (ZDObject)
                                                   ZDO_ProcessSimpleDescRsp (ZDObject)
                                                   ZDO_ProcessUserDescReq (ZDObject)
                                                   ZDO_ProcessUserDescRsp (ZDObject)
                                                   ZDO_ProcessUserDescSet (ZDObject)
                                                   ZDO_StartDevice (ZDObject)
                                                   ZDO_UpdateNwkStatus (ZDObject)
                                                   ZDP_BindUnbindReq (ZDProfile)
                                                   ZDP_EPRsp (ZDProfile)
                                                   ZDP_EndDeviceBindReq (ZDProfile)
                                                   ZDP_GenericRsp (ZDProfile)
                                                   ZDP_IEEEAddrReq (ZDProfile)
                                                   ZDP_IncomingData (ZDProfile)
                                                   ZDP_MatchDescReq (ZDProfile)
                                                   ZDP_NWKAddrOfInterestReq (ZDProfile)
                                                   ZDP_NodeDescMsg (ZDProfile)
                                                   ZDP_NwkAddrReq (ZDProfile)
                                                   ZDP_PowerDescMsg (ZDProfile)
                                                   ZDP_SendData (ZDProfile)
                                                   ZDP_ServerDiscReq (ZDProfile)
                                                   ZDP_ServerDiscRsp (ZDProfile)
                                                   ZDP_SimpleDescMsg (ZDProfile)
                                                   ZDP_SimpleDescReq (ZDProfile)
                                                   ZDP_UserDescRsp (ZDProfile)
                                                   ZDP_UserDescSet (ZDProfile)
                                                   afBuildMSGIncoming (AF)
                                                   afCopyAddress (AF)
                                                   afDataConfirm (AF)
                                                   afDataReqMTU (AF)
                                                   afFindEndPointDesc (AF)
                                                   afFindSimpleDesc (AF)
                                                   afGetReflector (AF)
                                                   afIncomingData (AF)
                                                   afRegister (AF)
                                                   afRegisterExtended (AF)
                                                   apsAckFindMatchCB (aps_util)
                                                   apsGenerateAck (aps_util)
                                                   apsProcessAck (aps_util)
                                                   aps_AddGroup (aps_groups)
                                                   aps_FindGroup (aps_groups)
                                                   aps_FindGroupForEndpoint (aps_groups)
                                                   aps_GroupsWriteNV (aps_groups)
                                                   aps_RemoveGroup (aps_groups)
                                                   calcChkF (OSAL_Nv)
                                                   compactPage (OSAL_Nv)
                                                   fillAndSend (ZDProfile)
                                                   findItem (OSAL_Nv)
                                                   halAssertHazardLights (hal_assert)
                                                   halTimerSendCallBack (hal_timer)
                                                   halTimerSetCount (hal_timer)
                                                   initItem (OSAL_Nv)
                                                   initItem2 (OSAL_Nv)
                                                   initNV (OSAL_Nv)
                                                   initPage (OSAL_Nv)
                                                   macAllocTxBuffer (mac_data)
                                                   macApiAssociateReq (mac_device)
                                                   macApiDisassociateReq (mac_mgmt)
                                                   macApiOrphanRsp (mac_coord)
                                                   macApiPending (mac_mgmt)
                                                   macApiPollReq (mac_device)
                                                   macApiPurgeReq (mac_coord)
                                                   macApiScanReq (mac_scan)
                                                   macApiStartReq (mac_coord)
                                                   macAssocDataReqComplete (mac_device)
                                                   macAssocDataRxInd (mac_device)
                                                   macAssocFailed (mac_device)
                                                   macAssocFrameResponseTimeout (mac_device)
                                                   macAssocRxDisassoc (mac_device)
                                                   macBackoffTimerCancelTrigger (mac_backoff_timer)
                                                   macBackoffTimerCapture (mac_backoff_timer)
                                                   macBackoffTimerCompareIsr (mac_backoff_timer)
                                                   macBackoffTimerCount (mac_backoff_timer)
                                                   macBackoffTimerInit (mac_backoff_timer)
                                                   macBackoffTimerRolloverCallback (mac_timer)
                                                   macBackoffTimerSetRollover (mac_backoff_timer)
                                                   macBackoffTimerSetTrigger (mac_backoff_timer)
                                                   macBackoffTimerTriggerCallback (mac_timer)
                                                   macBuildAssociateRsp (mac_coord)
                                                   macBuildBeacon (mac_coord)
                                                   macBuildBeaconNotifyInd (mac_mgmt)
                                                   macBuildCommonReq (mac_mgmt)
                                                   macBuildDataFrame (mac_data)
                                                   macBuildDisassociateReq (mac_mgmt)
                                                   macBuildHeader (mac_mgmt)
                                                   macBuildPendAddr (mac_coord)
                                                   macBuildRealign (mac_coord)
                                                   macCbackForEvent (mac_main)
                                                   macCommStatusInd (mac_mgmt)
                                                   macCspTxRequestAckTimeoutCallback (mac_csp_tx)
                                                   macDataTxComplete (mac_data)
                                                   macDataTxEnqueue (mac_data)
                                                   macDataTxSend (mac_data)
                                                   macDataTxTimeAvailable (mac_data)
                                                   macDestAddrCmp (mac_mgmt)
                                                   macDestSAddrCmp (mac_mgmt)
                                                   macEventLoop (mac_main)
                                                   macExecute (mac_main)
                                                   macIndirectExpire (mac_coord)
                                                   macIndirectMark (mac_coord)
                                                   macIndirectRequeueFrame (mac_coord)
                                                   macIndirectSend (mac_coord)
                                                   macIndirectTxFrame (mac_coord)
                                                   macMainReset (mac_main)
                                                   macMcuAndT2PEROF2 (mac_mcu)
                                                   macMcuOrT2PEROF2 (mac_mcu)
                                                   macMcuOverflowCapture (mac_mcu)
                                                   macMcuOverflowCount (mac_mcu)
                                                   macMcuOverflowSetCompare (mac_mcu)
                                                   macMcuOverflowSetCount (mac_mcu)
                                                   macMemReadRxFifo (mac_mem)
                                                   macMemWriteRam (mac_mem)
                                                   macMemWriteTxFifo (mac_mem)
                                                   macPollDataReqComplete (mac_device)
                                                   macPollDataRxInd (mac_device)
                                                   macPollFrameResponseTimeout (mac_device)
                                                   macPollRxAssocRsp (mac_device)
                                                   macPollRxDisassoc (mac_device)
                                                   macRadioSetChannel (mac_radio)
                                                   macRadioSetTxPower (mac_radio)
                                                   macRadioStartScan (mac_radio)
                                                   macRxAssocRsp (mac_device)
                                                   macRxAssociateReq (mac_coord)
                                                   macRxBeacon (mac_mgmt)
                                                   macRxBeaconReq (mac_coord)
                                                   macRxCompleteCallback (mac_data)
                                                   macRxCoordRealign (mac_device)
                                                   macRxDataReq (mac_coord)
                                                   macRxDisable (mac_rx_onoff)
                                                   macRxDisassoc (mac_mgmt)
                                                   macRxEnable (mac_rx_onoff)
                                                   macRxOffRequest (mac_rx_onoff)
                                                   macRxOnRequest (mac_rx_onoff)
                                                   macRxOrphan (mac_coord)
                                                   macRxSoftEnable (mac_rx_onoff)
                                                   macScanCnfInit (mac_scan)
                                                   macScanNextChan (mac_scan)
                                                   macScanRxBeacon (mac_scan)
                                                   macScanRxCoordRealign (mac_scan)
                                                   macScanStartTimer (mac_scan)
                                                   macSendDataMsg (mac_main)
                                                   macSendMsg (mac_main)
                                                   macSetEvent (mac_main)
                                                   macStartBegin (mac_coord)
                                                   macStartComplete (mac_coord)
                                                   macStartContinue (mac_coord)
                                                   macStartFrameResponseTimer (mac_device)
                                                   macStartResponseTimer (mac_device)
                                                   macStartSetParams (mac_coord)
                                                   macTimer (mac_timer)
                                                   macTimerAddTimer (mac_timer)
                                                   macTimerCancel (mac_timer)
                                                   macTimerRecalcUnaligned (mac_timer)
                                                   macTimerRemoveTimer (mac_timer)
                                                   macTimerUpdateBackoffTimer (mac_timer)
                                                   macTxAckNotReceivedCallback (mac_tx)
                                                   macTxAckReceivedCallback (mac_tx)
                                                   macTxCompleteCallback (mac_data)
                                                   macTxDoneCallback (mac_tx)
                                                   macTxFrame (mac_tx)
                                                   macTxTimestampCallback (mac_tx)
                                                   memcpy (?memcpy)
                                                   memset (?memset)
                                                   nwkBuildDataCnf (nwk)
                                                   nwkDB_Add (nwk_bufs)
                                                   nwkDB_CreateHdr (nwk_bufs)
                                                   nwkDB_DeleteRecAll (nwk_bufs)
                                                   nwkDB_FindMatch (nwk_bufs)
                                                   nwkDB_FindNextType (nwk_bufs)
                                                   nwkDB_RemoveFromList (nwk_bufs)
                                                   nwkDB_UserDataLoad (nwk_util)
                                                   nwk_BeaconFromNative (nwk)
                                                   nwk_BeaconToNative (nwk)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
                                                   nwk_MacDataBuffersDealloc (nwk_bufs)
                                                   nwk_ScanPANChanSelect (nwk)
                                                   nwk_ScanPANChanVerify (nwk)
                                                   nwk_SendNextDataBuf (nwk_bufs)
                                                   nwk_associate_ind_processing (nwk)
                                                   nwk_beacon_notify_ind_processing (nwk)
                                                   nwk_comm_status_ind_processing (nwk)
                                                   nwk_data_cnf_processing (nwk)
                                                   nwk_data_ind_processing (nwk)
                                                   nwk_data_req_send (nwk)
                                                   nwk_event_loop (nwk)
                                                   nwk_orphan_ind_processing (nwk)
                                                   nwk_scan_cnf_processing (nwk)
                                                   nwk_start_cnf_processing (nwk)
                                                   nwk_start_coord (nwk)
                                                   nwkbufs_hold (nwk_bufs)
                                                   osalAddTasks (OSAL_SampleApp)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalDeleteTimer (OSAL_Timers)
                                                   osalFindTimer (OSAL_Timers)
                                                   osalInitTasks (OSAL_Tasks)
                                                   osalTaskAdd (OSAL_Tasks)
                                                   osalTimerInit (OSAL_Timers)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_ExtAddrEqual (OSAL)
                                                   osal_GetSystemClock (OSAL_Timers)
                                                   osal_build_uint32 (OSAL)
                                                   osal_cpyExtAddr (OSAL)
                                                   osal_get_timeoutEx (OSAL_Timers)
                                                   osal_mem_alloc (OSAL_Memory)
                                                   osal_mem_free (OSAL_Memory)
                                                   osal_memcpy (OSAL)
                                                   osal_memset (OSAL)
                                                   osal_msg_allocate (OSAL)
                                                   osal_msg_dequeue (OSAL)
                                                   osal_msg_enqueue (OSAL)
                                                   osal_msg_enqueue_max (OSAL)
                                                   osal_msg_extract (OSAL)
                                                   osal_msg_push (OSAL)
                                                   osal_msg_receive (OSAL)
                                                   osal_msg_send (OSAL)
                                                   osal_nv_item_init (OSAL_Nv)
                                                   osal_nv_item_len (OSAL_Nv)
                                                   osal_nv_read (OSAL_Nv)
                                                   osal_nv_write (OSAL_Nv)
                                                   osal_set_event (OSAL)
                                                   osal_start_system (OSAL)
                                                   osal_start_timer (OSAL_Timers)
                                                   osal_start_timerEx (OSAL_Timers)
                                                   osal_stop_timer (OSAL_Timers)
                                                   osal_stop_timerEx (OSAL_Timers)
                                                   osal_timer_activate (OSAL_Timers)
                                                   osal_timer_hw_setup (OSAL_Timers)
                                                   pollDMA (hal_uart)
                                                   readHdr (OSAL_Nv)
                                                   rxAddrIsr (mac_rx)
                                                   rxDiscardFrame (mac_rx)
                                                   rxFcsIsr (mac_rx)
                                                   rxStartIsr (mac_rx)
                                                   sAddrCmp (saddr)
                                                   sAddrCpy (saddr)
                                                   sAddrExtCmp (saddr)
                                                   sAddrExtCpy (saddr)
                                                   setItem (OSAL_Nv)
                                                   txComplete (mac_tx)
                                                   txCsmaPrep (mac_tx)
                                                   writeBuf (OSAL_Nv)
                                                   writeItem (OSAL_Nv)
                                                   writeWord (OSAL_Nv)
                                                   writeWordD (OSAL_Nv)
                                                   writeWordH (OSAL_Nv)
                                                   xferBuf (OSAL_Nv)
                                                   zdo_MTCB_BindRspCB (MT_ZDO)
                                                   zdo_MTCB_MatchActiveEPRspCB (MT_ZDO)
                                                   zdo_MTCB_NodeDescRspCB (MT_ZDO)
                                                   zdo_MTCB_NwkIEEEAddrRspCB (MT_ZDO)
                                                   zdo_MTCB_PowerDescRspCB (MT_ZDO)
                                                   zdo_MTCB_SimpleDescRspCB (MT_ZDO)
                                                   zdo_MTCB_UserDescRspCB (MT_ZDO)
                                                   zdo_MT_CopyRevExtAddr (MT_ZDO)
                                                   zdo_MT_MakeExtAddr (MT_ZDO)
                                                   zdpProcessAddrReq (ZDProfile)
                                                   zgInit (ZGlobals)
                                                   zgReadStartupOptions (ZGlobals)
                                                   zgWriteStartupOptions (ZGlobals)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FUNC_ENTER_XDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000B03 - 00000B61 (0x5f bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FUNC_ENTER_XDATA       00000B03        ZMacDataReq (zmac)
                                                   ZMacInit (zmac)
                                                   ZMacReset (zmac)
                                                   ZMacScanReq (zmac)
                                                   ZMacSendNoData (zmac)
                                                   ZMacSetReq (zmac)
                                                   ZMacStartReq (zmac)
                                                   zmain_ext_addr (ZMain)
                                                   zmain_vdd_check (ZMain)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?BANKED_LEAVE_XDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000B62 - 00000BA2 (0x41 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?BANKED_LEAVE_XDATA     00000B62        ?Subroutine0 (mac_mem)
                                                   ?Subroutine0 (saddr)
                                                   ?Subroutine1 (ZGlobals)
                                                   ?Subroutine1 (mac_backoff_timer)
                                                   ?Subroutine1 (mac_radio)
                                                   ?Subroutine10 (hal_lcd)
                                                   ?Subroutine103 (ZDObject)
                                                   ?Subroutine104 (ZDObject)
                                                   ?Subroutine105 (ZDObject)
                                                   ?Subroutine11 (hal_led)
                                                   ?Subroutine14 (hal_timer)
                                                   ?Subroutine15 (MTEL)
                                                   ?Subroutine16 (MTEL)
                                                   ?Subroutine17 (MTEL)
                                                   ?Subroutine18 (MTEL)
                                                   ?Subroutine19 (hal_uart)
                                                   ?Subroutine2 (mac_backoff_timer)
                                                   ?Subroutine2 (mac_rx_onoff)
                                                   ?Subroutine20 (OSAL)
                                                   ?Subroutine21 (OSAL)
                                                   ?Subroutine22 (OSAL)
                                                   ?Subroutine22 (hal_uart)
                                                   ?Subroutine22 (mac_rx)
                                                   ?Subroutine23 (OSAL)
                                                   ?Subroutine24 (OSAL)
                                                   ?Subroutine25 (OSAL)
                                                   ?Subroutine3 (OSAL_Timers)
                                                   ?Subroutine31 (AF)
                                                   ?Subroutine33 (AF)
                                                   ?Subroutine34 (AF)
                                                   ?Subroutine35 (AF)
                                                   ?Subroutine4 (OSAL_Timers)
                                                   ?Subroutine4 (SampleApp)
                                                   ?Subroutine4 (mac_tx)
                                                   ?Subroutine40 (ZDApp)
                                                   ?Subroutine41 (ZDApp)
                                                   ?Subroutine42 (ZDApp)
                                                   ?Subroutine43 (ZDApp)
                                                   ?Subroutine44 (ZDApp)
                                                   ?Subroutine45 (ZDApp)
                                                   ?Subroutine5 (SampleApp)
                                                   ?Subroutine5 (mac_mcu)
                                                   ?Subroutine57 (MT_ZDO)
                                                   ?Subroutine6 (mac_mcu)
                                                   ?Subroutine62 (ZDProfile)
                                                   ?Subroutine63 (MT_ZDO)
                                                   ?Subroutine63 (ZDProfile)
                                                   ?Subroutine64 (MT_ZDO)
                                                   ?Subroutine64 (ZDProfile)
                                                   ?Subroutine66 (OSAL_Nv)
                                                   ?Subroutine68 (OSAL_Nv)
                                                   ?Subroutine69 (ZDProfile)
                                                   ?Subroutine74 (OSAL_Nv)
                                                   ?Subroutine75 (OSAL_Nv)
                                                   ?Subroutine91 (ZDObject)
                                                   ?Subroutine92 (ZDObject)
                                                   ?Subroutine93 (ZDObject)
                                                   AF_DataRequest (AF)
                                                   APSDE_DataIndication (APSMEDE_CB)
                                                   APSDE_ParseMsg (aps_util)
                                                   HalAdcRead (hal_adc)
                                                   HalKeyConfig (hal_key)
                                                   HalKeyPoll (hal_key)
                                                   HalLedSet (hal_led)
                                                   HalTimerConfig (hal_timer)
                                                   HalUARTOpen (hal_uart)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   InitBoard (OnBoard)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MAC_MlmeGetReq (mac_pib)
                                                   MAC_MlmeSetReq (mac_pib)
                                                   NLDE_DataCnf (NLMEDE_CB)
                                                   NLDE_DataIndication (NLMEDE_CB)
                                                   NLDE_ParseMsg2 (nwk_util)
                                                   NLME_RejoinRspSend (nwk_util)
                                                   NLME_RouteDiscoveryIndication (NLMEDE_CB)
                                                   NLME_SetRequest (NLMEDE)
                                                   OnBoard_SendKeys (OnBoard)
                                                   Onboard_rand (OnBoard)
                                                   RTG_BcastChk (rtg)
                                                   SPIMgr_CalcFCS (SPIMgr)
                                                   SPIMgr_ProcessZToolData (SPIMgr)
                                                   SSP_GetMicLen (ssp)
                                                   SampleApp_Init (SampleApp)
                                                   Segment part 10 (AssocList)
                                                   Segment part 10 (nwk_bufs)
                                                   Segment part 110 (nwk)
                                                   Segment part 113 (nwk)
                                                   Segment part 120 (nwk)
                                                   Segment part 13 (mac_scan)
                                                   Segment part 14 (AssocList)
                                                   Segment part 15 (aps_groups)
                                                   Segment part 15 (mac_mgmt)
                                                   Segment part 17 (mac_scan)
                                                   Segment part 19 (AssocList)
                                                   Segment part 19 (aps_util)
                                                   Segment part 194 (APSMEDE)
                                                   Segment part 20 (APS)
                                                   Segment part 20 (ssp)
                                                   Segment part 21 (mac_mgmt)
                                                   Segment part 21 (rtg)
                                                   Segment part 212 (APSMEDE)
                                                   Segment part 22 (mac_timer)
                                                   Segment part 23 (mac_main)
                                                   Segment part 23 (nwk_util)
                                                   Segment part 24 (AddrMgr)
                                                   Segment part 24 (AssocList)
                                                   Segment part 26 (mac_main)
                                                   Segment part 27 (AddrMgr)
                                                   Segment part 29 (mac_timer)
                                                   Segment part 30 (mac_data)
                                                   Segment part 31 (APS)
                                                   Segment part 31 (nwk)
                                                   Segment part 32 (APSMEDE)
                                                   Segment part 32 (AddrMgr)
                                                   Segment part 32 (nwk_bufs)
                                                   Segment part 33 (mac_mgmt)
                                                   Segment part 34 (mac_coord)
                                                   Segment part 34 (mac_device)
                                                   Segment part 37 (mac_timer)
                                                   Segment part 38 (NLMEDE)
                                                   Segment part 38 (mac_coord)
                                                   Segment part 40 (mac_data)
                                                   Segment part 42 (nwk_util)
                                                   Segment part 47 (mac_coord)
                                                   Segment part 53 (AddrMgr)
                                                   Segment part 55 (APSMEDE)
                                                   Segment part 57 (NLMEDE)
                                                   Segment part 62 (mac_data)
                                                   Segment part 65 (rtg)
                                                   Segment part 67 (rtg)
                                                   Segment part 69 (nwk)
                                                   Segment part 77 (nwk_util)
                                                   Segment part 78 (rtg)
                                                   Segment part 89 (nwk_util)
                                                   Segment part 9 (AddrMgr)
                                                   Segment part 9 (aps_groups)
                                                   Segment part 94 (rtg)
                                                   UartTX_Send_String (wxl_uart)
                                                   Uart_Baud_rate (wxl_uart)
                                                   ZDApp_AutoFindDestinationEx (ZDApp)
                                                   ZDP_IncomingData (ZDProfile)
                                                   ZDP_SendData (ZDProfile)
                                                   afDataConfirm (AF)
                                                   afRegister (AF)
                                                   apsProcessAck (aps_util)
                                                   aps_AddGroup (aps_groups)
                                                   halAssertHazardLights (hal_assert)
                                                   halTimerSendCallBack (hal_timer)
                                                   initPage (OSAL_Nv)
                                                   macApiStartReq (mac_coord)
                                                   macBackoffTimerRolloverCallback (mac_timer)
                                                   macCspTxRequestAckTimeoutCallback (mac_csp_tx)
                                                   macRadioSetTxPower (mac_radio)
                                                   macRxBeaconReq (mac_coord)
                                                   macScanRxCoordRealign (mac_scan)
                                                   macScanStartTimer (mac_scan)
                                                   macSendDataMsg (mac_main)
                                                   macSendMsg (mac_main)
                                                   macSetEvent (mac_main)
                                                   macStartBegin (mac_coord)
                                                   macStartFrameResponseTimer (mac_device)
                                                   macStartResponseTimer (mac_device)
                                                   macTimerAddTimer (mac_timer)
                                                   macTxTimestampCallback (mac_tx)
                                                   memcpy (?memcpy)
                                                   memset (?memset)
                                                   nwkDB_Add (nwk_bufs)
                                                   nwkDB_CreateHdr (nwk_bufs)
                                                   nwkDB_FindMatch (nwk_bufs)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
                                                   nwk_associate_ind_processing (nwk)
                                                   nwk_data_ind_processing (nwk)
                                                   osalAddTasks (OSAL_SampleApp)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalInitTasks (OSAL_Tasks)
                                                   osalTaskAdd (OSAL_Tasks)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_mem_alloc (OSAL_Memory)
                                                   osal_mem_free (OSAL_Memory)
                                                   rxStartIsr (mac_rx)
                                                   sAddrExtCmp (saddr)
                                                   sAddrExtCpy (saddr)
                                                   txCsmaPrep (mac_tx)
                                                   writeWordH (OSAL_Nv)
                                                   zdo_MTCB_MatchActiveEPRspCB (MT_ZDO)
                                                   zdo_MTCB_PowerDescRspCB (MT_ZDO)
                                                   zgInit (ZGlobals)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FUNC_LEAVE_XDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000BA3 - 00000BDD (0x3b bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FUNC_LEAVE_XDATA       00000BA3        ?Subroutine6 (zmac)
                                                   ?Subroutine8 (zmac)
                                                   ZMacDataReq (zmac)
                                                   zmain_ext_addr (ZMain)
                                                   zmain_vdd_check (ZMain)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?INTERRUPT_ENTER_XSP

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000BDE - 00000C35 (0x58 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?INTERRUPT_ENTER_XSP    00000BDE        halKeyPort0Isr (hal_key)
                                                   halKeyPort1Isr (hal_key)
                                                   halKeyPort2Isr (hal_key)
                                                   halTimer1Isr (hal_timer)
                                                   halTimer3Isr (hal_timer)
                                                   halTimer4Isr (hal_timer)
                                                   macMcuRfIsr (mac_mcu)
                                                   macMcuTimer2Isr (mac_mcu)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?INTERRUPT_LEAVE_XSP

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000C36 - 00000C86 (0x51 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?INTERRUPT_LEAVE_XSP    00000C36        ?Subroutine15 (hal_timer)
                                                   ?Subroutine3 (hal_key)
                                                   ?Subroutine7 (mac_mcu)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?PUSH_XSTACK_I

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000C87 - 00000C8A (0x4 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I_FOUR     00000C87        NLDE_DataIndication (NLMEDE_CB)
                                                   afIncomingData (AF)
                                                   macScanStartTimer (mac_scan)
                                                   macStartFrameResponseTimer (mac_device)
                                                   macStartResponseTimer (mac_device)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000C8B - 00000C8E (0x4 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I_THREE    00000C8B        APSDE_DataIndication (APSMEDE_CB)
                                                   APSDE_DataReq (APSMEDE)
                                                   APS_CmdInd (APS)
                                                   InitBoard (OnBoard)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MAC_MlmeGetReq (mac_pib)
                                                   MAC_MlmeSetReq (mac_pib)
                                                   MTProcessAppMsg (MTEL)
                                                   MT_BuildAndSendZToolCB (MTEL)
                                                   MT_BuildSPIMsg (MTEL)
                                                   MT_ZdoCommandProcessing (MT_ZDO)
                                                   NLDE_BuildMsg (nwk_util)
                                                   NLME_GetRequest (NLMEDE)
                                                   SampleApp_Init (SampleApp)
                                                   ZDApp_AutoFindDestinationEx (ZDApp)
                                                   ZDApp_IEEEAddrRspCB (ZDApp)
                                                   ZDApp_MatchDescRspCB (ZDApp)
                                                   ZDApp_NwkAddrRspCB (ZDApp)
                                                   ZDApp_SendMsg (ZDApp)
                                                   ZDApp_SendNewDstAddr (ZDApp)
                                                   ZDMatchSendState (ZDObject)
                                                   ZDO_CopyMatchInfo (ZDObject)
                                                   ZDO_MatchEndDeviceBind (ZDObject)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_ProcessUserDescSet (ZDObject)
                                                   ZDP_EPRsp (ZDProfile)
                                                   ZDP_UserDescRsp (ZDProfile)
                                                   ZDP_UserDescSet (ZDProfile)
                                                   ZMacDataReq (zmac)
                                                   afBuildMSGIncoming (AF)
                                                   afRegister (AF)
                                                   aps_AddGroup (aps_groups)
                                                   aps_GroupsWriteNV (aps_groups)
                                                   macBuildBeacon (mac_coord)
                                                   macScanRxBeacon (mac_scan)
                                                   macSendDataMsg (mac_main)
                                                   macSendMsg (mac_main)
                                                   macStartBegin (mac_coord)
                                                   nwk_BeaconFromNative (nwk)
                                                   nwk_BeaconToNative (nwk)
                                                   nwk_data_ind_processing (nwk)
                                                   osalAddTasks (OSAL_SampleApp)
                                                   osal_cpyExtAddr (OSAL)
                                                   sAddrExtCpy (saddr)
                                                   zdo_MTCB_UserDescRspCB (MT_ZDO)
                                                   zgInit (ZGlobals)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000C8F - 00000C92 (0x4 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I_TWO      00000C8F        AddrMgrEntryUpdate (AddrMgr)
                                                   MTProcessAppRspMsg (MTEL)
                                                   MT_BuildAndSendZToolResponse (MTEL)
                                                   MT_IndReset (MTEL)
                                                   MT_ProcessDebugMsg (MTEL)
                                                   MT_ProcessGetDeviceInfo (MTEL)
                                                   MT_ProcessGetNV (MTEL)
                                                   MT_ProcessGetNvInfo (MTEL)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   MT_ProcessSetNV (MTEL)
                                                   MT_SendErrorNotification (MTEL)
                                                   MT_SendSPIRespMsg (MTEL)
                                                   MT_ZdoCommandProcessing (MT_ZDO)
                                                   NLDE_DataReqSend (nwk_util)
                                                   NLME_RouteDiscoveryRequest (rtg)
                                                   NwkCommandPktProcessing (nwk)
                                                   RTG_GetRoutingAddress (rtg)
                                                   RTG_ProcessRreq (rtg)
                                                   SampleApp_SendFlashMessage (SampleApp)
                                                   SampleApp_SendPeriodicMessage (SampleApp)
                                                   Segment part 19 (AssocList)
                                                   SendData (SampleApp)
                                                   ZDApp_ActiveEPRspCB (ZDApp)
                                                   ZDApp_IEEEAddrRspCB (ZDApp)
                                                   ZDApp_InMsgCB (ZDApp)
                                                   ZDApp_InitUserDesc (ZDApp)
                                                   ZDApp_LeaveCtrlInit (ZDApp)
                                                   ZDApp_LeaveCtrlSet (ZDApp)
                                                   ZDApp_LeaveCtrlStartup (ZDApp)
                                                   ZDApp_MatchDescRspCB (ZDApp)
                                                   ZDApp_NodeDescRspCB (ZDApp)
                                                   ZDApp_NwkAddrRspCB (ZDApp)
                                                   ZDApp_PowerDescRspCB (ZDApp)
                                                   ZDApp_SimpleDescRspCB (ZDApp)
                                                   ZDApp_UserDescRspCB (ZDApp)
                                                   ZDMatchSendState (ZDObject)
                                                   ZDO_MatchEndDeviceBind (ZDObject)
                                                   ZDO_ProcessActiveEPReq (ZDObject)
                                                   ZDO_ProcessAddrRsp (ZDObject)
                                                   ZDO_ProcessEPListRsp (ZDObject)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_ProcessNodeDescReq (ZDObject)
                                                   ZDO_ProcessNodeDescRsp (ZDObject)
                                                   ZDO_ProcessPowerDescReq (ZDObject)
                                                   ZDO_ProcessPowerDescRsp (ZDObject)
                                                   ZDO_ProcessServerDiscReq (ZDObject)
                                                   ZDO_ProcessSimpleDescReq (ZDObject)
                                                   ZDO_ProcessSimpleDescRsp (ZDObject)
                                                   ZDO_ProcessUserDescReq (ZDObject)
                                                   ZDO_ProcessUserDescRsp (ZDObject)
                                                   ZDO_ProcessUserDescSet (ZDObject)
                                                   ZDP_BindUnbindReq (ZDProfile)
                                                   ZDP_EPRsp (ZDProfile)
                                                   ZDP_EndDeviceBindReq (ZDProfile)
                                                   ZDP_GenericRsp (ZDProfile)
                                                   ZDP_IEEEAddrReq (ZDProfile)
                                                   ZDP_IncomingData (ZDProfile)
                                                   ZDP_MatchDescReq (ZDProfile)
                                                   ZDP_NWKAddrOfInterestReq (ZDProfile)
                                                   ZDP_NodeDescMsg (ZDProfile)
                                                   ZDP_NwkAddrReq (ZDProfile)
                                                   ZDP_PowerDescMsg (ZDProfile)
                                                   ZDP_SendData (ZDProfile)
                                                   ZDP_ServerDiscReq (ZDProfile)
                                                   ZDP_ServerDiscRsp (ZDProfile)
                                                   ZDP_SimpleDescMsg (ZDProfile)
                                                   ZDP_SimpleDescReq (ZDProfile)
                                                   ZDP_UserDescRsp (ZDProfile)
                                                   ZDP_UserDescSet (ZDProfile)
                                                   aps_GroupsWriteNV (aps_groups)
                                                   compactPage (OSAL_Nv)
                                                   fillAndSend (ZDProfile)
                                                   initItem (OSAL_Nv)
                                                   initItem2 (OSAL_Nv)
                                                   macApiPurgeReq (mac_coord)
                                                   macApiStartReq (mac_coord)
                                                   macBuildBeacon (mac_coord)
                                                   macBuildCommonReq (mac_mgmt)
                                                   macBuildRealign (mac_coord)
                                                   macDataTxSend (mac_data)
                                                   macIndirectExpire (mac_coord)
                                                   macScanNextChan (mac_scan)
                                                   nwk_data_ind_processing (nwk)
                                                   osal_memset (OSAL)
                                                   osal_msg_receive (OSAL)
                                                   osal_nv_item_init (OSAL_Nv)
                                                   osal_nv_write (OSAL_Nv)
                                                   writeItem (OSAL_Nv)
                                                   zdpProcessAddrReq (ZDProfile)
                                                   zgInit (ZGlobals)
                                                   zgReadStartupOptions (ZGlobals)
                                                   zgWriteStartupOptions (ZGlobals)
                                                   zmain_ext_addr (ZMain)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000C93 - 00000C94 (0x2 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I_ONE      00000C93        APS_event_loop (APS)
                                                   MT_ZdoCommandProcessing (MT_ZDO)
                                                   NLDE_DataIndication (NLMEDE_CB)
                                                   NLDE_DataReqSend (nwk_util)
                                                   NLME_RouteDiscoveryRequest (rtg)
                                                   RTG_ProcessRrep (rtg)
                                                   RTG_ProcessRreq (rtg)
                                                   SampleApp_SendFlashMessage (SampleApp)
                                                   SampleApp_SendPeriodicMessage (SampleApp)
                                                   SendData (SampleApp)
                                                   ZDApp_ActiveEPRspCB (ZDApp)
                                                   ZDApp_AutoFindDestinationEx (ZDApp)
                                                   ZDApp_IEEEAddrRspCB (ZDApp)
                                                   ZDApp_MatchDescRspCB (ZDApp)
                                                   ZDApp_NwkAddrRspCB (ZDApp)
                                                   ZDApp_SendEndDeviceBindReq (ZDApp)
                                                   ZDApp_ServerDiscRspCB (ZDApp)
                                                   ZDApp_SimpleDescRspCB (ZDApp)
                                                   ZDApp_UserDescRspCB (ZDApp)
                                                   ZDMatchSendState (ZDObject)
                                                   ZDO_MatchEndDeviceBind (ZDObject)
                                                   ZDO_ProcessActiveEPReq (ZDObject)
                                                   ZDO_ProcessAddrRsp (ZDObject)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_ProcessNodeDescReq (ZDObject)
                                                   ZDO_ProcessPowerDescReq (ZDObject)
                                                   ZDO_ProcessServerDiscRsp (ZDObject)
                                                   ZDO_ProcessSimpleDescRsp (ZDObject)
                                                   ZDO_ProcessUserDescReq (ZDObject)
                                                   ZDO_ProcessUserDescRsp (ZDObject)
                                                   ZDO_ProcessUserDescSet (ZDObject)
                                                   ZDO_StartDevice (ZDObject)
                                                   ZDP_IncomingData (ZDProfile)
                                                   afIncomingData (AF)
                                                   fillAndSend (ZDProfile)
                                                   nwk_beacon_notify_ind_processing (nwk)
                                                   nwk_data_cnf_processing (nwk)
                                                   nwk_data_ind_processing (nwk)
                                                   nwk_event_loop (nwk)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000C95 - 00000CA1 (0xd bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   ?PUSH_XSTACK_I_FOUR
                                                   ?PUSH_XSTACK_I_ONE
                                                   ?PUSH_XSTACK_I_THREE
                                                   ?PUSH_XSTACK_I_TWO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I          00000C95 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?PUSH_XSTACK8_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000CA2 - 00000CA5 (0x4 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_X_FOUR    00000CA2        APS_event_loop (APS)
                                                   NLDE_DataIndSend (nwk_util)
                                                   ZDO_StartDevice (ZDObject)
                                                   macIndirectExpire (mac_coord)
                                                   macIndirectTxFrame (mac_coord)
                                                   nwk_data_ind_processing (nwk)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000CA6 - 00000CA9 (0x4 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_X_THREE   00000CA6 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000CAA - 00000CAD (0x4 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_X_TWO     00000CAA        MT_ProcessDebugStr (MTEL)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   NLDE_DataReqSend (nwk_util)
                                                   SampleApp_MessageMSGCB (SampleApp)
                                                   ZDApp_AutoFindDestinationEx (ZDApp)
                                                   ZDApp_IEEEAddrRspCB (ZDApp)
                                                   ZDApp_MatchDescRspCB (ZDApp)
                                                   ZDApp_NwkAddrRspCB (ZDApp)
                                                   ZDApp_SendEndDeviceBindReq (ZDApp)
                                                   ZDO_MatchEndDeviceBind (ZDObject)
                                                   ZDO_ProcessAddrRsp (ZDObject)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_ProcessServerDiscReq (ZDObject)
                                                   ZDO_ProcessSimpleDescReq (ZDObject)
                                                   afIncomingData (AF)
                                                   macApiAssociateReq (mac_device)
                                                   macApiOrphanRsp (mac_coord)
                                                   macApiPollReq (mac_device)
                                                   macApiStartReq (mac_coord)
                                                   macAssocDataReq (mac_device)
                                                   macBackoffTimerRolloverCallback (mac_timer)
                                                   macBuildAssociateRsp (mac_coord)
                                                   macBuildDataFrame (mac_data)
                                                   macBuildDisassociateReq (mac_mgmt)
                                                   macIndirectSend (mac_coord)
                                                   macRxBeacon (mac_mgmt)
                                                   macRxDataReq (mac_coord)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
                                                   nwk_data_ind_processing (nwk)
                                                   nwk_globals_init (nwk_globals)
                                                   osal_nv_write (OSAL_Nv)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000CAE - 00000CAF (0x2 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_X_ONE     00000CAE 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000CB0 - 00000CD3 (0x24 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   ?PUSH_XSTACK8_X_FOUR
                                                   ?PUSH_XSTACK8_X_ONE
                                                   ?PUSH_XSTACK8_X_THREE
                                                   ?PUSH_XSTACK8_X_TWO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_X         00000CB0 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?PUSH_XSTACK8_C

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000CD4 - 00000CD7 (0x4 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_C_FOUR    00000CD4 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000CD8 - 00000CDB (0x4 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_C_THREE   00000CD8 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000CDC - 00000CDF (0x4 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_C_TWO     00000CDC 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000CE0 - 00000CE1 (0x2 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_C_ONE     00000CE0 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000CE2 - 00000D05 (0x24 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   ?PUSH_XSTACK8_C_FOUR
                                                   ?PUSH_XSTACK8_C_ONE
                                                   ?PUSH_XSTACK8_C_THREE
                                                   ?PUSH_XSTACK8_C_TWO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_C         00000CE2 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UC_SWITCH_DENSE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000D06 - 00000D3B (0x36 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UC_SWITCH_DENSE        00000D06        APS_event_loop (APS)
                                                   HalAdcRead (hal_adc)
                                                   HalTimerStop (hal_timer)
                                                   NwkCommandPktProcessing (nwk)
                                                   SPIMgr_ProcessZToolData (SPIMgr)
                                                   ZDApp_ProcessOSALMsg (ZDApp)
                                                   getZMacDynamicSize (zmac_cb)
                                                   halTimerRemap (hal_timer)
                                                   halTimerSetChannelMode (hal_timer)
                                                   halTimerSetOpMode (hal_timer)
                                                   halTimerSetPrescale (hal_timer)
                                                   macBuildCommonReq (mac_mgmt)
                                                   macRxCompleteCallback (mac_data)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_SWITCH_DENSE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000D3C - 00000D81 (0x46 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SWITCH_DENSE        00000D3C        MT_ZdoCommandProcessing (MT_ZDO)
                                                   NLME_IsAddressBroadcast (nwk_util)
                                                   SampleApp_MessageMSGCB (SampleApp)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UC_SWITCH_SPARSE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000D82 - 00000DAB (0x2a bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UC_SWITCH_SPARSE       00000D82        HalLedSet (hal_led)
                                                   HalTimerInterruptEnable (hal_timer)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MAC_MlmeSetReq (mac_pib)
                                                   MT_ProcessCommand (MTEL)
                                                   NLME_GetRequest (NLMEDE)
                                                   SampleApp_ProcessEvent (SampleApp)
                                                   macCommStatusInd (mac_mgmt)
                                                   nwk_event_loop (nwk)
                                                   nwk_scan_cnf_processing (nwk)
           ?UC_SWITCH_SPARSE_LEAVE
                                   00000D9F        ?UC_JMP_IF_IN_RANGE (?UC_JMP_IF_IN_RANGE)
                                                   ?UC_JMP_IF_VALUE (?UC_JMP_IF_VALUE)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UC_JMP_IF_IN_RANGE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000DAC - 00000DCA (0x1f bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UC_JMP_IF_IN_RANGE     00000DAC        Segment part 0 (?UC_SWITCH_SPARSE)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UC_JMP_IF_VALUE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000DCB - 00000DE0 (0x16 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UC_JMP_IF_VALUE        00000DCB        Segment part 0 (?UC_SWITCH_SPARSE)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_SWITCH_SPARSE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000DE1 - 00000E2C (0x4c bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SWITCH_SPARSE       00000DE1        MT_ProcessSerialCommand (MTEL)
                                                   Uart_Baud_rate (wxl_uart)
                                                   ZDP_IncomingData (ZDProfile)
           ?US_SWITCH_SPARSE_LEAVE
                                   00000E1D        ?US_JMP_IF_IN_RANGE (?US_JMP_IF_IN_RANGE)
                                                   ?US_JMP_IF_VALUE (?US_JMP_IF_VALUE)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_JMP_IF_IN_RANGE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000E2D - 00000E6B (0x3f bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_JMP_IF_IN_RANGE     00000E2D        Segment part 0 (?US_SWITCH_SPARSE)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_JMP_IF_VALUE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000E6C - 00000E96 (0x2b bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_JMP_IF_VALUE        00000E6C        Segment part 0 (?US_SWITCH_SPARSE)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memcpy

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003D479 - 0003D4C0 (0x48 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memcpy                  0003D479        SampleApp_MessageMSGCB (SampleApp)
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000002 ( 0000000A )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memset

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FFCA - 0002FFF8 (0x2f bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memset                  0002FFCA        osal_memset (OSAL)
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000002 ( 00000009 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?strlen

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003D4E1 - 0003D4FE (0x1e bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strlen                  0003D4E1        osal_strlen (OSAL)
               stack 1 = 00000000 ( 00000002 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?low_level_init

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 0000013E - 00000140 (0x3 bytes), align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __low_level_init        0000013E        __low_level_init_call (?cmain)




                ****************************************
                *                                      *
                *            MODULE SUMMARY            *
                *                                      *
                ****************************************

Module                        CODE      DATA         XDATA      IDATA    BIT
------                        ----      ----         -----      -----    ---
                             (Rel)  (Rel)  (Abs)  (Rel)  (Abs)  (Rel)  (Rel)
?ADD_XSTACK_DISP8               20
?ALLOC_XSTACK8                  15
?BANKED_CODE_SUPPORT            34
?BANKED_ENTER_XDATA            101
?BANKED_LEAVE_XDATA             65
?C_GPTR_LOAD                    26
?DEALLOC_XSTACK8                19
?FLT_DIV                       489
?FLT_MUL                       387
?FLT_TEST_INF                   21
?FLT_TEST_INF_R1                21
?FLT_TEST_NAN                   18
?FLT_TEST_NAN_R1                18
?FLT_TEST_ZERO                  13
?FLT_TEST_ZERO_R1               13
?FLT_TO_L                      160
?FUNC_ENTER_XDATA               95
?FUNC_LEAVE_XDATA               59
?G_EQ                           11
?INTERRUPT_ENTER_XSP            88
?INTERRUPT_LEAVE_XSP            81
?L_ADD                          22
?L_ADD_TO_X                     22
?L_ADD_X                        22
?L_AND_TO_X                     22
?L_AND_X                        22
?L_EQ_X                         24
?L_IOR_TO_X                     22
?L_MOV_C                        19
?L_MOV_TO_X                     28
?L_MOV_X                        15
?L_MUL                         128
?L_NEG                          20
?L_NOT                          19
?L_SHL                          31
?L_SUB                          23
?L_SUB_FROM_X                   23
?L_SUB_X                        27
?L_TO_FLT                      120
?MOVE_LONG8_XDATA_CODE          34
?MOVE_LONG8_XDATA_IDATA         13
?MOVE_LONG8_XDATA_XDATA         33
?POP_BIT_ISP                    19
?PUSH_XSTACK8_C                 50
?PUSH_XSTACK8_X                 50
?PUSH_XSTACK_I                  27
?SL_GT                          24
?SL_GT_X                        24
?SS_SHR                         20
?S_DIV_MOD                     154
?S_SHL                          19
?UC_JMP_IF_IN_RANGE             31
?UC_JMP_IF_VALUE                22
?UC_SWITCH_DENSE                54
?UC_SWITCH_SPARSE               42
?UL_DIV_MOD                    112
?UL_GT                          19
?UL_GT_X                        19
?UL_SHR                         31
?US_JMP_IF_IN_RANGE             63
?US_JMP_IF_VALUE                43
?US_SHR                         19
?US_SWITCH_DENSE                70
?US_SWITCH_SPARSE               76
?XSTACK_DISP8                   10
?cexit                           5
?cmain                         129
?low_level_init                  3
?memcpy                         72
?memset                         47
?strlen                         30
AF                           2 706                    2
APS                            734                   22
APSMEDE                      3 303                   15
APSMEDE_CB                     572
AddrMgr                      1 926                    4
AssocList                    1 504
CC2430_READ_ANY_CODE_BYTE       40
CSTARTUP                        16
  + common                       3
MTEL                         4 526                   45      8
  + shared                                     2     12
MT_ZDO                       3 582                    4
NLMEDE                       1 424                   22
NLMEDE_CB                      957
OSAL                         1 661                    2
OSAL_Memory                    509                4 103
OSAL_Nv                      6 004             4     15
  + shared                                     2      4
OSAL_PwrMgr                     32                    7
OSAL_SampleApp                 255
OSAL_Tasks                     487                    5
OSAL_Timers                  1 091                   13
OnBoard                        461                   11
  + shared                                     3
SPIMgr                       1 006                   63
SampleApp                    1 432                  608
SampleAppHw
  + shared                                     3
VIRTUAL_REGISTERS                       2                                  8
ZDApp                        4 712                   33
ZDConfig                        12                   12
ZDObject                     7 662                   54
ZDProfile                    4 743                   84
ZDSecMgr                        21
ZGlobals                       563                   47
ZMain                          549             1
  + shared                                     1
aps_groups                     778                    2
aps_util                     1 383
flashDmaTrigger                  4
hal_adc                        337             1
  + shared                                     6
hal_aes                         90
  + shared                                     1
hal_assert                     375                    5
  + shared                                     1
hal_dma                         17             4     40
hal_drivers                    233                    1
hal_key                        500             2      6
  + shared                     126             3
  + common
hal_lcd                        584             1      1
  + shared                                     1
hal_led                      1 227                   39
  + shared                                            4
hal_sleep                       23             3
  + shared                      46             3
  + common
hal_timer                    1 728            11     63
  + common                     102
hal_uart                     2 136             2      3
  + shared                                     5
mac_backoff_timer              629                   13
  + shared                                     3
mac_cfg                          5                    5
mac_coord                    3 812                   13
  + shared                                            4
mac_csp_tx                     696             1
  + shared                                     2
mac_data                     2 205                   35
mac_device                   1 963                   22
mac_low_level                  112
mac_main                     1 749                   55
mac_mcu                      1 031            12      2
  + shared                     134             1
  + common
mac_mem                        124             1
mac_mgmt                     3 343                    2
mac_pib                        900                   59
mac_pwr                         19                    1
mac_radio                      643                    4
mac_radio_defs                  26
mac_rx                       2 123                   19
mac_rx_onoff                   334                    2
mac_scan                     1 577                   29
mac_sleep                       79                    1
mac_timer                    1 043                   14
mac_tx                       1 027                    8
nwk                          7 145                  111
nwk_bufs                     1 984                    3
nwk_globals                    304                  714
nwk_util                     6 008                   13
rtg                          7 526                    3
saddr                          298
ssp                            108                    6
wxl_uart                       226
zmac                           975                    6
zmac_cb                      1 003
N/A (command line)                     16           768           192
N/A (alignment)
----------                 -------     --     --  -----      -    ---      -
Total:                     114 649     18     80  7 263      8    192      8
  + common                     134


                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
INTVEC               CODE          00000000 - 00000085          86   com    0
CSTART               CODE          00000086 - 00000140          BB   rel    0
RCODE                CODE          00000144 - 00000E96         D53   rel    2
NEAR_CODE            CODE          00000E97 - 0000162E         798   rel    0
IDATA_ID             CODE               0000162F                     dse    0
BDATA_ID             CODE               0000162F                     dse    0
BIT_ID               CODE               0000162F                     dse    0
IXDATA_ID            CODE               0000162F                     dse    0
PDATA_ID             CODE               0000162F                     dse    0
DATA_ID              CODE               0000162F                     dse    0
XDATA_ID             CODE          0000162F - 00001734         106   rel    0
CODE_C               CODE          00001735 - 00001B34         400   rel    0
<BANKED_CODE> 1      CODE          00013000 - 0001FFFB        CFFC   rel    0
<BANKED_CODE> 2      CODE          00028000 - 0002FFF8        7FF9   rel    0
<BANKED_CODE> 3      CODE          00038000 - 0003D537        5538   rel    0
REGISTERS            DATA          00000000 - 00000007           8   rel    0
VREG                 DATA          00000008 - 0000000F           8   rel    0
PSP                  DATA               00000010                     dse    0
XSP                  DATA          00000010 - 00000011           2   rel    0
BREG                 BIT        00000020.0  -  00000020.7        8   rel    0
SFR_AN               DATA          00000080 - 00000081           2   rel    0
                     DATA          00000086 - 00000089           4 
                     DATA          0000008C - 0000008C           1 
                     DATA          0000008F - 00000091           3 
                     DATA          00000094 - 00000097           4 
                     DATA          0000009A - 0000009E           5 
                     DATA          000000A0 - 000000A9           A 
                     DATA          000000AB - 000000AE           4 
                     DATA          000000B3 - 000000B6           4 
                     DATA          000000B8 - 000000BE           7 
                     DATA          000000C0 - 000000C6           7 
                     DATA          000000C9 - 000000C9           1 
                     DATA          000000CB - 000000CC           2 
                     DATA          000000CE - 000000CE           1 
                     DATA          000000D1 - 000000D9           9 
                     DATA          000000E1 - 000000E1           1 
                     DATA          000000E4 - 000000E9           6 
                     DATA          000000EB - 000000EC           2 
                     DATA          000000EE - 000000EE           1 
                     DATA          000000F1 - 000000F3           3 
                     DATA          000000FD - 000000FF           3 
XDATA_AN             XDATA         0000E000 - 0000E007           8   rel    0
XSTACK               XDATA         0000E008 - 0000E307         300   rel    0
IXDATA_I             XDATA              0000E308                     dse    0
XDATA_N              XDATA              0000E308                     dse    0
XDATA_Z              XDATA         0000E308 - 0000FB60        1859   rel    0
XDATA_I              XDATA         0000FB61 - 0000FC66         106   rel    0
ISTACK               IDATA         00000040 - 000000FF          C0   rel    0

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 114 783 bytes of CODE  memory
      18 bytes of DATA  memory (+ 80 absolute )
   7 263 bytes of XDATA memory (+  8 absolute )
     192 bytes of IDATA memory
       8 bits  of BIT   memory

Errors: none
Warnings: 3

