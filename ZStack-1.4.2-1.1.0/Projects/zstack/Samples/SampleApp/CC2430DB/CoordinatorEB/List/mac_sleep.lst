##############################################################################
#                                                                            #
# IAR 8051 C/C++ Compiler V7.20H/W32                   17/Oct/2013  21:26:07 #
# Copyright 2004-2006 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Core               =  plain                                             #
#    Code model         =  banked                                            #
#    Data model         =  large                                             #
#    Calling convention =  xdata reentrant                                   #
#    Constant location  =  data                                              #
#    Dptr setup         =  1,16                                              #
#    Source file        =  D:\Texas Instruments\ZStack-1.4.2-1.1.0\Component #
#                          s\mac\low_level\srf03\mac_sleep.c                 #
#    Command line       =  -f E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿Ú #
#                          ÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\S #
#                          ampleApp\CC2430DB\..\..\..\Tools\CC2430DB\f8wCoor #
#                          d.cfg (-DCPU32MHZ -DFORCE_MAC_NEAR                #
#                          -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TR #
#                          UE -DZDO_COORDINATOR -DRTR_NWK -DBLINK_LEDS       #
#                          "-DCONST=const __code" -DGENERIC=__generic) -f    #
#                          E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                          ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                          leApp\CC2430DB\..\..\..\Tools\CC2430DB\f8wConfig. #
#                          cfg (-DSECURE=0 -DDEFAULT_CHANLIST=0x00000800     #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                      #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M #
#                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                    #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P #
#                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           #
#                          -DMAX_RREQ_ENTRIES=10 -DAPSC_MAX_FRAME_RETRIES=3  #
#                          -DNWK_MAX_DATA_RETRIES=2                          #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=20          #
#                          -DNWK_MAX_BINDING_ENTRIES=10                      #
#                          -DMAX_BINDING_CLUSTER_IDS=5                       #
#                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     #
#                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   #
#                          0x0A, 0x0C, 0x0D}" -DRFD_RCVC_ALWAYS_ON=FALSE     #
#                          -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100           #
#                          -DRESPONSE_POLL_RATE=100 -DREJOIN_POLL_RATE=440   #
#                          -DTOP_BOOT_PAGES=0) -I "D:\Program Files\IAR      #
#                          Systems\Embedded Workbench 4.05 Evaluation        #
#                          version\8051\inc\" -I "D:\Program Files\IAR       #
#                          Systems\Embedded Workbench 4.05 Evaluation        #
#                          version\8051\inc\clib\" -I                        #
#                          E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                          ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                          leApp\CC2430DB\ -I E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ #
#                          ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\ #
#                          zstack\Samples\SampleApp\CC2430DB\..\Source\ -I   #
#                          E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                          ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                          leApp\CC2430DB\..\..\..\ZMain\TI2430DB\ -I        #
#                          E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                          ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                          leApp\CC2430DB\..\..\..\..\..\Components\mt\ -I   #
#                          E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                          ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                          leApp\CC2430DB\..\..\..\..\..\Components\hal\incl #
#                          ude\ -I E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC243 #
#                          0´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samp #
#                          les\SampleApp\CC2430DB\..\..\..\..\..\Components\ #
#                          hal\target\CC2430EB\ -I                           #
#                          E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                          ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                          leApp\CC2430DB\..\..\..\..\..\Components\osal\mcu #
#                          \ccsoc\ -I E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC #
#                          2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\S #
#                          amples\SampleApp\CC2430DB\..\..\..\..\..\Componen #
#                          ts\osal\include\ -I E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨ #
#                          Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects #
#                          \zstack\Samples\SampleApp\CC2430DB\..\..\..\..\.. #
#                          \Components\stack\af\ -I                          #
#                          E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                          ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                          leApp\CC2430DB\..\..\..\..\..\Components\stack\nw #
#                          k\ -I E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´ #
#                          ®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Sample #
#                          s\SampleApp\CC2430DB\..\..\..\..\..\Components\st #
#                          ack\sec\ -I E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\C #
#                          C2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\ #
#                          Samples\SampleApp\CC2430DB\..\..\..\..\..\Compone #
#                          nts\stack\sys\ -I E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶ #
#                          Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\z #
#                          stack\Samples\SampleApp\CC2430DB\..\..\..\..\..\C #
#                          omponents\stack\zdo\ -I                           #
#                          E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                          ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                          leApp\CC2430DB\..\..\..\..\..\Components\zmac\f8w #
#                          \ -I E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´® #
#                          ¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                          \SampleApp\CC2430DB\..\..\..\..\..\Components\zma #
#                          c\ -I E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´ #
#                          ®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Sample #
#                          s\SampleApp\CC2430DB\..\..\..\..\..\Components\se #
#                          rvices\saddr\ -I E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ #
#                          ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zs #
#                          tack\Samples\SampleApp\CC2430DB\..\..\..\..\..\Co #
#                          mponents\services\sdata\ -I                       #
#                          E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                          ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                          leApp\CC2430DB\..\..\..\..\..\Components\mac\incl #
#                          ude\ -I E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC243 #
#                          0´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samp #
#                          les\SampleApp\CC2430DB\..\..\..\..\..\Components\ #
#                          mac\high_level\ -I E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ #
#                          ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\ #
#                          zstack\Samples\SampleApp\CC2430DB\..\..\..\..\..\ #
#                          Components\mac\low_level\srf03\ -I                #
#                          E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                          ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                          leApp\CC2430DB\..\..\..\..\..\Components\mac\low_ #
#                          level\srf03\single_chip\ -D CC2430EB -D ZTOOL_P1  #
#                          -D MT_TASK -D MT_ZDO_FUNC -lC                     #
#                          E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                          ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                          leApp\CC2430DB\CoordinatorEB\List\ -lA            #
#                          E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                          ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                          leApp\CC2430DB\CoordinatorEB\List\                #
#                          --diag_suppress Pe001,Pa010 --diag_remark pe550   #
#                          -o E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿Ú #
#                          ÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\S #
#                          ampleApp\CC2430DB\CoordinatorEB\Obj\ -e           #
#                          --require_prototypes -z9 --no_code_motion         #
#                          --debug --core=plain --dptr=16,1                  #
#                          --data_model=large --code_model=banked            #
#                          --calling_convention=xdata_reentrant              #
#                          --place_constants=data --nr_virtual_regs 8        #
#                          "D:\Texas Instruments\ZStack-1.4.2-1.1.0\Componen #
#                          ts\mac\low_level\srf03\mac_sleep.c"               #
#    List file          =  E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                          ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                          leApp\CC2430DB\CoordinatorEB\List\mac_sleep.lst   #
#    Object file        =  E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                          ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                          leApp\CC2430DB\CoordinatorEB\Obj\mac_sleep.r51    #
#                                                                            #
#                                                                            #
##############################################################################

D:\Texas Instruments\ZStack-1.4.2-1.1.0\Components\mac\low_level\srf03\mac_sleep.c
      1          /**************************************************************************************************
      2              Filename:
      3              Revised:        $Date: 2007-02-01 11:24:21 -0800 (Thu, 01 Feb 2007) $
      4              Revision:       $Revision: 13416 $
      5          
      6              Description:
      7          
      8              Describe the purpose and contents of the file.
      9          
     10              Copyright (c) 2006 by Texas Instruments, Inc.
     11              All Rights Reserved.  Permission to use, reproduce, copy, prepare
     12              derivative works, modify, distribute, perform, display or sell this
     13              software and/or its documentation for any purpose is prohibited
     14              without the express written consent of Texas Instruments, Inc.
     15          **************************************************************************************************/
     16          
     17          
     18          
     19          /* ------------------------------------------------------------------------------------------------
     20           *                                          Includes
     21           * ------------------------------------------------------------------------------------------------
     22           */
     23          
     24          /* hal */
     25          #include "hal_types.h"
     26          
     27          /* exported low-level */
     28          #include "mac_low_level.h"
     29          
     30          /* low-level specific */
     31          #include "mac_sleep.h"
     32          #include "mac_radio.h"
     33          #include "mac_tx.h"
     34          #include "mac_rx.h"
     35          #include "mac_rx_onoff.h"
     36          
     37          /* target specific */
     38          #include "mac_radio_defs.h"

   \                                 In segment SFR_AN, at 0xbe
   \   unsigned char volatile __sfr SLEEP
   \                     SLEEP:
   \   000000                DS 1

   \                                 In segment SFR_AN, at 0xc3
   \   unsigned char volatile __sfr T2CNF
   \                     T2CNF:
   \   000000                DS 1
     39          
     40          /* debug */
     41          #include "mac_assert.h"
     42          
     43          
     44          /* ------------------------------------------------------------------------------------------------
     45           *                                         Global Variables
     46           * ------------------------------------------------------------------------------------------------
     47           */

   \                                 In segment XDATA_I, align 1, keep-with-next
     48          uint8 macSleepState = MAC_SLEEP_STATE_RADIO_OFF;
   \                     macSleepState:
   \   000000                DS 1
   \   000001                REQUIRE `?<Initializer for macSleepState>`
   \   000001                REQUIRE __INIT_XDATA_I
     49          
     50          
     51          /**************************************************************************************************
     52           * @fn          macSleepWakeUp
     53           *
     54           * @brief       Wake up the radio from sleep mode.
     55           *
     56           * @param       none
     57           *
     58           * @return      none
     59           **************************************************************************************************
     60           */

   \                                 In segment BANKED_CODE, align 1, keep-with-next
     61          void macSleepWakeUp(void)
   \                     macSleepWakeUp:
     62          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     63            /* don't wake up radio if it's already awake */
     64            if (macSleepState == MAC_SLEEP_STATE_AWAKE)
   \   000004   90....       MOV     DPTR,#macSleepState
   \   000007   E0           MOVX    A,@DPTR
   \   000008   603D         JZ      ??macSleepWakeUp_0
     65            {
     66              return;
     67            }
     68          
     69            /* wake up MAC timer */
     70            MAC_RADIO_TIMER_WAKE_UP();
   \   00000A   43C301       ORL     0xc3,#0x1
   \                     ??macSleepWakeUp_1:
   \   00000D   E5C3         MOV     A,0xc3
   \   00000F   A2E0         MOV     C,0xE0 /* A   */.0
   \   000011   50FA         JNC     ??macSleepWakeUp_1
     71          
     72            /* if radio was completely off, restore from that state first */
     73            if (macSleepState == MAC_SLEEP_STATE_RADIO_OFF)
   \   000013   E0           MOVX    A,@DPTR
   \   000014   6402         XRL     A,#0x2
   \   000016   7014         JNZ     ??macSleepWakeUp_2
     74            {
     75              /* turn on radio power */
     76              MAC_RADIO_TURN_ON_POWER();
   \   000018   90DF17       MOV     DPTR,#-0x20e9
   \   00001B   E0           MOVX    A,@DPTR
   \   00001C   C2E3         CLR     0xE0 /* A   */.3
   \   00001E   F0           MOVX    @DPTR,A
   \                     ??macSleepWakeUp_3:
   \   00001F   E0           MOVX    A,@DPTR
   \   000020   A2E4         MOV     C,0xE0 /* A   */.4
   \   000022   40FB         JC      ??macSleepWakeUp_3
     77              
     78              /* power-up initialization of receive logic */
     79              macRxRadioPowerUpInit();
   \   000024                ; Setup parameters for call to function macRxRadioPowerUpInit
   \   000024   90....       MOV     DPTR,#(macRxRadioPowerUpInit & 0xffff)
   \   000027   74..         MOV     A,#((macRxRadioPowerUpInit >> 16) & 0xff)
   \   000029   12....       LCALL   ?BCALL               ; Banked call to: DPTR()
     80            }
     81          
     82            /* turn on the oscillator */
     83            MAC_RADIO_TURN_ON_OSC();
   \                     ??macSleepWakeUp_2:
   \   00002C   E5BE         MOV     A,0xbe
   \   00002E   A2E6         MOV     C,0xE0 /* A   */.6
   \   000030   4008         JC      ??macSleepWakeUp_4
   \   000032                ; Setup parameters for call to function halAssertHandler
   \   000032   90....       MOV     DPTR,#(halAssertHandler & 0xffff)
   \   000035   74..         MOV     A,#((halAssertHandler >> 16) & 0xff)
   \   000037   12....       LCALL   ?BCALL               ; Banked call to: DPTR()
     84            
     85            /* update sleep state here before requesting to turn on receiver */
     86            macSleepState = MAC_SLEEP_STATE_AWAKE;
   \                     ??macSleepWakeUp_4:
   \   00003A   E4           CLR     A
   \   00003B   90....       MOV     DPTR,#macSleepState
   \   00003E   F0           MOVX    @DPTR,A
     87          
     88            /* turn on the receiver if enabled */
     89            macRxOnRequest();
   \   00003F                ; Setup parameters for call to function macRxOnRequest
   \   00003F   90....       MOV     DPTR,#(macRxOnRequest & 0xffff)
   \   000042   74..         MOV     A,#((macRxOnRequest >> 16) & 0xff)
   \   000044   12....       LCALL   ?BCALL               ; Banked call to: DPTR()
     90          }
   \                     ??macSleepWakeUp_0:
   \   000047   D083         POP     DPH
   \   000049   D082         POP     DPL
   \   00004B   02....       LJMP    ?BRET
     91          
     92          
     93          /**************************************************************************************************
     94           * @fn          macSleep
     95           *
     96           * @brief       Puts radio into the selected sleep mode.
     97           *
     98           * @param       sleepState - selected sleep level, see #defines in .h file
     99           *
    100           * @return      TRUE if radio was successfully put into selected sleep mode.
    101           *              FALSE if it was not safe for radio to go to sleep.
    102           **************************************************************************************************
    103           */

   \                                 In segment BANKED_CODE, align 1, keep-with-next
    104          uint8 macSleep(uint8 sleepState)
   \                     macSleep:
    105          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
    106            halIntState_t  s;
    107           
    108            /* disable interrupts until macSleepState can be set */
    109            HAL_ENTER_CRITICAL_SECTION(s);
   \   000007   A2AF         MOV     C,0xa8.7
   \   000009   E4           CLR     A
   \   00000A   92E0         MOV     0xE0 /* A   */.0,C
   \   00000C   FF           MOV     R7,A
   \   00000D   C2AF         CLR     0xa8.7
    110          
    111            /* assert checks */
    112            MAC_ASSERT(macSleepState == MAC_SLEEP_STATE_AWAKE); /* radio must be awake to put it to sleep */
   \   00000F   90....       MOV     DPTR,#macSleepState
   \   000012   E0           MOVX    A,@DPTR
   \   000013   6008         JZ      ??macSleep_0
   \   000015                ; Setup parameters for call to function halAssertHandler
   \   000015   90....       MOV     DPTR,#(halAssertHandler & 0xffff)
   \   000018   74..         MOV     A,#((halAssertHandler >> 16) & 0xff)
   \   00001A   12....       LCALL   ?BCALL               ; Banked call to: DPTR()
    113            MAC_ASSERT(macRxFilter == RX_FILTER_OFF); /* do not sleep when scanning or in promiscuous mode */
   \                     ??macSleep_0:
   \   00001D   90....       MOV     DPTR,#macRxFilter
   \   000020   E0           MOVX    A,@DPTR
   \   000021   6008         JZ      ??macSleep_1
   \   000023                ; Setup parameters for call to function halAssertHandler
   \   000023   90....       MOV     DPTR,#(halAssertHandler & 0xffff)
   \   000026   74..         MOV     A,#((halAssertHandler >> 16) & 0xff)
   \   000028   12....       LCALL   ?BCALL               ; Banked call to: DPTR()
    114          
    115            /* if either RX or TX is active or any RX enable flags are set, it's not OK to sleep */
    116            if (macRxActive || macRxOutgoingAckFlag || macTxActive || macRxEnableFlags)
   \                     ??macSleep_1:
   \   00002B   90....       MOV     DPTR,#macRxActive
   \   00002E   E0           MOVX    A,@DPTR
   \   00002F   7012         JNZ     ??macSleep_2
   \   000031   90....       MOV     DPTR,#macRxOutgoingAckFlag
   \   000034   E0           MOVX    A,@DPTR
   \   000035   700C         JNZ     ??macSleep_2
   \   000037   90....       MOV     DPTR,#macTxActive
   \   00003A   E0           MOVX    A,@DPTR
   \   00003B   7006         JNZ     ??macSleep_2
   \   00003D   90....       MOV     DPTR,#macRxEnableFlags
   \   000040   E0           MOVX    A,@DPTR
   \   000041   6009         JZ      ??macSleep_3
    117            {
    118              HAL_EXIT_CRITICAL_SECTION(s);
   \                     ??macSleep_2:
   \   000043   EF           MOV     A,R7
   \   000044   A2E0         MOV     C,0xE0 /* A   */.0
   \   000046   92AF         MOV     0xa8.7,C
    119              return(FALSE);
   \   000048   7900         MOV     R1,#0x0
   \   00004A   8036         SJMP    ??macSleep_4
    120            }
    121          
    122            /* turn off the receiver */
    123            macRxOff();
   \                     ??macSleep_3:
   \   00004C                ; Setup parameters for call to function macRxOff
   \   00004C   90....       MOV     DPTR,#(macRxOff & 0xffff)
   \   00004F   74..         MOV     A,#((macRxOff >> 16) & 0xff)
   \   000051   12....       LCALL   ?BCALL               ; Banked call to: DPTR()
    124          
    125            /* update sleep state variable */
    126            macSleepState = sleepState;
   \   000054   EE           MOV     A,R6
   \   000055   90....       MOV     DPTR,#macSleepState
   \   000058   F0           MOVX    @DPTR,A
    127          
    128            /* macSleepState is now set, re-enable interrupts */
    129            HAL_EXIT_CRITICAL_SECTION(s);
   \   000059   EF           MOV     A,R7
   \   00005A   A2E0         MOV     C,0xE0 /* A   */.0
   \   00005C   92AF         MOV     0xa8.7,C
    130            
    131            /* put MAC timer to sleep */
    132            MAC_RADIO_TIMER_SLEEP();
   \   00005E   53C3FE       ANL     0xc3,#0xfe
   \                     ??macSleep_5:
   \   000061   E5C3         MOV     A,0xc3
   \   000063   A2E0         MOV     C,0xE0 /* A   */.0
   \   000065   40FA         JC      ??macSleep_5
    133          
    134            /* put radio in selected sleep mode */
    135            if (sleepState == MAC_SLEEP_STATE_OSC_OFF)
   \   000067   7401         MOV     A,#0x1
   \   000069   6E           XRL     A,R6
   \   00006A   6014         JZ      ??macSleep_6
    136            {
    137              MAC_RADIO_TURN_OFF_OSC();
    138            }
    139            else
    140            {
    141              MAC_ASSERT(sleepState == MAC_SLEEP_STATE_RADIO_OFF); /* unknown sleep state */
   \   00006C   7402         MOV     A,#0x2
   \   00006E   6E           XRL     A,R6
   \   00006F   6008         JZ      ??macSleep_7
   \   000071                ; Setup parameters for call to function halAssertHandler
   \   000071   90....       MOV     DPTR,#(halAssertHandler & 0xffff)
   \   000074   74..         MOV     A,#((halAssertHandler >> 16) & 0xff)
   \   000076   12....       LCALL   ?BCALL               ; Banked call to: DPTR()
    142              MAC_RADIO_TURN_OFF_POWER();
   \                     ??macSleep_7:
   \   000079   90DF17       MOV     DPTR,#-0x20e9
   \   00007C   E0           MOVX    A,@DPTR
   \   00007D   D2E3         SETB    0xE0 /* A   */.3
   \   00007F   F0           MOVX    @DPTR,A
    143            }
    144          
    145            /* radio successfully entered sleep mode */
    146            return(TRUE);
   \                     ??macSleep_6:
   \   000080   7901         MOV     R1,#0x1
   \                     ??macSleep_4:
   \   000082   7F01         MOV     R7,#0x1
   \   000084   02....       LJMP    ?BANKED_LEAVE_XDATA
    147          }

   \                                 In segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for macSleepState>`:
   \   000000   02           DB 2

   \                                 In segment SFR_AN, at 0xa8
   \   union <unnamed> volatile __sfr _A_IEN0
   \                     _A_IEN0:
   \   000000                DS 1
    148          
    149          
    150          
    151          /**************************************************************************************************
    152           *                                  Compile Time Integrity Checks
    153           **************************************************************************************************
    154           */
    155          #if ((MAC_SLEEP_STATE_AWAKE == MAC_SLEEP_STATE_OSC_OFF) ||  \
    156               (MAC_SLEEP_STATE_AWAKE == MAC_SLEEP_STATE_RADIO_OFF))
    157          #error "ERROR!  Non-unique state values."
    158          #endif
    159          
    160          
    161          /**************************************************************************************************
    162          */

   Maximum stack usage in bytes:

     Function                   ISTACK PSTACK XSTACK
     --------                   ------ ------ ------
     macSleep                       0      0      9
       -> halAssertHandler          0      0     18
       -> halAssertHandler          0      0     18
       -> macRxOff                  0      0     18
       -> halAssertHandler          0      0     18
     macSleepWakeUp                 2      0      0
       -> macRxRadioPowerUpInit     4      0      0
       -> halAssertHandler          4      0      0
       -> macRxOnRequest            4      0      0


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     SLEEP                             1
     T2CNF                             1
     macSleepState                     1
     macSleepWakeUp                   78
     macSleep                        135
     ?<Initializer for macSleepState>
                                       1
     _A_IEN0                           1

 
 213 bytes in segment BANKED_CODE
   3 bytes in segment SFR_AN
   1 byte  in segment XDATA_I
   1 byte  in segment XDATA_ID
 
 214 bytes of CODE  memory
   0 bytes of DATA  memory (+ 3 bytes shared)
   1 byte  of XDATA memory

Errors: none
Warnings: none
