//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR 8051 C/C++ Compiler V7.20H/W32                  17/Oct/2013  21:26:07 /
// Copyright 2004-2006 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Core               =  plain                                            /
//    Code model         =  banked                                           /
//    Data model         =  large                                            /
//    Calling convention =  xdata reentrant                                  /
//    Constant location  =  data                                             /
//    Dptr setup         =  1,16                                             /
//    Source file        =  D:\Texas Instruments\ZStack-1.4.2-1.1.0\Componen /
//                          ts\mac\low_level\srf03\mac_sleep.c               /
//    Command line       =  -f E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ /
//                          ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples /
//                          \SampleApp\CC2430DB\..\..\..\Tools\CC2430DB\f8wC /
//                          oord.cfg (-DCPU32MHZ -DFORCE_MAC_NEAR            /
//                          -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=T /
//                          RUE -DZDO_COORDINATOR -DRTR_NWK -DBLINK_LEDS     /
//                          "-DCONST=const __code" -DGENERIC=__generic) -f   /
//                          E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ /
//                          ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Sa /
//                          mpleApp\CC2430DB\..\..\..\Tools\CC2430DB\f8wConf /
//                          ig.cfg (-DSECURE=0 -DDEFAULT_CHANLIST=0x00000800 /
//                           -DZDAPP_CONFIG_PAN_ID=0xFFFF                    /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_ /
//                          MASK=0x007F -DBEACON_REQUEST_DELAY=100           /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                   /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_ /
//                          POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7         /
//                          -DMAX_RREQ_ENTRIES=10 -DAPSC_MAX_FRAME_RETRIES=3 /
//                           -DNWK_MAX_DATA_RETRIES=2                        /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9       /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=20         /
//                          -DNWK_MAX_BINDING_ENTRIES=10                     /
//                          -DMAX_BINDING_CLUSTER_IDS=5                      /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,    /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,  /
//                          0x0A, 0x0C, 0x0D}" -DRFD_RCVC_ALWAYS_ON=FALSE    /
//                          -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100          /
//                          -DRESPONSE_POLL_RATE=100 -DREJOIN_POLL_RATE=440  /
//                          -DTOP_BOOT_PAGES=0) -I "D:\Program Files\IAR     /
//                          Systems\Embedded Workbench 4.05 Evaluation       /
//                          version\8051\inc\" -I "D:\Program Files\IAR      /
//                          Systems\Embedded Workbench 4.05 Evaluation       /
//                          version\8051\inc\clib\" -I                       /
//                          E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ /
//                          ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Sa /
//                          mpleApp\CC2430DB\ -I E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430 /
//                          Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Proje /
//                          cts\zstack\Samples\SampleApp\CC2430DB\..\Source\ /
//                           -I E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´® /
//                          ¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Sample /
//                          s\SampleApp\CC2430DB\..\..\..\ZMain\TI2430DB\    /
//                          -I E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ /
//                          ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples /
//                          \SampleApp\CC2430DB\..\..\..\..\..\Components\mt /
//                          \ -I E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´ /
//                          ®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Sampl /
//                          es\SampleApp\CC2430DB\..\..\..\..\..\Components\ /
//                          hal\include\ -I E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ /
//                          ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\z /
//                          stack\Samples\SampleApp\CC2430DB\..\..\..\..\..\ /
//                          Components\hal\target\CC2430EB\ -I               /
//                          E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ /
//                          ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Sa /
//                          mpleApp\CC2430DB\..\..\..\..\..\Components\osal\ /
//                          mcu\ccsoc\ -I E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì /
//                          ¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zst /
//                          ack\Samples\SampleApp\CC2430DB\..\..\..\..\..\Co /
//                          mponents\osal\include\ -I                        /
//                          E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ /
//                          ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Sa /
//                          mpleApp\CC2430DB\..\..\..\..\..\Components\stack /
//                          \af\ -I E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC24 /
//                          30´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Sa /
//                          mples\SampleApp\CC2430DB\..\..\..\..\..\Componen /
//                          ts\stack\nwk\ -I E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶ /
//                          Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\ /
//                          zstack\Samples\SampleApp\CC2430DB\..\..\..\..\.. /
//                          \Components\stack\sec\ -I                        /
//                          E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ /
//                          ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Sa /
//                          mpleApp\CC2430DB\..\..\..\..\..\Components\stack /
//                          \sys\ -I E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2 /
//                          430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\S /
//                          amples\SampleApp\CC2430DB\..\..\..\..\..\Compone /
//                          nts\stack\zdo\ -I E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ /
//                          ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects /
//                          \zstack\Samples\SampleApp\CC2430DB\..\..\..\..\. /
//                          .\Components\zmac\f8w\ -I                        /
//                          E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ /
//                          ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Sa /
//                          mpleApp\CC2430DB\..\..\..\..\..\Components\zmac\ /
//                           -I E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´® /
//                          ¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Sample /
//                          s\SampleApp\CC2430DB\..\..\..\..\..\Components\s /
//                          ervices\saddr\ -I E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ /
//                          ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects /
//                          \zstack\Samples\SampleApp\CC2430DB\..\..\..\..\. /
//                          .\Components\services\sdata\ -I                  /
//                          E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ /
//                          ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Sa /
//                          mpleApp\CC2430DB\..\..\..\..\..\Components\mac\i /
//                          nclude\ -I E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\C /
//                          C2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack /
//                          \Samples\SampleApp\CC2430DB\..\..\..\..\..\Compo /
//                          nents\mac\high_level\ -I                         /
//                          E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ /
//                          ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Sa /
//                          mpleApp\CC2430DB\..\..\..\..\..\Components\mac\l /
//                          ow_level\srf03\ -I E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨ /
//                          Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Project /
//                          s\zstack\Samples\SampleApp\CC2430DB\..\..\..\..\ /
//                          ..\Components\mac\low_level\srf03\single_chip\   /
//                          -D CC2430EB -D ZTOOL_P1 -D MT_TASK -D            /
//                          MT_ZDO_FUNC -lC E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ /
//                          ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\z /
//                          stack\Samples\SampleApp\CC2430DB\CoordinatorEB\L /
//                          ist\ -lA E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2 /
//                          430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\S /
//                          amples\SampleApp\CC2430DB\CoordinatorEB\List\    /
//                          --diag_suppress Pe001,Pa010 --diag_remark pe550  /
//                          -o E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ /
//                          ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples /
//                          \SampleApp\CC2430DB\CoordinatorEB\Obj\ -e        /
//                          --require_prototypes -z9 --no_code_motion        /
//                          --debug --core=plain --dptr=16,1                 /
//                          --data_model=large --code_model=banked           /
//                          --calling_convention=xdata_reentrant             /
//                          --place_constants=data --nr_virtual_regs 8       /
//                          "D:\Texas Instruments\ZStack-1.4.2-1.1.0\Compone /
//                          nts\mac\low_level\srf03\mac_sleep.c"             /
//    List file          =  E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ /
//                          ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Sa /
//                          mpleApp\CC2430DB\CoordinatorEB\List\mac_sleep.s5 /
//                          1                                                /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME mac_sleep

        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BCALL
        EXTERN ?BRET
        EXTERN __INIT_XDATA_I

        PUBWEAK SLEEP
        PUBWEAK T2CNF
        PUBWEAK _A_IEN0
        PUBLIC macSleep
        FUNCTION macSleep,021203H
        LOCFRAME XSTACK, 9, STACK
        PUBLIC macSleepState
        PUBLIC macSleepWakeUp
        FUNCTION macSleepWakeUp,021203H
        LOCFRAME ISTACK, 2, STACK
        
        CFI Names cfiNames0
        CFI StackFrame CFA_SP SP DATA
        CFI StackFrame CFA_PSP16 PSP16 XDATA
        CFI StackFrame CFA_XSP16 XSP16 XDATA
        CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
        CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
        CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
        CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
        CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
        CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
        CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
        CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
        CFI Resource SP:8, PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
        CFI VirtualResource ?RET:24
        CFI Resource ?BRET_EXT:8
        CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
        CFI ResourceParts PSP16 PSPH, PSPL
        CFI ResourceParts XSP16 XSPH, XSPL
        CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-3
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B Undefined
        CFI A Undefined
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 Undefined
        CFI R5 Undefined
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT Frame(CFA_SP, 3)
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon0
        
        EXTERN macRxRadioPowerUpInit
        FUNCTION macRxRadioPowerUpInit,0202H
        ARGFRAME ISTACK, 2, STACK
        EXTERN halAssertHandler
        FUNCTION halAssertHandler,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME XSTACK, 9, STACK
        EXTERN macRxOnRequest
        FUNCTION macRxOnRequest,0202H
        ARGFRAME ISTACK, 2, STACK
        EXTERN macRxOff
        FUNCTION macRxOff,0202H
        ARGFRAME XSTACK, 9, STACK
        EXTERN macRxActive
        EXTERN macRxEnableFlags
        EXTERN macRxFilter
        EXTERN macRxOutgoingAckFlag
        EXTERN macTxActive

// D:\Texas Instruments\ZStack-1.4.2-1.1.0\Components\mac\low_level\srf03\mac_sleep.c
//    1 /**************************************************************************************************
//    2     Filename:
//    3     Revised:        $Date: 2007-02-01 11:24:21 -0800 (Thu, 01 Feb 2007) $
//    4     Revision:       $Revision: 13416 $
//    5 
//    6     Description:
//    7 
//    8     Describe the purpose and contents of the file.
//    9 
//   10     Copyright (c) 2006 by Texas Instruments, Inc.
//   11     All Rights Reserved.  Permission to use, reproduce, copy, prepare
//   12     derivative works, modify, distribute, perform, display or sell this
//   13     software and/or its documentation for any purpose is prohibited
//   14     without the express written consent of Texas Instruments, Inc.
//   15 **************************************************************************************************/
//   16 
//   17 
//   18 
//   19 /* ------------------------------------------------------------------------------------------------
//   20  *                                          Includes
//   21  * ------------------------------------------------------------------------------------------------
//   22  */
//   23 
//   24 /* hal */
//   25 #include "hal_types.h"
//   26 
//   27 /* exported low-level */
//   28 #include "mac_low_level.h"
//   29 
//   30 /* low-level specific */
//   31 #include "mac_sleep.h"
//   32 #include "mac_radio.h"
//   33 #include "mac_tx.h"
//   34 #include "mac_rx.h"
//   35 #include "mac_rx_onoff.h"
//   36 
//   37 /* target specific */
//   38 #include "mac_radio_defs.h"

        ASEGN SFR_AN:DATA:NOROOT,0beH
// unsigned char volatile __sfr SLEEP
SLEEP:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0c3H
// unsigned char volatile __sfr T2CNF
T2CNF:
        DS 1
//   39 
//   40 /* debug */
//   41 #include "mac_assert.h"
//   42 
//   43 
//   44 /* ------------------------------------------------------------------------------------------------
//   45  *                                         Global Variables
//   46  * ------------------------------------------------------------------------------------------------
//   47  */

        RSEG XDATA_I:XDATA:NOROOT(0)
//   48 uint8 macSleepState = MAC_SLEEP_STATE_RADIO_OFF;
macSleepState:
        DS 1
        REQUIRE `?<Initializer for macSleepState>`
        REQUIRE __INIT_XDATA_I
//   49 
//   50 
//   51 /**************************************************************************************************
//   52  * @fn          macSleepWakeUp
//   53  *
//   54  * @brief       Wake up the radio from sleep mode.
//   55  *
//   56  * @param       none
//   57  *
//   58  * @return      none
//   59  **************************************************************************************************
//   60  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   61 void macSleepWakeUp(void)
macSleepWakeUp:
        CFI Block cfiBlock0 Using cfiCommon0
        CFI Function macSleepWakeUp
//   62 {
        FUNCALL macSleepWakeUp, macRxRadioPowerUpInit
        LOCFRAME ISTACK, 2, STACK
        ARGFRAME ISTACK, 2, STACK
        FUNCALL macSleepWakeUp, halAssertHandler
        LOCFRAME ISTACK, 2, STACK
        ARGFRAME ISTACK, 2, STACK
        FUNCALL macSleepWakeUp, macRxOnRequest
        LOCFRAME ISTACK, 2, STACK
        ARGFRAME ISTACK, 2, STACK
        PUSH	DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH	DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//   63   /* don't wake up radio if it's already awake */
//   64   if (macSleepState == MAC_SLEEP_STATE_AWAKE)
        MOV	DPTR,#macSleepState
        MOVX	A,@DPTR
        JZ	??macSleepWakeUp_0
//   65   {
//   66     return;
//   67   }
//   68 
//   69   /* wake up MAC timer */
//   70   MAC_RADIO_TIMER_WAKE_UP();
        ORL	0xc3,#0x1
??macSleepWakeUp_1:
        MOV	A,0xc3
        MOV	C,0xE0 /* A   */.0
        JNC	??macSleepWakeUp_1
//   71 
//   72   /* if radio was completely off, restore from that state first */
//   73   if (macSleepState == MAC_SLEEP_STATE_RADIO_OFF)
        MOVX	A,@DPTR
        XRL	A,#0x2
        JNZ	??macSleepWakeUp_2
//   74   {
//   75     /* turn on radio power */
//   76     MAC_RADIO_TURN_ON_POWER();
        MOV	DPTR,#-0x20e9
        MOVX	A,@DPTR
        CLR	0xE0 /* A   */.3
        MOVX	@DPTR,A
??macSleepWakeUp_3:
        MOVX	A,@DPTR
        MOV	C,0xE0 /* A   */.4
        JC	??macSleepWakeUp_3
//   77     
//   78     /* power-up initialization of receive logic */
//   79     macRxRadioPowerUpInit();
        ; Setup parameters for call to function macRxRadioPowerUpInit
        MOV	DPTR,#(macRxRadioPowerUpInit & 0xffff)
        MOV	A,#((macRxRadioPowerUpInit >> 16) & 0xff)
        LCALL	?BCALL               ; Banked call to: DPTR()
//   80   }
//   81 
//   82   /* turn on the oscillator */
//   83   MAC_RADIO_TURN_ON_OSC();
??macSleepWakeUp_2:
        MOV	A,0xbe
        MOV	C,0xE0 /* A   */.6
        JC	??macSleepWakeUp_4
        ; Setup parameters for call to function halAssertHandler
        MOV	DPTR,#(halAssertHandler & 0xffff)
        MOV	A,#((halAssertHandler >> 16) & 0xff)
        LCALL	?BCALL               ; Banked call to: DPTR()
//   84   
//   85   /* update sleep state here before requesting to turn on receiver */
//   86   macSleepState = MAC_SLEEP_STATE_AWAKE;
??macSleepWakeUp_4:
        CLR	A
        MOV	DPTR,#macSleepState
        MOVX	@DPTR,A
//   87 
//   88   /* turn on the receiver if enabled */
//   89   macRxOnRequest();
        ; Setup parameters for call to function macRxOnRequest
        MOV	DPTR,#(macRxOnRequest & 0xffff)
        MOV	A,#((macRxOnRequest >> 16) & 0xff)
        LCALL	?BCALL               ; Banked call to: DPTR()
//   90 }
??macSleepWakeUp_0:
        POP	DPH
        CFI DPH0 SameValue
        CFI CFA_SP SP+-4
        POP	DPL
        CFI DPL0 SameValue
        CFI CFA_SP SP+-3
        LJMP	?BRET
        CFI EndBlock cfiBlock0
//   91 
//   92 
//   93 /**************************************************************************************************
//   94  * @fn          macSleep
//   95  *
//   96  * @brief       Puts radio into the selected sleep mode.
//   97  *
//   98  * @param       sleepState - selected sleep level, see #defines in .h file
//   99  *
//  100  * @return      TRUE if radio was successfully put into selected sleep mode.
//  101  *              FALSE if it was not safe for radio to go to sleep.
//  102  **************************************************************************************************
//  103  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  104 uint8 macSleep(uint8 sleepState)
macSleep:
        CFI Block cfiBlock1 Using cfiCommon0
        CFI Function macSleep
//  105 {
        FUNCALL macSleep, halAssertHandler
        LOCFRAME XSTACK, 9, STACK
        ARGFRAME XSTACK, 9, STACK
        FUNCALL macSleep, halAssertHandler
        LOCFRAME XSTACK, 9, STACK
        ARGFRAME XSTACK, 9, STACK
        FUNCALL macSleep, macRxOff
        LOCFRAME XSTACK, 9, STACK
        ARGFRAME XSTACK, 9, STACK
        FUNCALL macSleep, halAssertHandler
        LOCFRAME XSTACK, 9, STACK
        ARGFRAME XSTACK, 9, STACK
        MOV	A,#-0x9
        LCALL	?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV	A,R1
        MOV	R6,A
//  106   halIntState_t  s;
//  107  
//  108   /* disable interrupts until macSleepState can be set */
//  109   HAL_ENTER_CRITICAL_SECTION(s);
        MOV	C,0xa8.7
        CLR	A
        MOV	0xE0 /* A   */.0,C
        MOV	R7,A
        CLR	0xa8.7
//  110 
//  111   /* assert checks */
//  112   MAC_ASSERT(macSleepState == MAC_SLEEP_STATE_AWAKE); /* radio must be awake to put it to sleep */
        MOV	DPTR,#macSleepState
        MOVX	A,@DPTR
        JZ	??macSleep_0
        ; Setup parameters for call to function halAssertHandler
        MOV	DPTR,#(halAssertHandler & 0xffff)
        MOV	A,#((halAssertHandler >> 16) & 0xff)
        LCALL	?BCALL               ; Banked call to: DPTR()
//  113   MAC_ASSERT(macRxFilter == RX_FILTER_OFF); /* do not sleep when scanning or in promiscuous mode */
??macSleep_0:
        MOV	DPTR,#macRxFilter
        MOVX	A,@DPTR
        JZ	??macSleep_1
        ; Setup parameters for call to function halAssertHandler
        MOV	DPTR,#(halAssertHandler & 0xffff)
        MOV	A,#((halAssertHandler >> 16) & 0xff)
        LCALL	?BCALL               ; Banked call to: DPTR()
//  114 
//  115   /* if either RX or TX is active or any RX enable flags are set, it's not OK to sleep */
//  116   if (macRxActive || macRxOutgoingAckFlag || macTxActive || macRxEnableFlags)
??macSleep_1:
        MOV	DPTR,#macRxActive
        MOVX	A,@DPTR
        JNZ	??macSleep_2
        MOV	DPTR,#macRxOutgoingAckFlag
        MOVX	A,@DPTR
        JNZ	??macSleep_2
        MOV	DPTR,#macTxActive
        MOVX	A,@DPTR
        JNZ	??macSleep_2
        MOV	DPTR,#macRxEnableFlags
        MOVX	A,@DPTR
        JZ	??macSleep_3
//  117   {
//  118     HAL_EXIT_CRITICAL_SECTION(s);
??macSleep_2:
        MOV	A,R7
        MOV	C,0xE0 /* A   */.0
        MOV	0xa8.7,C
//  119     return(FALSE);
        MOV	R1,#0x0
        SJMP	??macSleep_4
//  120   }
//  121 
//  122   /* turn off the receiver */
//  123   macRxOff();
??macSleep_3:
        ; Setup parameters for call to function macRxOff
        MOV	DPTR,#(macRxOff & 0xffff)
        MOV	A,#((macRxOff >> 16) & 0xff)
        LCALL	?BCALL               ; Banked call to: DPTR()
//  124 
//  125   /* update sleep state variable */
//  126   macSleepState = sleepState;
        MOV	A,R6
        MOV	DPTR,#macSleepState
        MOVX	@DPTR,A
//  127 
//  128   /* macSleepState is now set, re-enable interrupts */
//  129   HAL_EXIT_CRITICAL_SECTION(s);
        MOV	A,R7
        MOV	C,0xE0 /* A   */.0
        MOV	0xa8.7,C
//  130   
//  131   /* put MAC timer to sleep */
//  132   MAC_RADIO_TIMER_SLEEP();
        ANL	0xc3,#0xfe
??macSleep_5:
        MOV	A,0xc3
        MOV	C,0xE0 /* A   */.0
        JC	??macSleep_5
//  133 
//  134   /* put radio in selected sleep mode */
//  135   if (sleepState == MAC_SLEEP_STATE_OSC_OFF)
        MOV	A,#0x1
        XRL	A,R6
        JZ	??macSleep_6
//  136   {
//  137     MAC_RADIO_TURN_OFF_OSC();
//  138   }
//  139   else
//  140   {
//  141     MAC_ASSERT(sleepState == MAC_SLEEP_STATE_RADIO_OFF); /* unknown sleep state */
        MOV	A,#0x2
        XRL	A,R6
        JZ	??macSleep_7
        ; Setup parameters for call to function halAssertHandler
        MOV	DPTR,#(halAssertHandler & 0xffff)
        MOV	A,#((halAssertHandler >> 16) & 0xff)
        LCALL	?BCALL               ; Banked call to: DPTR()
//  142     MAC_RADIO_TURN_OFF_POWER();
??macSleep_7:
        MOV	DPTR,#-0x20e9
        MOVX	A,@DPTR
        SETB	0xE0 /* A   */.3
        MOVX	@DPTR,A
//  143   }
//  144 
//  145   /* radio successfully entered sleep mode */
//  146   return(TRUE);
??macSleep_6:
        MOV	R1,#0x1
??macSleep_4:
        MOV	R7,#0x1
        LJMP	?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock1
//  147 }

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for macSleepState>`:
        DB 2

        ASEGN SFR_AN:DATA:NOROOT,0a8H
// union <unnamed> volatile __sfr _A_IEN0
_A_IEN0:
        DS 1

        END
//  148 
//  149 
//  150 
//  151 /**************************************************************************************************
//  152  *                                  Compile Time Integrity Checks
//  153  **************************************************************************************************
//  154  */
//  155 #if ((MAC_SLEEP_STATE_AWAKE == MAC_SLEEP_STATE_OSC_OFF) ||  \ 
//  156      (MAC_SLEEP_STATE_AWAKE == MAC_SLEEP_STATE_RADIO_OFF))
//  157 #error "ERROR!  Non-unique state values."
//  158 #endif
//  159 
//  160 
//  161 /**************************************************************************************************
//  162 */
// 
// 213 bytes in segment BANKED_CODE
//   3 bytes in segment SFR_AN
//   1 byte  in segment XDATA_I
//   1 byte  in segment XDATA_ID
// 
// 214 bytes of CODE  memory
//   0 bytes of DATA  memory (+ 3 bytes shared)
//   1 byte  of XDATA memory
//
//Errors: none
//Warnings: none
