##############################################################################
#                                                                            #
# IAR 8051 C/C++ Compiler V7.20H/W32                   17/Oct/2013  21:26:08 #
# Copyright 2004-2006 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Core               =  plain                                             #
#    Code model         =  banked                                            #
#    Data model         =  large                                             #
#    Calling convention =  xdata reentrant                                   #
#    Constant location  =  data                                              #
#    Dptr setup         =  1,16                                              #
#    Source file        =  E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                          ¢\ZStack-1.4.2-1.1.0\Components\wxl\source\wxl_ua #
#                          rt.c                                              #
#    Command line       =  -f E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿Ú #
#                          ÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\S #
#                          ampleApp\CC2430DB\..\..\..\Tools\CC2430DB\f8wCoor #
#                          d.cfg (-DCPU32MHZ -DFORCE_MAC_NEAR                #
#                          -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TR #
#                          UE -DZDO_COORDINATOR -DRTR_NWK -DBLINK_LEDS       #
#                          "-DCONST=const __code" -DGENERIC=__generic) -f    #
#                          E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                          ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                          leApp\CC2430DB\..\..\..\Tools\CC2430DB\f8wConfig. #
#                          cfg (-DSECURE=0 -DDEFAULT_CHANLIST=0x00000800     #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                      #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M #
#                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                    #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P #
#                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           #
#                          -DMAX_RREQ_ENTRIES=10 -DAPSC_MAX_FRAME_RETRIES=3  #
#                          -DNWK_MAX_DATA_RETRIES=2                          #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=20          #
#                          -DNWK_MAX_BINDING_ENTRIES=10                      #
#                          -DMAX_BINDING_CLUSTER_IDS=5                       #
#                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     #
#                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   #
#                          0x0A, 0x0C, 0x0D}" -DRFD_RCVC_ALWAYS_ON=FALSE     #
#                          -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100           #
#                          -DRESPONSE_POLL_RATE=100 -DREJOIN_POLL_RATE=440   #
#                          -DTOP_BOOT_PAGES=0) -I "D:\Program Files\IAR      #
#                          Systems\Embedded Workbench 4.05 Evaluation        #
#                          version\8051\inc\" -I "D:\Program Files\IAR       #
#                          Systems\Embedded Workbench 4.05 Evaluation        #
#                          version\8051\inc\clib\" -I                        #
#                          E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                          ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                          leApp\CC2430DB\ -I E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ #
#                          ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\ #
#                          zstack\Samples\SampleApp\CC2430DB\..\Source\ -I   #
#                          E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                          ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                          leApp\CC2430DB\..\..\..\ZMain\TI2430DB\ -I        #
#                          E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                          ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                          leApp\CC2430DB\..\..\..\..\..\Components\mt\ -I   #
#                          E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                          ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                          leApp\CC2430DB\..\..\..\..\..\Components\hal\incl #
#                          ude\ -I E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC243 #
#                          0´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samp #
#                          les\SampleApp\CC2430DB\..\..\..\..\..\Components\ #
#                          hal\target\CC2430EB\ -I                           #
#                          E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                          ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                          leApp\CC2430DB\..\..\..\..\..\Components\osal\mcu #
#                          \ccsoc\ -I E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC #
#                          2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\S #
#                          amples\SampleApp\CC2430DB\..\..\..\..\..\Componen #
#                          ts\osal\include\ -I E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨ #
#                          Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects #
#                          \zstack\Samples\SampleApp\CC2430DB\..\..\..\..\.. #
#                          \Components\stack\af\ -I                          #
#                          E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                          ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                          leApp\CC2430DB\..\..\..\..\..\Components\stack\nw #
#                          k\ -I E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´ #
#                          ®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Sample #
#                          s\SampleApp\CC2430DB\..\..\..\..\..\Components\st #
#                          ack\sec\ -I E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\C #
#                          C2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\ #
#                          Samples\SampleApp\CC2430DB\..\..\..\..\..\Compone #
#                          nts\stack\sys\ -I E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶ #
#                          Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\z #
#                          stack\Samples\SampleApp\CC2430DB\..\..\..\..\..\C #
#                          omponents\stack\zdo\ -I                           #
#                          E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                          ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                          leApp\CC2430DB\..\..\..\..\..\Components\zmac\f8w #
#                          \ -I E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´® #
#                          ¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                          \SampleApp\CC2430DB\..\..\..\..\..\Components\zma #
#                          c\ -I E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´ #
#                          ®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Sample #
#                          s\SampleApp\CC2430DB\..\..\..\..\..\Components\se #
#                          rvices\saddr\ -I E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ #
#                          ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zs #
#                          tack\Samples\SampleApp\CC2430DB\..\..\..\..\..\Co #
#                          mponents\services\sdata\ -I                       #
#                          E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                          ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                          leApp\CC2430DB\..\..\..\..\..\Components\mac\incl #
#                          ude\ -I E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC243 #
#                          0´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samp #
#                          les\SampleApp\CC2430DB\..\..\..\..\..\Components\ #
#                          mac\high_level\ -I E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ #
#                          ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\ #
#                          zstack\Samples\SampleApp\CC2430DB\..\..\..\..\..\ #
#                          Components\mac\low_level\srf03\ -I                #
#                          E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                          ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                          leApp\CC2430DB\..\..\..\..\..\Components\mac\low_ #
#                          level\srf03\single_chip\ -D CC2430EB -D ZTOOL_P1  #
#                          -D MT_TASK -D MT_ZDO_FUNC -lC                     #
#                          E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                          ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                          leApp\CC2430DB\CoordinatorEB\List\ -lA            #
#                          E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                          ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                          leApp\CC2430DB\CoordinatorEB\List\                #
#                          --diag_suppress Pe001,Pa010 --diag_remark pe550   #
#                          -o E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿Ú #
#                          ÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\S #
#                          ampleApp\CC2430DB\CoordinatorEB\Obj\ -e           #
#                          --require_prototypes -z9 --no_code_motion         #
#                          --debug --core=plain --dptr=16,1                  #
#                          --data_model=large --code_model=banked            #
#                          --calling_convention=xdata_reentrant              #
#                          --place_constants=data --nr_virtual_regs 8        #
#                          E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                          ¢\ZStack-1.4.2-1.1.0\Components\wxl\source\wxl_ua #
#                          rt.c                                              #
#    List file          =  E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                          ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                          leApp\CC2430DB\CoordinatorEB\List\wxl_uart.lst    #
#    Object file        =  E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                          ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                          leApp\CC2430DB\CoordinatorEB\Obj\wxl_uart.r51     #
#                                                                            #
#                                                                            #
##############################################################################

E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Components\wxl\source\wxl_uart.c
      1          //cd wxl      ´®¿Ú0·¢Êý¾Ý
      2          #include <ioCC2430.h>

   \                                 In segment SFR_AN, at 0x86
   \   unsigned char volatile __sfr U0CSR
   \                     U0CSR:
   \   000000                DS 1

   \                                 In segment SFR_AN, at 0xbe
   \   unsigned char volatile __sfr SLEEP
   \                     SLEEP:
   \   000000                DS 1

   \                                 In segment SFR_AN, at 0xc1
   \   unsigned char volatile __sfr U0DBUF
   \                     U0DBUF:
   \   000000                DS 1

   \                                 In segment SFR_AN, at 0xc2
   \   unsigned char volatile __sfr U0BAUD
   \                     U0BAUD:
   \   000000                DS 1

   \                                 In segment SFR_AN, at 0xc5
   \   unsigned char volatile __sfr U0GCR
   \                     U0GCR:
   \   000000                DS 1

   \                                 In segment SFR_AN, at 0xc6
   \   unsigned char volatile __sfr CLKCON
   \                     CLKCON:
   \   000000                DS 1

   \                                 In segment SFR_AN, at 0xf1
   \   unsigned char volatile __sfr PERCFG
   \                     PERCFG:
   \   000000                DS 1

   \                                 In segment SFR_AN, at 0xf3
   \   unsigned char volatile __sfr P0SEL
   \                     P0SEL:
   \   000000                DS 1

   \                                 In segment SFR_AN, at 0xff
   \   unsigned char volatile __sfr P2DIR
   \                     P2DIR:
   \   000000                DS 1
      3          #include <wxl_uart.h>
      4          //#include <string.h>
      5          
      6          /****************************************************************
      7          *º¯Êý¹¦ÄÜ £º³õÊ¼»¯´®¿Ú1										
      8          *Èë¿Ú²ÎÊý £ºÎÞ												
      9          *·µ »Ø Öµ £ºÎÞ							
     10          *Ëµ    Ã÷ £º57600-8-n-1						
     11          ****************************************************************/

   \                                 In segment BANKED_CODE, align 1, keep-with-next
     12          void initUARTtest(void)
   \                     initUARTtest:
     13          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     14          
     15              CLKCON &= ~0x40;              //¾§Õñ
   \   000000   53C6BF       ANL     0xc6,#0xbf
     16              while(!(SLEEP & 0x40));      //µÈ´ý¾§ÕñÎÈ¶¨
   \                     ??initUARTtest_0:
   \   000003   E5BE         MOV     A,0xbe
   \   000005   A2E6         MOV     C,0xE0 /* A   */.6
   \   000007   50FA         JNC     ??initUARTtest_0
     17              CLKCON &= ~0x47;             //TICHSPD128·ÖÆµ£¬CLKSPD²»·ÖÆµ
   \   000009   53C6B8       ANL     0xc6,#0xb8
   \   00000C   E5C6         MOV     A,0xc6
     18              SLEEP |= 0x04; 		 //¹Ø±Õ²»ÓÃµÄRCÕñµ´Æ÷
   \   00000E   43BE04       ORL     0xbe,#0x4
     19              PERCFG = 0x00;				//Î»ÖÃ1 P0¿Ú
   \   000011   75F100       MOV     0xf1,#0x0
     20              P0SEL |= 0x0C;				//P0ÓÃ×÷´®¿Ú
   \   000014   43F30C       ORL     0xf3,#0xc
   \   000017   E5F3         MOV     A,0xf3
     21              P2DIR &= ~0xC0;                             //P0ÓÅÏÈ×÷Îª´®¿Ú0
   \   000019   53FF3F       ANL     0xff,#0x3f
   \   00001C   E5FF         MOV     A,0xff
     22              U0CSR |= 0x80;				//UART·½Ê½
   \   00001E   438680       ORL     0x86,#0x80
     23              UTX0IF = 0;
   \   000021                REQUIRE ?Subroutine0
   \   000021                ; // Fall through to label ?Subroutine0
     24          
     25          }

   \                                 In segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   C2E9         CLR     0xe8.1
   \   000002   02....       LJMP    ?BRET
     26          /****************************************************************
     27          *º¯Êý¹¦ÄÜ £º´®¿Ú·¢ËÍ×Ö·û´®º¯Êý					
     28          *Èë¿Ú²ÎÊý : data:Êý¾Ý									
     29          *			len :Êý¾Ý³¤¶È							
     30          *·µ »Ø Öµ £ºÎÞ											
     31          *Ëµ    Ã÷ £º				
     32          ****************************************************************/

   \                                 In segment BANKED_CODE, align 1, keep-with-next
     33          void UartTX_Send_String(char *Data,int len)
   \                     UartTX_Send_String:
     34          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
     35            int j;
     36            for(j=0;j<len;j++)
   \   000005   7800         MOV     R0,#0x0
   \   000007   7900         MOV     R1,#0x0
   \   000009   801A         SJMP    ??UartTX_Send_String_0
     37            {
     38              U0DBUF = *Data++;
   \                     ??UartTX_Send_String_1:
   \   00000B   8A82         MOV     DPL,R2
   \   00000D   8B83         MOV     DPH,R3
   \   00000F   E0           MOVX    A,@DPTR
   \   000010   F5C1         MOV     0xc1,A
   \   000012   A3           INC     DPTR
   \   000013   AA82         MOV     R2,DPL
   \   000015   AB83         MOV     R3,DPH
     39              while(UTX0IF == 0);
   \                     ??UartTX_Send_String_2:
   \   000017   A2E9         MOV     C,0xe8.1
   \   000019   50FC         JNC     ??UartTX_Send_String_2
     40              UTX0IF = 0;
   \   00001B   C2E9         CLR     0xe8.1
     41            }
   \   00001D   E8           MOV     A,R0
   \   00001E   2401         ADD     A,#0x1
   \   000020   08           INC     R0
   \   000021   E9           MOV     A,R1
   \   000022   3400         ADDC    A,#0x0
   \   000024   F9           MOV     R1,A
   \                     ??UartTX_Send_String_0:
   \   000025   C3           CLR     C
   \   000026   E8           MOV     A,R0
   \   000027   9C           SUBB    A,R4
   \   000028   E9           MOV     A,R1
   \   000029   9D           SUBB    A,R5
   \   00002A   A2D2         MOV     C,0xD0 /* PSW */.2
   \   00002C   65D0         XRL     A,PSW
   \   00002E   33           RLC     A
   \   00002F   40DA         JC      ??UartTX_Send_String_1
     42          }
   \   000031   7F01         MOV     R7,#0x1
   \   000033   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In segment BANKED_CODE, align 1, keep-with-next
     43          void UartTX_Send_Single(char single_Data)
   \                     UartTX_Send_Single:
     44          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     45              U0DBUF = single_Data;
   \   000000   89C1         MOV     0xc1,R1
     46              while(UTX0IF == 0);
   \                     ??UartTX_Send_Single_0:
   \   000002   A2E9         MOV     C,0xe8.1
   \   000004   50FC         JNC     ??UartTX_Send_Single_0
     47              UTX0IF = 0;
   \   000006   80..         SJMP    ?Subroutine0
     48          }
     49          /*******************************************************************************
     50          ÃèÊö£º
     51              ´®¿Ú½ÓÊÕÒ»¸ö×Ö·û
     52          º¯ÊýÃû£ºchar UartRX_Receive_Char (void)
     53          *******************************************************************************/

   \                                 In segment BANKED_CODE, align 1, keep-with-next
     54          char UartRX_Receive_Char (void)
   \                     UartRX_Receive_Char:
     55          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     56             char c;
     57             unsigned char status;
     58             status = U0CSR;
   \   000000   E586         MOV     A,0x86
   \   000002   FA           MOV     R2,A
     59             U0CSR |= UART_ENABLE_RECEIVE;
   \   000003   438640       ORL     0x86,#0x40
     60             while (!URX0IF);
   \                     ??UartRX_Receive_Char_0:
   \   000006   A28B         MOV     C,0x88.3
   \   000008   50FC         JNC     ??UartRX_Receive_Char_0
     61             c = U0DBUF;
   \   00000A   E5C1         MOV     A,0xc1
   \   00000C   F9           MOV     R1,A
     62             URX0IF = 0;
   \   00000D   C28B         CLR     0x88.3
     63             U0CSR = status;
   \   00000F   8A86         MOV     0x86,R2
     64             return c;
   \   000011   02....       LJMP    ?BRET
     65          }
     66          /*******************************************************************************
     67          ÃèÊö£º
     68              ²¨ÌØÂÊµÄÉèÖÃ
     69          º¯ÊýÃû£ºvoid Uart_Baud_rate(int Baud_rate)
     70          *******************************************************************************/

   \                                 In segment BANKED_CODE, align 1, keep-with-next
     71          void Uart_Baud_rate(int Baud_rate)
   \                     Uart_Baud_rate:
     72          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
     73            switch (Baud_rate)
   \   000005   8A..         MOV     ?V0 + 0,R2
   \   000007   8B..         MOV     ?V0 + 1,R3
   \   000009   78..         MOV     R0,#?V0 + 0
   \   00000B   12....       LCALL   ?US_SWITCH_SPARSE
   \                     `?<Jumptable for Uart_Baud_rate>_0`:
   \   00000E   0000         DW        0
   \   000010   0B00         DW        11
   \   000012   1800         DW        24
   \   000014   ....         DW        ??Uart_Baud_rate_0
   \   000016   3000         DW        48
   \   000018   ....         DW        ??Uart_Baud_rate_1
   \   00001A   6000         DW        96
   \   00001C   ....         DW        ??Uart_Baud_rate_2
   \   00001E   9000         DW        144
   \   000020   ....         DW        ??Uart_Baud_rate_3
   \   000022   C000         DW        192
   \   000024   ....         DW        ??Uart_Baud_rate_4
   \   000026   2001         DW        288
   \   000028   ....         DW        ??Uart_Baud_rate_5
   \   00002A   8001         DW        384
   \   00002C   ....         DW        ??Uart_Baud_rate_6
   \   00002E   4002         DW        576
   \   000030   ....         DW        ??Uart_Baud_rate_7
   \   000032   0003         DW        768
   \   000034   ....         DW        ??Uart_Baud_rate_8
   \   000036   8004         DW        1152
   \   000038   ....         DW        ??Uart_Baud_rate_9
   \   00003A   0009         DW        2304
   \   00003C   ....         DW        ??Uart_Baud_rate_10
   \   00003E   ....         DW        ??Uart_Baud_rate_11
     74            {
     75              case 24:
     76                U0GCR |= 6;				
   \                     ??Uart_Baud_rate_0:
   \   000040   43C506       ORL     0xc5,#0x6
   \                     ??Uart_Baud_rate_12:
   \   000043   E5C5         MOV     A,0xc5
     77                U0BAUD |= 59;				//²¨ÌØÂÊÉèÖÃ
   \                     ??Uart_Baud_rate_13:
   \   000045   43C23B       ORL     0xc2,#0x3b
   \   000048   8035         SJMP    ??Uart_Baud_rate_14
     78              break;
     79              case 48:
     80                U0GCR |= 7;				
   \                     ??Uart_Baud_rate_1:
   \   00004A   43C507       ORL     0xc5,#0x7
   \   00004D   80F4         SJMP    ??Uart_Baud_rate_12
     81                U0BAUD |= 59;				//²¨ÌØÂÊÉèÖÃ
     82              break;
     83              case 96:
     84                U0GCR |= 8;				
   \                     ??Uart_Baud_rate_2:
   \   00004F   43C508       ORL     0xc5,#0x8
     85                U0BAUD |= 59;				//²¨ÌØÂÊÉèÖÃ
   \   000052   80F1         SJMP    ??Uart_Baud_rate_13
     86              break;
     87              case 144:
     88                U0GCR |= 8;				
   \                     ??Uart_Baud_rate_3:
   \   000054   43C508       ORL     0xc5,#0x8
     89                U0BAUD |= 216;				//²¨ÌØÂÊÉèÖÃ
   \   000057   8023         SJMP    ??Uart_Baud_rate_15
     90              break;
     91              case 192:
     92                U0GCR |= 9;				
   \                     ??Uart_Baud_rate_4:
   \   000059   43C509       ORL     0xc5,#0x9
   \   00005C   80E5         SJMP    ??Uart_Baud_rate_12
     93                U0BAUD |= 59;				//²¨ÌØÂÊÉèÖÃ
     94              break;
     95              case 288:
     96                U0GCR |= 9;				
   \                     ??Uart_Baud_rate_5:
   \   00005E   43C509       ORL     0xc5,#0x9
   \   000061   8017         SJMP    ??Uart_Baud_rate_16
     97                U0BAUD |= 216;				//²¨ÌØÂÊÉèÖÃ
     98              break;
     99              case 384:
    100                U0GCR |= 10;				
   \                     ??Uart_Baud_rate_6:
   \   000063   43C50A       ORL     0xc5,#0xa
   \   000066   80DB         SJMP    ??Uart_Baud_rate_12
    101                U0BAUD |= 59;				//²¨ÌØÂÊÉèÖÃ
    102              break;
    103              case 576:
    104                U0GCR |= 10;				
   \                     ??Uart_Baud_rate_7:
   \   000068   43C50A       ORL     0xc5,#0xa
   \   00006B   800D         SJMP    ??Uart_Baud_rate_16
    105                U0BAUD |= 216;				//²¨ÌØÂÊÉèÖÃ
    106              break;
    107              case 768:
    108                U0GCR |= 11;				
   \                     ??Uart_Baud_rate_8:
   \   00006D   43C50B       ORL     0xc5,#0xb
   \   000070   80D1         SJMP    ??Uart_Baud_rate_12
    109                U0BAUD |= 59;				//²¨ÌØÂÊÉèÖÃ
    110              break;
    111              case 1152:
    112                U0GCR |= 11;				
   \                     ??Uart_Baud_rate_9:
   \   000072   43C50B       ORL     0xc5,#0xb
   \   000075   8003         SJMP    ??Uart_Baud_rate_16
    113                U0BAUD |= 216;				//²¨ÌØÂÊÉèÖÃ
    114              break;
    115              case 2304:
    116                U0GCR |= 12;				
   \                     ??Uart_Baud_rate_10:
   \   000077   43C50C       ORL     0xc5,#0xc
   \                     ??Uart_Baud_rate_16:
   \   00007A   E5C5         MOV     A,0xc5
    117                U0BAUD |= 216;				//²¨ÌØÂÊÉèÖÃ
   \                     ??Uart_Baud_rate_15:
   \   00007C   43C2D8       ORL     0xc2,#0xd8
   \                     ??Uart_Baud_rate_14:
   \   00007F   E5C2         MOV     A,0xc2
    118              break;
    119              default:
    120              break;
    121            }
    122          
    123          }
   \                     ??Uart_Baud_rate_11:
   \   000081   7F02         MOV     R7,#0x2
   \   000083   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In segment SFR_AN, at 0x88
   \   union <unnamed> volatile __sfr _A_TCON
   \                     _A_TCON:
   \   000000                DS 1

   \                                 In segment SFR_AN, at 0xe8
   \   union <unnamed> volatile __sfr _A_IRCON2
   \                     _A_IRCON2:
   \   000000                DS 1
    124          

   Maximum stack usage in bytes:

     Function            ISTACK PSTACK XSTACK
     --------            ------ ------ ------
     UartRX_Receive_Char     0      0      0
     UartTX_Send_Single      0      0      0
     UartTX_Send_String      0      0      9
     Uart_Baud_rate          0      0     10
     initUARTtest            0      0      0


   Segment part sizes:

     Function/Label      Bytes
     --------------      -----
     U0CSR                  1
     SLEEP                  1
     U0DBUF                 1
     U0BAUD                 1
     U0GCR                  1
     CLKCON                 1
     PERCFG                 1
     P0SEL                  1
     P2DIR                  1
     initUARTtest          33
     ?Subroutine0           5
     UartTX_Send_String    54
     UartTX_Send_Single     8
     UartRX_Receive_Char   20
     Uart_Baud_rate       134
     _A_TCON                1
     _A_IRCON2              1

 
 254 bytes in segment BANKED_CODE
  11 bytes in segment SFR_AN
 
 254 bytes of CODE memory
   0 bytes of DATA memory (+ 11 bytes shared)

Errors: none
Warnings: none
