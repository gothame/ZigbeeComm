Warning[w6]: Type conflict for external/entry "RfTx", in module SPIMgr against external/entry in module SampleApp; class/struct/union types have different sizes
  /* In module SPIMgr: */
  union j /* Elements: 2, Bytes: 66 */
  { 
    uint8 TxBuf[66];
    struct RFTXBUF /* Elements: 5, Bytes: 66 */
    { 
      uint8 HeadCom[3];
      uint8 Node_type[3];
      uint8 IEEE[8];
      uint16 Saddr;
      uint8 DataBuf[50];
    } TXDATA;
  } RfTx;
    typedef unsigned char uint8;
    typedef unsigned short uint16;
  /* In module SampleApp: */
  union j /* Elements: 2, Bytes: 33 */
  { 
    uint8 TxBuf[33];
    struct RFTXBUF /* Elements: 4, Bytes: 33 */
    { 
      uint8 HeadCom[3];
      uint8 Laddr[8];
      uint16 Saddr;
      uint8 DataBuf[20];
    } TXDATA;
  } RfTx;
    typedef unsigned char uint8;
    typedef unsigned short uint16;
Warning[w35]: There is more than one definition for the struct/union type with tag 'RFTXBUF'; class/struct/union types have different sizes
  struct RFTXBUF /* Elements: 4, Bytes: 33 */
  { 
    uint8 HeadCom[3];
    uint8 Laddr[8];
    uint16 Saddr;
    uint8 DataBuf[20];
  };
    typedef unsigned char uint8;
    typedef unsigned short uint16;
  struct RFTXBUF /* Elements: 5, Bytes: 66 */
  { 
    uint8 HeadCom[3];
    uint8 Node_type[3];
    uint8 IEEE[8];
    uint16 Saddr;
    uint8 DataBuf[50];
  };
    typedef unsigned char uint8;
    typedef unsigned short uint16;
Warning[w35]: There is more than one definition for the struct/union type with tag 'j'; class/struct/union types have different sizes
  union j /* Elements: 2, Bytes: 33 */
  { 
    uint8 TxBuf[33];
    struct RFTXBUF /* Elements: 4, Bytes: 33 */
    { 
      uint8 HeadCom[3];
      uint8 Laddr[8];
      uint16 Saddr;
      uint8 DataBuf[20];
    } TXDATA;
  };
    typedef unsigned char uint8;
    typedef unsigned short uint16;
  union j /* Elements: 2, Bytes: 66 */
  { 
    uint8 TxBuf[66];
    struct RFTXBUF /* Elements: 5, Bytes: 66 */
    { 
      uint8 HeadCom[3];
      uint8 Node_type[3];
      uint8 IEEE[8];
      uint16 Saddr;
      uint8 DataBuf[50];
    } TXDATA;
  };
    typedef unsigned char uint8;
    typedef unsigned short uint16;
################################################################################
#                                                                              #
#      IAR Universal Linker V4.60D/386                                         #
#                                                                              #
#           Link time     =  17/Oct/2013  21:52:44                             #
#           Target CPU    =  x51                                               #
#           List file     =  E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\List\SampleApp.map     #
#           Output file 1 =  E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Exe\SampleApp.hex      #
#                            Format: intel-extended                            #
#           Command line  =  -C                                                #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\..\..\..\Libraries\TI2430DB\bin\En #
#                            dDevice.lib                                       #
#                            -C                                                #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\..\..\..\Libraries\TI2430DB\bin\Se #
#                            curity.lib                                        #
#                            -C                                                #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\..\..\..\Libraries\TIMAC\bin\TIMAC #
#                            -CC2430.lib                                       #
#                            -M(CODE)_BANK1A-1FFFF,28000-2FFFF,38000-3DFFF,3F0 #
#                            00-3fff7=(_CODE_END+1)-0xFFFF,0x10000-0x17FFF,0x1 #
#                            8000-0x1DFFF,0x1F000-0x1FFF7                      #
#                            "-ID:\Program Files\IAR Systems\Embedded Workbenc #
#                            h 4.05 Evaluation version\8051\CONFIG\"           #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\AF.r51             #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\AccessCodeSpace.r5 #
#                            1                                                 #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\DebugTrace.r51     #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\FlashErasePage.r51 #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\Font.r51           #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\MTEL.r51           #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\MT_AF.r51          #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\MT_NWK.r51         #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\MT_ZDO.r51         #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\OSAL.r51           #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\OSAL_Memory.r51    #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\OSAL_Nv.r51        #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\OSAL_PwrMgr.r51    #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\OSAL_SampleApp.r51 #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\OSAL_Tasks.r51     #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\OSAL_Timers.r51    #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\OnBoard.r51        #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\SPIMgr.r51         #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\SampleApp.r51      #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\SampleAppHw.r51    #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\ZDApp.r51          #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\ZDCache.r51        #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\ZDConfig.r51       #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\ZDObject.r51       #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\ZDProfile.r51      #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\ZDSecMgr.r51       #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\ZGlobals.r51       #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\ZMain.r51          #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\chipcon_banked_cod #
#                            e_support.r51                                     #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\chipcon_cexit.r51  #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\chipcon_cstartup.r #
#                            51                                                #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\flashDmaTrigger.r5 #
#                            1                                                 #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\hal_adc.r51        #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\hal_assert.r51     #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\hal_dma.r51        #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\hal_drivers.r51    #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\hal_key.r51        #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\hal_lcd.r51        #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\hal_led.r51        #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\hal_sleep.r51      #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\hal_target.r51     #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\hal_timer.r51      #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\hal_uart.r51       #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\mac_backoff_timer. #
#                            r51                                               #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\mac_cfg.r51        #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\mac_csp_tx.r51     #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\mac_low_level.r51  #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\mac_mcu.r51        #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\mac_mem.r51        #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\mac_radio.r51      #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\mac_radio_defs.r51 #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\mac_random.r51     #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\mac_rx.r51         #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\mac_rx_onoff.r51   #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\mac_sleep.r51      #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\mac_tx.r51         #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\menu_lcd.r51       #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\nwk_globals.r51    #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\saddr.r51          #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\wait.r51           #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\wxl_uart.r51       #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\zmac.r51           #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Obj\zmac_cb.r51        #
#                            -o                                                #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\Exe\SampleApp.hex      #
#                            -Fintel-extended -l                               #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\EndDeviceEB\List\SampleApp.map     #
#                            -xmsn                                             #
#                            "-ID:\Program Files\IAR Systems\Embedded Workbenc #
#                            h 4.05 Evaluation version\8051\LIB\"              #
#                            -f                                                #
#                            E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ· #
#                            ¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\Samp #
#                            leApp\CC2430DB\..\..\..\Tools\CC2430DB\f8w2430.xc #
#                            l                                                 #
#                            (-D_IDATA_END=0xFF -D_PDATA_START=0xEF00          #
#                            -D_PDATA_END=0xEFFF -D_IXDATA_START=E000          #
#                            -D_IXDATA_END=FEFF -D_XDATA_START=_IXDATA_START   #
#                            -D_XDATA_END=_IXDATA_END                          #
#                            -D_PM0_XDATA_START=E000 -D_PM0_XDATA_END=EFFF     #
#                            -D_NEAR_CODE_END=0x7FFF -D_TINY_CODE_END=0x7FF    #
#                            -D_CODE_START=0x0000 -D_CODE_END=0x2FFF           #
#                            -D_BANK1A=(10000+_CODE_END+1)                     #
#                            -D_ZIGNV_START=0x3E000 -D_ZIGNV_SIZE=0x1000       #
#                            -D_ZIGNV_END=(_ZIGNV_START+_ZIGNV_SIZE-1)         #
#                            -D?REGISTER_BANK=0 -D_REGISTER_BANK_START=0       #
#                            -D_FIRST_BANK_ADDR=0x10000 -D_NR_OF_BANKS=0x03    #
#                            -D?PBANK_NUMBER=EF -D?PBANK=93                    #
#                            -D_BREG_START=0x00 -D?VB=0x20                     #
#                            -D_FAR_DATA_NR_OF_BANKS=0x0E                      #
#                            -D_FAR_DATA_START=0x010001                        #
#                            -D_FAR_DATA_END=0xFFFFFF                          #
#                            -D_FAR_CODE_START=_CODE_START                     #
#                            -D_FAR_CODE_END=_CODE_END                         #
#                            -Z(BIT)BREG=_BREG_START -Z(BIT)BIT_N=0-7F         #
#                            -Z(DATA)REGISTERS+8=_REGISTER_BANK_START          #
#                            -Z(DATA)BDATA_Z,BDATA_N,BDATA_I=20-2F             #
#                            -Z(DATA)VREG+_NR_OF_VIRTUAL_REGISTERS=08-7F       #
#                            -Z(DATA)PSP,XSP=08-7F -Z(DATA)DOVERLAY=08-7F      #
#                            -Z(DATA)DATA_I,DATA_Z,DATA_N=08-7F                #
#                            -U(IDATA)0-7F=(DATA)0-7F                          #
#                            -Z(IDATA)IDATA_I,IDATA_Z,IDATA_N=08-_IDATA_END    #
#                            -Z(IDATA)ISTACK+_IDATA_STACK_SIZE#08-_IDATA_END   #
#                            -Z(IDATA)IOVERLAY=08-FF -Z(CODE)INTVEC=0          #
#                            -Z(CODE)CSTART=_CODE_START-_CODE_END              #
#                            -Z(CODE)RCODE=_CODE_START-_CODE_END               #
#                            -Z(CODE)TINY_CODE=_CODE_START-_TINY_CODE_END      #
#                            -Z(CODE)NEAR_CODE=_CODE_START-_NEAR_CODE_END      #
#                            -Z(CODE)DIFUNCT=_CODE_START-_CODE_END             #
#                            -Z(CODE)FAR_CODE=_CODE_START-_CODE_END            #
#                            -P(CODE)BANKED_CODE=_BANK1_START-_BANK1_END,_BANK #
#                            2_START-_BANK2_END,_BANK3_START-_BANK3_END,_BANK3 #
#                            b_START-_BANK3b_END                               #
#                            -Z(CODE)BIT_ID,BDATA_ID,DATA_ID,IDATA_ID,IXDATA_I #
#                            D,PDATA_ID,XDATA_ID=_CODE_START-_CODE_END         #
#                            -Z(CODE)HUGE_ID=_FAR_CODE_START-_FAR_CODE_END     #
#                            -Z(CODE)CODE_C=_CODE_START-_CODE_END              #
#                            -Z(CODE)FAR_CODE_C=_FAR_CODE_START-_FAR_CODE_END  #
#                            -Z(CODE)HUGE_CODE_C=_FAR_CODE_START-_FAR_CODE_END #
#                            -Z(CODE)CHECKSUM#_CODE_END                        #
#                            -Z(XDATA)PM0_XDATA=_PM0_XDATA_START-_PM0_XDATA_EN #
#                            D                                                 #
#                            -Z(XDATA)EXT_STACK+_EXTENDED_STACK_SIZE=_EXTENDED #
#                            _STACK_START-_EXTENDED_STACK_END                  #
#                            -Z(XDATA)PSTACK+_PDATA_STACK_SIZE=_PDATA_START-_P #
#                            DATA_END                                          #
#                            -Z(XDATA)XSTACK+_XDATA_STACK_SIZE=_XDATA_START-_X #
#                            DATA_END                                          #
#                            -Z(XDATA)PDATA_N,PDATA_Z,PDATA_I=_PDATA_START-_PD #
#                            ATA_END                                           #
#                            -Z(XDATA)IXDATA_N,IXDATA_Z,IXDATA_I=_IXDATA_START #
#                            -_IXDATA_END                                      #
#                            -Z(XDATA)XDATA_N,XDATA_Z,XDATA_I=_XDATA_START-_XD #
#                            ATA_END                                           #
#                            -Z(XDATA)XDATA_HEAP+_XDATA_HEAP_SIZE=_XDATA_START #
#                            -_XDATA_END                                       #
#                            -Z(CONST)XDATA_ROM_C=_XDATA_START-_XDATA_END      #
#                            -Z(SPLIT-XDATA)FAR_Z=[_FAR_DATA_START-_FAR_DATA_E #
#                            ND]/10000                                         #
#                            -Z(SPLIT-XDATA)FAR_I=[_FAR_DATA_START-_FAR_DATA_E #
#                            ND]/10000                                         #
#                            -Z(SPLIT-CODE)FAR_ID=[_FAR_CODE_START-_FAR_CODE_E #
#                            ND]/10000                                         #
#                            -Z(SPLIT-XDATA)FAR_HEAP+_FAR_HEAP_SIZE=[_FAR_DATA #
#                            _START-_FAR_DATA_END]/10000                       #
#                            -P(XDATA)FAR_N=[_FAR_DATA_START-_FAR_DATA_END]*_F #
#                            AR_DATA_NR_OF_BANKS+10000                         #
#                            -P(CONST)FAR_ROM_C=[_FAR_DATA_START-_FAR_DATA_END #
#                            ]*E+10000                                         #
#                            -Z(XDATA)HUGE_N,HUGE_Z,HUGE_I=_FAR_DATA_START-_FA #
#                            R_DATA_END                                        #
#                            -Z(XDATA)HUGE_HEAP+_HUGE_HEAP_SIZE=_FAR_DATA_STAR #
#                            T-_FAR_DATA_END                                   #
#                            -Z(CONST)HUGE_ROM_C=_FAR_DATA_START-_FAR_DATA_END #
#                            -cx51 -D_BANK1_START=_BANK1A                      #
#                            -D_BANK1_END=0x1FFFF -D_BANK2_START=0x28000       #
#                            -D_BANK2_END=0x2FFFF -D_BANK3_START=0x38000       #
#                            -D_BANK3_END=0x3DFFF                              #
#                            -D_BANK3b_START=(_ZIGNV_END+1)                    #
#                            -D_BANK3b_END=0x3FFF7                             #
#                            -P(CODE)BANK1=_BANK1_START-_BANK1_END             #
#                            -P(CODE)BANK2=_BANK2_START-_BANK2_END             #
#                            -P(CODE)BANK3=_BANK3_START-_BANK3_END             #
#                            -P(CODE)ZIGNV=_ZIGNV_START-_ZIGNV_END             #
#                            -P(CODE)BANK3b=_BANK3b_START-_BANK3b_END          #
#                            -D_IEEE_ADDR_START=0x3FFF8                        #
#                            -D_IEEE_ADDR_END=0x3FFFF                          #
#                            -Z(CODE)IEEE_ADDRESS_SPACE=_IEEE_ADDR_START-_IEEE #
#                            _ADDR_END)                                        #
#                            -D_NR_OF_VIRTUAL_REGISTERS=8 -D?DPL1=0x84         #
#                            -D?DPH1=0x85 -D?CBANK=0xC7                        #
#                            -D_CODEBANK_START=0x2000 -D_CODEBANK_END=0xFFFF   #
#                            -e_small_write=_formatted_write                   #
#                            -e_medium_read=_formatted_read -we24=i -s         #
#                            __program_start                                   #
#                            "D:\Program Files\IAR Systems\Embedded Workbench  #
#                            4.05 Evaluation version\8051\LIB\CLIB\cl-pli-blxd #
#                            -1e16x01.r51"                                     #
#                            -D_IDATA_STACK_SIZE=0xC0                          #
#                            -D_EXTENDED_STACK_START=0x00                      #
#                            -D_EXTENDED_STACK_END=0x00                        #
#                            -D_EXTENDED_STACK_SIZE=0x00                       #
#                            -D_PDATA_STACK_SIZE=0x80                          #
#                            -D_XDATA_STACK_SIZE=0x300                         #
#                            -D_XDATA_HEAP_SIZE=0x00 -D_FAR_HEAP_SIZE=0x000    #
#                            -D_HUGE_HEAP_SIZE=0x000                           #
#                                                                              #
#                        Copyright 1987-2006 IAR Systems. All rights reserved. #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at : CODE      000000AD  Relocatable, from module : CSTARTUP




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  __calling_convention     = xdata_reentrant
  __code_model             = banked
  __core                   = plain
  __data_model             = large
  __dptr_size              = 16
  __extended_stack         = disabled
  __location_for_constants = data
  __number_of_dptrs        = 1
  __rt_version             = 1



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?ABS_ENTRY_MOD

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _HUGE_HEAP_SIZE         00000000 
           _FAR_HEAP_SIZE          00000000 
           _XDATA_HEAP_SIZE        00000000 
           _XDATA_STACK_SIZE       00000300 
           _PDATA_STACK_SIZE       00000080 
           _EXTENDED_STACK_SIZE    00000000 
           _EXTENDED_STACK_END     00000000 
           _EXTENDED_STACK_START   00000000 
           _IDATA_STACK_SIZE       000000C0 
           _CODEBANK_END           0000FFFF 
           _CODEBANK_START         00002000 
           ?CBANK                  000000C7        Segment part 0 (?BANKED_CODE_SUPPORT)
           ?DPH1                   00000085 
           ?DPL1                   00000084 
           _NR_OF_VIRTUAL_REGISTERS
                                   00000008 
           _IEEE_ADDR_END          0003FFFF 
           _IEEE_ADDR_START        0003FFF8 
           _BANK3b_END             0001FFF7 
           _BANK3b_START           0001F000 
           _BANK3_END              0001DFFF 
           _BANK3_START            00018000 
           _BANK2_END              00017FFF 
           _BANK2_START            00010000 
           _BANK1_END              0000FFFF 
           _BANK1_START            00003000 
           _FAR_CODE_END           00002FFF 
           _FAR_CODE_START         00000000 
           _FAR_DATA_END           00FFFFFF 
           _FAR_DATA_START         00010001 
           _FAR_DATA_NR_OF_BANKS   0000000E 
           ?VB                     00000020        ?BANKED_ENTER_XDATA (?BANKED_ENTER_XDATA)
                                                   ?BANKED_LEAVE_XDATA (?BANKED_LEAVE_XDATA)
                                                   ?FUNC_ENTER_XDATA (?FUNC_ENTER_XDATA)
                                                   ?FUNC_LEAVE_XDATA (?FUNC_LEAVE_XDATA)
                                                   ?INTERRUPT_ENTER_XSP (?INTERRUPT_ENTER_XSP)
                                                   ?INTERRUPT_LEAVE_XSP (?INTERRUPT_LEAVE_XSP)
           _BREG_START             00000000 
           ?PBANK                  00000093 
           ?PBANK_NUMBER           000000EF 
           _NR_OF_BANKS            00000003 
           _FIRST_BANK_ADDR        00010000 
           _REGISTER_BANK_START    00000000 
           ?REGISTER_BANK          00000000        Segment part 6 (CSTARTUP)
           _ZIGNV_END              0003EFFF 
           _ZIGNV_SIZE             00001000 
           _ZIGNV_START            0003E000 
           _BANK1A                 00003000 
           _CODE_END               00002FFF 
           _CODE_START             00000000 
           _TINY_CODE_END          000007FF 
           _NEAR_CODE_END          00007FFF 
           _PM0_XDATA_END          0000EFFF 
           _PM0_XDATA_START        0000E000 
           _XDATA_END              0000FEFF 
           _XDATA_START            0000E000 
           _IXDATA_END             0000FEFF 
           _IXDATA_START           0000E000 
           _PDATA_END              0000EFFF 
           _PDATA_START            0000EF00 
           _IDATA_END              000000FF 
    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Libraries\TI2430DB\bin\EndDevice.lib
  LIBRARY MODULE, NAME : APS

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E308 - 0000E308 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   APS_CmdInd
                                                   APS_Init
                                                   APS_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APS_TaskID              0000E308        APSDE_DataIndication (APSMEDE_CB)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E309 - 0000E30A (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   APS_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AIB_MaxBindingTime      0000E309 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E30B - 0000E30B (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   APS_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APS_Counter             0000E30B        APSDE_FrameHdrSet (APSMEDE)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E30C - 0000E30E (0x3 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pAPS_DataConfirmReflect
                                   0000E30C        NLDE_DataCnf (NLMEDE_CB)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E30F - 0000E311 (0x3 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pAPS_DataIndReflect     0000E30F        NLDE_DataIndication (NLMEDE_CB)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E312 - 0000E314 (0x3 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           apsfSendFragmented      0000E312        AF_DataRequest (AF)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E315 - 0000E317 (0x3 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           apsfProcessAck          0000E315        apsProcessAck (aps_util)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E318 - 0000E31A (0x3 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           apsfSendOsalMsg         0000E318        APSDE_DataIndication (APSMEDE_CB)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014F1A - 00014F33 (0x1a bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APS_Init                00014F1A        osalAddTasks (OSAL_SampleApp)
               is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014F34 - 00014F3A (0x7 bytes), align: 0
  Segment part 22.            Intra module refs:   APS_Init
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014F3B - 00014FDA (0xa0 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APS_event_loop          00014F3B        osalAddTasks (OSAL_SampleApp)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014FDB - 000150C5 (0xeb bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APS_CmdInd              00014FDB        NLDE_DataIndication (NLMEDE_CB)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000150C6 - 000150CC (0x7 bytes), align: 0
  Segment part 26.            Intra module refs:   APS_CmdInd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000150CD - 000150D2 (0x6 bytes), align: 0
  Segment part 27.            Intra module refs:   Segment part 26
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000150D3 - 000150DD (0xb bytes), align: 0
  Segment part 28.            Intra module refs:   APS_CmdInd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000150DE - 000150E2 (0x5 bytes), align: 0
  Segment part 30.            Intra module refs:   APS_CmdInd
                                                   APS_event_loop
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000150E3 - 000150EF (0xd bytes), align: 0
  Segment part 35.            Intra module refs:   APS_CmdInd
                                                   APS_Init
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000150F0 - 000150FB (0xc bytes), align: 0
  Segment part 38.            Intra module refs:   APS_event_loop
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000150FC - 00015104 (0x9 bytes), align: 0
  Segment part 39.            Intra module refs:   APS_CmdInd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015105 - 0001510E (0xa bytes), align: 0
  Segment part 40.            Intra module refs:   APS_CmdInd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001510F - 00015114 (0x6 bytes), align: 0
  Segment part 41.            Intra module refs:   Segment part 40
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015115 - 00015125 (0x11 bytes), align: 0
  Segment part 44.            Intra module refs:   APS_CmdInd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015126 - 00015129 (0x4 bytes), align: 0
  Segment part 45.            Intra module refs:   APS_CmdInd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001512A - 00015132 (0x9 bytes), align: 0
  Segment part 46.            Intra module refs:   Segment part 45
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015133 - 0001513A (0x8 bytes), align: 0
  Segment part 50.            Intra module refs:   APS_CmdInd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001513B - 00015146 (0xc bytes), align: 0
  Segment part 51.            Intra module refs:   APS_CmdInd
                                                   APS_Init
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015147 - 00015151 (0xb bytes), align: 0
  Segment part 57.            Intra module refs:   Segment part 58
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015152 - 00015156 (0x5 bytes), align: 0
  Segment part 58.            Intra module refs:   APS_CmdInd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015157 - 00015163 (0xd bytes), align: 0
  Segment part 66.            Intra module refs:   APS_event_loop
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015164 - 00015170 (0xd bytes), align: 0
  Segment part 68.            Intra module refs:   APS_CmdInd

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : APSMEDE

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E31B - 0000E31D (0x3 bytes), align: 0
  Segment part 7.             Intra module refs:   APSME_FrameSecInit
                                                   APSME_FrameSecNM
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecSetupHook
                                   0000E31B 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E31E - 0000E320 (0x3 bytes), align: 0
  Segment part 8.             Intra module refs:   APSDE_FrameSend
                                                   APSME_FrameSecNM
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecApplyHook
                                   0000E31E 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E321 - 0000E323 (0x3 bytes), align: 0
  Segment part 9.             Intra module refs:   APSME_FrameSecNM
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecApplyExtHook
                                   0000E321 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E324 - 0000E326 (0x3 bytes), align: 0
  Segment part 10.            Intra module refs:   APSME_FrameSecNM
                                                   APSME_FrameSecurityRemove
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecRemoveHook
                                   0000E324 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E327 - 0000E329 (0x3 bytes), align: 0
  Segment part 11.            Intra module refs:   APSME_CmdPkt
                                                   APSME_SecurityNM
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_CmdPktHook        0000E327 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000089CC - 00008C49 (0x27e bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_DataReq           000089CC        AF_DataRequest (AF)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000019 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008C4A - 00008C51 (0x8 bytes), align: 0
  Segment part 17.            Intra module refs:   APSDE_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008C52 - 00008C59 (0x8 bytes), align: 0
  Segment part 18.            Intra module refs:   Segment part 156
                                                   Segment part 157
                                                   Segment part 17
                                                   Segment part 173
                                                   Segment part 20
                                                   Segment part 37
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008C5A - 00008C67 (0xe bytes), align: 0
  Segment part 19.            Intra module refs:   APSDE_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008C68 - 00008C70 (0x9 bytes), align: 0
  Segment part 20.            Intra module refs:   APSDE_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008C71 - 00008C99 (0x29 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_DataReqMTU        00008C71        afDataReqMTU (AF)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008C9A - 00008D2E (0x95 bytes), align: 0
  Segment part 30.            Intra module refs:   APSDE_DataReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_LookupNwkAddr     00008C9A 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000016 ( 00000013 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008D2F - 00008D33 (0x5 bytes), align: 0
  Segment part 31.            Intra module refs:   APSME_LookupNwkAddr
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008D34 - 00008D3E (0xb bytes), align: 0
  Segment part 32.            Intra module refs:   APSDE_FrameSend
                                                   APSME_FrameSecInit
                                                   APSME_FrameSecurityRemove
                                                   Segment part 31
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008D3F - 00008DC1 (0x83 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_FrameDataLoad      00008D3F        nwkDB_UserDataLoad (nwk_util)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008DC2 - 00008DC5 (0x4 bytes), align: 0
  Segment part 34.            Intra module refs:   NLDE_FrameDataLoad
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008DC6 - 00008DD3 (0xe bytes), align: 0
  Segment part 35.            Intra module refs:   Segment part 34
                                                   Segment part 36
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008DD4 - 00008DD9 (0x6 bytes), align: 0
  Segment part 36.            Intra module refs:   NLDE_FrameDataLoad
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008DDA - 00008DDF (0x6 bytes), align: 0
  Segment part 37.            Intra module refs:   NLDE_FrameDataLoad
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008DE0 - 00008DE4 (0x5 bytes), align: 0
  Segment part 38.            Intra module refs:   Segment part 37
                                                   Segment part 87
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008DE5 - 00008DF9 (0x15 bytes), align: 0
  Segment part 40.            Intra module refs:   APSDE_DataReqMTU
                                                   APSDE_FrameBlkFree
                                                   APSME_FrameSecApplyNM
                                                   APSME_FrameSecNM
                                                   APSME_FrameSecSetupNM
                                                   APSME_SecurityNM
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008DFA - 00008E00 (0x7 bytes), align: 0
  Segment part 47.            Intra module refs:   APSDE_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008E01 - 00008E0A (0xa bytes), align: 0
  Segment part 52.            Intra module refs:   Segment part 83
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008E0B - 00008E12 (0x8 bytes), align: 0
  Segment part 53.            Intra module refs:   Segment part 112
                                                   Segment part 155
                                                   Segment part 202
                                                   Segment part 52
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008E13 - 00008E1C (0xa bytes), align: 0
  Segment part 55.            Intra module refs:   APSDE_DataReq
                                                   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008E1D - 00008E2A (0xe bytes), align: 0
  Segment part 61.            Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008E2B - 00008E2F (0x5 bytes), align: 0
  Segment part 62.            Intra module refs:   Segment part 61
                                                   Segment part 91
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008E30 - 00008E37 (0x8 bytes), align: 0
  Segment part 63.            Intra module refs:   APSME_FrameSecNM
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecSetupNM   00008E30 
               is indirectly called
               stack 1 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008E38 - 00008E3B (0x4 bytes), align: 0
  Segment part 65.            Intra module refs:   APSDE_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008E3C - 00008E42 (0x7 bytes), align: 0
  Segment part 66.            Intra module refs:   Segment part 177
                                                   Segment part 178
                                                   Segment part 65
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008E43, align: 0
  Segment part 67.            Intra module refs:   APSME_FrameSecNM
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecRemoveNM
                                   00008E43 
               is indirectly called
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008E43 - 00008E47 (0x5 bytes), align: 0
  Segment part 68.            Intra module refs:   APSME_FrameSecApplyExtNM
                                                   APSME_FrameSecRemoveNM
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008E48 - 00008E4D (0x6 bytes), align: 0
  Segment part 72.            Intra module refs:   APSME_FrameSecInit
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008E4E - 00008E56 (0x9 bytes), align: 0
  Segment part 77.            Intra module refs:   APSME_FrameSecNM
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecApplyNM   00008E4E 
               is indirectly called
               stack 1 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008E57 - 00008E59 (0x3 bytes), align: 0
  Segment part 79.            Intra module refs:   APSME_FrameSecNM
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecApplyExtNM
                                   00008E57 
               is indirectly called
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008E5A - 00008E97 (0x3e bytes), align: 0
  Segment part 81.            Intra module refs:   APSME_SecurityNM
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecNM        00008E5A 
               stack 1 = 00000002 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008E98 - 00008EF3 (0x5c bytes), align: 0
  Segment part 82.            Intra module refs:   APSDE_FrameBlkInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecInit      00008E98 
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000009 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008EF4 - 00008EF7 (0x4 bytes), align: 0
  Segment part 83.            Intra module refs:   APSME_FrameSecInit
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008EF8 - 00008F07 (0x10 bytes), align: 0
  Segment part 84.            Intra module refs:   APSDE_FrameSend
                                                   APSME_FrameSecInit
                                                   Segment part 32
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008F08 - 000090C5 (0x1be bytes), align: 0
  Segment part 85.            Intra module refs:   APSDE_FrameSend
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_FrameHdrSet       00008F08 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000B ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000090C6 - 000090C9 (0x4 bytes), align: 0
  Segment part 86.            Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000090CA - 000090D2 (0x9 bytes), align: 0
  Segment part 87.            Intra module refs:   Segment part 86
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000090D3 - 000090DC (0xa bytes), align: 0
  Segment part 88.            Intra module refs:   APSDE_DataReq
                                                   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000090DD - 000090E0 (0x4 bytes), align: 0
  Segment part 89.            Intra module refs:   Segment part 216
                                                   Segment part 225
                                                   Segment part 88
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000090E1 - 000090E7 (0x7 bytes), align: 0
  Segment part 90.            Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000090E8 - 000090F0 (0x9 bytes), align: 0
  Segment part 91.            Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000090F1 - 000090F8 (0x8 bytes), align: 0
  Segment part 92.            Intra module refs:   APSDE_FrameHdrSet
                                                   Segment part 91
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000090F9 - 000090FB (0x3 bytes), align: 0
  Segment part 93.            Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000090FC - 00009101 (0x6 bytes), align: 0
  Segment part 94.            Intra module refs:   Segment part 205
                                                   Segment part 93
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009102 - 00009109 (0x8 bytes), align: 0
  Segment part 95.            Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000910A - 00009110 (0x7 bytes), align: 0
  Segment part 96.            Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009111 - 00009115 (0x5 bytes), align: 0
  Segment part 97.            Intra module refs:   Segment part 90
                                                   Segment part 96
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009116 - 0000911D (0x8 bytes), align: 0
  Segment part 98.            Intra module refs:   Segment part 96
                                                   Segment part 99
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000911E - 00009120 (0x3 bytes), align: 0
  Segment part 99.            Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009121 - 00009126 (0x6 bytes), align: 0
  Segment part 100.           Intra module refs:   Segment part 101
                                                   Segment part 99
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009127 - 00009133 (0xd bytes), align: 0
  Segment part 101.           Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009134 - 00009138 (0x5 bytes), align: 0
  Segment part 102.           Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009139 - 00009229 (0xf1 bytes), align: 0
  Segment part 103.           Intra module refs:   APSDE_FrameBlkInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_FrameHdrInit      00009139 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000009 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000922A - 00009239 (0x10 bytes), align: 0
  Segment part 104.           Intra module refs:   APSDE_FrameHdrInit
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000923A - 00009242 (0x9 bytes), align: 0
  Segment part 105.           Intra module refs:   Segment part 104
                                                   Segment part 173
                                                   Segment part 72
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009243 - 0000924C (0xa bytes), align: 0
  Segment part 106.           Intra module refs:   APSDE_FrameHdrInit
                                                   APSME_FrameSecInit
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000924D - 00009276 (0x2a bytes), align: 0
  Segment part 107.           Intra module refs:   APSDE_FrameAlloc
                                                   APSDE_FrameSend
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_FrameBlkFree      0000924D 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000011 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009277 - 0000927F (0x9 bytes), align: 0
  Segment part 108.           Intra module refs:   APSDE_FrameBlkFree
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009280 - 000092B3 (0x34 bytes), align: 0
  Segment part 109.           Intra module refs:   APSDE_FrameAlloc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_FrameBlkInit      00009280 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000011 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000092B4 - 000092B9 (0x6 bytes), align: 0
  Segment part 110.           Intra module refs:   APSDE_FrameBlkInit
                                                   APSME_CmdPkt
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000092BA - 000092C3 (0xa bytes), align: 0
  Segment part 111.           Intra module refs:   APSDE_DataReq
                                                   APSDE_FrameAlloc
                                                   APSDE_FrameBlkInit
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000092C4 - 000092CA (0x7 bytes), align: 0
  Segment part 112.           Intra module refs:   APSDE_FrameBlkInit
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000092CB - 000092CC (0x2 bytes), align: 0
  Segment part 113.           Intra module refs:   Segment part 102
                                                   Segment part 112
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000092CD - 000092D1 (0x5 bytes), align: 0
  Segment part 114.           Intra module refs:   Segment part 113
                                                   Segment part 123
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000092D2 - 000092D8 (0x7 bytes), align: 0
  Segment part 116.           Intra module refs:   APSDE_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000092D9 - 000092E0 (0x8 bytes), align: 0
  Segment part 117.           Intra module refs:   Segment part 116
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000092E1 - 000092E8 (0x8 bytes), align: 0
  Segment part 118.           Intra module refs:   APSDE_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000092E9 - 000092EE (0x6 bytes), align: 0
  Segment part 119.           Intra module refs:   APSDE_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000092EF - 000092F5 (0x7 bytes), align: 0
  Segment part 120.           Intra module refs:   Segment part 119
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000092F6 - 000092FD (0x8 bytes), align: 0
  Segment part 121.           Intra module refs:   Segment part 119
                                                   Segment part 93
                                                   Segment part 95
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000092FE - 00009304 (0x7 bytes), align: 0
  Segment part 122.           Intra module refs:   Segment part 121
                                                   Segment part 97
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009305 - 0000930A (0x6 bytes), align: 0
  Segment part 123.           Intra module refs:   Segment part 122
                                                   Segment part 62
                                                   Segment part 89
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000930B - 0000930D (0x3 bytes), align: 0
  Segment part 125.           Intra module refs:   APSME_LookupNwkAddr
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000930E - 00009312 (0x5 bytes), align: 0
  Segment part 126.           Intra module refs:   Segment part 125
                                                   Segment part 228
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009313 - 0000932C (0x1a bytes), align: 0
  Segment part 143.           Intra module refs:   APSDE_FrameAlloc
                                                   APSDE_FrameSend
                                                   APSME_FrameSecInit
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000932D - 0000933D (0x11 bytes), align: 0
  Segment part 146.           Intra module refs:   NLDE_FrameDataLoad
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000933E - 00009346 (0x9 bytes), align: 0
  Segment part 150.           Intra module refs:   NLDE_FrameDataLoad
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009347 - 0000934F (0x9 bytes), align: 0
  Segment part 151.           Intra module refs:   Segment part 146
                                                   Segment part 150
                                                   Segment part 19
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009350 - 00009356 (0x7 bytes), align: 0
  Segment part 154.           Intra module refs:   APSDE_FrameAlloc
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009357 - 00009363 (0xd bytes), align: 0
  Segment part 155.           Intra module refs:   APSDE_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009364 - 0000936E (0xb bytes), align: 0
  Segment part 156.           Intra module refs:   APSDE_DataReq
                                                   APSDE_FrameAlloc
                                                   APSDE_FrameHdrSet
                                                   NLDE_FrameDataLoad
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000936F - 0000937A (0xc bytes), align: 0
  Segment part 157.           Intra module refs:   APSDE_DataReq
                                                   APSDE_FrameAlloc
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000937B - 0000937D (0x3 bytes), align: 0
  Segment part 170.           Intra module refs:   APSME_SecurityNM
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_CmdPktNM          0000937B 
               is indirectly called
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000937E - 00009391 (0x14 bytes), align: 0
  Segment part 171.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_CmdPkt            0000937E        APS_event_loop (APS)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009392 - 00009516 (0x185 bytes), align: 0
  Segment part 172.           Intra module refs:   Segment part 222
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_FrameAlloc        00009392        apsGenerateAck (aps_util)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000019 ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009517 - 00009526 (0x10 bytes), align: 0
  Segment part 173.           Intra module refs:   APSDE_DataReq
                                                   APSDE_FrameAlloc
                                                   NLDE_FrameDataLoad
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009527 - 0000952A (0x4 bytes), align: 0
  Segment part 174.           Intra module refs:   APSDE_FrameAlloc
                                                   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000952B - 00009535 (0xb bytes), align: 0
  Segment part 175.           Intra module refs:   Segment part 101
                                                   Segment part 174
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009536 - 0000954D (0x18 bytes), align: 0
  Segment part 176.           Intra module refs:   APSDE_FrameAlloc
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000954E - 00009552 (0x5 bytes), align: 0
  Segment part 177.           Intra module refs:   APSDE_FrameAlloc
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009553 - 00009558 (0x6 bytes), align: 0
  Segment part 178.           Intra module refs:   APSDE_FrameAlloc
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009559 - 0000955D (0x5 bytes), align: 0
  Segment part 179.           Intra module refs:   APSDE_FrameAlloc
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000955E - 00009563 (0x6 bytes), align: 0
  Segment part 180.           Intra module refs:   Segment part 179
                                                   Segment part 47
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009564 - 0000956B (0x8 bytes), align: 0
  Segment part 181.           Intra module refs:   APSDE_FrameAlloc
                                                   APSDE_FrameHdrInit
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000956C - 00009572 (0x7 bytes), align: 0
  Segment part 182.           Intra module refs:   Segment part 181
                                                   Segment part 191
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009573 - 000095DF (0x6d bytes), align: 0
  Segment part 183.           Intra module refs:   APSDE_DataReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_FrameSend         00009573        apsGenerateAck (aps_util)
               calls direct, is recursive
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000019 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000095E0 - 000095EA (0xb bytes), align: 0
  Segment part 184.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecurityRemove
                                   000095E0        NLDE_DataIndication (NLMEDE_CB)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000095EB - 000095EB (0x1 bytes), align: 0
  Segment part 189.           Intra module refs:   APSDE_DataReq
                                                   Segment part 220
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000095EC - 000095F2 (0x7 bytes), align: 0
  Segment part 190.           Intra module refs:   Segment part 189
                                                   Segment part 208
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000095F3 - 000095F5 (0x3 bytes), align: 0
  Segment part 191.           Intra module refs:   NLDE_FrameDataLoad
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000095F6 - 000095FA (0x5 bytes), align: 0
  Segment part 192.           Intra module refs:   Segment part 191
                                                   Segment part 226
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000095FB - 0000960A (0x10 bytes), align: 0
  Segment part 194.           Intra module refs:   Segment part 110
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000960B - 00009612 (0x8 bytes), align: 0
  Segment part 199.           Intra module refs:   Segment part 106
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009613 - 0000961A (0x8 bytes), align: 0
  Segment part 202.           Intra module refs:   Segment part 180
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000961B - 00009621 (0x7 bytes), align: 0
  Segment part 204.           Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009622 - 00009625 (0x4 bytes), align: 0
  Segment part 205.           Intra module refs:   Segment part 101
                                                   Segment part 204
                                                   Segment part 98
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009626 - 00009629 (0x4 bytes), align: 0
  Segment part 207.           Intra module refs:   Segment part 118
                                                   Segment part 146
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000962A - 00009631 (0x8 bytes), align: 0
  Segment part 208.           Intra module refs:   Segment part 151
                                                   Segment part 207
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009632 - 00009639 (0x8 bytes), align: 0
  Segment part 212.           Intra module refs:   APSDE_FrameAlloc
                                                   APSDE_FrameHdrInit
                                                   NLDE_FrameDataLoad
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000963A - 00009640 (0x7 bytes), align: 0
  Segment part 213.           Intra module refs:   APSDE_FrameAlloc
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009641 - 00009645 (0x5 bytes), align: 0
  Segment part 214.           Intra module refs:   APSDE_DataReq
                                                   Segment part 194
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009646 - 0000964C (0x7 bytes), align: 0
  Segment part 216.           Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000964D - 00009653 (0x7 bytes), align: 0
  Segment part 217.           Intra module refs:   Segment part 213
                                                   Segment part 216
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009654 - 0000965B (0x8 bytes), align: 0
  Segment part 220.           Intra module refs:   Segment part 222
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000965C - 00009666 (0xb bytes), align: 0
  Segment part 222.           Intra module refs:   APSDE_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009667 - 00009671 (0xb bytes), align: 0
  Segment part 224.           Intra module refs:   APSME_CmdPkt
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009672 - 0000967E (0xd bytes), align: 0
  Segment part 225.           Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000967F - 00009682 (0x4 bytes), align: 0
  Segment part 226.           Intra module refs:   Segment part 111
                                                   Segment part 125
                                                   Segment part 173
                                                   Segment part 225
                                                   Segment part 37
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009683 - 00009686 (0x4 bytes), align: 0
  Segment part 227.           Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009687 - 0000968A (0x4 bytes), align: 0
  Segment part 228.           Intra module refs:   Segment part 182
                                                   Segment part 199
                                                   Segment part 227
                                                   Segment part 66
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000968B - 00009696 (0xc bytes), align: 0
  Segment part 232.           Intra module refs:   Segment part 108
                                                   Segment part 143
                                                   Segment part 17
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009697 - 000096B2 (0x1c bytes), align: 0
  Segment part 234.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_SecurityNM        00009697        ?Subroutine0 (ZDSecMgr)
               calls direct
               stack 1 = 00000000 ( 00000002 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : APSMEDE_CB

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000153C2 - 00015409 (0x48 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_DataConfirm       000153C2        NLDE_DataCnf (NLMEDE_CB)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001540A - 00015410 (0x7 bytes), align: 0
  Segment part 7.             Intra module refs:   APSDE_DataConfirm
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015411 - 000155C2 (0x1b2 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_DataIndication    00015411        NLDE_DataIndication (NLMEDE_CB)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000005 ( 00000017 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000155C3 - 000155D0 (0xe bytes), align: 0
  Segment part 10.            Intra module refs:   APSDE_DataConfirm
                                                   APSDE_DataIndication
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000155D1 - 000155E0 (0x10 bytes), align: 0
  Segment part 14.            Intra module refs:   APSDE_DataIndication
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000155E1 - 000155EB (0xb bytes), align: 0
  Segment part 21.            Intra module refs:   APSDE_DataIndication
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000155EC - 000155FD (0x12 bytes), align: 0
  Segment part 31.            Intra module refs:   APSDE_DataIndication

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : AddrMgr

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E32A - 0000E32B (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   AddrMgrEntryLookupExt
                                                   AddrMgrInit
                                                   Segment part 37
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntryTotal       0000E32A 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E32C - 0000E32D (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   AddrMgrInit
                                                   Segment part 34
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntryData        0000E32C 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015171 - 0001517D (0xd bytes), align: 0
  Segment part 9.             Intra module refs:   AddrMgrExtAddrValid
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001517E - 00015187 (0xa bytes), align: 0
  Segment part 16.            Intra module refs:   AddrMgrExtAddrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015188 - 0001518A (0x3 bytes), align: 0
  Segment part 19.            Intra module refs:   AddrMgrExtAddrValid
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001518B - 0001518F (0x5 bytes), align: 0
  Segment part 20.            Intra module refs:   Segment part 19
                                                   Segment part 51
                                                   Segment part 56
                                                   Segment part 63
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015190 - 00015197 (0x8 bytes), align: 0
  Segment part 21.            Intra module refs:   AddrMgrEntryLookupExt
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015198 - 0001519E (0x7 bytes), align: 0
  Segment part 22.            Intra module refs:   Segment part 21
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001519F - 000151F7 (0x59 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrInit             0001519F        nwk_globals_init (nwk_globals)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000151F8 - 00015201 (0xa bytes), align: 0
  Segment part 32.            Intra module refs:   AddrMgrInit
                                                   AddrMgrNwkAddrLookup
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015202 - 0001521A (0x19 bytes), align: 0
  Segment part 34.            Intra module refs:   AddrMgrEntryLookupExt
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001521B - 00015223 (0x9 bytes), align: 0
  Segment part 36.            Intra module refs:   AddrMgrEntryLookupExt
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015224 - 0001522F (0xc bytes), align: 0
  Segment part 37.            Intra module refs:   AddrMgrEntryLookupExt
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015230 - 0001524E (0x1f bytes), align: 0
  Segment part 38.            Intra module refs:   AddrMgrNwkAddrLookup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrExtAddrSet       00015230 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000028 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001524F - 00015276 (0x28 bytes), align: 0
  Segment part 39.            Intra module refs:   Segment part 61
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrExtAddrValid     0001524F 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000016 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015277 - 000152D5 (0x5f bytes), align: 0
  Segment part 42.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrNwkAddrLookup    00015277        APSME_LookupNwkAddr (APSMEDE)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000016 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000152D6 - 000152DF (0xa bytes), align: 0
  Segment part 49.            Intra module refs:   AddrMgrEntryLookupExt
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000152E0 - 000152F0 (0x11 bytes), align: 0
  Segment part 51.            Intra module refs:   AddrMgrEntryLookupExt
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000152F1 - 0001537F (0x8f bytes), align: 0
  Segment part 52.            Intra module refs:   AddrMgrNwkAddrLookup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntryLookupExt   000152F1 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000028 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015380 - 00015384 (0x5 bytes), align: 0
  Segment part 53.            Intra module refs:   AddrMgrEntryLookupExt
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015385 - 0001538F (0xb bytes), align: 0
  Segment part 54.            Intra module refs:   AddrMgrEntryLookupExt
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015390 - 0001539B (0xc bytes), align: 0
  Segment part 55.            Intra module refs:   AddrMgrEntryLookupExt
                                                   AddrMgrNwkAddrLookup
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001539C - 000153A4 (0x9 bytes), align: 0
  Segment part 56.            Intra module refs:   Segment part 55
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000153A5 - 000153AB (0x7 bytes), align: 0
  Segment part 58.            Intra module refs:   AddrMgrEntryLookupExt
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000153AC - 000153B4 (0x9 bytes), align: 0
  Segment part 61.            Intra module refs:   Segment part 21
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000153B5 - 000153BB (0x7 bytes), align: 0
  Segment part 63.            Intra module refs:   AddrMgrEntryLookupExt
                                                   AddrMgrNwkAddrLookup
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000153BC - 000153C1 (0x6 bytes), align: 0
  Segment part 64.            Intra module refs:   Segment part 37
                                                   Segment part 55
                                                   Segment part 63

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : NLMEDE

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E32E - 0000E32F (0x2 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_ScanFields         0000E32E        nwk_beacon_notify_ind_processing (nwk)
                                                   nwk_init (nwk)
                                                   nwk_scan_cnf_processing (nwk)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E330 - 0000E331 (0x2 bytes), align: 0
  Segment part 12.            Intra module refs:   NLME_ReJoinRequest
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           savedResponseRate       0000E330        NLME_RejoinRspCmdProcess (nwk_util)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E332 - 0000E334 (0x3 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pnwk_ScanPANChanSelect
                                   0000E332        nwk_scan_cnf_processing (nwk)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E335 - 0000E337 (0x3 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pnwk_ScanPANChanVerify
                                   0000E335        nwk_scan_cnf_processing (nwk)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E338 - 0000E33A (0x3 bytes), align: 0
  Segment part 15.            Intra module refs:   NLME_DeviceJoiningInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pnwk_ScanJoiningOrphan
                                   0000E338        nwk_scan_cnf_processing (nwk)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E33B - 0000E33D (0x3 bytes), align: 0
  Segment part 16.            Intra module refs:   NLME_DeviceJoiningInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pnwk_associate_cnf_processing
                                   0000E33B        nwk_event_loop (nwk)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E33E - 0000E340 (0x3 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pNLME_NetworkFormationConfirm
                                   0000E33E        Segment part 59 (nwk)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001064D - 00010654 (0x8 bytes), align: 0
  Segment part 19.            Intra module refs:   NLME_DeviceJoiningInit
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010655 - 00010675 (0x21 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_DeviceJoiningInit
                                   00010655        ZDO_Init (ZDObject)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010676 - 000106C9 (0x54 bytes), align: 0
  Segment part 21.            Intra module refs:   NLME_ReJoinRequest
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_DataReq            00010676        APSDE_FrameSend (APSMEDE)
               calls direct, is recursive
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000F ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000106CA - 000106D1 (0x8 bytes), align: 0
  Segment part 22.            Intra module refs:   NLDE_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000106D2 - 00010792 (0xc1 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_DataReqAlloc       000106D2        APSDE_FrameAlloc (APSMEDE)
                                                   NLME_CmdDataReqAlloc (nwk_util)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010793 - 000107D4 (0x42 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_NetworkDiscoveryRequest
                                   00010793        ZDO_StartDevice (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000021 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000107D5 - 000107DF (0xb bytes), align: 0
  Segment part 28.            Intra module refs:   NLDE_DataReqAlloc
                                                   NLME_GetRequest
                                                   NLME_NetworkDiscoveryRequest
                                                   NLME_OrphanJoinRequest
                                                   NLME_ReJoinRequest
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000107E0 - 00010813 (0x34 bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_OrphanJoinRequest
                                   000107E0        ZDO_StartDevice (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000021 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010814 - 00010819 (0x6 bytes), align: 0
  Segment part 30.            Intra module refs:   NLME_NetworkDiscoveryRequest
                                                   NLME_OrphanJoinRequest
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001081A - 00010822 (0x9 bytes), align: 0
  Segment part 31.            Intra module refs:   Segment part 28
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010823 - 00010960 (0x13e bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_ReJoinRequest      00010823        ZDApp_ProcessOSALMsg (ZDApp)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010961 - 00010966 (0x6 bytes), align: 0
  Segment part 33.            Intra module refs:   NLDE_DataReqAlloc
                                                   NLME_ReJoinRequest
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010967 - 00010974 (0xe bytes), align: 0
  Segment part 34.            Intra module refs:   NLDE_DataReqAlloc
                                                   NLME_JoinRequest
                                                   NLME_ReJoinRequest
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010975 - 00010AEB (0x177 bytes), align: 0
  Segment part 35.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_JoinRequest        00010975        ZDApp_ProcessOSALMsg (ZDApp)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000001 ( 0000002E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010AEC - 00010AF3 (0x8 bytes), align: 0
  Segment part 36.            Intra module refs:   NLME_JoinRequest
                                                   Segment part 33
                                                   Segment part 38
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010AF4 - 00010AFD (0xa bytes), align: 0
  Segment part 37.            Intra module refs:   NLME_JoinRequest
                                                   NLME_ReJoinRequest
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010AFE - 00010B03 (0x6 bytes), align: 0
  Segment part 38.            Intra module refs:   NLDE_DataReqAlloc
                                                   NLME_JoinRequest
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010B04 - 00010B07 (0x4 bytes), align: 0
  Segment part 39.            Intra module refs:   NLME_JoinRequest
                                                   NLME_ReJoinRequest
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010B08 - 00010B0F (0x8 bytes), align: 0
  Segment part 40.            Intra module refs:   Segment part 31
                                                   Segment part 39
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010B10 - 00010B17 (0x8 bytes), align: 0
  Segment part 41.            Intra module refs:   Segment part 30
                                                   Segment part 40
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010B18 - 00010B23 (0xc bytes), align: 0
  Segment part 45.            Intra module refs:   NLDE_DataReq
                                                   NLME_JoinRequest
                                                   NLME_ReJoinRequest
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010B24 - 00010BF7 (0xd4 bytes), align: 0
  Segment part 46.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_GetRequest         00010B24        NLME_GetProtocolVersion (nwk_util)
                                                   ZDApp_Init (ZDApp)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010BF8 - 00010C05 (0xe bytes), align: 0
  Segment part 47.            Intra module refs:   NLME_GetRequest
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010C06 - 00010C64 (0x5f bytes), align: 0
  Segment part 48.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_SetRequest         00010C06        ZDAppSetupProtoVersion (ZDApp)
                                                   ZDO_NetworkDiscoveryConfirmCB (ZDApp)
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010C65 - 00010C70 (0xc bytes), align: 0
  Segment part 49.            Intra module refs:   NLME_GetRequest
                                                   NLME_SetRequest

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : NLMEDE_CB

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00013884 - 000139F0 (0x16d bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_DataCnf            00013884        nwk_data_cnf_processing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000139F1 - 00013B85 (0x195 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_DataIndication     000139F1        NLDE_DataIndSend (nwk_util)
                                                   nwk_data_ind_processing (nwk)
               calls direct, is recursive
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000004 ( 00000037 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00013B86 - 00013B91 (0xc bytes), align: 0
  Segment part 8.             Intra module refs:   NLDE_DataCnf
                                                   NLDE_DataIndication
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00013B92 - 00013B9A (0x9 bytes), align: 0
  Segment part 9.             Intra module refs:   NLDE_DataIndication
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00013B9B - 00013BA6 (0xc bytes), align: 0
  Segment part 10.            Intra module refs:   NLDE_DataIndication
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00013BA7 - 00013BB4 (0xe bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 10
                                                   Segment part 9
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00013BB5 - 00013BBF (0xb bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_NetworkDiscoveryConfirm
                                   00013BB5        nwk_scan_cnf_processing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00013BC0 - 00013BCA (0xb bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_JoinConfirm        00013BC0        Segment part 45 (nwk)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00013BCB - 00013BD3 (0x9 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_LeaveCnf           00013BCB        NLME_LeaveCmdCnf (nwk_util)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00013BD4 - 00013BDD (0xa bytes), align: 0
  Segment part 16.            Intra module refs:   NLME_JoinConfirm
                                                   NLME_LeaveCnf
                                                   NLME_LeaveInd
                                                   NLME_NetworkDiscoveryConfirm
                                                   NLME_PollConfirm
                                                   NLME_SyncIndication
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00013BDE - 00013BE8 (0xb bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_LeaveInd           00013BDE        NLME_LeaveCmdProcess (nwk_util)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00013BE9 - 00013BF3 (0xb bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_SyncIndication     00013BE9        RTG_UpdateNeighborEntry (nwk_util)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00013BF4 - 00013BFE (0xb bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_PollConfirm        00013BF4        nwk_event_loop (nwk)
               calls direct
               stack 1 = 00000000 ( 00000002 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : aps_groups

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E341 - 0000E342 (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   aps_AddGroup
                                                   aps_CountAllGroups
                                                   aps_FindGroup
                                                   aps_FindGroupForEndpoint
                                                   aps_GroupsWriteNV
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014795 - 00014852 (0xbe bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aps_AddGroup            00014795        SampleApp_Init (SampleApp)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000021 ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014853 - 00014898 (0x46 bytes), align: 0
  Segment part 8.             Intra module refs:   aps_AddGroup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aps_FindGroup           00014853 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000E ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014899 - 0001489D (0x5 bytes), align: 0
  Segment part 9.             Intra module refs:   aps_FindGroup
                                                   aps_FindGroupForEndpoint
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001489E - 000148E8 (0x4b bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aps_FindGroupForEndpoint
                                   0001489E        ?Subroutine6 (AF)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000148E9 - 000148ED (0x5 bytes), align: 0
  Segment part 15.            Intra module refs:   aps_GroupsWriteNV
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000148EE - 000148F3 (0x6 bytes), align: 0
  Segment part 16.            Intra module refs:   aps_AddGroup
                                                   aps_GroupsWriteNV
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000148F4 - 000148FA (0x7 bytes), align: 0
  Segment part 18.            Intra module refs:   aps_CountAllGroups
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000148FB - 00014904 (0xa bytes), align: 0
  Segment part 19.            Intra module refs:   aps_AddGroup
                                                   aps_CountAllGroups
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014905 - 00014921 (0x1d bytes), align: 0
  Segment part 20.            Intra module refs:   aps_AddGroup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aps_CountAllGroups      00014905 
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 0000000E ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014922 - 00014A16 (0xf5 bytes), align: 0
  Segment part 23.            Intra module refs:   aps_AddGroup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aps_GroupsWriteNV       00014922 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000E ( 00000024 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014A17 - 00014A25 (0xf bytes), align: 0
  Segment part 24.            Intra module refs:   aps_GroupsWriteNV

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : aps_util

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FA5C - 0000FC78 (0x21d bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_ParseMsg          0000FA5C        NLDE_DataIndication (NLMEDE_CB)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FC79 - 0000FC86 (0xe bytes), align: 0
  Segment part 7.             Intra module refs:   APSDE_ParseMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FC87 - 0000FC8F (0x9 bytes), align: 0
  Segment part 8.             Intra module refs:   APSDE_ParseMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FC90 - 0000FC96 (0x7 bytes), align: 0
  Segment part 9.             Intra module refs:   APSDE_ParseMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FC97 - 0000FCA0 (0xa bytes), align: 0
  Segment part 10.            Intra module refs:   Segment part 12
                                                   Segment part 9
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FCA1 - 0000FCAE (0xe bytes), align: 0
  Segment part 11.            Intra module refs:   APSDE_ParseMsg
                                                   Segment part 9
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FCAF - 0000FCB4 (0x6 bytes), align: 0
  Segment part 12.            Intra module refs:   APSDE_ParseMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FCB5 - 0000FCB8 (0x4 bytes), align: 0
  Segment part 13.            Intra module refs:   APSDE_ParseMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FCB9 - 0000FCC0 (0x8 bytes), align: 0
  Segment part 14.            Intra module refs:   Segment part 13
                                                   Segment part 15
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FCC1 - 0000FCC6 (0x6 bytes), align: 0
  Segment part 15.            Intra module refs:   APSDE_ParseMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FCC7 - 0000FCCD (0x7 bytes), align: 0
  Segment part 16.            Intra module refs:   APSDE_ParseMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FCCE - 0000FCE2 (0x15 bytes), align: 0
  Segment part 17.            Intra module refs:   APSDE_ParseMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FCE3 - 0000FE13 (0x131 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           apsGenerateAck          0000FCE3        NLDE_DataIndication (NLMEDE_CB)
               calls direct, is recursive
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000013 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FE14 - 0000FE18 (0x5 bytes), align: 0
  Segment part 19.            Intra module refs:   apsAckFindMatchCB
                                                   apsGenerateAck
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FE19 - 0000FE1C (0x4 bytes), align: 0
  Segment part 20.            Intra module refs:   apsGenerateAck
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FE1D - 0000FE23 (0x7 bytes), align: 0
  Segment part 21.            Intra module refs:   Segment part 14
                                                   Segment part 16
                                                   Segment part 20
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FE24 - 0000FE2C (0x9 bytes), align: 0
  Segment part 22.            Intra module refs:   APSDE_ParseMsg
                                                   apsGenerateAck
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FE2D - 0000FE39 (0xd bytes), align: 0
  Segment part 23.            Intra module refs:   apsGenerateAck
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FE3A - 0000FE45 (0xc bytes), align: 0
  Segment part 24.            Intra module refs:   apsGenerateAck
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FE46 - 0000FE51 (0xc bytes), align: 0
  Segment part 25.            Intra module refs:   APSDE_ParseMsg
                                                   apsAckFindMatchCB
                                                   apsGenerateAck
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FE52 - 0000FEF4 (0xa3 bytes), align: 0
  Segment part 26.            Intra module refs:   apsProcessAck
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           apsAckFindMatchCB       0000FE52 
               is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FEF5 - 0000FF02 (0xe bytes), align: 0
  Segment part 27.            Intra module refs:   apsAckFindMatchCB
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FF03 - 0000FFB7 (0xb5 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           apsProcessAck           0000FF03        NLDE_DataIndication (NLMEDE_CB)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FFB8 - 0000FFC2 (0xb bytes), align: 0
  Segment part 29.            Intra module refs:   apsGenerateAck
                                                   apsProcessAck

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : nwk

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E343 - 0000E3A2 (0x60 bytes), align: 0
  Segment part 8.             Intra module refs:   Segment part 43
                                                   Segment part 75
                                                   nwk_ScanJoiningOrphan
                                                   nwk_associate_cnf_processing
                                                   nwk_beacon_notify_ind_processing
                                                   nwk_data_ind_processing
                                                   nwk_event_loop
                                                   nwk_init
                                                   nwk_scan_cnf_processing
                                                   nwk_set_poll_evt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _NIB                    0000E343        APSDE_DataReqMTU (APSMEDE)
                                                   APSME_LookupNwkAddr (APSMEDE)
                                                   NIB_init (nwk_globals)
                                                   NLDE_CheckFrameSecurity (nwk_util)
                                                   NLDE_DataReq (NLMEDE)
                                                   NLDE_DataReqSend (nwk_util)
                                                   NLME_GetRequest (NLMEDE)
                                                   NLME_GetShortAddr (nwk_util)
                                                   NLME_JoinRequest (NLMEDE)
                                                   NLME_NetworkDiscoveryRequest (NLMEDE)
                                                   NLME_OrphanJoinRequest (NLMEDE)
                                                   NLME_ReJoinRequest (NLMEDE)
                                                   NLME_RejoinRspCmdProcess (nwk_util)
                                                   NLME_SetRequest (NLMEDE)
                                                   Segment part 34 (NLMEDE)
                                                   Segment part 41 (nwk_util)
                                                   Segment part 49 (NLMEDE)
                                                   ZDApp_ProcessNetworkJoin (ZDApp)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3A3 - 0000E3A3 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   Segment part 33
                                                   nwkBuildDataCnf
                                                   nwk_ScanJoiningOrphan
                                                   nwk_event_loop
                                                   nwk_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NWK_TaskID              0000E3A3        MAC_CbackEvent (zmac_cb)
                                                   NLDE_DataCnf (NLMEDE_CB)
                                                   NLME_RejoinRspCmdProcess (nwk_util)
                                                   NLME_SetPollRate (nwk_util)
                                                   RTG_UpdateNeighborEntry (nwk_util)
                                                   Segment part 17 (nwk_bufs)
                                                   nwkDB_Add (nwk_bufs)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3A4 - 0000E3A5 (0x2 bytes), align: 0
  Segment part 10.            Intra module refs:   nwk_beacon_notify_ind_processing
                                                   nwk_desc_list_free
                                                   nwk_getNetworkDesc
                                                   nwk_init
                                                   nwk_scan_cnf_processing
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NwkDescList             0000E3A4 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EFFE - 0000F005 (0x8 bytes), align: 0
  Segment part 6.             Intra module refs:   nwk_getNetworkDesc
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006A3A - 00006A8C (0x53 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_init                00006A3A        osalAddTasks (OSAL_SampleApp)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006A8D - 00006CD8 (0x24c bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_event_loop          00006A8D        osalAddTasks (OSAL_SampleApp)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006CD9 - 00006D1A (0x42 bytes), align: 0
  Segment part 20.            Intra module refs:   nwk_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NwkPollReq              00006CD9 
               calls direct
               stack 1 = 00000000 ( 00000003 )
               stack 2 = 0000000E ( 00000016 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006D1B - 00006DA7 (0x8d bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_data_req_send       00006D1B        nwk_SendNextDataBuf (nwk_bufs)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006DA8 - 00006DAF (0x8 bytes), align: 0
  Segment part 22.            Intra module refs:   nwk_data_ind_processing
                                                   nwk_data_req_send
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006DB0 - 00006DB8 (0x9 bytes), align: 0
  Segment part 23.            Intra module refs:   Segment part 22
                                                   Segment part 39
                                                   Segment part 40
                                                   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006DB9 - 00006DBF (0x7 bytes), align: 0
  Segment part 24.            Intra module refs:   nwk_data_req_send
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006DC0 - 00006DCA (0xb bytes), align: 0
  Segment part 25.            Intra module refs:   Segment part 24
                                                   Segment part 26
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006DCB - 00006DDC (0x12 bytes), align: 0
  Segment part 26.            Intra module refs:   nwk_data_req_send
                                                   nwk_event_loop
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006DDD - 00006DE8 (0xc bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkSimulateDataCnf      00006DDD        apsProcessAck (aps_util)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006DE9 - 00006DEF (0x7 bytes), align: 0
  Segment part 28.            Intra module refs:   NwkPollReq
                                                   nwkSimulateDataCnf
                                                   nwk_init
                                                   nwk_set_poll_evt
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006DF0 - 00006E2F (0x40 bytes), align: 0
  Segment part 29.            Intra module refs:   Segment part 26
                                                   nwkSimulateDataCnf
                                                   nwk_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkBuildDataCnf         00006DF0 
               calls direct
               stack 1 = 00000002 ( 00000001 )
               stack 2 = 0000000E ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006E30 - 00006E34 (0x5 bytes), align: 0
  Segment part 30.            Intra module refs:   nwkBuildDataCnf
                                                   nwk_scan_cnf_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006E35 - 00006E52 (0x1e bytes), align: 0
  Segment part 31.            Intra module refs:   nwk_associate_cnf_processing
                                                   nwk_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_set_poll_evt        00006E35 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000012 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006E53 - 00006FD1 (0x17f bytes), align: 0
  Segment part 32.            Intra module refs:   nwk_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_data_cnf_processing
                                   00006E53 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000E ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006FD2 - 00006FE6 (0x15 bytes), align: 0
  Segment part 33.            Intra module refs:   nwk_data_cnf_processing
                                                   nwk_event_loop
                                                   nwk_set_poll_evt
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006FE7 - 00007209 (0x223 bytes), align: 0
  Segment part 34.            Intra module refs:   nwk_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_data_ind_processing
                                   00006FE7 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000E ( 0000002C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000720A - 00007211 (0x8 bytes), align: 0
  Segment part 35.            Intra module refs:   Segment part 53
                                                   nwk_data_cnf_processing
                                                   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007212 - 0000721A (0x9 bytes), align: 0
  Segment part 36.            Intra module refs:   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000721B - 00007220 (0x6 bytes), align: 0
  Segment part 37.            Intra module refs:   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007221 - 00007230 (0x10 bytes), align: 0
  Segment part 38.            Intra module refs:   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007231 - 0000723E (0xe bytes), align: 0
  Segment part 39.            Intra module refs:   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000723F - 0000724D (0xf bytes), align: 0
  Segment part 40.            Intra module refs:   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000724E - 000073DF (0x192 bytes), align: 0
  Segment part 41.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_associate_cnf_processing
                                   0000724E        NLME_DeviceJoiningInit (NLMEDE)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000073E0 - 000073E4 (0x5 bytes), align: 0
  Segment part 42.            Intra module refs:   nwk_associate_cnf_processing
                                                   nwk_desc_list_free
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000073E5 - 000073EB (0x7 bytes), align: 0
  Segment part 43.            Intra module refs:   Segment part 37
                                                   nwk_associate_cnf_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000073EC - 000073F1 (0x6 bytes), align: 0
  Segment part 44.            Intra module refs:   Segment part 33
                                                   Segment part 38
                                                   Segment part 59
                                                   Segment part 75
                                                   nwk_associate_cnf_processing
                                                   nwk_data_cnf_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000073F2 - 000073FC (0xb bytes), align: 0
  Segment part 45.            Intra module refs:   nwk_associate_cnf_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000073FD - 00007418 (0x1c bytes), align: 0
  Segment part 46.            Intra module refs:   nwk_associate_cnf_processing
                                                   nwk_init
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007419 - 0000747B (0x63 bytes), align: 0
  Segment part 48.            Intra module refs:   nwk_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_scan_cnf_processing
                                   00007419 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000E ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000747C - 00007481 (0x6 bytes), align: 0
  Segment part 49.            Intra module refs:   nwk_beacon_notify_ind_processing
                                                   nwk_desc_list_free
                                                   nwk_scan_cnf_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007482 - 0000748D (0xc bytes), align: 0
  Segment part 50.            Intra module refs:   nwk_beacon_notify_ind_processing
                                                   nwk_data_ind_processing
                                                   nwk_data_req_send
                                                   nwk_scan_cnf_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000748E - 0000754D (0xc0 bytes), align: 0
  Segment part 51.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_ScanJoiningOrphan   0000748E        NLME_DeviceJoiningInit (NLMEDE)
                                                   ZDO_StartDevice (ZDObject)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000754E - 00007551 (0x4 bytes), align: 0
  Segment part 52.            Intra module refs:   NwkPollReq
                                                   nwk_ScanJoiningOrphan
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007552 - 00007559 (0x8 bytes), align: 0
  Segment part 53.            Intra module refs:   Segment part 52
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000755A - 00007563 (0xa bytes), align: 0
  Segment part 55.            Intra module refs:   nwk_ScanJoiningOrphan
                                                   nwk_data_cnf_processing
                                                   nwk_data_req_send
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007564 - 00007568 (0x5 bytes), align: 0
  Segment part 56.            Intra module refs:   nwk_data_cnf_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007569 - 0000756E (0x6 bytes), align: 0
  Segment part 57.            Intra module refs:   Segment part 43
                                                   Segment part 56
                                                   Segment part 71
                                                   nwk_associate_cnf_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000756F - 00007576 (0x8 bytes), align: 0
  Segment part 58.            Intra module refs:   nwk_event_loop
                                                   nwk_scan_cnf_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007577 - 00007583 (0xd bytes), align: 0
  Segment part 59.            Intra module refs:   nwk_event_loop
                                                   nwk_scan_cnf_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007584 - 00007589 (0x6 bytes), align: 0
  Segment part 61.            Intra module refs:   nwk_beacon_notify_ind_processing
                                                   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000758A - 0000758E (0x5 bytes), align: 0
  Segment part 62.            Intra module refs:   Segment part 61
                                                   Segment part 69
                                                   nwk_beacon_notify_ind_processing
                                                   nwk_data_cnf_processing
                                                   nwk_event_loop
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000758F - 00007850 (0x2c2 bytes), align: 0
  Segment part 64.            Intra module refs:   nwk_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_beacon_notify_ind_processing
                                   0000758F 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000E ( 0000001E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007851 - 00007852 (0x2 bytes), align: 0
  Segment part 65.            Intra module refs:   nwk_beacon_notify_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007853 - 0000785A (0x8 bytes), align: 0
  Segment part 66.            Intra module refs:   Segment part 65
                                                   Segment part 87
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000785B - 00007863 (0x9 bytes), align: 0
  Segment part 67.            Intra module refs:   nwk_beacon_notify_ind_processing
                                                   nwk_event_loop
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007864 - 0000786D (0xa bytes), align: 0
  Segment part 68.            Intra module refs:   nwk_beacon_notify_ind_processing
                                                   nwk_data_ind_processing
                                                   nwk_getNetworkDesc
                                                   nwk_scan_cnf_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000786E - 00007878 (0xb bytes), align: 0
  Segment part 69.            Intra module refs:   nwk_beacon_notify_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007879 - 0000787E (0x6 bytes), align: 0
  Segment part 70.            Intra module refs:   nwk_ScanJoiningOrphan
                                                   nwk_beacon_notify_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000787F - 00007881 (0x3 bytes), align: 0
  Segment part 71.            Intra module refs:   Segment part 70
                                                   nwk_beacon_notify_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007882 - 00007886 (0x5 bytes), align: 0
  Segment part 72.            Intra module refs:   Segment part 71
                                                   Segment part 89
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007887 - 00007893 (0xd bytes), align: 0
  Segment part 73.            Intra module refs:   nwk_beacon_notify_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007894 - 000078A6 (0x13 bytes), align: 0
  Segment part 74.            Intra module refs:   nwk_beacon_notify_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000078A7 - 000078BC (0x16 bytes), align: 0
  Segment part 75.            Intra module refs:   nwk_ScanJoiningOrphan
                                                   nwk_beacon_notify_ind_processing
                                                   nwk_data_cnf_processing
                                                   nwk_data_ind_processing
                                                   nwk_event_loop
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000078BD - 000078C2 (0x6 bytes), align: 0
  Segment part 76.            Intra module refs:   nwk_beacon_notify_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000078C3 - 00007950 (0x8e bytes), align: 0
  Segment part 77.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_getNetworkDesc      000078C3        NLME_JoinRequest (NLMEDE)
                                                   NLME_ReJoinRequest (NLMEDE)
                                                   ZDApp_NodeProfileSync (ZDApp)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000016 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007951 - 00007958 (0x8 bytes), align: 0
  Segment part 78.            Intra module refs:   nwk_beacon_notify_ind_processing
                                                   nwk_event_loop
                                                   nwk_getNetworkDesc
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007959 - 00007961 (0x9 bytes), align: 0
  Segment part 79.            Intra module refs:   nwk_beacon_notify_ind_processing
                                                   nwk_getNetworkDesc
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007962 - 0000796A (0x9 bytes), align: 0
  Segment part 80.            Intra module refs:   nwk_beacon_notify_ind_processing
                                                   nwk_desc_list_free
                                                   nwk_getNetworkDesc
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000796B - 00007972 (0x8 bytes), align: 0
  Segment part 81.            Intra module refs:   Segment part 36
                                                   Segment part 38
                                                   Segment part 50
                                                   Segment part 62
                                                   Segment part 68
                                                   Segment part 80
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007973 - 000079A3 (0x31 bytes), align: 0
  Segment part 82.            Intra module refs:   nwk_associate_cnf_processing
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_desc_list_free      00007973 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000012 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000079A4 - 000079A8 (0x5 bytes), align: 0
  Segment part 84.            Intra module refs:   nwk_BeaconFromNative
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000079A9 - 000079AD (0x5 bytes), align: 0
  Segment part 86.            Intra module refs:   Segment part 76
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000079AE - 000079B1 (0x4 bytes), align: 0
  Segment part 87.            Intra module refs:   Segment part 86
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000079B2 - 00007A4B (0x9a bytes), align: 0
  Segment part 88.            Intra module refs:   nwk_beacon_notify_ind_processing
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_BeaconFromNative    000079B2 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000001D ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007A4C - 00007A50 (0x5 bytes), align: 0
  Segment part 89.            Intra module refs:   nwk_BeaconFromNative
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007A51 - 00007A5B (0xb bytes), align: 0
  Segment part 90.            Intra module refs:   nwk_BeaconFromNative
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001554 - 0000155B (0x8 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 6

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : nwk_bufs

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E3A6 - 0000E3A6 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   nwk_MacDataBuffersDealloc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cntIndirectHolding      0000E3A6 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3A7 - 0000E3A8 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   nwkDB_Add
                                                   nwkDB_CountTypes
                                                   nwkDB_FindHandle
                                                   nwkDB_FindMatch
                                                   nwkDB_FindNextType
                                                   nwkDB_RemoveFromList
                                                   nwkbufs_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDataBufQueue         0000E3A7 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000ED00 - 0000ED0D (0xe bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkbufs_init            0000ED00        nwk_init (nwk)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000ED0E - 0000ED3B (0x2e bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_SendNextDataBuf     0000ED0E        nwk_data_cnf_processing (nwk)
                                                   nwk_event_loop (nwk)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000ED3C - 0000ED40 (0x5 bytes), align: 0
  Segment part 10.            Intra module refs:   nwk_MacDataBuffersDealloc
                                                   nwk_SendNextDataBuf
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000ED41 - 0000ED77 (0x37 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_MacDataBuffersFull
                                   0000ED41        NLDE_DataReqSend (nwk_util)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000ED78 - 0000F010 (0x299 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_MacDataBuffersAdd   0000ED78        NLDE_SendMsg (nwk_util)
                                                   nwk_data_cnf_processing (nwk)
                                                   nwk_data_req_send (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F011 - 0000F060 (0x50 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_MacDataBuffersDealloc
                                   0000F011        nwk_data_cnf_processing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F061 - 0000F0CC (0x6c bytes), align: 0
  Segment part 14.            Intra module refs:   nwk_MacDataBuffersAdd
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_CreateHdr         0000F061 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000F ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F0CD - 0000F0D3 (0x7 bytes), align: 0
  Segment part 15.            Intra module refs:   nwkDB_CreateHdr
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F0D4 - 0000F1AB (0xd8 bytes), align: 0
  Segment part 16.            Intra module refs:   nwk_MacDataBuffersAdd
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_Add               0000F0D4 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000011 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F1AC - 0000F1BB (0x10 bytes), align: 0
  Segment part 17.            Intra module refs:   nwkDB_Add
                                                   nwk_MacDataBuffersAdd
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F1BC - 0000F1F0 (0x35 bytes), align: 0
  Segment part 18.            Intra module refs:   nwkDB_Add
                                                   nwk_MacDataBuffersFull
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_CountTypes        0000F1BC 
               stack 1 = 00000002 ( 00000002 )
               stack 2 = 0000000B ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F1F1 - 0000F247 (0x57 bytes), align: 0
  Segment part 19.            Intra module refs:   nwk_SendNextDataBuf
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_FindNextType      0000F1F1        nwk_event_loop (nwk)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000A ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F248 - 0000F276 (0x2f bytes), align: 0
  Segment part 20.            Intra module refs:   nwk_MacDataBuffersAdd
                                                   nwk_MacDataBuffersDealloc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_FindHandle        0000F248        NLDE_GetHandle (nwk_util)
                                                   nwk_data_cnf_processing (nwk)
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 0000000F ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F277 - 0000F27B (0x5 bytes), align: 0
  Segment part 21.            Intra module refs:   nwkDB_CountTypes
                                                   nwkDB_FindHandle
                                                   nwkDB_FindNextType
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F27C - 0000F282 (0x7 bytes), align: 0
  Segment part 23.            Intra module refs:   nwkDB_CountTypes
                                                   nwkDB_FindHandle
                                                   nwk_MacDataBuffersFull
                                                   nwkbufs_init
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F283 - 0000F28E (0xc bytes), align: 0
  Segment part 25.            Intra module refs:   nwkDB_Add
                                                   nwkDB_RemoveFromList
                                                   nwk_MacDataBuffersAdd
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F28F - 0000F2E7 (0x59 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_FindMatch         0000F28F        apsProcessAck (aps_util)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F2E8 - 0000F339 (0x52 bytes), align: 0
  Segment part 29.            Intra module refs:   nwkDB_DeleteRecAll
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_RemoveFromList    0000F2E8 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F33A - 0000F33F (0x6 bytes), align: 0
  Segment part 30.            Intra module refs:   Segment part 21
                                                   Segment part 41
                                                   nwkDB_RemoveFromList
                                                   nwk_MacDataBuffersAdd
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F340 - 0000F384 (0x45 bytes), align: 0
  Segment part 31.            Intra module refs:   nwk_MacDataBuffersDealloc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_DeleteRecAll      0000F340 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000A ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F385 - 0000F389 (0x5 bytes), align: 0
  Segment part 32.            Intra module refs:   nwkDB_DeleteRecAll
                                                   nwkDB_FindNextType
                                                   nwkDB_RemoveFromList
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F38A - 0000F38E (0x5 bytes), align: 0
  Segment part 33.            Intra module refs:   nwkDB_DeleteRecAll
                                                   nwk_MacDataBuffersAdd
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F38F - 0000F399 (0xb bytes), align: 0
  Segment part 34.            Intra module refs:   Segment part 33
                                                   Segment part 41
                                                   nwk_MacDataBuffersAdd
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F39A - 0000F3AB (0x12 bytes), align: 0
  Segment part 35.            Intra module refs:   nwkDB_DeleteRecAll
                                                   nwk_MacDataBuffersAdd
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F3AC - 0000F3AF (0x4 bytes), align: 0
  Segment part 37.            Intra module refs:   nwkDB_CreateHdr
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F3B0 - 0000F3B5 (0x6 bytes), align: 0
  Segment part 38.            Intra module refs:   Segment part 15
                                                   Segment part 37
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F3B6 - 0000F3BF (0xa bytes), align: 0
  Segment part 39.            Intra module refs:   Segment part 38
                                                   nwkDB_CreateHdr
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F3C0 - 0000F3CB (0xc bytes), align: 0
  Segment part 41.            Intra module refs:   nwkDB_DeleteRecAll
                                                   nwk_MacDataBuffersAdd

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : nwk_util

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E3A9 - 0000E3A9 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   NLME_IsAddressBroadcast
                                                   NLME_SetBroadcastFilter
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3AA - 0000E3B1 (0x8 bytes), align: 0
  Segment part 9.             Intra module refs:   NLME_GetExtAddr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           saveExtAddr             0000E3AA        zdpProcessAddrReq (ZDProfile)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3B2 - 0000E3B2 (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   NLDE_GetHandle
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nsduHandleCounter       0000E3B2 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000059A3 - 00005AE4 (0x142 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_DataReqSend        000059A3        NLDE_DataReq (NLMEDE)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000015 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005AE5 - 00005AF1 (0xd bytes), align: 0
  Segment part 17.            Intra module refs:   NLDE_DataReqSend
                                                   NLME_LeaveCmdProcess
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005AF2 - 00005B71 (0x80 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_DataIndSend        00005AF2        NLDE_DataReq (NLMEDE)
               calls direct, is recursive
               stack 1 = 00000000 ( 00000003 )
               stack 2 = 00000000 ( 0000001A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005B72 - 00005B85 (0x14 bytes), align: 0
  Segment part 19.            Intra module refs:   NLDE_DataIndSend
                                                   NLME_RejoinRspCmdProcess
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005B86 - 00005CAB (0x126 bytes), align: 0
  Segment part 20.            Intra module refs:   NLDE_DataReqSend
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_SendMsg            00005B86 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000015 ( 00000022 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005CAC - 00005CB0 (0x5 bytes), align: 0
  Segment part 21.            Intra module refs:   NLDE_BuildMsg
                                                   NLDE_SendMsg
                                                   RTG_UpdateNeighborEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005CB1 - 00005CB6 (0x6 bytes), align: 0
  Segment part 22.            Intra module refs:   NLDE_SendMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005CB7 - 00005E6F (0x1b9 bytes), align: 0
  Segment part 23.            Intra module refs:   NLDE_DataReqSend
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_BuildMsg           00005CB7 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000010 ( 00000013 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005E70 - 00005E7B (0xc bytes), align: 0
  Segment part 24.            Intra module refs:   NLDE_BuildMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005E7C - 00005E7D (0x2 bytes), align: 0
  Segment part 25.            Intra module refs:   NLDE_BuildMsg
                                                   NLDE_ParseMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005E7E - 00005E85 (0x8 bytes), align: 0
  Segment part 26.            Intra module refs:   NLME_RejoinRspCmdProcess
                                                   Segment part 116
                                                   Segment part 25
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005E86 - 00005E90 (0xb bytes), align: 0
  Segment part 27.            Intra module refs:   NLDE_BuildFrameControl
                                                   NLDE_BuildMsg
                                                   NLDE_DataIndSend
                                                   NLDE_DataReqSend
                                                   NLME_LeaveCmdProcess
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005E91 - 00005E94 (0x4 bytes), align: 0
  Segment part 28.            Intra module refs:   NLDE_BuildMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005E95 - 00005E9E (0xa bytes), align: 0
  Segment part 29.            Intra module refs:   Segment part 28
                                                   Segment part 32
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005E9F - 00005EA6 (0x8 bytes), align: 0
  Segment part 30.            Intra module refs:   NLDE_BuildMsg
                                                   NLDE_ParseMsg2
                                                   NLME_RejoinRspCmdProcess
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005EA7 - 00005EAA (0x4 bytes), align: 0
  Segment part 31.            Intra module refs:   NLDE_BuildMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005EAB - 00005EB0 (0x6 bytes), align: 0
  Segment part 32.            Intra module refs:   Segment part 31
                                                   Segment part 33
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005EB1 - 00005EB9 (0x9 bytes), align: 0
  Segment part 33.            Intra module refs:   NLDE_BuildMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005EBA - 00005EC5 (0xc bytes), align: 0
  Segment part 34.            Intra module refs:   NLDE_BuildMsg
                                                   NLDE_DataReqSend
                                                   NLME_LeaveCmdCnf
                                                   NLME_LeaveCmdProcess
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005EC6 - 00005F48 (0x83 bytes), align: 0
  Segment part 35.            Intra module refs:   NLDE_BuildMsg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_BuildFrameControl
                                   00005EC6 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000010 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005F49 - 00005F52 (0xa bytes), align: 0
  Segment part 36.            Intra module refs:   NLDE_BuildFrameControl
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005F53 - 0000603A (0xe8 bytes), align: 0
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_ParseMsg           00005F53        nwk_data_ind_processing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000603B - 00006042 (0x8 bytes), align: 0
  Segment part 38.            Intra module refs:   NLDE_BuildFrameControl
                                                   NLDE_DataReqSend
                                                   NLDE_ParseFrameControl
                                                   NLDE_ParseMsg
                                                   NLME_RejoinRspCmdProcess
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006043 - 00006049 (0x7 bytes), align: 0
  Segment part 39.            Intra module refs:   NLDE_DataReqSend
                                                   NLDE_ParseMsg
                                                   NLDE_ParseMsg2
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000604A - 00006051 (0x8 bytes), align: 0
  Segment part 40.            Intra module refs:   Segment part 105
                                                   Segment part 19
                                                   Segment part 27
                                                   Segment part 33
                                                   Segment part 34
                                                   Segment part 36
                                                   Segment part 39
                                                   Segment part 53
                                                   Segment part 56
                                                   Segment part 61
                                                   Segment part 97
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006052 - 0000605D (0xc bytes), align: 0
  Segment part 41.            Intra module refs:   NLDE_BuildMsg
                                                   NLDE_ParseMsg
                                                   NLDE_ParseMsg2
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000605E - 000060BC (0x5f bytes), align: 0
  Segment part 42.            Intra module refs:   Segment part 60
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_ParseFrameControl
                                   0000605E 
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000D ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000060BD - 000060C5 (0x9 bytes), align: 0
  Segment part 43.            Intra module refs:   NLDE_ParseFrameControl
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000060C6 - 000060C9 (0x4 bytes), align: 0
  Segment part 44.            Intra module refs:   NLDE_ParseFrameControl
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000060CA - 000060D2 (0x9 bytes), align: 0
  Segment part 45.            Intra module refs:   Segment part 44
                                                   Segment part 46
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000060D3 - 000060D8 (0x6 bytes), align: 0
  Segment part 46.            Intra module refs:   NLDE_ParseFrameControl
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000060D9 - 0000612B (0x53 bytes), align: 0
  Segment part 47.            Intra module refs:   NLDE_ParseMsg2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_CheckFrameSecurity
                                   000060D9 
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 0000000D ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000612C - 0000621E (0xf3 bytes), align: 0
  Segment part 48.            Intra module refs:   NLME_CmdCnf
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_ParseMsg2          0000612C 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000001F ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000621F - 00006225 (0x7 bytes), align: 0
  Segment part 49.            Intra module refs:   NLDE_ParseMsg
                                                   NLDE_ParseMsg2
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006226 - 00006233 (0xe bytes), align: 0
  Segment part 50.            Intra module refs:   NLDE_ParseMsg
                                                   NLDE_ParseMsg2
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006234 - 00006239 (0x6 bytes), align: 0
  Segment part 51.            Intra module refs:   NLDE_ParseMsg
                                                   Segment part 50
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000623A - 0000623F (0x6 bytes), align: 0
  Segment part 52.            Intra module refs:   Segment part 22
                                                   Segment part 45
                                                   Segment part 51
                                                   Segment part 65
                                                   Segment part 74
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006240 - 00006249 (0xa bytes), align: 0
  Segment part 53.            Intra module refs:   NLDE_DataReqSend
                                                   NLDE_ParseMsg
                                                   NLDE_ParseMsg2
                                                   NLME_LeaveCmdProcess
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000624A - 0000624D (0x4 bytes), align: 0
  Segment part 54.            Intra module refs:   NLDE_ParseMsg
                                                   NLDE_ParseMsg2
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000624E - 0000625A (0xd bytes), align: 0
  Segment part 55.            Intra module refs:   NLDE_DataIndSend
                                                   NLME_RejoinRspCmdProcess
                                                   Segment part 110
                                                   Segment part 54
                                                   Segment part 58
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000625B - 0000625E (0x4 bytes), align: 0
  Segment part 56.            Intra module refs:   NLDE_ParseMsg
                                                   NLDE_ParseMsg2
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000625F - 00006263 (0x5 bytes), align: 0
  Segment part 57.            Intra module refs:   NLDE_BuildMsg
                                                   Segment part 56
                                                   Segment part 84
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006264 - 0000627D (0x1a bytes), align: 0
  Segment part 58.            Intra module refs:   NLDE_ParseMsg
                                                   NLDE_ParseMsg2
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000627E - 0000628F (0x12 bytes), align: 0
  Segment part 59.            Intra module refs:   NLDE_ParseMsg2
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006290 - 000062A4 (0x15 bytes), align: 0
  Segment part 60.            Intra module refs:   NLDE_ParseMsg
                                                   NLDE_ParseMsg2
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000062A5 - 000062D7 (0x33 bytes), align: 0
  Segment part 61.            Intra module refs:   NLDE_ParseMsg
                                                   NLDE_ParseMsg2
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000062D8 - 000062E1 (0xa bytes), align: 0
  Segment part 62.            Intra module refs:   Segment part 61
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000062E2 - 000062ED (0xc bytes), align: 0
  Segment part 63.            Intra module refs:   Segment part 61
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000062EE - 000062F5 (0x8 bytes), align: 0
  Segment part 64.            Intra module refs:   Segment part 61
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000062F6 - 000062FF (0xa bytes), align: 0
  Segment part 65.            Intra module refs:   Segment part 100
                                                   Segment part 64
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006300 - 0000630F (0x10 bytes), align: 0
  Segment part 66.            Intra module refs:   NLME_LeaveCmdProcess
                                                   NLME_RejoinRspCmdProcess
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_GetExtAddr         00006300        APSME_LookupNwkAddr (APSMEDE)
                                                   Frist_Data (SampleApp)
                                                   IEEE_menu (menu_lcd)
                                                   NLME_ReJoinRequest (NLMEDE)
                                                   ZDApp_Init (ZDApp)
                                                   ZDO_LeaveCnf (ZDApp)
                                                   ZDO_UpdateNwkStatus (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000017 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006310 - 0000631C (0xd bytes), align: 0
  Segment part 67.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_GetShortAddr       00006310        AF_DataRequest (AF)
                                                   Frist_Data (SampleApp)
                                                   MT_ProcessGetDeviceInfo (MTEL)
                                                   NLDE_DataReqAlloc (NLMEDE)
                                                   Short_menu (menu_lcd)
                                                   ZDApp_ProcessNetworkJoin (ZDApp)
                                                   ZDO_UpdateNwkStatus (ZDObject)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000631D - 00006337 (0x1b bytes), align: 0
  Segment part 68.            Intra module refs:   NLME_LeaveCmdProcess
                                                   RTG_UpdateNeighborEntry
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_GetCoordShortAddr
                                   0000631D        APSME_LookupNwkAddr (APSMEDE)
                                                   ZDO_LeaveInd (ZDApp)
                                                   nwk_data_req_send (nwk)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000017 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006338 - 00006342 (0xb bytes), align: 0
  Segment part 69.            Intra module refs:   NLDE_SendMsg
                                                   NLME_GetCoordShortAddr
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006343 - 0000634A (0x8 bytes), align: 0
  Segment part 70.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_GetCoordExtAddr    00006343        APSME_LookupNwkAddr (APSMEDE)
               calls direct
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000634B - 0000636D (0x23 bytes), align: 0
  Segment part 71.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_GetHandle          0000634B        NLDE_DataReqAlloc (NLMEDE)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000636E - 00006488 (0x11b bytes), align: 0
  Segment part 72.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_UpdateNeighborEntry
                                   0000636E        Segment part 75 (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000001 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006489 - 0000648D (0x5 bytes), align: 0
  Segment part 73.            Intra module refs:   NLDE_DataIndSend
                                                   RTG_UpdateNeighborEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000648E - 00006495 (0x8 bytes), align: 0
  Segment part 74.            Intra module refs:   NLDE_DataIndSend
                                                   Segment part 73
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3B3 - 0000E3B3 (0x1 bytes), align: 0
  Segment part 13.            Intra module refs:   RTG_UpdateNeighborEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006496 - 000064EF (0x5a bytes), align: 0
  Segment part 75.            Intra module refs:   RTG_UpdateNeighborEntry
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_GetNeighborLinkInfo
                                   00006496        nwk_data_ind_processing (nwk)
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000010 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000064F0 - 00006537 (0x48 bytes), align: 0
  Segment part 76.            Intra module refs:   RTG_UpdateNeighborEntry
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_GetNeighborIndex   000064F0 
               stack 1 = 00000002 ( 00000001 )
               stack 2 = 00000010 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006538 - 00006541 (0xa bytes), align: 0
  Segment part 78.            Intra module refs:   NLDE_CheckFrameSecurity
                                                   NLDE_DataIndSend
                                                   NLME_GetCoordShortAddr
                                                   NLME_GetProtocolVersion
                                                   NLME_GetShortAddr
                                                   NLME_SetPollRate
                                                   Segment part 83
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006542 - 0000654E (0xd bytes), align: 0
  Segment part 79.            Intra module refs:   RTG_UpdateNeighborEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000654F - 00006555 (0x7 bytes), align: 0
  Segment part 80.            Intra module refs:   NLDE_BuildMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006556 - 000065A4 (0x4f bytes), align: 0
  Segment part 81.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_SetPollRate        00006556        ZDApp_ProcessNetworkJoin (ZDApp)
                                                   ZDApp_ProcessOSALMsg (ZDApp)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000065A5 - 000065AB (0x7 bytes), align: 0
  Segment part 82.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_SetQueuedPollRate
                                   000065A5        ZDApp_ProcessNetworkJoin (ZDApp)
                                                   ZDApp_ProcessOSALMsg (ZDApp)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000065AC - 000065B0 (0x5 bytes), align: 0
  Segment part 83.            Intra module refs:   NLME_SetQueuedPollRate
                                                   NLME_SetResponseRate
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000065B1 - 000065B5 (0x5 bytes), align: 0
  Segment part 84.            Intra module refs:   NLDE_SendMsg
                                                   NLME_RejoinRspCmdProcess
                                                   NLME_SetPollRate
                                                   Segment part 83
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000065B6 - 000065BE (0x9 bytes), align: 0
  Segment part 85.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_SetResponseRate    000065B6        NLME_ReJoinRequest (NLMEDE)
                                                   ZDApp_ProcessNetworkJoin (ZDApp)
                                                   ZDApp_ProcessOSALMsg (ZDApp)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000065BF - 000065C8 (0xa bytes), align: 0
  Segment part 88.            Intra module refs:   NLDE_GetHandle
                                                   NLME_CmdDataReqAlloc
                                                   NLME_IsAddressBroadcast
                                                   NLME_LeaveCmdCnf
                                                   NLME_LeaveCmdProcess
                                                   nwkDB_UserDataLoad
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000065C9 - 0000667F (0xb7 bytes), align: 0
  Segment part 96.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_RejoinRspCmdProcess
                                   000065C9        nwk_data_ind_processing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006680 - 0000668C (0xd bytes), align: 0
  Segment part 97.            Intra module refs:   NLDE_CheckFrameSecurity
                                                   NLDE_SendMsg
                                                   NLME_CmdCnf
                                                   NLME_GetShortAddr
                                                   NLME_RejoinRspCmdProcess
                                                   nwkDB_UserDataLoad
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000668D - 00006691 (0x5 bytes), align: 0
  Segment part 100.           Intra module refs:   Segment part 49
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006692 - 0000669A (0x9 bytes), align: 0
  Segment part 103.           Intra module refs:   NLDE_DataReqSend
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000669B - 0000679C (0x102 bytes), align: 0
  Segment part 104.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_LeaveCmdProcess    0000669B        nwk_data_ind_processing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000017 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000679D - 000067AB (0xf bytes), align: 0
  Segment part 105.           Intra module refs:   NLME_LeaveCmdCnf
                                                   NLME_LeaveCmdProcess
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000067AC - 000067AF (0x4 bytes), align: 0
  Segment part 106.           Intra module refs:   NLDE_SendMsg
                                                   Segment part 105
                                                   Segment part 113
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000067B0 - 000067B8 (0x9 bytes), align: 0
  Segment part 107.           Intra module refs:   Segment part 106
                                                   Segment part 115
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000067B9 - 0000684F (0x97 bytes), align: 0
  Segment part 108.           Intra module refs:   NLME_CmdCnf
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_LeaveCmdCnf        000067B9 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000001F ( 00000017 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006850 - 0000685B (0xc bytes), align: 0
  Segment part 109.           Intra module refs:   NLME_LeaveCmdCnf
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000685C - 0000686A (0xf bytes), align: 0
  Segment part 110.           Intra module refs:   NLME_LeaveCmdCnf
                                                   NLME_LeaveCmdProcess
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000686B - 000068FC (0x92 bytes), align: 0
  Segment part 111.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_CmdCnf             0000686B        nwk_data_cnf_processing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000001F )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000068FD - 00006901 (0x5 bytes), align: 0
  Segment part 112.           Intra module refs:   NLME_CmdCnf
                                                   NLME_GetNeighborIndex
                                                   NLME_GetNeighborLinkInfo
                                                   NLME_SetBroadcastFilter
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006902 - 00006906 (0x5 bytes), align: 0
  Segment part 113.           Intra module refs:   NLDE_DataReqSend
                                                   NLME_CmdCnf
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006907 - 0000690A (0x4 bytes), align: 0
  Segment part 114.           Intra module refs:   NLME_CmdCnf
                                                   NLME_RejoinRspCmdProcess
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000690B - 00006911 (0x7 bytes), align: 0
  Segment part 115.           Intra module refs:   Segment part 114
                                                   Segment part 22
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006912 - 0000691A (0x9 bytes), align: 0
  Segment part 116.           Intra module refs:   NLDE_SendMsg
                                                   NLME_CmdCnf
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000691B - 00006943 (0x29 bytes), align: 0
  Segment part 118.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_CmdDataReqAlloc    0000691B        NLME_ReJoinRequest (NLMEDE)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000011 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006944 - 00006971 (0x2e bytes), align: 0
  Segment part 119.           Intra module refs:   NLDE_BuildFrameControl
                                                   NLME_IsAddressBroadcast
                                                   NLME_LeaveCmdProcess
                                                   NLME_SetBroadcastFilter
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_GetProtocolVersion
                                   00006944        ?Subroutine45 (ZDProfile)
                                                   APSDE_DataReq (APSMEDE)
                                                   APSDE_DataReqMTU (APSMEDE)
                                                   APSDE_FrameHdrInit (APSMEDE)
                                                   APSDE_FrameHdrSet (APSMEDE)
                                                   APSDE_ParseMsg (aps_util)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   ZDAppSetupProtoVersion (ZDApp)
                                                   ZDO_CreateAlignedUINT16List (ZDObject)
                                                   ZDO_NetworkDiscoveryConfirmCB (ZDApp)
                                                   ZDP_GenericRsp (ZDProfile)
                                                   ZDP_IncomingData (ZDProfile)
                                                   afDataReqMTU (AF)
                                                   afIncomingData (AF)
                                                   nwk_data_ind_processing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000017 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006972 - 000069A6 (0x35 bytes), align: 0
  Segment part 122.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_SetBroadcastFilter
                                   00006972        ZDApp_Init (ZDApp)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000069A7 - 00006A09 (0x63 bytes), align: 0
  Segment part 123.           Intra module refs:   Segment part 17
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_IsAddressBroadcast
                                   000069A7        AF_DataRequest (AF)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   nwk_data_ind_processing (nwk)
                                                   nwk_data_req_send (nwk)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000017 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006A0A - 00006A0C (0x3 bytes), align: 0
  Segment part 124.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_RemoveChild        00006A0A        ZDO_LeaveInd (ZDApp)
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006A0D - 00006A39 (0x2d bytes), align: 0
  Segment part 125.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_UserDataLoad      00006A0D        nwk_MacDataBuffersAdd (nwk_bufs)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000A )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ssp

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E3B4 - 0000E3B6 (0x3 bytes), align: 0
  Segment part 10.            Intra module refs:   SSP_NwkSecurity
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SSP_NwkSecurityHook     0000E3B4 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3B7 - 0000E3B9 (0x3 bytes), align: 0
  Segment part 11.            Intra module refs:   SSP_GetMicLen
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SSP_GetMicLenHook       0000E3B7 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000169B7 - 000169BE (0x8 bytes), align: 0
  Segment part 20.            Intra module refs:   SSP_NwkSecurity
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000169BF - 000169C6 (0x8 bytes), align: 0
  Segment part 32.            Intra module refs:   SSP_NwkSecurity
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000169C7 - 000169F6 (0x30 bytes), align: 0
  Segment part 66.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SSP_NwkSecurity         000169C7        NLDE_BuildMsg (nwk_util)
                                                   NLDE_ParseMsg2 (nwk_util)
                                                   nwk_data_ind_processing (nwk)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000169F7 - 00016A14 (0x1e bytes), align: 0
  Segment part 67.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SSP_GetMicLen           000169F7        Segment part 41 (nwk_util)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000024 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00016A15 - 00016A22 (0xe bytes), align: 0
  Segment part 68.            Intra module refs:   SSP_GetMicLen
                                                   SSP_NwkSecurity

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Libraries\TI2430DB\bin\Security.lib
  LIBRARY MODULE, NAME : hal_aes

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000B3 - 000000B3 (0x1 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ENCCS                   000000B3 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00016A87 - 00016ACA (0x44 bytes), align: 0
  Segment part 14.            Intra module refs:   HalAesInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aesDmaInit              00016A87 
               stack 1 = 00000002 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00016ACB - 00016AD4 (0xa bytes), align: 0
  Segment part 15.            Intra module refs:   HalAesInit
                                                   aesDmaInit
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00016AD5 - 00016AE0 (0xc bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAesInit              00016AD5        HalDriverInit (hal_drivers)
               calls direct
               stack 1 = 00000000 ( 00000002 )

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Libraries\TIMAC\bin\TIMAC-CC2430.lib
  LIBRARY MODULE, NAME : mac_coord

  SEGMENTS IN THE MODULE
  ======================
XDATA_I
  Relative segment, address: XDATA 0000F006 - 0000F009 (0x4 bytes), align: 0
  Segment part 11.            Intra module refs:   macScanStartTimer (mac_scan)
                                                   macStartResponseTimer (mac_device)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_30           0000F006 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000155C - 0000155F (0x4 bytes), align: 0
  Segment part 12.            Intra module refs:   __Constant_30

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : mac_data

  SEGMENTS IN THE MODULE
  ======================
CODE_C
  Relative segment, address: CODE 000018D4 - 000018DB (0x8 bytes), align: 0
  Segment part 7.             Intra module refs:   MAC_McpsDataAlloc
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000018DC - 000018E6 (0xb bytes), align: 0
  Segment part 8.             Intra module refs:   macAllocTxBuffer
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000018E7 - 000018F1 (0xb bytes), align: 0
  Segment part 9.             Intra module refs:   macDataTxComplete
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxFrameSuccess       000018E7 
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000018F2 - 000018FC (0xb bytes), align: 0
  Segment part 10.            Intra module refs:   macAllocTxBuffer
                                                   macDataTxComplete
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxFrameFailed        000018F2 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3BA - 0000E3C2 (0x9 bytes), align: 0
  Segment part 11.            Intra module refs:   MAC_McpsDataReq
                                                   macDataReset
                                                   macDataRxMemAlloc
                                                   macDataTxEnqueue
                                                   macDataTxSend
                                                   macRxCheckPendingCallback
                                                   macRxCompleteCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macData                 0000E3BA        macEventLoop (mac_main)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3C3 - 0000E3C4 (0x2 bytes), align: 0
  Segment part 12.            Intra module refs:   Segment part 51
                                                   Segment part 53
                                                   Segment part 55
                                                   macDataTxSend
                                                   macRxCheckPendingCallback
                                                   macTxCompleteCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pMacDataTx              0000E3C3        ?Subroutine0 (mac_tx)
                                                   macTxFrame (mac_tx)
                                                   macTxTimestampCallback (mac_tx)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F00A - 0000F00C (0x3 bytes), align: 0
  Segment part 13.            Intra module refs:   macDataTxEnqueue
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataTxIndirect       0000F00A 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F00D - 0000F00F (0x3 bytes), align: 0
  Segment part 15.            Intra module refs:   macTxCompleteCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataRequeueIndirect
                                   0000F00D 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F010 - 0000F012 (0x3 bytes), align: 0
  Segment part 17.            Intra module refs:   macRxCompleteCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataRxBeaconCritical
                                   0000F010 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F013 - 0000F015 (0x3 bytes), align: 0
  Segment part 19.            Intra module refs:   macDataTxComplete
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataTxBeaconComplete
                                   0000F013 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F016 - 0000F018 (0x3 bytes), align: 0
  Segment part 21.            Intra module refs:   macDataTxEnqueue
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataSetSched         0000F016 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F019 - 0000F01B (0x3 bytes), align: 0
  Segment part 23.            Intra module refs:   macDataTxSend
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataCheckSched       0000F019 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3C5 - 0000E3C7 (0x3 bytes), align: 0
  Segment part 25.            Intra module refs:   macDataTxTimeAvailable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataCheckTxTime      0000E3C5 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F01C - 0000F01E (0x3 bytes), align: 0
  Segment part 26.            Intra module refs:   macTxCompleteCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataBeaconRequeue    0000F01C 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CC68 - 0000CCC1 (0x5a bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataReset            0000CC68        MAC_MlmeResetReq (mac_mgmt)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CCC2 - 0000CD23 (0x62 bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macAllocTxBuffer        0000CCC2        macBuildCommonReq (mac_mgmt)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CD24 - 0000CD28 (0x5 bytes), align: 0
  Segment part 30.            Intra module refs:   MAC_McpsDataAlloc
                                                   macAllocTxBuffer
                                                   macDataTxSend
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CD29 - 0000CD34 (0xc bytes), align: 0
  Segment part 31.            Intra module refs:   MAC_McpsDataReq
                                                   macAllocTxBuffer
                                                   macDataTxComplete
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CD35 - 0000CD85 (0x51 bytes), align: 0
  Segment part 32.            Intra module refs:   macDataTxSend
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macFrameDuration        0000CD35 
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 0000000C ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CD86 - 0000CDC2 (0x3d bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxCheckPendingCallback
                                   0000CD86        rxStartIsr (mac_rx)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CDC3 - 0000CDCC (0xa bytes), align: 0
  Segment part 34.            Intra module refs:   MAC_McpsDataReq
                                                   macApiDataReq
                                                   macCheckSched
                                                   macDataReset
                                                   macDataRxInd
                                                   macDataRxMemAlloc
                                                   macDataRxMemFree
                                                   macDataSend
                                                   macRxCheckPendingCallback
                                                   macSetSched
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CDCD - 0000CDF1 (0x25 bytes), align: 0
  Segment part 35.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataRxMemAlloc       0000CDCD        rxStartIsr (mac_rx)
               calls direct
               stack 1 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CDF2 - 0000CDFC (0xb bytes), align: 0
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataRxMemFree        0000CDF2        rxFcsIsr (mac_rx)
                                                   rxHaltCleanupFinalStep (mac_rx)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CDFD - 0000CF1B (0x11f bytes), align: 0
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxCompleteCallback   0000CDFD        rxFcsIsr (mac_rx)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CF1C - 0000CF28 (0xd bytes), align: 0
  Segment part 38.            Intra module refs:   macRxCompleteCallback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CF29 - 0000CF48 (0x20 bytes), align: 0
  Segment part 39.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataTxTimeAvailable
                                   0000CF29        txCsmaGo (mac_tx)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CF49 - 0000CF4D (0x5 bytes), align: 0
  Segment part 40.            Intra module refs:   macBuildDataFrame
                                                   macDataTxComplete
                                                   macDataTxTimeAvailable
                                                   macTxCompleteCallback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CF4E - 0000CFD1 (0x84 bytes), align: 0
  Segment part 41.            Intra module refs:   macApiDataReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBuildDataFrame       0000CF4E 
               calls direct
               stack 1 = 00000002 ( 00000001 )
               stack 2 = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CFD2 - 0000CFD9 (0x8 bytes), align: 0
  Segment part 42.            Intra module refs:   Segment part 46
                                                   macBuildDataFrame
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CFDA - 0000CFF1 (0x18 bytes), align: 0
  Segment part 43.            Intra module refs:   Segment part 24
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCheckSched           0000CFDA 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CFF2 - 0000D001 (0x10 bytes), align: 0
  Segment part 44.            Intra module refs:   Segment part 22
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSetSched             0000CFF2 
               is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D002 - 0000D00B (0xa bytes), align: 0
  Segment part 45.            Intra module refs:   macApiDataReq
                                                   macBuildDataFrame
                                                   macDataTxComplete
                                                   macDataTxSend
                                                   macSetSched
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D00C - 0000D010 (0x5 bytes), align: 0
  Segment part 46.            Intra module refs:   Segment part 45
                                                   Segment part 48
                                                   Segment part 49
                                                   Segment part 59
                                                   Segment part 66
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D011 - 0000D091 (0x81 bytes), align: 0
  Segment part 47.            Intra module refs:   macDataTxEnqueue
                                                   macTxCompleteCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataTxComplete       0000D011 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000B ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D092 - 0000D09D (0xc bytes), align: 0
  Segment part 48.            Intra module refs:   macDataTxComplete
                                                   macDataTxEnqueue
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D09E - 0000D0A9 (0xc bytes), align: 0
  Segment part 49.            Intra module refs:   macDataTxComplete
                                                   macDataTxEnqueue
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D0AA - 0000D176 (0xcd bytes), align: 0
  Segment part 50.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxCompleteCallback   0000D0AA        txComplete (mac_tx)
               calls direct, is recursive
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D177 - 0000D180 (0xa bytes), align: 0
  Segment part 51.            Intra module refs:   macTxCompleteCallback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D181 - 0000D18C (0xc bytes), align: 0
  Segment part 52.            Intra module refs:   macTxCompleteCallback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D18D - 0000D199 (0xd bytes), align: 0
  Segment part 53.            Intra module refs:   macTxCompleteCallback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D19A - 0000D19E (0x5 bytes), align: 0
  Segment part 54.            Intra module refs:   macRxCheckPendingCallback
                                                   macTxCompleteCallback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D19F - 0000D1A9 (0xb bytes), align: 0
  Segment part 55.            Intra module refs:   macTxCompleteCallback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D1AA - 0000D1B4 (0xb bytes), align: 0
  Segment part 56.            Intra module refs:   Segment part 54
                                                   Segment part 55
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D1B5 - 0000D1C0 (0xc bytes), align: 0
  Segment part 57.            Intra module refs:   macDataTxComplete
                                                   macDataTxEnqueue
                                                   macTxCompleteCallback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D1C1 - 0000D2E0 (0x120 bytes), align: 0
  Segment part 58.            Intra module refs:   macDataSend
                                                   macDataTxEnqueue
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataTxSend           0000D1C1 
               calls direct
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 0000000B ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D2E1 - 0000D2E8 (0x8 bytes), align: 0
  Segment part 59.            Intra module refs:   macBuildDataFrame
                                                   macDataTxSend
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D2E9 - 0000D2F4 (0xc bytes), align: 0
  Segment part 60.            Intra module refs:   macDataTxSend
                                                   macDataTxTimeAvailable
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D2F5 - 0000D383 (0x8f bytes), align: 0
  Segment part 61.            Intra module refs:   macBuildDataFrame
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataTxEnqueue        0000D2F5        macApiAssociateReq (mac_device)
                                                   macBuildCommonReq (mac_mgmt)
                                                   macBuildDisassociateReq (mac_mgmt)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000009 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D384 - 0000D38B (0x8 bytes), align: 0
  Segment part 62.            Intra module refs:   macDataTxEnqueue
                                                   macRxCompleteCallback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D38C - 0000D39B (0x10 bytes), align: 0
  Segment part 63.            Intra module refs:   macDataTxEnqueue
                                                   macRxCompleteCallback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D39C - 0000D3A7 (0xc bytes), align: 0
  Segment part 64.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataSend             0000D39C        macMgmtAction1 (mac_mgmt)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D3A8 - 0000D40C (0x65 bytes), align: 0
  Segment part 65.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiDataReq           0000D3A8        macMgmtAction1 (mac_mgmt)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D40D - 0000D418 (0xc bytes), align: 0
  Segment part 66.            Intra module refs:   MAC_McpsDataReq
                                                   macApiDataReq
                                                   macDataTxEnqueue
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D419 - 0000D42B (0x13 bytes), align: 0
  Segment part 67.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataRxInd            0000D419        Segment part 28 (mac_device)
                                                   macMgmtAction1 (mac_mgmt)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D42C - 0000D46D (0x42 bytes), align: 0
  Segment part 68.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_McpsDataReq         0000D42C        ZMacDataReq (zmac)
               calls direct
               stack 1 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D46E - 0000D4B0 (0x43 bytes), align: 0
  Segment part 69.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_McpsDataAlloc       0000D46E        ZMacDataReq (zmac)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D4B1 - 0000D4C6 (0x16 bytes), align: 0
  Segment part 70.            Intra module refs:   MAC_McpsDataAlloc
                                                   macAllocTxBuffer
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001560 - 00001562 (0x3 bytes), align: 0
  Segment part 14.            Intra module refs:   macDataTxIndirect
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001563 - 00001565 (0x3 bytes), align: 0
  Segment part 16.            Intra module refs:   macDataRequeueIndirect
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001566 - 00001568 (0x3 bytes), align: 0
  Segment part 18.            Intra module refs:   macDataRxBeaconCritical
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001569 - 0000156B (0x3 bytes), align: 0
  Segment part 20.            Intra module refs:   macDataTxBeaconComplete
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000156C - 0000156E (0x3 bytes), align: 0
  Segment part 22.            Intra module refs:   macDataSetSched
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000156F - 00001571 (0x3 bytes), align: 0
  Segment part 24.            Intra module refs:   macDataCheckSched
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001572 - 00001574 (0x3 bytes), align: 0
  Segment part 27.            Intra module refs:   macDataBeaconRequeue

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : mac_device

  SEGMENTS IN THE MODULE
  ======================
CODE_C
  Relative segment, address: CODE 000018FD - 00001926 (0x2a bytes), align: 0
  Segment part 6.             Intra module refs:   MAC_InitDevice
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00001927 - 00001935 (0xf bytes), align: 0
  Segment part 7.             Intra module refs:   MAC_InitDevice
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3C8 - 0000E3DD (0x16 bytes), align: 0
  Segment part 8.             Intra module refs:   macApiAssociateReq
                                                   macApiPollReq
                                                   macAssocDataReq
                                                   macAssocDataReqComplete
                                                   macAssocDataRxInd
                                                   macAssocFailed
                                                   macAssocFrameResponseTimeout
                                                   macDeviceReset
                                                   macPollDataReqComplete
                                                   macPollDataRxInd
                                                   macPollFrameResponseTimeout
                                                   macPollRxAssocRsp
                                                   macPollRxDisassoc
                                                   macRxAssocRsp
                                                   macStartFrameResponseTimer
                                                   macStartResponseTimer
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDevice               0000E3C8 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E566 - 0000E58D (0x28 bytes), align: 0
  Segment part 11.            Intra module refs:   MAC_InitDevice
           LOCAL                   ADDRESS         
           =====                   =======         
           macDeviceReset          0000E566 
               is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E58E - 0000E599 (0xc bytes), align: 0
  Segment part 12.            Intra module refs:   macDeviceReset
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E59A - 0000E5CC (0x33 bytes), align: 0
  Segment part 13.            Intra module refs:   macAssocFailed
                                                   macRxAssocRsp
           LOCAL                   ADDRESS         
           =====                   =======         
           macAssociateCnf         0000E59A 
               calls direct
               stack 1 = 00000000 ( 00000003 )
               stack 2 = 0000000B ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E5CD - 0000E5EF (0x23 bytes), align: 0
  Segment part 14.            Intra module refs:   Segment part 32
                                                   macAssocFrameResponseTimeout
                                                   macPollFrameResponseTimeout
                                                   macRxAssocRsp
           LOCAL                   ADDRESS         
           =====                   =======         
           macPollCnf              0000E5CD 
               calls direct
               stack 1 = 00000000 ( 00000003 )
               stack 2 = 0000000B ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E5F0 - 0000E600 (0x11 bytes), align: 0
  Segment part 15.            Intra module refs:   macAssociateCnf
                                                   macPollCnf
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E601 - 0000E63E (0x3e bytes), align: 0
  Segment part 16.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macStartResponseTimer   0000E601 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E63F - 0000E6AC (0x6e bytes), align: 0
  Segment part 17.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macStartFrameResponseTimer
                                   0000E63F 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000042 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E6AD - 0000E7D5 (0x129 bytes), align: 0
  Segment part 18.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiAssociateReq      0000E6AD 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E7D6 - 0000E7E1 (0xc bytes), align: 0
  Segment part 19.            Intra module refs:   MAC_MlmeAssociateReq
                                                   macApiAssociateReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E7E2 - 0000E83A (0x59 bytes), align: 0
  Segment part 20.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macAssocDataReq         0000E7E2 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E83B - 0000E87B (0x41 bytes), align: 0
  Segment part 21.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macAssocDataReqComplete
                                   0000E83B 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E87C - 0000E914 (0x99 bytes), align: 0
  Segment part 22.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxAssocRsp           0000E87C 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E915 - 0000E91C (0x8 bytes), align: 0
  Segment part 23.            Intra module refs:   macApiPollReq
                                                   macRxAssocRsp
                                                   macRxCoordRealign
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E91D - 0000E94B (0x2f bytes), align: 0
  Segment part 24.            Intra module refs:   Segment part 6
                                                   macAssocRxDisassoc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macAssocFrameResponseTimeout
                                   0000E91D 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E94C - 0000E98F (0x44 bytes), align: 0
  Segment part 25.            Intra module refs:   Segment part 6
                                                   macAssocFrameResponseTimeout
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macAssocFailed          0000E94C 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E990 - 0000E9A0 (0x11 bytes), align: 0
  Segment part 26.            Intra module refs:   Segment part 7
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macAssocRxDisassoc      0000E990 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E9A1 - 0000E9F4 (0x54 bytes), align: 0
  Segment part 27.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macAssocDataRxInd       0000E9A1 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E9F5 - 0000EA00 (0xc bytes), align: 0
  Segment part 28.            Intra module refs:   macAssocDataRxInd
                                                   macPollDataRxInd
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EA01 - 0000EA0B (0xb bytes), align: 0
  Segment part 29.            Intra module refs:   macAssocDataReqComplete
                                                   macAssocDataRxInd
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EA0C - 0000EA5D (0x52 bytes), align: 0
  Segment part 30.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiPollReq           0000EA0C 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EA5E - 0000EA95 (0x38 bytes), align: 0
  Segment part 31.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPollDataReqComplete
                                   0000EA5E 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EA96 - 0000EAA5 (0x10 bytes), align: 0
  Segment part 32.            Intra module refs:   macAssocDataReqComplete
                                                   macAssocDataRxInd
                                                   macPollDataReqComplete
                                                   macPollDataRxInd
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EAA6 - 0000EAF5 (0x50 bytes), align: 0
  Segment part 33.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPollDataRxInd        0000EAA6 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EAF6 - 0000EB09 (0x14 bytes), align: 0
  Segment part 34.            Intra module refs:   Segment part 23
                                                   Segment part 28
                                                   macApiAssociateReq
                                                   macAssocDataReqComplete
                                                   macAssocFailed
                                                   macAssocFrameResponseTimeout
                                                   macAssocRxDisassoc
                                                   macPollDataReqComplete
                                                   macPollFrameResponseTimeout
                                                   macPollRxAssocRsp
                                                   macPollRxDisassoc
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EB0A - 0000EB43 (0x3a bytes), align: 0
  Segment part 35.            Intra module refs:   Segment part 6
                                                   macPollRxAssocRsp
                                                   macPollRxDisassoc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPollFrameResponseTimeout
                                   0000EB0A 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EB44 - 0000EB63 (0x20 bytes), align: 0
  Segment part 36.            Intra module refs:   Segment part 7
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPollRxDisassoc       0000EB44 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EB64 - 0000EB84 (0x21 bytes), align: 0
  Segment part 37.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPollRxAssocRsp       0000EB64 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EB85 - 0000EC35 (0xb1 bytes), align: 0
  Segment part 38.            Intra module refs:   Segment part 7
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxCoordRealign       0000EB85 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000001A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EC36 - 0000EC4A (0x15 bytes), align: 0
  Segment part 39.            Intra module refs:   macRxAssocRsp
                                                   macRxCoordRealign
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EC4B - 0000EC4F (0x5 bytes), align: 0
  Segment part 40.            Intra module refs:   macApiAssociateReq
                                                   macRxCoordRealign
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EC50 - 0000EC61 (0x12 bytes), align: 0
  Segment part 41.            Intra module refs:   Segment part 40
                                                   macRxAssocRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EC62 - 0000EC6E (0xd bytes), align: 0
  Segment part 42.            Intra module refs:   macRxAssocRsp
                                                   macRxCoordRealign
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EC6F - 0000EC79 (0xb bytes), align: 0
  Segment part 43.            Intra module refs:   Segment part 42
                                                   macRxCoordRealign
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EC7A - 0000EC82 (0x9 bytes), align: 0
  Segment part 44.            Intra module refs:   Segment part 7
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPanConflictComplete
                                   0000EC7A 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EC83 - 0000EC87 (0x5 bytes), align: 0
  Segment part 45.            Intra module refs:   MAC_MlmeAssociateReq
                                                   MAC_MlmePollReq
                                                   macPanConflictComplete
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EC88 - 0000EC91 (0xa bytes), align: 0
  Segment part 46.            Intra module refs:   MAC_InitDevice
                                                   Segment part 45
                                                   macAssocDataReq
                                                   macAssociateCnf
                                                   macDeviceReset
                                                   macPollCnf
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EC92 - 0000ECD7 (0x46 bytes), align: 0
  Segment part 47.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_InitDevice          0000EC92        ZMacInit (zmac)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000ECD8 - 0000ECF2 (0x1b bytes), align: 0
  Segment part 48.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_MlmeAssociateReq    0000ECD8        ZMacAssociateReq (zmac)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000ECF3 - 0000ECFF (0xd bytes), align: 0
  Segment part 49.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_MlmePollReq         0000ECF3        ZMacPollReq (zmac)
               calls direct
               stack 1 = 00000000 ( 00000002 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : mac_main

  SEGMENTS IN THE MODULE
  ======================
CODE_C
  Relative segment, address: CODE 00001936 - 00001997 (0x62 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 18
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macIdleSt               00001936 
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00001998 - 000019F9 (0x62 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macAssociatingSt        00001998        MAC_InitDevice (mac_device)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000019FA - 00001A5B (0x62 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPollingSt            000019FA        MAC_InitDevice (mac_device)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00001A5C - 00001ABD (0x62 bytes), align: 0
  Segment part 10.            Intra module refs:   Segment part 18
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macScanningSt           00001A5C 
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00001ABE - 00001AC8 (0xb bytes), align: 0
  Segment part 12.            Intra module refs:   Segment part 37
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSendMsgBufSize       00001ABE 
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00001AC9 - 00001AD3 (0xb bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 35
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSendMsgDataSize      00001AC9 
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00001AD4 - 00001ADE (0xb bytes), align: 0
  Segment part 14.            Intra module refs:   macCbackForEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCbackEventTbl        00001AD4 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3DE - 0000E3DE (0x1 bytes), align: 0
  Segment part 15.            Intra module refs:   macEventLoop
                                                   macMainReset
                                                   macSendDataMsg
                                                   macSendMsg
                                                   macSetEvent
                                                   macTaskInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTaskId               0000E3DE        Segment part 31 (mac_data)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3DF - 0000E3E3 (0x5 bytes), align: 0
  Segment part 16.            Intra module refs:   macEventLoop
                                                   macExecute
                                                   macMainReset
                                                   macStateIdle
                                                   macStateScanning
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMain                 0000E3DF        MAC_Init (mac_mgmt)
                                                   MAC_InitDevice (mac_device)
                                                   Segment part 69 (mac_mgmt)
                                                   macApiDataReq (mac_data)
                                                   macApiPending (mac_mgmt)
                                                   macApiScanReq (mac_scan)
                                                   macRxCheckPendingCallback (mac_data)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F01F - 0000F028 (0xa bytes), align: 0
  Segment part 17.            Intra module refs:   macExecute
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macStateTbl             0000F01F        MAC_InitDevice (mac_device)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3E4 - 0000E3F8 (0x15 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macReset                0000E3E4        MAC_InitDevice (mac_device)
                                                   Segment part 68 (mac_mgmt)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F029 - 0000F03A (0x12 bytes), align: 0
  Segment part 20.            Intra module refs:   macExecute
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macActionSet            0000F029        MAC_InitDevice (mac_device)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001174F - 00011795 (0x47 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMainReset            0001174F        MAC_MlmeResetReq (mac_mgmt)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00011796 - 0001179A (0x5 bytes), align: 0
  Segment part 23.            Intra module refs:   macExecute
                                                   macMainReset
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001179B - 000117B5 (0x1b bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSetEvent             0001179B        Segment part 12 (mac_device)
                                                   macApiScanReq (mac_scan)
                                                   macRxCompleteCallback (mac_data)
                                                   macTxCompleteCallback (mac_data)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000117B6 - 0001185D (0xa8 bytes), align: 0
  Segment part 25.            Intra module refs:   Segment part 38
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCbackForEvent        000117B6        MAC_McpsDataReq (mac_data)
                                                   Segment part 73 (mac_mgmt)
                                                   macApiDataReq (mac_data)
                                                   macDataTxComplete (mac_data)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000012 ( 00000017 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001185E - 00011865 (0x8 bytes), align: 0
  Segment part 26.            Intra module refs:   macCbackForEvent
                                                   macEventLoop
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00011866 - 00011870 (0xb bytes), align: 0
  Segment part 27.            Intra module refs:   macCbackForEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00011871 - 00011880 (0x10 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macStateIdle            00011871        macRxCompleteCallback (mac_data)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00011881 - 00011887 (0x7 bytes), align: 0
  Segment part 29.            Intra module refs:   macStateIdle
                                                   macStateScanning
                                                   macTaskInit
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00011888 - 0001189B (0x14 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macStateScanning        00011888        macCheckSched (mac_data)
                                                   macRxCompleteCallback (mac_data)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001189C - 00011937 (0x9c bytes), align: 0
  Segment part 31.            Intra module refs:   Segment part 41
                                                   macEventLoop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macExecute              0001189C        Segment part 29 (mac_device)
                                                   macApiAssociateReq (mac_device)
                                                   macApiDisassociateReq (mac_mgmt)
                                                   macApiScanReq (mac_scan)
                                                   macRxBeacon (mac_mgmt)
                                                   macScanNextChan (mac_scan)
                                                   macScanRxBeacon (mac_scan)
                                                   macScanRxCoordRealign (mac_scan)
                                                   macStartFrameResponseTimer (mac_device)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000E ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00011938 - 00011944 (0xd bytes), align: 0
  Segment part 32.            Intra module refs:   macExecute
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00011945 - 000119B3 (0x6f bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSendMsg              00011945        MAC_MlmePollReq (mac_device)
                                                   MAC_MlmeScanReq (mac_scan)
                                                   MAC_MlmeSyncReq (mac_mgmt)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000013 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000119B4 - 00011A4A (0x97 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSendDataMsg          000119B4        MAC_MlmeAssociateReq (mac_device)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000015 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00011A4B - 00011A5C (0x12 bytes), align: 0
  Segment part 35.            Intra module refs:   macSendDataMsg
                                                   macSendMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00011A5D - 00011A66 (0xa bytes), align: 0
  Segment part 36.            Intra module refs:   macSendDataMsg
                                                   macSendMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00011A67 - 00011A73 (0xd bytes), align: 0
  Segment part 37.            Intra module refs:   macSendDataMsg
                                                   macSendMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00011A74 - 00011A88 (0x15 bytes), align: 0
  Segment part 38.            Intra module refs:   macSendDataMsg
                                                   macSendMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00011A89 - 00011A94 (0xc bytes), align: 0
  Segment part 39.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTaskInit             00011A89        osalAddTasks (OSAL_SampleApp)
               is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00011A95 - 00011BEB (0x157 bytes), align: 0
  Segment part 40.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macEventLoop            00011A95        osalAddTasks (OSAL_SampleApp)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00011BEC - 00011BFC (0x11 bytes), align: 0
  Segment part 41.            Intra module refs:   macEventLoop
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001575 - 0000157E (0xa bytes), align: 0
  Segment part 18.            Intra module refs:   macStateTbl
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000157F - 00001590 (0x12 bytes), align: 0
  Segment part 21.            Intra module refs:   macActionSet

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : mac_mgmt

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E3F9 - 0000E3F9 (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   macApiDisassociateReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMgmt                 0000E3F9 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3FA - 0000E3FA (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   MAC_MlmeResetReq
                                                   macRxBeacon
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPanCoordinator       0000E3FA 
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00001ADF - 00001AF3 (0x15 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMgmtAction1          00001ADF        Segment part 21 (mac_main)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00001AF4 - 00001B02 (0xf bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMgmtAction2          00001AF4        Segment part 21 (mac_main)
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A2FB - 0000A334 (0x3a bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macGetCoordAddress      0000A2FB        macAssocDataReq (mac_device)
               calls direct
               stack 1 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A335 - 0000A34E (0x1a bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macGetMyAddrMode        0000A335        macApiPollReq (mac_device)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A34F - 0000A353 (0x5 bytes), align: 0
  Segment part 15.            Intra module refs:   macRxDisassoc
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A354 - 0000A38F (0x3c bytes), align: 0
  Segment part 17.            Intra module refs:   Segment part 62
                                                   macDisassocComplete
                                                   macRxDisassoc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCoordAddrCmp         0000A354 
               calls direct
               stack 1 = 00000002 ( 00000002 )
               stack 2 = 00000035 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A390 - 0000A39C (0xd bytes), align: 0
  Segment part 18.            Intra module refs:   macCoordAddrCmp
                                                   macGetCoordAddress
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A39D - 0000A5BF (0x223 bytes), align: 0
  Segment part 20.            Intra module refs:   macBuildCommonReq
                                                   macBuildDisassociateReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBuildHeader          0000A39D        macApiAssociateReq (mac_device)
                                                   macBuildDataFrame (mac_data)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000012 ( 00000013 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A5C0 - 0000A5C4 (0x5 bytes), align: 0
  Segment part 21.            Intra module refs:   macBuildBeaconNotifyInd
                                                   macBuildCommonReq
                                                   macBuildHeader
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A5C5 - 0000A5C8 (0x4 bytes), align: 0
  Segment part 22.            Intra module refs:   macBuildHeader
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A5C9 - 0000A5C9 (0x1 bytes), align: 0
  Segment part 23.            Intra module refs:   Segment part 22
                                                   Segment part 25
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A5CA - 0000A5D2 (0x9 bytes), align: 0
  Segment part 24.            Intra module refs:   Segment part 23
                                                   Segment part 29
                                                   macBuildHeader
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A5D3 - 0000A5D5 (0x3 bytes), align: 0
  Segment part 25.            Intra module refs:   macBuildHeader
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A5D6 - 0000A5DA (0x5 bytes), align: 0
  Segment part 26.            Intra module refs:   Segment part 25
                                                   Segment part 41
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A5DB - 0000A5E1 (0x7 bytes), align: 0
  Segment part 27.            Intra module refs:   macBuildHeader
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A5E2 - 0000A5E7 (0x6 bytes), align: 0
  Segment part 28.            Intra module refs:   Segment part 27
                                                   Segment part 35
                                                   macBuildCommonReq
                                                   macBuildHeader
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A5E8 - 0000A5EF (0x8 bytes), align: 0
  Segment part 29.            Intra module refs:   macBuildHeader
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A5F0 - 0000A5F6 (0x7 bytes), align: 0
  Segment part 30.            Intra module refs:   Segment part 29
                                                   macBuildHeader
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A5F7 - 0000A688 (0x92 bytes), align: 0
  Segment part 31.            Intra module refs:   macRxBeacon
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBuildCommonReq       0000A5F7        macApiPollReq (mac_device)
                                                   macAssocDataReq (mac_device)
                                                   macScanNextChan (mac_scan)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000037 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A689 - 0000A721 (0x99 bytes), align: 0
  Segment part 32.            Intra module refs:   macApiDisassociateReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBuildDisassociateReq
                                   0000A689 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000009 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A722 - 0000A729 (0x8 bytes), align: 0
  Segment part 33.            Intra module refs:   MAC_MlmeResetReq
                                                   macApiDisassociateReq
                                                   macApiPending
                                                   macBuildDisassociateReq
                                                   macCommStatusInd
                                                   macRxBeacon
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A72A - 0000A72C (0x3 bytes), align: 0
  Segment part 34.            Intra module refs:   macApiDisassociateReq
                                                   macBuildDisassociateReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A72D - 0000A732 (0x6 bytes), align: 0
  Segment part 35.            Intra module refs:   Segment part 34
                                                   Segment part 63
                                                   macBuildBeaconNotifyInd
                                                   macBuildDisassociateReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A733 - 0000A94A (0x218 bytes), align: 0
  Segment part 36.            Intra module refs:   macRxBeacon
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBuildBeaconNotifyInd
                                   0000A733        macScanRxBeacon (mac_scan)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000035 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A94B - 0000A956 (0xc bytes), align: 0
  Segment part 37.            Intra module refs:   macBuildBeaconNotifyInd
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A957 - 0000A961 (0xb bytes), align: 0
  Segment part 38.            Intra module refs:   macApiDisassociateReq
                                                   macBuildBeaconNotifyInd
                                                   macBuildCommonReq
                                                   macBuildDisassociateReq
                                                   macBuildHeader
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A962 - 0000A968 (0x7 bytes), align: 0
  Segment part 39.            Intra module refs:   macBuildBeaconNotifyInd
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A969 - 0000A96F (0x7 bytes), align: 0
  Segment part 40.            Intra module refs:   Segment part 39
                                                   macBuildBeaconNotifyInd
                                                   macDisassocComplete
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A970 - 0000A973 (0x4 bytes), align: 0
  Segment part 41.            Intra module refs:   macBuildBeaconNotifyInd
                                                   macBuildHeader
                                                   macCommStatusInd
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A974 - 0000A977 (0x4 bytes), align: 0
  Segment part 42.            Intra module refs:   macBuildBeaconNotifyInd
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A978 - 0000A982 (0xb bytes), align: 0
  Segment part 43.            Intra module refs:   Segment part 42
                                                   Segment part 45
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A983 - 0000A98F (0xd bytes), align: 0
  Segment part 44.            Intra module refs:   macBuildBeaconNotifyInd
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A990 - 0000A995 (0x6 bytes), align: 0
  Segment part 45.            Intra module refs:   macBuildBeaconNotifyInd
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A996 - 0000A9A7 (0x12 bytes), align: 0
  Segment part 46.            Intra module refs:   macBuildBeaconNotifyInd
                                                   macCommStatusInd
                                                   macRxDisassoc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSecCpy               0000A996        macRxCoordRealign (mac_device)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 0000002B ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A9A8 - 0000A9AA (0x3 bytes), align: 0
  Segment part 47.            Intra module refs:   macMgmtAction1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macNoAction             0000A9A8        Segment part 14 (mac_data)
                                                   Segment part 16 (mac_data)
                                                   Segment part 18 (mac_data)
                                                   Segment part 20 (mac_data)
                                                   Segment part 27 (mac_data)
               is indirectly called
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A9AB - 0000A9B3 (0x9 bytes), align: 0
  Segment part 48.            Intra module refs:   macDefaultAction
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiUnsupported       0000A9AB 
               calls direct
               stack 1 = 00000002 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A9B4 - 0000A9CC (0x19 bytes), align: 0
  Segment part 49.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDefaultAction        0000A9B4        macExecute (mac_main)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A9CD - 0000A9DF (0x13 bytes), align: 0
  Segment part 50.            Intra module refs:   macApiPending
                                                   macMgmtAction1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiBadState          0000A9CD 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000003 )
               stack 2 = 00000009 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A9E0 - 0000AA1B (0x3c bytes), align: 0
  Segment part 51.            Intra module refs:   macMgmtAction1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiPending           0000A9E0 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AA1C - 0000AAE5 (0xca bytes), align: 0
  Segment part 52.            Intra module refs:   macMgmtAction1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCommStatusInd        0000AA1C        macCbackForEvent (mac_main)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000002B )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AAE6 - 0000AAEF (0xa bytes), align: 0
  Segment part 53.            Intra module refs:   macApiDisassociateReq
                                                   macBuildBeaconNotifyInd
                                                   macCommStatusInd
                                                   macDisassocComplete
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AAF0 - 0000AB65 (0x76 bytes), align: 0
  Segment part 54.            Intra module refs:   macMgmtAction2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiDisassociateReq   0000AAF0 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AB66 - 0000ABE4 (0x7f bytes), align: 0
  Segment part 55.            Intra module refs:   macMgmtAction2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDisassocComplete     0000AB66 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000003 )
               stack 2 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000ABE5 - 0000ABEA (0x6 bytes), align: 0
  Segment part 56.            Intra module refs:   macConflictSyncLossInd
                                                   macDisassocComplete
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000ABEB - 0000AC75 (0x8b bytes), align: 0
  Segment part 57.            Intra module refs:   macMgmtAction2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxDisassoc           0000ABEB        Segment part 34 (mac_device)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000022 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AC76 - 0000AC7F (0xa bytes), align: 0
  Segment part 58.            Intra module refs:   macCommStatusInd
                                                   macRxDisassoc
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AC80 - 0000AC94 (0x15 bytes), align: 0
  Segment part 59.            Intra module refs:   macDisassocComplete
                                                   macRxDisassoc
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AC95 - 0000ACA3 (0xf bytes), align: 0
  Segment part 60.            Intra module refs:   macBuildHeader
                                                   macRxBeacon
                                                   macRxDisassoc
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000ACA4 - 0000AD6D (0xca bytes), align: 0
  Segment part 61.            Intra module refs:   macMgmtAction2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxBeacon             0000ACA4 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000037 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AD6E - 0000AD78 (0xb bytes), align: 0
  Segment part 62.            Intra module refs:   macApiDisassociateReq
                                                   macRxBeacon
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AD79 - 0000AD83 (0xb bytes), align: 0
  Segment part 63.            Intra module refs:   macBuildBeaconNotifyInd
                                                   macRxBeacon
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AD84 - 0000ADAC (0x29 bytes), align: 0
  Segment part 64.            Intra module refs:   macRxBeacon
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macConflictSyncLossInd
                                   0000AD84        macPanConflictComplete (mac_device)
               calls direct
               stack 1 = 00000000 ( 00000003 )
               stack 2 = 00000035 ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000ADAD - 0000ADB8 (0xc bytes), align: 0
  Segment part 65.            Intra module refs:   Segment part 59
                                                   macConflictSyncLossInd
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000ADB9 - 0000AE92 (0xda bytes), align: 0
  Segment part 67.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_MlmeResetReq        0000ADB9        ZMacReset (zmac)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AE93 - 0000AE9D (0xb bytes), align: 0
  Segment part 68.            Intra module refs:   MAC_MlmeResetReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AE9E - 0000AEA6 (0x9 bytes), align: 0
  Segment part 69.            Intra module refs:   MAC_MlmeResetReq
                                                   macApiPending
                                                   macBuildBeaconNotifyInd
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AEA7 - 0000AEB3 (0xd bytes), align: 0
  Segment part 70.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_MlmeSyncReq         0000AEA7        ZMacSyncReq (zmac)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AEB4 - 0000AEC5 (0x12 bytes), align: 0
  Segment part 71.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_Init                0000AEB4        ZMacInit (zmac)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AEC6 - 0000AED4 (0xf bytes), align: 0
  Segment part 73.            Intra module refs:   MAC_Init
                                                   MAC_MlmeSyncReq
                                                   Segment part 56
                                                   macApiBadState
                                                   macApiUnsupported
                                                   macCoordAddrCmp
                                                   macDefaultAction
                                                   macGetCoordAddress
                                                   macGetMyAddrMode
                                                   macSecCpy

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : mac_pib

  SEGMENTS IN THE MODULE
  ======================
CODE_C
  Relative segment, address: CODE 00001B03 - 00001B3D (0x3b bytes), align: 0
  Segment part 7.             Intra module refs:   macPibReset
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00001B3E - 00001BC5 (0x88 bytes), align: 0
  Segment part 8.             Intra module refs:   MAC_MlmeGetReq
                                                   MAC_MlmeSetReq
                                                   Segment part 14
                                                   Segment part 16
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3FB - 0000E435 (0x3b bytes), align: 0
  Segment part 9.             Intra module refs:   MAC_MlmeGetReq
                                                   MAC_MlmeSetReq
                                                   macPibReset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPib                  0000E3FB        MAC_MlmeResetReq (mac_mgmt)
                                                   Segment part 18 (mac_mgmt)
                                                   macApiAssociateReq (mac_device)
                                                   macApiDisassociateReq (mac_mgmt)
                                                   macApiScanReq (mac_scan)
                                                   macAssocDataReq (mac_device)
                                                   macBuildHeader (mac_mgmt)
                                                   macCommStatusInd (mac_mgmt)
                                                   macCoordAddrCmp (mac_mgmt)
                                                   macCspTxRequestAckTimeoutCallback (mac_csp_tx)
                                                   macDisassocComplete (mac_mgmt)
                                                   macGetCoordAddress (mac_mgmt)
                                                   macGetMyAddrMode (mac_mgmt)
                                                   macRadioStopScan (mac_radio)
                                                   macRxBeacon (mac_mgmt)
                                                   macRxCompleteCallback (mac_data)
                                                   macRxCoordRealign (mac_device)
                                                   macRxDisassoc (mac_mgmt)
                                                   macScanRxBeacon (mac_scan)
                                                   macScanStartTimer (mac_scan)
                                                   macStartFrameResponseTimer (mac_device)
                                                   macStartResponseTimer (mac_device)
                                                   macTxChannelBusyCallback (mac_tx)
                                                   macTxCompleteCallback (mac_data)
                                                   macTxFrame (mac_tx)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001421C - 0001426B (0x50 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPibReset             0001421C        MAC_MlmeResetReq (mac_mgmt)
               calls direct
               stack 1 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001426C - 00014292 (0x27 bytes), align: 0
  Segment part 11.            Intra module refs:   MAC_MlmeGetReq
                                                   MAC_MlmeSetReq
           LOCAL                   ADDRESS         
           =====                   =======         
           macPibIndex             0001426C 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000F ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014293 - 0001430C (0x7a bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_MlmeGetReq          00014293        MAC_CbackEvent (zmac_cb)
                                                   ZMacGetReq (zmac)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001430D - 000144C1 (0x1b5 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_MlmeSetReq          0001430D        MAC_MlmeResetReq (mac_mgmt)
                                                   Segment part 59 (mac_mgmt)
                                                   ZMacReset (zmac)
                                                   ZMacSetReq (zmac)
                                                   macApiAssociateReq (mac_device)
                                                   macRxAssocRsp (mac_device)
                                                   macScanComplete (mac_scan)
                                                   macScanNextChan (mac_scan)
                                                   macScanRxCoordRealign (mac_scan)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000144C2 - 000144CB (0xa bytes), align: 0
  Segment part 14.            Intra module refs:   MAC_MlmeSetReq
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000144CC - 000144D0 (0x5 bytes), align: 0
  Segment part 15.            Intra module refs:   Segment part 14
                                                   Segment part 16
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000144D1 - 000144DC (0xc bytes), align: 0
  Segment part 16.            Intra module refs:   MAC_MlmeSetReq

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : mac_pwr

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E436 - 0000E436 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   macPwrReset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPwr                  0000E436 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00016BE8 - 00016BF0 (0x9 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPwrReset             00016BE8        MAC_MlmeResetReq (mac_mgmt)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00016BF1 - 00016BF7 (0x7 bytes), align: 0
  Segment part 8.             Intra module refs:   macPwrReset
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00016BF8 - 00016BFA (0x3 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiPwrOnReq          00016BF8        macMgmtAction2 (mac_mgmt)
               is indirectly called

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : mac_scan

  SEGMENTS IN THE MODULE
  ======================
CODE_C
  Relative segment, address: CODE 00001BC6 - 00001BD7 (0x12 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macScanAction           00001BC6        Segment part 21 (mac_main)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E437 - 0000E453 (0x1d bytes), align: 0
  Segment part 7.             Intra module refs:   macApiScanReq
                                                   macScanComplete
                                                   macScanNextChan
                                                   macScanRxBeacon
                                                   macScanRxCoordRealign
                                                   macScanStartTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010C71 - 00010CE4 (0x74 bytes), align: 0
  Segment part 12.            Intra module refs:   macApiScanReq
                                                   macScanFailedInProgress
           LOCAL                   ADDRESS         
           =====                   =======         
           macScanCnfInit          00010C71 
               stack 1 = 00000002 ( 00000001 )
               stack 2 = 0000000C ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010CE5 - 00010CE9 (0x5 bytes), align: 0
  Segment part 13.            Intra module refs:   macScanCnfInit
                                                   macScanRxBeacon
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010CEA - 00010CEE (0x5 bytes), align: 0
  Segment part 14.            Intra module refs:   macScanCnfInit
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010CEF - 00010CF5 (0x7 bytes), align: 0
  Segment part 15.            Intra module refs:   Segment part 14
                                                   Segment part 18
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010CF6 - 00010DFF (0x10a bytes), align: 0
  Segment part 16.            Intra module refs:   macScanAction
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiScanReq           00010CF6 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010E00 - 00010E04 (0x5 bytes), align: 0
  Segment part 17.            Intra module refs:   macApiScanReq
                                                   macScanNextChan
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010E05 - 00010E0C (0x8 bytes), align: 0
  Segment part 18.            Intra module refs:   macApiScanReq
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010E0D - 00010F0C (0x100 bytes), align: 0
  Segment part 19.            Intra module refs:   macScanAction
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macScanNextChan         00010E0D 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000017 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010F0D - 00010FB0 (0xa4 bytes), align: 0
  Segment part 20.            Intra module refs:   macScanAction
                                                   macScanNextChan
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macScanStartTimer       00010F0D 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000015 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010FB1 - 00011106 (0x156 bytes), align: 0
  Segment part 21.            Intra module refs:   macScanAction
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macScanRxBeacon         00010FB1 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000003D )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00011107 - 000111B2 (0xac bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macScanRxCoordRealign   00011107        Segment part 7 (mac_device)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000111B3 - 000111C3 (0x11 bytes), align: 0
  Segment part 23.            Intra module refs:   macScanRxCoordRealign
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000111C4 - 000111CE (0xb bytes), align: 0
  Segment part 24.            Intra module refs:   Segment part 23
                                                   Segment part 29
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000111CF - 000111E5 (0x17 bytes), align: 0
  Segment part 25.            Intra module refs:   Segment part 23
                                                   macScanRxCoordRealign
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000111E6 - 00011234 (0x4f bytes), align: 0
  Segment part 26.            Intra module refs:   macScanAction
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macScanComplete         000111E6 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00011235 - 0001123E (0xa bytes), align: 0
  Segment part 27.            Intra module refs:   MAC_MlmeScanReq
                                                   macScanComplete
                                                   macScanFailedInProgress
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001123F - 00011276 (0x38 bytes), align: 0
  Segment part 28.            Intra module refs:   macScanAction
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macScanFailedInProgress
                                   0001123F 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000003 )
               stack 2 = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00011277 - 0001127A (0x4 bytes), align: 0
  Segment part 29.            Intra module refs:   macScanFailedInProgress
                                                   macScanRxCoordRealign
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001127B - 00011287 (0xd bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_MlmeScanReq         0001127B        ZMacScanReq (zmac)
               calls direct
               stack 1 = 00000000 ( 00000002 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : mac_timer

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E454 - 0000E455 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   macBackoffTimerRolloverCallback
                                                   macTimer
                                                   macTimerCancel
                                                   macTimerUpdateBackoffTimer
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timerUnalignedQ         0000E454 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E456 - 0000E457 (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   macBackoffTimerRolloverCallback
                                                   macTimerCancel
                                                   macTimerUpdateBackoffTimer
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timerAlignedQ           0000E456 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F03B - 0000F03E (0x4 bytes), align: 0
  Segment part 9.             Intra module refs:   macBackoffTimerRolloverCallback
                                                   macBackoffTimerTriggerCallback
                                                   macTimerUpdateBackoffTimer
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F03F - 0000F042 (0x4 bytes), align: 0
  Segment part 11.            Intra module refs:   macBackoffTimerRolloverCallback
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E458 - 0000E459 (0x2 bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 23
                                                   Segment part 27
                                                   Segment part 30
                                                   macBackoffTimerTriggerCallback
                                                   macTimerUpdateBackoffTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012937 - 00012A0C (0xd6 bytes), align: 0
  Segment part 21.            Intra module refs:   macBackoffTimerRolloverCallback
                                                   macTimerAddTimer
                                                   macTimerCancel
           LOCAL                   ADDRESS         
           =====                   =======         
           macTimerUpdateBackoffTimer
                                   00012937 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000011 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012A0D - 00012A11 (0x5 bytes), align: 0
  Segment part 22.            Intra module refs:   macBackoffTimerTriggerCallback
                                                   macTimerUpdateBackoffTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012A12 - 00012A1D (0xc bytes), align: 0
  Segment part 23.            Intra module refs:   macTimerUpdateBackoffTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012A1E - 00012A21 (0x4 bytes), align: 0
  Segment part 24.            Intra module refs:   macTimerUpdateBackoffTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012A22 - 00012A2C (0xb bytes), align: 0
  Segment part 25.            Intra module refs:   Segment part 24
                                                   Segment part 27
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012A2D - 00012A91 (0x65 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerTriggerCallback
                                   00012A2D        macBackoffTimerCompareIsr (mac_backoff_timer)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012A92 - 00012A9A (0x9 bytes), align: 0
  Segment part 27.            Intra module refs:   macBackoffTimerTriggerCallback
                                                   macTimerUpdateBackoffTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012A9B - 00012B21 (0x87 bytes), align: 0
  Segment part 28.            Intra module refs:   macBackoffTimerRolloverCallback
           LOCAL                   ADDRESS         
           =====                   =======         
           macTimerRecalcUnaligned
                                   00012A9B 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000013 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012B22 - 00012B32 (0x11 bytes), align: 0
  Segment part 29.            Intra module refs:   macTimer
                                                   macTimerRecalcUnaligned
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012B33 - 00012B3B (0x9 bytes), align: 0
  Segment part 30.            Intra module refs:   Segment part 23
                                                   macTimerAddTimer
                                                   macTimerCancel
                                                   macTimerRecalcUnaligned
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012B3C - 00012B42 (0x7 bytes), align: 0
  Segment part 31.            Intra module refs:   macBackoffTimerTriggerCallback
                                                   macTimerAddTimer
                                                   macTimerRecalcUnaligned
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012B43 - 00012BF9 (0xb7 bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerRolloverCallback
                                   00012B43        macBackoffTimerCompareIsr (mac_backoff_timer)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012BFA - 00012C77 (0x7e bytes), align: 0
  Segment part 33.            Intra module refs:   Segment part 29
           LOCAL                   ADDRESS         
           =====                   =======         
           macTimerAddTimer        00012BFA 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000010 ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012C78 - 00012CB3 (0x3c bytes), align: 0
  Segment part 35.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTimer                00012C78        macScanStartTimer (mac_scan)
                                                   macStartFrameResponseTimer (mac_device)
                                                   macStartResponseTimer (mac_device)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000004 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012CB4 - 00012CF3 (0x40 bytes), align: 0
  Segment part 36.            Intra module refs:   macTimerCancel
           LOCAL                   ADDRESS         
           =====                   =======         
           macTimerRemoveTimer     00012CB4 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012CF4 - 00012CF8 (0x5 bytes), align: 0
  Segment part 37.            Intra module refs:   macTimerCancel
                                                   macTimerRemoveTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012CF9 - 00012D41 (0x49 bytes), align: 0
  Segment part 38.            Intra module refs:   macBackoffTimerTriggerCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTimerCancel          00012CF9        macAssocFailed (mac_device)
                                                   macPollDataRxInd (mac_device)
                                                   macPollRxAssocRsp (mac_device)
                                                   macPollRxDisassoc (mac_device)
                                                   macRxAssocRsp (mac_device)
                                                   macScanComplete (mac_scan)
                                                   macStartFrameResponseTimer (mac_device)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000C ( 00000009 )
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001591 - 00001594 (0x4 bytes), align: 0
  Segment part 10.            Intra module refs:   Segment part 9
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001595 - 00001598 (0x4 bytes), align: 0
  Segment part 12.            Intra module refs:   Segment part 11

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\AF.r51
  PROGRAM MODULE, NAME : AF

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E45A - 0000E45B (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   AF_DataRequest
                                                   afEndPoints
                                                   afFindEndPointDescList
                                                   afIncomingData
                                                   afInit
                                                   afNumEndPoints
                                                   afRegisterExtended
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epList                  0000E45A        ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_UpdateNwkStatus (ZDObject)
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AED5 - 0000AEE2 (0xe bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afInit                  0000AED5        main (ZMain)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AEE3 - 0000AF6D (0x8b bytes), align: 0
  Segment part 8.             Intra module refs:   afRegister
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afRegisterExtended      0000AEE3 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000E ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AF6E - 0000AF72 (0x5 bytes), align: 0
  Segment part 9.             Intra module refs:   afFindSimpleDesc
                                                   afRegisterExtended
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine31           0000AF6E 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AF73 - 0000AF7A (0x8 bytes), align: 0
  Segment part 10.            Intra module refs:   afRegisterExtended
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0000AF73 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AF7B - 0000AFAB (0x31 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afRegister              0000AF7B        SampleApp_Init (SampleApp)
                                                   ZDApp_Init (ZDApp)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AFAC - 0000AFFB (0x50 bytes), align: 0
  Segment part 12.            Intra module refs:   AF_DataRequest
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afDataConfirm           0000AFAC        APSDE_DataConfirm (APSMEDE_CB)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000002B ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AFFC - 0000B003 (0x8 bytes), align: 0
  Segment part 13.            Intra module refs:   AF_DataRequest
                                                   afDataConfirm
                                                   afRegisterExtended
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0000AFFC 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B004 - 0000B221 (0x21e bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afIncomingData          0000B004        APS_event_loop (APS)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000005 ( 00000020 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B222 - 0000B229 (0x8 bytes), align: 0
  Segment part 15.            Intra module refs:   afBuildMSGIncoming
                                                   afIncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine33           0000B222 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B22A - 0000B22D (0x4 bytes), align: 0
  Segment part 16.            Intra module refs:   afIncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine14           0000B22A 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B22E - 0000B233 (0x6 bytes), align: 0
  Segment part 17.            Intra module refs:   ?Subroutine14
                                                   ?Subroutine5
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine24           0000B22E 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B234 - 0000B242 (0xf bytes), align: 0
  Segment part 18.            Intra module refs:   afIncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           0000B234 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B243 - 0000B250 (0xe bytes), align: 0
  Segment part 19.            Intra module refs:   afIncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           0000B243 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B251 - 0000B26B (0x1b bytes), align: 0
  Segment part 20.            Intra module refs:   afIncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            0000B251 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B26C - 0000B274 (0x9 bytes), align: 0
  Segment part 21.            Intra module refs:   afIncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0000B26C 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B275 - 0000B3EE (0x17a bytes), align: 0
  Segment part 22.            Intra module refs:   afIncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           afBuildMSGIncoming      0000B275 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000020 ( 00000018 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B3EF - 0000B3F9 (0xb bytes), align: 0
  Segment part 23.            Intra module refs:   afBuildMSGIncoming
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine21           0000B3EF 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B3FA - 0000B403 (0xa bytes), align: 0
  Segment part 24.            Intra module refs:   afBuildMSGIncoming
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine17           0000B3FA 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B404 - 0000B40C (0x9 bytes), align: 0
  Segment part 25.            Intra module refs:   afBuildMSGIncoming
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           0000B404 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B40D - 0000B412 (0x6 bytes), align: 0
  Segment part 26.            Intra module refs:   ?Subroutine1
                                                   ?Subroutine10
                                                   ?Subroutine22
                                                   ?Subroutine24
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine32           0000B40D 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B413 - 0000B41D (0xb bytes), align: 0
  Segment part 27.            Intra module refs:   afBuildMSGIncoming
                                                   afDataConfirm
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            0000B413 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B41E - 0000B423 (0x6 bytes), align: 0
  Segment part 28.            Intra module refs:   afBuildMSGIncoming
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0000B41E 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B424 - 0000B42C (0x9 bytes), align: 0
  Segment part 29.            Intra module refs:   ?Subroutine0
                                                   afBuildMSGIncoming
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine22           0000B424 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B42D - 0000B716 (0x2ea bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AF_DataRequest          0000B42D        SendData (SampleApp)
                                                   fillAndSend (ZDProfile)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000009 ( 0000002B )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B717 - 0000B71C (0x6 bytes), align: 0
  Segment part 31.            Intra module refs:   ?Subroutine27
                                                   AF_DataRequest
                                                   afBuildMSGIncoming
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine29           0000B717 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B71D - 0000B724 (0x8 bytes), align: 0
  Segment part 32.            Intra module refs:   AF_DataRequest
                                                   afBuildMSGIncoming
                                                   afEndPoints
                                                   afFindSimpleDesc
                                                   afIncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine20           0000B71D 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B725 - 0000B72B (0x7 bytes), align: 0
  Segment part 33.            Intra module refs:   AF_DataRequest
                                                   afIncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine18           0000B725 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B72C - 0000B72F (0x4 bytes), align: 0
  Segment part 34.            Intra module refs:   AF_DataRequest
                                                   afFindEndPointDescList
                                                   afIncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine12           0000B72C 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B730 - 0000B734 (0x5 bytes), align: 0
  Segment part 35.            Intra module refs:   ?Subroutine11
                                                   ?Subroutine12
                                                   ?Subroutine8
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine23           0000B730 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B735 - 0000B73E (0xa bytes), align: 0
  Segment part 36.            Intra module refs:   AF_DataRequest
                                                   afIncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            0000B735 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B73F - 0000B745 (0x7 bytes), align: 0
  Segment part 37.            Intra module refs:   ?Subroutine17
                                                   ?Subroutine19
                                                   ?Subroutine20
                                                   ?Subroutine5
                                                   ?Subroutine9
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine25           0000B73F 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B746 - 0000B750 (0xb bytes), align: 0
  Segment part 38.            Intra module refs:   AF_DataRequest
                                                   afBuildMSGIncoming
                                                   afCopyAddress
                                                   afIncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0000B746 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B751 - 0000B75B (0xb bytes), align: 0
  Segment part 39.            Intra module refs:   AF_DataRequest
                                                   afIncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0000B751 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B75C - 0000B78C (0x31 bytes), align: 0
  Segment part 40.            Intra module refs:   afFindEndPointDesc
                                                   afFindSimpleDesc
                                                   afGetReflector
                                                   afIncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           afFindEndPointDescList
                                   0000B75C 
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000019 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B78D - 0000B7B1 (0x25 bytes), align: 0
  Segment part 41.            Intra module refs:   afDataConfirm
                                                   afIncomingData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afFindEndPointDesc      0000B78D        MTProcessAppMsg (MTEL)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000019 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B7B2 - 0000B7BB (0xa bytes), align: 0
  Segment part 42.            Intra module refs:   AF_DataRequest
                                                   afBuildMSGIncoming
                                                   afFindEndPointDesc
                                                   afFindEndPointDescList
                                                   afGetReflector
                                                   afIncomingData
                                                   afNumEndPoints
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            0000B7B2 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B7BC - 0000B836 (0x7b bytes), align: 0
  Segment part 43.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afFindSimpleDesc        0000B7BC        ZDO_ProcessSimpleDescReq (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B837 - 0000B83F (0x9 bytes), align: 0
  Segment part 44.            Intra module refs:   AF_DataRequest
                                                   afFindSimpleDesc
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine16           0000B837 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B840 - 0000B846 (0x7 bytes), align: 0
  Segment part 45.            Intra module refs:   ?Subroutine16
                                                   ?Subroutine18
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine27           0000B840 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B847 - 0000B84A (0x4 bytes), align: 0
  Segment part 46.            Intra module refs:   afBuildMSGIncoming
                                                   afFindSimpleDesc
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine15           0000B847 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B84B - 0000B84E (0x4 bytes), align: 0
  Segment part 47.            Intra module refs:   ?Subroutine13
                                                   ?Subroutine15
                                                   ?Subroutine9
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine26           0000B84B 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B84F - 0000B857 (0x9 bytes), align: 0
  Segment part 48.            Intra module refs:   ?Subroutine23
                                                   ?Subroutine24
                                                   ?Subroutine26
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine28           0000B84F 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B858 - 0000B87D (0x26 bytes), align: 0
  Segment part 49.            Intra module refs:   AF_DataRequest
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afGetReflector          0000B858 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000002B ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B87E - 0000B882 (0x5 bytes), align: 0
  Segment part 51.            Intra module refs:   afFindEndPointDesc
                                                   afGetReflector
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine34           0000B87E 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B883 - 0000B8C4 (0x42 bytes), align: 0
  Segment part 52.            Intra module refs:   AF_DataRequest
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afDataReqMTU            0000B883 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000002B ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B8C5 - 0000B8C9 (0x5 bytes), align: 0
  Segment part 53.            Intra module refs:   afCopyAddress
                                                   afDataReqMTU
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine35           0000B8C5 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B8CA - 0000B8EF (0x26 bytes), align: 0
  Segment part 56.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afNumEndPoints          0000B8CA        ZDO_ProcessActiveEPReq (ZDObject)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B8F0 - 0000B8F6 (0x7 bytes), align: 0
  Segment part 57.            Intra module refs:   afEndPoints
                                                   afFindEndPointDescList
                                                   afInit
                                                   afNumEndPoints
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine30           0000B8F0 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B8F7 - 0000B8FE (0x8 bytes), align: 0
  Segment part 58.            Intra module refs:   afNumEndPoints
                                                   afRegisterExtended
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine19           0000B8F7 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B8FF - 0000B93F (0x41 bytes), align: 0
  Segment part 59.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afEndPoints             0000B8FF        ZDO_ProcessActiveEPReq (ZDObject)
               stack 1 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B940 - 0000B966 (0x27 bytes), align: 0
  Segment part 60.            Intra module refs:   afBuildMSGIncoming
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afCopyAddress           0000B940 
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000015 ( 00000009 )

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\AccessCodeSpace.r51
  PROGRAM MODULE, NAME : CC2430_READ_ANY_CODE_BYTE

  SEGMENTS IN THE MODULE
  ======================
NEAR_CODE
  Relative segment, address: CODE 00000E69 - 00000E90 (0x28 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GetCodeByte             00000E69        ?Subroutine48 (OSAL_Nv)
                                                   ?Subroutine49 (OSAL_Nv)
                                                   calcChkF (OSAL_Nv)
                                                   osal_nv_write (OSAL_Nv)
           LOCAL                   ADDRESS         
           =====                   =======         
           _notBank2               00000E7E 

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\DebugTrace.r51
    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\Font.r51
  PROGRAM MODULE, NAME : Font

  SEGMENTS IN THE MODULE
  ======================
CODE_C
  Relative segment, address: CODE 00001BD8 - 000021C7 (0x5f0 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Font8X8                 00001BD8        ?Subroutine8 (hal_lcd)

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\MTEL.r51
  PROGRAM MODULE, NAME : MTEL

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000C9 - 000000C9 (0x1 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WDCTL                   000000C9 
    -------------------------------------------------------------------------
XDATA_AN
  Relative segment, address: XDATA 0000E000 - 0000E007 (0x8 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mboxMsg                 0000E000 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F043 - 0000F052 (0x10 bytes), align: 0
  Segment part 9.             Intra module refs:   Segment part 14
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F053 - 0000F062 (0x10 bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 14
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F063 - 0000F066 (0x4 bytes), align: 0
  Segment part 13.            Intra module refs:   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MTVersionString         0000F063 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F067 - 0000F06A (0x4 bytes), align: 0
  Segment part 22.            Intra module refs:   MT_ProcessSerialCommand
                                                   osalTimerInit (OSAL_Timers)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_3e8          0000F067 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F06B - 0000F06E (0x4 bytes), align: 0
  Segment part 24.            Intra module refs:   MT_Reset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_53544159     0000F06B 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E45C - 0000E45C (0x1 bytes), align: 0
  Segment part 15.            Intra module refs:   MT_ProcessEvent
                                                   MT_TaskInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_TaskID               0000E45C        SPIMgr_ProcessZToolData (SPIMgr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E45D - 0000E45D (0x1 bytes), align: 0
  Segment part 16.            Intra module refs:   MT_ProcessSerialCommand
                                                   MT_TaskInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           debugThreshold          0000E45D 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E45E - 0000E45E (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   MT_ProcessSerialCommand
                                                   MT_TaskInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           debugCompId             0000E45E 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E45F - 0000E460 (0x2 bytes), align: 0
  Segment part 18.            Intra module refs:   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           save_cmd                0000E45F 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007A5C - 00007A78 (0x1d bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_TaskInit             00007A5C        osalAddTasks (OSAL_SampleApp)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007A79 - 00007A90 (0x18 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_IndReset             00007A79        InitBoard (OnBoard)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007A91 - 00007AE3 (0x53 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ProcessEvent         00007A91        osalAddTasks (OSAL_SampleApp)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007AE4 - 00007B69 (0x86 bytes), align: 0
  Segment part 29.            Intra module refs:   MT_BuildAndSendZToolResponse
                                                   MT_ProcessDebugMsg
                                                   MT_ProcessDebugStr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_BuildSPIMsg          00007AE4 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000001B ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007B6A - 00007B71 (0x8 bytes), align: 0
  Segment part 30.            Intra module refs:   MT_BuildSPIMsg
                                                   MT_ProcessCommand
                                                   MT_ProcessDebugMsg
                                                   MT_ProcessGetDeviceInfo
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine17           00007B6A 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007B72 - 00007BE0 (0x6f bytes), align: 0
  Segment part 31.            Intra module refs:   ?Subroutine16
                                                   MTProcessAppRspMsg
                                                   MT_ProcessGetDeviceInfo
                                                   MT_ProcessGetNV
                                                   MT_ProcessGetNvInfo
                                                   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_BuildAndSendZToolResponse
                                   00007B72 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000025 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007BE1 - 00007BE8 (0x8 bytes), align: 0
  Segment part 32.            Intra module refs:   MTProcessAppMsg
                                                   MT_BuildAndSendZToolResponse
                                                   MT_ProcessGetNV
                                                   MT_ProcessGetNvInfo
                                                   MT_ProcessSerialCommand
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine18           00007BE1 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007BE9 - 00007CA9 (0xc1 bytes), align: 0
  Segment part 34.            Intra module refs:   MT_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ProcessCommand       00007BE9 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000A ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007CAA - 00007DDC (0x133 bytes), align: 0
  Segment part 35.            Intra module refs:   MT_ProcessCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ProcessDebugMsg      00007CAA 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000E ( 0000001B )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007DDD - 00007DE7 (0xb bytes), align: 0
  Segment part 36.            Intra module refs:   MT_ProcessDebugMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           00007DDD 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007DE8 - 00007DFB (0x14 bytes), align: 0
  Segment part 37.            Intra module refs:   MT_ProcessDebugMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00007DE8 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007DFC - 00007E08 (0xd bytes), align: 0
  Segment part 38.            Intra module refs:   ?Subroutine0
                                                   MT_ProcessDebugMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine12           00007DFC 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007E09 - 00007E0F (0x7 bytes), align: 0
  Segment part 39.            Intra module refs:   ?Subroutine0
                                                   ?Subroutine12
                                                   MT_ReverseBytes
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine14           00007E09 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007E10 - 00007E8C (0x7d bytes), align: 0
  Segment part 40.            Intra module refs:   MT_ProcessCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ProcessDebugStr      00007E10 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000E ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007E8D - 00007E91 (0x5 bytes), align: 0
  Segment part 41.            Intra module refs:   MT_ProcessDebugStr
                                                   MT_ReverseBytes
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine19           00007E8D 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007E92 - 00007EA2 (0x11 bytes), align: 0
  Segment part 42.            Intra module refs:   MT_ProcessDebugMsg
                                                   MT_ProcessDebugStr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           00007E92 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007EA3 - 00007EE2 (0x40 bytes), align: 0
  Segment part 43.            Intra module refs:   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ProcessSetNV         00007EA3 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000023 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007EE3 - 00007EFD (0x1b bytes), align: 0
  Segment part 44.            Intra module refs:   MTProcessAppRspMsg
                                                   MT_IndReset
                                                   MT_ProcessEvent
                                                   MT_ProcessSetNV
                                                   MT_SendErrorNotification
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine16           00007EE3 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007EFE - 00007FA5 (0xa8 bytes), align: 0
  Segment part 45.            Intra module refs:   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ProcessGetNV         00007EFE 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000023 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007FA6 - 000081C1 (0x21c bytes), align: 0
  Segment part 46.            Intra module refs:   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ProcessGetNvInfo     00007FA6 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000023 ( 0000001A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000081C2 - 00008287 (0xc6 bytes), align: 0
  Segment part 47.            Intra module refs:   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ProcessGetDeviceInfo
                                   000081C2 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000023 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008288 - 00008290 (0x9 bytes), align: 0
  Segment part 48.            Intra module refs:   MT_ProcessGetDeviceInfo
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            00008288 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008291 - 00008716 (0x486 bytes), align: 0
  Segment part 49.            Intra module refs:   MT_ProcessCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ProcessSerialCommand
                                   00008291 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000E ( 00000027 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008717 - 0000871B (0x5 bytes), align: 0
  Segment part 50.            Intra module refs:   MT_ProcessSerialCommand
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            00008717 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000871C - 0000872B (0x10 bytes), align: 0
  Segment part 51.            Intra module refs:   ?Subroutine5
                                                   ?Subroutine6
                                                   ?Subroutine9
                                                   MT_ProcessSerialCommand
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           0000871C 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000872C - 00008737 (0xc bytes), align: 0
  Segment part 52.            Intra module refs:   MTProcessAppMsg
                                                   MT_ProcessCommand
                                                   MT_ProcessSerialCommand
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            0000872C 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008738 - 0000874D (0x16 bytes), align: 0
  Segment part 53.            Intra module refs:   MT_ProcessSerialCommand
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            00008738 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000874E - 000087C6 (0x79 bytes), align: 0
  Segment part 54.            Intra module refs:   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MTProcessLedControl     0000874E 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000023 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000087C7 - 00008898 (0xd2 bytes), align: 0
  Segment part 55.            Intra module refs:   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MTProcessAppMsg         000087C7 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000023 ( 00000015 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008899 - 000088A8 (0x10 bytes), align: 0
  Segment part 56.            Intra module refs:   MTProcessAppMsg
                                                   MT_ProcessSerialCommand
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            00008899 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000088A9 - 000088B3 (0xb bytes), align: 0
  Segment part 57.            Intra module refs:   MTProcessAppMsg
                                                   MT_ProcessSerialCommand
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            000088A9 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000088B4 - 000088BC (0x9 bytes), align: 0
  Segment part 58.            Intra module refs:   MTProcessAppMsg
                                                   MT_ProcessGetNvInfo
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            000088B4 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000088BD - 000088C5 (0x9 bytes), align: 0
  Segment part 59.            Intra module refs:   MTProcessAppMsg
                                                   MT_ProcessDebugMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            000088BD 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000088C6 - 000088EA (0x25 bytes), align: 0
  Segment part 60.            Intra module refs:   MT_ProcessCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MTProcessAppRspMsg      000088C6 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000E ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000088EB - 0000890D (0x23 bytes), align: 0
  Segment part 61.            Intra module refs:   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_RAMRead              000088EB 
               stack 1 = 00000000 ( 00000003 )
               stack 2 = 00000023 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000890E - 00008914 (0x7 bytes), align: 0
  Segment part 62.            Intra module refs:   MTProcessLedControl
                                                   MT_RAMRead
                                                   MT_RAMWrite
                                                   MT_TaskInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine15           0000890E 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008915 - 0000892F (0x1b bytes), align: 0
  Segment part 63.            Intra module refs:   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_RAMWrite             00008915 
               stack 1 = 00000000 ( 00000003 )
               stack 2 = 00000023 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008930 - 0000895B (0x2c bytes), align: 0
  Segment part 65.            Intra module refs:   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_Reset                00008930 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000023 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000895C - 00008973 (0x18 bytes), align: 0
  Segment part 66.            Intra module refs:   MT_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_SendErrorNotification
                                   0000895C 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000A ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008974 - 00008983 (0x10 bytes), align: 0
  Segment part 67.            Intra module refs:   MT_IndReset
                                                   MT_SendErrorNotification
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            00008974 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008984 - 000089CB (0x48 bytes), align: 0
  Segment part 68.            Intra module refs:   MT_ProcessGetDeviceInfo
                                                   MT_ProcessGetNvInfo
                                                   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ReverseBytes         00008984 
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000023 ( 0000000C )
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001599 - 000015A8 (0x10 bytes), align: 0
  Segment part 10.            Intra module refs:   Segment part 9
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000015A9 - 000015B8 (0x10 bytes), align: 0
  Segment part 12.            Intra module refs:   Segment part 11
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000015B9 - 000015BC (0x4 bytes), align: 0
  Segment part 14.            Intra module refs:   MTVersionString
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000015BD - 000015C0 (0x4 bytes), align: 0
  Segment part 23.            Intra module refs:   __Constant_3e8
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000015C1 - 000015C4 (0x4 bytes), align: 0
  Segment part 25.            Intra module refs:   __Constant_53544159
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A8 - 000000A8 (0x1 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN0                 000000A8 

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\MT_AF.r51
    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\MT_NWK.r51
    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\MT_ZDO.r51
    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\OSAL.r51
  PROGRAM MODULE, NAME : OSAL

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E461 - 0000E462 (0x2 bytes), align: 0
  Segment part 12.            Intra module refs:   osal_init_system
                                                   osal_msg_receive
                                                   osal_msg_send
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_qHead              0000E461 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010000 - 0001000B (0xc bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_strlen             00010000        MT_ProcessSerialCommand (MTEL)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001000C - 0001004C (0x41 bytes), align: 0
  Segment part 18.            Intra module refs:   osal_cpyExtAddr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_memcpy             0001000C        ?Subroutine17 (ZDApp)
                                                   ?Subroutine6 (zmac_cb)
                                                   APSDE_DataIndication (APSMEDE_CB)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MAC_MlmeGetReq (mac_pib)
                                                   MAC_MlmeSetReq (mac_pib)
                                                   MTProcessAppMsg (MTEL)
                                                   MT_BuildSPIMsg (MTEL)
                                                   NLDE_BuildMsg (nwk_util)
                                                   NLME_GetRequest (NLMEDE)
                                                   SampleApp_Init (SampleApp)
                                                   Segment part 120 (APSMEDE)
                                                   Segment part 28 (APS)
                                                   Segment part 31 (APSMEDE_CB)
                                                   Segment part 36 (mac_main)
                                                   ZDApp_SendMsg (ZDApp)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDP_EPRsp (ZDProfile)
                                                   ZMacDataReq (zmac)
                                                   afBuildMSGIncoming (AF)
                                                   aps_AddGroup (aps_groups)
                                                   aps_GroupsWriteNV (aps_groups)
                                                   macScanRxBeacon (mac_scan)
                                                   nwk_BeaconFromNative (nwk)
                                                   sAddrExtCpy (saddr)
                                                   zgInit (ZGlobals)
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000E ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001004D - 00010051 (0x5 bytes), align: 0
  Segment part 19.            Intra module refs:   osal_cpyExtAddr
                                                   osal_memcpy
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine20           0001004D 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010052 - 00010075 (0x24 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_cpyExtAddr         00010052        AddrMgrExtAddrSet (AddrMgr)
                                                   NIB_init (nwk_globals)
                                                   NLME_JoinRequest (NLMEDE)
                                                   NLME_LeaveCmdCnf (nwk_util)
                                                   NLME_LeaveCmdProcess (nwk_util)
                                                   Segment part 24 (nwk_util)
                                                   ZDO_NetworkDiscoveryConfirmCB (ZDApp)
                                                   ZMacGetReq (zmac)
                                                   ZMacSetReq (zmac)
                                                   nwk_associate_cnf_processing (nwk)
                                                   nwk_beacon_notify_ind_processing (nwk)
                                                   zdpProcessAddrReq (ZDProfile)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010076 - 00010097 (0x22 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_memset             00010076        AddrMgrExtAddrSet (AddrMgr)
                                                   AddrMgrInit (AddrMgr)
                                                   HalUARTOpen (hal_uart)
                                                   MT_ProcessGetDeviceInfo (MTEL)
                                                   MT_ProcessGetNV (MTEL)
                                                   MT_ProcessGetNvInfo (MTEL)
                                                   NIB_init (nwk_globals)
                                                   NLDE_DataReqAlloc (NLMEDE)
                                                   NLME_LeaveCmdCnf (nwk_util)
                                                   NLME_LeaveCmdProcess (nwk_util)
                                                   ZDAppSetupProtoVersion (ZDApp)
                                                   ZMacScanReq (zmac)
                                                   macSecCpy (mac_mgmt)
                                                   nwk_beacon_notify_ind_processing (nwk)
                                                   pollDMA (hal_uart)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010098 - 0001009C (0x5 bytes), align: 0
  Segment part 23.            Intra module refs:   osal_msg_extract
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine23           00010098 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001009D - 0001011C (0x80 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_build_uint32       0001009D        nwk_data_ind_processing (nwk)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001011D - 00010121 (0x5 bytes), align: 0
  Segment part 25.            Intra module refs:   osal_build_uint32
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine24           0001011D 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010122 - 00010130 (0xf bytes), align: 0
  Segment part 26.            Intra module refs:   osal_build_uint32
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            00010122 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010131 - 00010136 (0x6 bytes), align: 0
  Segment part 27.            Intra module refs:   osal_build_uint32
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            00010131 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010137 - 00010152 (0x1c bytes), align: 0
  Segment part 28.            Intra module refs:   ?Subroutine1
                                                   osal_build_uint32
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine15           00010137 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010153 - 00010158 (0x6 bytes), align: 0
  Segment part 34.            Intra module refs:   osal_msg_dequeue
                                                   osal_msg_extract
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine16           00010153 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010159 - 00010197 (0x3f bytes), align: 0
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_ExtAddrEqual       00010159        APSME_LookupNwkAddr (APSMEDE)
                                                   AddrMgrEntryLookupExt (AddrMgr)
                                                   NLME_LeaveCmdProcess (nwk_util)
                                                   NLME_RejoinRspCmdProcess (nwk_util)
                                                   ZDO_LeaveCnf (ZDApp)
                                                   nwk_getNetworkDesc (nwk)
                                                   zdpProcessAddrReq (ZDProfile)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000009 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010198 - 000101A3 (0xc bytes), align: 0
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_rand               00010198        ZDApp_ProcessNetworkJoin (ZDApp)
                                                   ZDApp_ProcessOSALMsg (ZDApp)
                                                   ZDOInitDevice (ZDApp)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000101A4 - 000101FE (0x5b bytes), align: 0
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_allocate       000101A4        ?Subroutine11 (MTEL)
                                                   APSDE_DataIndication (APSMEDE_CB)
                                                   APS_CmdInd (APS)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MAC_McpsDataAlloc (mac_data)
                                                   MTProcessAppMsg (MTEL)
                                                   NLME_RejoinRspCmdProcess (nwk_util)
                                                   OnBoard_SendKeys (OnBoard)
                                                   SPIMgr_ProcessZToolData (SPIMgr)
                                                   ZDApp_MatchDescRspCB (ZDApp)
                                                   ZDApp_SendMsg (ZDApp)
                                                   ZDApp_SendNewDstAddr (ZDApp)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_UpdateNwkStatus (ZDObject)
                                                   afBuildMSGIncoming (AF)
                                                   afDataConfirm (AF)
                                                   macAllocTxBuffer (mac_data)
                                                   macDataRxMemAlloc (mac_data)
                                                   macSendDataMsg (mac_main)
                                                   macSendMsg (mac_main)
                                                   nwkBuildDataCnf (nwk)
                                                   nwk_ScanJoiningOrphan (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000101FF - 0001022C (0x2e bytes), align: 0
  Segment part 39.            Intra module refs:   osal_msg_send
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_deallocate     000101FF        APSDE_DataIndication (APSMEDE_CB)
                                                   APS_event_loop (APS)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MT_ProcessCommand (MTEL)
                                                   MT_ProcessDebugMsg (MTEL)
                                                   SPIMgr_ProcessZToolData (SPIMgr)
                                                   SampleApp_ProcessEvent (SampleApp)
                                                   ZDApp_event_loop (ZDApp)
                                                   macApiPending (mac_mgmt)
                                                   macDataReset (mac_data)
                                                   macDataRxMemFree (mac_data)
                                                   macEventLoop (mac_main)
                                                   macMainReset (mac_main)
                                                   macRxCompleteCallback (mac_data)
                                                   nwk_event_loop (nwk)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 0000000C ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001022D - 00010236 (0xa bytes), align: 0
  Segment part 40.            Intra module refs:   osal_init_system
                                                   osal_msg_deallocate
                                                   osal_rand
                                                   osal_self
                                                   osal_strlen
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine19           0001022D 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010237 - 000102B6 (0x80 bytes), align: 0
  Segment part 41.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_send           00010237        ?Subroutine5 (ZDObject)
                                                   ?Subroutine8 (AF)
                                                   APS_CmdInd (APS)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MTProcessAppMsg (MTEL)
                                                   NLME_RejoinRspCmdProcess (nwk_util)
                                                   OnBoard_SendKeys (OnBoard)
                                                   SPIMgr_ProcessZToolData (SPIMgr)
                                                   Segment part 14 (APSMEDE_CB)
                                                   Segment part 31 (mac_data)
                                                   ZDApp_MatchDescRspCB (ZDApp)
                                                   ZDApp_SendMsg (ZDApp)
                                                   ZDApp_SendNewDstAddr (ZDApp)
                                                   macSendDataMsg (mac_main)
                                                   macSendMsg (mac_main)
                                                   nwkBuildDataCnf (nwk)
                                                   nwk_ScanJoiningOrphan (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000102B7 - 000102BB (0x5 bytes), align: 0
  Segment part 42.            Intra module refs:   osal_msg_receive
                                                   osal_msg_send
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine25           000102B7 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000102BC - 0001032D (0x72 bytes), align: 0
  Segment part 43.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_receive        000102BC        APS_event_loop (APS)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   MT_ProcessEvent (MTEL)
                                                   SampleApp_ProcessEvent (SampleApp)
                                                   ZDApp_event_loop (ZDApp)
                                                   macEventLoop (mac_main)
                                                   macMainReset (mac_main)
                                                   nwk_event_loop (nwk)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001032E - 00010335 (0x8 bytes), align: 0
  Segment part 44.            Intra module refs:   osal_memcpy
                                                   osal_msg_receive
                                                   osal_start_system
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0001032E 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010336 - 00010365 (0x30 bytes), align: 0
  Segment part 45.            Intra module refs:   osal_msg_send
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_enqueue        00010336        macRxCompleteCallback (mac_data)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000C ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010366 - 0001036B (0x6 bytes), align: 0
  Segment part 46.            Intra module refs:   osal_msg_enqueue
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine22           00010366 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001036C - 00010376 (0xb bytes), align: 0
  Segment part 47.            Intra module refs:   osal_msg_enqueue
                                                   osal_msg_enqueue_max
                                                   osal_msg_receive
                                                   osal_msg_send
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           0001036C 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010377 - 000103D0 (0x5a bytes), align: 0
  Segment part 48.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_dequeue        00010377        macDataReset (mac_data)
                                                   macEventLoop (mac_main)
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000103D1 - 000103D5 (0x5 bytes), align: 0
  Segment part 49.            Intra module refs:   osal_ExtAddrEqual
                                                   osal_memset
                                                   osal_msg_allocate
                                                   osal_msg_dequeue
                                                   osal_msg_enqueue_max
                                                   osal_set_event
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine21           000103D1 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000103D6 - 000103DF (0xa bytes), align: 0
  Segment part 50.            Intra module refs:   osal_msg_deallocate
                                                   osal_msg_dequeue
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           000103D6 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000103E0 - 000103EC (0xd bytes), align: 0
  Segment part 52.            Intra module refs:   ?Subroutine22
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           000103E0 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000103ED - 000103F2 (0x6 bytes), align: 0
  Segment part 53.            Intra module refs:   osal_msg_enqueue
                                                   osal_msg_enqueue_max
                                                   osal_msg_extract
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            000103ED 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000103F3 - 00010450 (0x5e bytes), align: 0
  Segment part 54.            Intra module refs:   osal_msg_receive
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_extract        000103F3        macDataTxSend (mac_data)
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000E ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010451 - 0001045A (0xa bytes), align: 0
  Segment part 55.            Intra module refs:   osal_msg_enqueue
                                                   osal_msg_enqueue_max
                                                   osal_msg_extract
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine14           00010451 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001045B - 00010461 (0x7 bytes), align: 0
  Segment part 56.            Intra module refs:   osal_msg_extract
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine12           0001045B 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010462 - 00010469 (0x8 bytes), align: 0
  Segment part 57.            Intra module refs:   ?Subroutine11
                                                   ?Subroutine12
                                                   ?Subroutine13
                                                   ?Subroutine14
                                                   osal_msg_extract
                                                   osal_msg_receive
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine18           00010462 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001046A - 000104B7 (0x4e bytes), align: 0
  Segment part 58.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_enqueue_max    0001046A        macDataTxEnqueue (mac_data)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000104B8 - 000104F7 (0x40 bytes), align: 0
  Segment part 59.            Intra module refs:   osal_msg_send
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_set_event          000104B8        ?Subroutine26 (ZDApp)
                                                   HalLedBlink (hal_led)
                                                   NLDE_DataCnf (NLMEDE_CB)
                                                   NLME_SetPollRate (nwk_util)
                                                   macSetEvent (mac_main)
                                                   nwkDB_Add (nwk_bufs)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
                                                   osalTimerUpdate (OSAL_Timers)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000C ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000104F8 - 00010507 (0x10 bytes), align: 0
  Segment part 61.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_int_enable         000104F8        main (ZMain)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010508 - 00010517 (0x10 bytes), align: 0
  Segment part 62.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_int_disable        00010508        InitBoard (OnBoard)
                                                   ZMacInit (zmac)
                                                   main (ZMain)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010518 - 0001055F (0x48 bytes), align: 0
  Segment part 63.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_init_system        00010518        main (ZMain)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010560 - 00010616 (0xb7 bytes), align: 0
  Segment part 64.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_start_system       00010560        main (ZMain)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010617 - 0001061A (0x4 bytes), align: 0
  Segment part 65.            Intra module refs:   osal_start_system
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            00010617 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001061B - 00010625 (0xb bytes), align: 0
  Segment part 66.            Intra module refs:   ?Subroutine3
                                                   ?Subroutine7
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine17           0001061B 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010626 - 00010643 (0x1e bytes), align: 0
  Segment part 67.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_self               00010626        osal_start_timer (OSAL_Timers)
                                                   osal_stop_timer (OSAL_Timers)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00010644 - 0001064C (0x9 bytes), align: 0
  Segment part 68.            Intra module refs:   osal_self
                                                   osal_start_system
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            00010644 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000015C5 - 000015C8 (0x4 bytes), align: 0
  Segment part 14.            Intra module refs:   __Constant_2710
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F06F - 0000F072 (0x4 bytes), align: 0
  Segment part 13.            Intra module refs:   _small_write (?smallwr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_2710         0000F06F 

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\OSAL_Memory.r51
  PROGRAM MODULE, NAME : OSAL_Memory

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E463 - 0000E463 (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   osal_mem_alloc
                                                   osal_mem_free
                                                   osal_mem_init
           LOCAL                   ADDRESS         
           =====                   =======         
           ready                   0000E463 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E464 - 0000E465 (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   ?Subroutine0
                                                   osal_mem_alloc
                                                   osal_mem_free
                                                   osal_mem_init
           LOCAL                   ADDRESS         
           =====                   =======         
           ff1                     0000E464 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E466 - 0000E467 (0x2 bytes), align: 0
  Segment part 9.             Intra module refs:   osal_mem_alloc
                                                   osal_mem_init
                                                   osal_mem_kick
           LOCAL                   ADDRESS         
           =====                   =======         
           ff2                     0000E466 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E468 - 0000EAE7 (0x680 bytes), align: 0
  Segment part 10.            Intra module refs:   Segment part 12
           LOCAL                   ADDRESS         
           =====                   =======         
           _theHeap                0000E468 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F073 - 0000F074 (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   osal_mem_init
           LOCAL                   ADDRESS         
           =====                   =======         
           theHeap                 0000F073 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015815 - 0001587C (0x68 bytes), align: 0
  Segment part 13.            Intra module refs:   osal_mem_alloc
                                                   osal_mem_free
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_init           00015815        osal_init_system (OSAL)
               calls direct, is recursive
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 0000000E ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001587D - 00015883 (0x7 bytes), align: 0
  Segment part 14.            Intra module refs:   osal_mem_init
                                                   osal_mem_kick
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0001587D 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015884 - 00015898 (0x15 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_kick           00015884        osal_init_system (OSAL)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015899 - 000158A4 (0xc bytes), align: 0
  Segment part 16.            Intra module refs:   osal_mem_init
                                                   osal_mem_kick
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00015899 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000158A5 - 000159AF (0x10b bytes), align: 0
  Segment part 17.            Intra module refs:   osal_mem_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_alloc          000158A5        AddrMgrInit (AddrMgr)
                                                   HalUARTOpen (hal_uart)
                                                   MT_BuildAndSendZToolResponse (MTEL)
                                                   MT_ProcessDebugStr (MTEL)
                                                   MT_ProcessGetDeviceInfo (MTEL)
                                                   MT_ProcessGetNV (MTEL)
                                                   MT_ProcessGetNvInfo (MTEL)
                                                   NLDE_BuildMsg (nwk_util)
                                                   NLDE_DataReqAlloc (NLMEDE)
                                                   NLDE_FrameDataLoad (APSMEDE)
                                                   NLDE_SendMsg (nwk_util)
                                                   ZDO_CreateAlignedUINT16List (ZDObject)
                                                   ZMacScanReq (zmac)
                                                   afRegisterExtended (AF)
                                                   aps_AddGroup (aps_groups)
                                                   nwkDB_CreateHdr (nwk_bufs)
                                                   nwk_beacon_notify_ind_processing (nwk)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalTaskAdd (OSAL_Tasks)
                                                   osal_msg_allocate (OSAL)
               calls direct, is recursive
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000159B0 - 000159BA (0xb bytes), align: 0
  Segment part 18.            Intra module refs:   ?Subroutine0
                                                   osal_mem_alloc
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            000159B0 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000159BB - 00015A0F (0x55 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_free           000159BB        ?Subroutine3 (AF)
                                                   ?Subroutine6 (ZDObject)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MT_BuildAndSendZToolResponse (MTEL)
                                                   MT_ProcessDebugStr (MTEL)
                                                   MT_ProcessGetDeviceInfo (MTEL)
                                                   MT_ProcessGetNV (MTEL)
                                                   MT_ProcessGetNvInfo (MTEL)
                                                   NLDE_BuildMsg (nwk_util)
                                                   NLDE_DataReq (NLMEDE)
                                                   NLDE_DataReqSend (nwk_util)
                                                   NLDE_SendMsg (nwk_util)
                                                   Segment part 108 (APSMEDE)
                                                   Segment part 41 (nwk_bufs)
                                                   ZMacReset (zmac)
                                                   nwkDB_DeleteRecAll (nwk_bufs)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
                                                   nwk_desc_list_free (nwk)
                                                   osalDeleteTimer (OSAL_Timers)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_msg_deallocate (OSAL)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000015C9 - 000015CA (0x2 bytes), align: 0
  Segment part 12.            Intra module refs:   theHeap

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\OSAL_Nv.r51
  PROGRAM MODULE, NAME : OSAL_Nv

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000AB - 000000AB (0x1 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FWT                     000000AB 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000AC - 000000AC (0x1 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FADDRL                  000000AC 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000AD - 000000AD (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FADDRH                  000000AD 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000AE - 000000AE (0x1 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FCTL                    000000AE 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D1 - 000000D1 (0x1 bytes), align: 0
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMAIRQ                  000000D1 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D6 - 000000D6 (0x1 bytes), align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMAARM                  000000D6 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EAE8 - 0000EAEB (0x4 bytes), align: 0
  Segment part 12.            Intra module refs:   osal_nv_init
                                                   writeWord
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FBuff                   0000EAE8 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EAEC - 0000EAEF (0x4 bytes), align: 0
  Segment part 13.            Intra module refs:   ?Subroutine62
                                                   ?Subroutine64
                                                   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           pgOff                   0000EAEC 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EAF0 - 0000EAF3 (0x4 bytes), align: 0
  Segment part 14.            Intra module refs:   ?Subroutine4
                                                   ?Subroutine63
           LOCAL                   ADDRESS         
           =====                   =======         
           pgLost                  0000EAF0 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EAF4 - 0000EAF4 (0x1 bytes), align: 0
  Segment part 15.            Intra module refs:   ?Subroutine7
                                                   compactPage
                                                   initItem
                                                   initItem2
                                                   initNV
                                                   osal_nv_write
                                                   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
           pgRes                   0000EAF4 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EAF5 - 0000EAF5 (0x1 bytes), align: 0
  Segment part 16.            Intra module refs:   findItem
                                                   initPage
                                                   osal_nv_item_len
                                                   osal_nv_read
                                                   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           findPg                  0000EAF5 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EAF6 - 0000EAF6 (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   compactPage
                                                   osal_nv_item_init
                                                   osal_nv_write
                                                   writeWord
           LOCAL                   ADDRESS         
           =====                   =======         
           failF                   0000EAF6 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003000 - 000031F2 (0x1f3 bytes), align: 0
  Segment part 20.            Intra module refs:   osal_nv_init
                                                   osal_nv_item_init
                                                   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           initNV                  00003000 
               calls direct
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000022 ( 0000001A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000031F3 - 000031FA (0x8 bytes), align: 0
  Segment part 21.            Intra module refs:   initNV
                                                   osal_nv_item_len
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine66           000031F3 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000031FB - 00003233 (0x39 bytes), align: 0
  Segment part 22.            Intra module refs:   compactPage
                                                   initNV
                                                   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
           setPageUse              000031FB 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000020 ( 00000008 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003234 - 0000323A (0x7 bytes), align: 0
  Segment part 23.            Intra module refs:   osal_nv_init
                                                   setPageUse
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine67           00003234 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000323B - 000033F9 (0x1bf bytes), align: 0
  Segment part 24.            Intra module refs:   findItem
                                                   initNV
           LOCAL                   ADDRESS         
           =====                   =======         
           initPage                0000323B 
               calls direct, is recursive
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000001A ( 00000019 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000033FA - 000035FD (0x204 bytes), align: 0
  Segment part 25.            Intra module refs:   initItem
                                                   initNV
                                                   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           compactPage             000033FA 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000022 ( 00000024 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000035FE - 00003602 (0x5 bytes), align: 0
  Segment part 26.            Intra module refs:   compactPage
                                                   initItem
                                                   osal_nv_item_init
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine68           000035FE 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003603 - 00003607 (0x5 bytes), align: 0
  Segment part 27.            Intra module refs:   compactPage
                                                   initPage
                                                   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine45           00003603 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003608 - 0000360C (0x5 bytes), align: 0
  Segment part 28.            Intra module refs:   compactPage
                                                   initPage
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine32           00003608 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000360D - 00003617 (0xb bytes), align: 0
  Segment part 29.            Intra module refs:   ?Subroutine32
                                                   setItem
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine63           0000360D 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003618 - 0000362C (0x15 bytes), align: 0
  Segment part 30.            Intra module refs:   compactPage
                                                   setItem
                                                   setPageUse
                                                   writeWordH
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine29           00003618 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000362D - 00003638 (0xc bytes), align: 0
  Segment part 31.            Intra module refs:   compactPage
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine15           0000362D 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003639 - 00003643 (0xb bytes), align: 0
  Segment part 32.            Intra module refs:   compactPage
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           00003639 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003644 - 00003649 (0x6 bytes), align: 0
  Segment part 33.            Intra module refs:   ?Subroutine11
                                                   ?Subroutine12
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine72           00003644 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000364A - 0000364D (0x4 bytes), align: 0
  Segment part 34.            Intra module refs:   compactPage
                                                   initPage
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           0000364A 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000364E - 0000365A (0xd bytes), align: 0
  Segment part 35.            Intra module refs:   ?Subroutine10
                                                   ?Subroutine9
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine56           0000364E 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000365B - 00003662 (0x8 bytes), align: 0
  Segment part 36.            Intra module refs:   compactPage
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            0000365B 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003663 - 00003673 (0x11 bytes), align: 0
  Segment part 37.            Intra module refs:   ?Subroutine45
                                                   ?Subroutine7
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine62           00003663 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003674 - 000036CD (0x5a bytes), align: 0
  Segment part 38.            Intra module refs:   initPage
                                                   osal_nv_item_init
                                                   osal_nv_item_len
                                                   osal_nv_read
                                                   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           findItem                00003674 
               calls direct, is recursive
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000022 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000036CE - 00003762 (0x95 bytes), align: 0
  Segment part 39.            Intra module refs:   osal_nv_item_init
           LOCAL                   ADDRESS         
           =====                   =======         
           initItem                000036CE 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000010 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003763 - 000037F9 (0x97 bytes), align: 0
  Segment part 40.            Intra module refs:   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           initItem2               00003763 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000024 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000037FA - 000037FD (0x4 bytes), align: 0
  Segment part 41.            Intra module refs:   initItem
                                                   initItem2
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine52           000037FA 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000037FE - 0000380E (0x11 bytes), align: 0
  Segment part 42.            Intra module refs:   ?Subroutine51
                                                   ?Subroutine52
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine64           000037FE 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000380F - 00003813 (0x5 bytes), align: 0
  Segment part 43.            Intra module refs:   initItem
                                                   initItem2
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine51           0000380F 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003814 - 00003819 (0x6 bytes), align: 0
  Segment part 44.            Intra module refs:   initItem2
                                                   initPage
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine47           00003814 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000381A - 00003828 (0xf bytes), align: 0
  Segment part 45.            Intra module refs:   initItem
                                                   initItem2
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine46           0000381A 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003829 - 0000382D (0x5 bytes), align: 0
  Segment part 46.            Intra module refs:   initItem
                                                   initItem2
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine44           00003829 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000382E - 00003836 (0x9 bytes), align: 0
  Segment part 47.            Intra module refs:   ?Subroutine44
                                                   ?Subroutine47
                                                   compactPage
                                                   initItem
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine61           0000382E 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003837 - 0000383F (0x9 bytes), align: 0
  Segment part 48.            Intra module refs:   initItem
                                                   initItem2
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine25           00003837 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003840 - 000038CD (0x8e bytes), align: 0
  Segment part 49.            Intra module refs:   ?Subroutine72
                                                   initPage
           LOCAL                   ADDRESS         
           =====                   =======         
           setItem                 00003840 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000022 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000038CE - 000038D2 (0x5 bytes), align: 0
  Segment part 50.            Intra module refs:   findItem
                                                   initItem2
                                                   setItem
                                                   writeWord
                                                   writeWordD
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine74           000038CE 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000038D3 - 00003959 (0x87 bytes), align: 0
  Segment part 51.            Intra module refs:   compactPage
                                                   initPage
                                                   osal_nv_write
                                                   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
           calcChkF                000038D3 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000022 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000395A - 00003960 (0x7 bytes), align: 0
  Segment part 52.            Intra module refs:   ?Subroutine5
                                                   calcChkF
                                                   compactPage
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine70           0000395A 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003961 - 000039A8 (0x48 bytes), align: 0
  Segment part 53.            Intra module refs:   compactPage
                                                   initNV
                                                   initPage
                                                   osal_nv_item_len
                                                   osal_nv_write
                                                   setItem
                                                   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
           readHdr                 00003961 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000022 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000039A9 - 00003A42 (0x9a bytes), align: 0
  Segment part 54.            Intra module refs:   ?Subroutine6
                                                   setItem
                                                   setPageUse
                                                   writeItem
                                                   writeWordD
                                                   writeWordH
           LOCAL                   ADDRESS         
           =====                   =======         
           writeWord               000039A9 
               calls direct
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 0000001C ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003A43 - 00003A4B (0x9 bytes), align: 0
  Segment part 55.            Intra module refs:   compactPage
                                                   writeWord
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine37           00003A43 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003A4C - 00003A7D (0x32 bytes), align: 0
  Segment part 56.            Intra module refs:   compactPage
                                                   initNV
                                                   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           writeWordD              00003A4C 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000022 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003A7E - 00003AC4 (0x47 bytes), align: 0
  Segment part 57.            Intra module refs:   compactPage
                                                   osal_nv_write
                                                   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
           writeWordH              00003A7E 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000022 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003AC5 - 00003ACB (0x7 bytes), align: 0
  Segment part 58.            Intra module refs:   writeWord
                                                   writeWordH
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine31           00003AC5 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003ACC - 00003C53 (0x188 bytes), align: 0
  Segment part 59.            Intra module refs:   compactPage
                                                   osal_nv_write
                                                   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
           writeBuf                00003ACC 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000024 ( 00000018 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003C54 - 00003C5C (0x9 bytes), align: 0
  Segment part 60.            Intra module refs:   writeBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine53           00003C54 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003C5D - 00003C60 (0x4 bytes), align: 0
  Segment part 61.            Intra module refs:   writeBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine39           00003C5D 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003C61 - 00003C64 (0x4 bytes), align: 0
  Segment part 62.            Intra module refs:   ?Subroutine38
                                                   ?Subroutine39
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine59           00003C61 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003C65 - 00003C6D (0x9 bytes), align: 0
  Segment part 63.            Intra module refs:   ?Subroutine59
                                                   ?Subroutine60
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine69           00003C65 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003C6E - 00003C76 (0x9 bytes), align: 0
  Segment part 64.            Intra module refs:   writeBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine38           00003C6E 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003C77 - 00003C87 (0x11 bytes), align: 0
  Segment part 65.            Intra module refs:   writeBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine30           00003C77 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003C88 - 00003C8C (0x5 bytes), align: 0
  Segment part 66.            Intra module refs:   writeBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine24           00003C88 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003C8D - 00003C92 (0x6 bytes), align: 0
  Segment part 67.            Intra module refs:   writeBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine22           00003C8D 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003C93 - 00003C98 (0x6 bytes), align: 0
  Segment part 68.            Intra module refs:   writeBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine16           00003C93 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003C99 - 00003C9E (0x6 bytes), align: 0
  Segment part 69.            Intra module refs:   compactPage
                                                   initPage
                                                   osal_nv_write
                                                   writeBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine14           00003C99 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003C9F - 00003ECC (0x22e bytes), align: 0
  Segment part 70.            Intra module refs:   compactPage
                                                   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           xferBuf                 00003C9F 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000026 ( 0000001C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003ECD - 00003ED6 (0xa bytes), align: 0
  Segment part 71.            Intra module refs:   calcChkF
                                                   osal_nv_read
                                                   osal_nv_write
                                                   readHdr
                                                   writeBuf
                                                   writeItem
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine75           00003ECD 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003ED7 - 00003EE0 (0xa bytes), align: 0
  Segment part 72.            Intra module refs:   ?Subroutine1
                                                   ?Subroutine22
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine54           00003ED7 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003EE1 - 00003EE9 (0x9 bytes), align: 0
  Segment part 73.            Intra module refs:   osal_nv_write
                                                   writeBuf
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine50           00003EE1 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003EEA - 00003EFA (0x11 bytes), align: 0
  Segment part 74.            Intra module refs:   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine49           00003EEA 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003EFB - 00003F0B (0x11 bytes), align: 0
  Segment part 75.            Intra module refs:   osal_nv_read
                                                   readHdr
                                                   writeBuf
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine48           00003EFB 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003F0C - 00003F11 (0x6 bytes), align: 0
  Segment part 76.            Intra module refs:   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine41           00003F0C 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003F12 - 00003F1F (0xe bytes), align: 0
  Segment part 77.            Intra module refs:   calcChkF
                                                   osal_nv_read
                                                   writeBuf
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine40           00003F12 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003F20 - 00003F25 (0x6 bytes), align: 0
  Segment part 78.            Intra module refs:   initPage
                                                   osal_nv_write
                                                   writeBuf
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine35           00003F20 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003F26 - 00003F2F (0xa bytes), align: 0
  Segment part 79.            Intra module refs:   writeBuf
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine34           00003F26 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003F30 - 00003F3E (0xf bytes), align: 0
  Segment part 80.            Intra module refs:   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine28           00003F30 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003F3F - 00003F44 (0x6 bytes), align: 0
  Segment part 81.            Intra module refs:   ?Subroutine28
                                                   ?Subroutine41
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine60           00003F3F 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003F45 - 00003F4E (0xa bytes), align: 0
  Segment part 82.            Intra module refs:   writeBuf
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine26           00003F45 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003F4F - 00003F54 (0x6 bytes), align: 0
  Segment part 83.            Intra module refs:   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine17           00003F4F 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003F55 - 00003F66 (0x12 bytes), align: 0
  Segment part 84.            Intra module refs:   writeBuf
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            00003F55 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003F67 - 00003F6E (0x8 bytes), align: 0
  Segment part 85.            Intra module refs:   writeBuf
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            00003F67 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003F6F - 00003F74 (0x6 bytes), align: 0
  Segment part 86.            Intra module refs:   writeBuf
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            00003F6F 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003F75 - 00003F85 (0x11 bytes), align: 0
  Segment part 87.            Intra module refs:   osal_nv_read
                                                   writeBuf
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            00003F75 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003F86 - 0000411C (0x197 bytes), align: 0
  Segment part 88.            Intra module refs:   initItem
                                                   initItem2
           LOCAL                   ADDRESS         
           =====                   =======         
           writeItem               00003F86 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000010 ( 0000001C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000411D - 00004129 (0xd bytes), align: 0
  Segment part 89.            Intra module refs:   compactPage
                                                   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine43           0000411D 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000412A - 00004134 (0xb bytes), align: 0
  Segment part 90.            Intra module refs:   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine42           0000412A 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004135 - 0000413C (0x8 bytes), align: 0
  Segment part 91.            Intra module refs:   initItem
                                                   osal_nv_item_init
                                                   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine21           00004135 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000413D - 00004144 (0x8 bytes), align: 0
  Segment part 92.            Intra module refs:   compactPage
                                                   osal_nv_read
                                                   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine19           0000413D 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004145 - 0000418E (0x4a bytes), align: 0
  Segment part 93.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_nv_init            00004145        main (ZMain)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000418F - 000041F6 (0x68 bytes), align: 0
  Segment part 94.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_nv_item_init       0000418F        ZDApp_LeaveCtrlInit (ZDApp)
                                                   zgInit (ZGlobals)
                                                   zgReadStartupOptions (ZGlobals)
                                                   zmain_ext_addr (ZMain)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000002 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000041F7 - 00004254 (0x5e bytes), align: 0
  Segment part 95.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_nv_item_len        000041F7        MT_ProcessGetNV (MTEL)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   MT_ProcessSetNV (MTEL)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004255 - 00004258 (0x4 bytes), align: 0
  Segment part 96.            Intra module refs:   calcChkF
                                                   osal_nv_item_len
                                                   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine18           00004255 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004259 - 0000425E (0x6 bytes), align: 0
  Segment part 97.            Intra module refs:   ?Subroutine11
                                                   ?Subroutine12
                                                   ?Subroutine15
                                                   ?Subroutine16
                                                   ?Subroutine17
                                                   ?Subroutine18
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine55           00004259 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000425F - 00004643 (0x3e5 bytes), align: 0
  Segment part 98.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_nv_write           0000425F        MT_ProcessSerialCommand (MTEL)
                                                   MT_ProcessSetNV (MTEL)
                                                   ZDApp_LeaveCtrlSet (ZDApp)
                                                   ZDApp_LeaveCtrlStartup (ZDApp)
                                                   aps_GroupsWriteNV (aps_groups)
                                                   zgInit (ZGlobals)
                                                   zgWriteStartupOptions (ZGlobals)
               calls direct
               stack 1 = 00000000 ( 00000004 )
               stack 2 = 00000004 ( 00000026 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004644 - 00004649 (0x6 bytes), align: 0
  Segment part 99.            Intra module refs:   ?Subroutine1
                                                   osal_nv_read
                                                   osal_nv_write
                                                   writeBuf
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine71           00004644 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000464A - 00004652 (0x9 bytes), align: 0
  Segment part 100.           Intra module refs:   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine27           0000464A 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004653 - 00004655 (0x3 bytes), align: 0
  Segment part 101.           Intra module refs:   osal_nv_write
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine23           00004653 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004656 - 0000465A (0x5 bytes), align: 0
  Segment part 102.           Intra module refs:   ?Subroutine2
                                                   ?Subroutine23
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine73           00004656 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000465B - 00004662 (0x8 bytes), align: 0
  Segment part 103.           Intra module refs:   ?Subroutine2
                                                   ?Subroutine23
                                                   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine57           0000465B 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004663 - 0000466A (0x8 bytes), align: 0
  Segment part 104.           Intra module refs:   compactPage
                                                   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine20           00004663 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000466B - 00004676 (0xc bytes), align: 0
  Segment part 105.           Intra module refs:   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           0000466B 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004677 - 0000467E (0x8 bytes), align: 0
  Segment part 106.           Intra module refs:   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine12           00004677 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000467F - 00004683 (0x5 bytes), align: 0
  Segment part 107.           Intra module refs:   osal_nv_write
                                                   setItem
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            0000467F 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004684 - 00004693 (0x10 bytes), align: 0
  Segment part 108.           Intra module refs:   compactPage
                                                   initItem
                                                   initItem2
                                                   osal_nv_read
                                                   osal_nv_write
                                                   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            00004684 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004694 - 0000469E (0xb bytes), align: 0
  Segment part 109.           Intra module refs:   osal_nv_write
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            00004694 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000469F - 000046AF (0x11 bytes), align: 0
  Segment part 110.           Intra module refs:   osal_nv_write
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0000469F 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000046B0 - 00004745 (0x96 bytes), align: 0
  Segment part 111.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_nv_read            000046B0        MT_ProcessGetDeviceInfo (MTEL)
                                                   MT_ProcessGetNV (MTEL)
                                                   MT_ProcessGetNvInfo (MTEL)
                                                   ZDApp_LeaveCtrlInit (ZDApp)
                                                   zgInit (ZGlobals)
                                                   zgReadStartupOptions (ZGlobals)
                                                   zgWriteStartupOptions (ZGlobals)
                                                   zmain_ext_addr (ZMain)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000004 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004746 - 00004760 (0x1b bytes), align: 0
  Segment part 112.           Intra module refs:   osal_nv_read
                                                   readHdr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            00004746 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004761 - 00004766 (0x6 bytes), align: 0
  Segment part 113.           Intra module refs:   ?Subroutine1
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine58           00004761 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004767 - 0000476F (0x9 bytes), align: 0
  Segment part 114.           Intra module refs:   ?Subroutine24
                                                   ?Subroutine58
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine65           00004767 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F075 - 0000F078 (0x4 bytes), align: 0
  Segment part 18.            Intra module refs:   ?Subroutine48
                                                   ?Subroutine49
                                                   calcChkF
                                                   halAssertHazardLights (hal_assert)
                                                   macScanStartTimer (mac_scan)
                                                   nwk_data_ind_processing (nwk)
                                                   osal_nv_write
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_1            0000F075 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000015CB - 000015CE (0x4 bytes), align: 0
  Segment part 19.            Intra module refs:   __Constant_1

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\OSAL_PwrMgr.r51
  PROGRAM MODULE, NAME : OSAL_PwrMgr

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000EAF7 - 0000EAFD (0x7 bytes), align: 0
  Segment part 6.             Intra module refs:   osal_pwrmgr_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pwrmgr_attribute        0000EAF7 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00016BBD - 00016BCA (0xe bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_pwrmgr_init        00016BBD        osal_init_system (OSAL)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00016BCB - 00016BD2 (0x8 bytes), align: 0
  Segment part 8.             Intra module refs:   osal_pwrmgr_init
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00016BCB 

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\OSAL_SampleApp.r51
  PROGRAM MODULE, NAME : OSAL_SampleApp

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00016471 - 0001656F (0xff bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalAddTasks            00016471        osal_init_system (OSAL)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000E )

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\OSAL_Tasks.r51
  PROGRAM MODULE, NAME : OSAL_Tasks

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000EAFE - 0000EAFF (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   osalFindTask
                                                   osalInitTasks
                                                   osalNextActiveTask
                                                   osalTaskAdd
                                                   osalTaskInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tasksHead               0000EAFE 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EB00 - 0000EB01 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   ?Subroutine1
                                                   ?Subroutine2
                                                   osalInitTasks
                                                   osalTaskInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           activeTask              0000EB00        osal_self (OSAL)
                                                   osal_start_system (OSAL)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EB02 - 0000EB02 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   osalTaskAdd
                                                   osalTaskInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           taskIDs                 0000EB02 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015A10 - 00015A24 (0x15 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalTaskInit            00015A10        osal_init_system (OSAL)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015A25 - 00015A2B (0x7 bytes), align: 0
  Segment part 10.            Intra module refs:   osalFindTask
                                                   osalNextActiveTask
                                                   osalTaskInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            00015A25 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015A2C - 00015B1F (0xf4 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalTaskAdd             00015A2C        osalAddTasks (OSAL_SampleApp)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000003 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015B20 - 00015B25 (0x6 bytes), align: 0
  Segment part 12.            Intra module refs:   osalTaskAdd
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00015B20 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015B26 - 00015B2A (0x5 bytes), align: 0
  Segment part 13.            Intra module refs:   ?Subroutine0
                                                   ?Subroutine1
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            00015B26 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015B2B - 00015B79 (0x4f bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalInitTasks           00015B2B        osal_init_system (OSAL)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015B7A - 00015B85 (0xc bytes), align: 0
  Segment part 15.            Intra module refs:   osalInitTasks
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            00015B7A 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015B86 - 00015B8F (0xa bytes), align: 0
  Segment part 16.            Intra module refs:   osalInitTasks
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            00015B86 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015B90 - 00015BC5 (0x36 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalNextActiveTask      00015B90        osal_start_system (OSAL)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015BC6 - 00015BF6 (0x31 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalFindTask            00015BC6        osal_msg_send (OSAL)
                                                   osal_set_event (OSAL)
               stack 1 = 00000000 ( 00000002 )

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\OSAL_Timers.r51
  PROGRAM MODULE, NAME : OSAL_Timers

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000EB03 - 0000EB04 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   ?Subroutine1
                                                   osalAddTimer
                                                   osalDeleteTimer
                                                   osalFindTimer
                                                   osalTimerUpdate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timerHead               0000EB03 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EB05 - 0000EB08 (0x4 bytes), align: 0
  Segment part 8.             Intra module refs:   osalTimerInit
                                                   osal_timer_hw_setup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tmr_count               0000EB05 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EB09 - 0000EB0A (0x2 bytes), align: 0
  Segment part 9.             Intra module refs:   osalTimerInit
                                                   osal_update_timers
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tmr_decr_time           0000EB09 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EB0B - 0000EB0B (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   osalTimerInit
                                                   osal_start_timerEx
                                                   osal_timer_activate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timerActive             0000EB0B 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EB0C - 0000EB0F (0x4 bytes), align: 0
  Segment part 11.            Intra module refs:   osalTimerInit
                                                   osalTimerUpdate
                                                   osal_GetSystemClock
           LOCAL                   ADDRESS         
           =====                   =======         
           osal_systemClock        0000EB0C 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000124F4 - 00012532 (0x3f bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalTimerInit           000124F4        osal_init_system (OSAL)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012533 - 000125CB (0x99 bytes), align: 0
  Segment part 17.            Intra module refs:   osal_start_timerEx
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalAddTimer            00012533 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000C ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000125CC - 00012607 (0x3c bytes), align: 0
  Segment part 18.            Intra module refs:   osalAddTimer
                                                   osal_get_timeoutEx
                                                   osal_stop_timerEx
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalFindTimer           000125CC 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000E ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012608 - 0001260F (0x8 bytes), align: 0
  Segment part 19.            Intra module refs:   osalDeleteTimer
                                                   osalFindTimer
                                                   osal_start_timer
                                                   osal_stop_timer
                                                   osal_timer_activate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            00012608 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012610 - 00012681 (0x72 bytes), align: 0
  Segment part 20.            Intra module refs:   osal_stop_timerEx
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalDeleteTimer         00012610 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000C ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012682 - 00012687 (0x6 bytes), align: 0
  Segment part 21.            Intra module refs:   osalAddTimer
                                                   osalDeleteTimer
                                                   osalTimerUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            00012682 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012688 - 00012691 (0xa bytes), align: 0
  Segment part 22.            Intra module refs:   osalDeleteTimer
                                                   osalFindTimer
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00012688 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012692 - 000126BA (0x29 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_start_timer        00012692        HalLedUpdate (hal_led)
                                                   ZDO_StartDevice (ZDObject)
                                                   nwk_event_loop (nwk)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000126BB - 00012703 (0x49 bytes), align: 0
  Segment part 24.            Intra module refs:   osal_start_timer
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_start_timerEx      000126BB        ?Subroutine5 (ZDApp)
                                                   HalKeyConfig (hal_key)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   NLME_SetPollRate (nwk_util)
                                                   SampleApp_ProcessEvent (SampleApp)
                                                   Segment part 33 (nwk)
                                                   halProcessKeyInterrupt (hal_key)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000009 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012704 - 00012720 (0x1d bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_stop_timer         00012704        nwk_event_loop (nwk)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012721 - 00012760 (0x40 bytes), align: 0
  Segment part 26.            Intra module refs:   osal_stop_timer
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_stop_timerEx       00012721        HalKeyConfig (hal_key)
                                                   NLME_SetPollRate (nwk_util)
                                                   RTG_UpdateNeighborEntry (nwk_util)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000009 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012761 - 00012797 (0x37 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_get_timeoutEx      00012761        NLDE_DataCnf (NLMEDE_CB)
                                                   Segment part 17 (nwk_bufs)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012798 - 0001279C (0x5 bytes), align: 0
  Segment part 28.            Intra module refs:   osalTimerInit
                                                   osal_GetSystemClock
                                                   osal_get_timeoutEx
                                                   osal_start_timerEx
                                                   osal_stop_timerEx
                                                   osal_timer_hw_setup
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            00012798 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001279D - 000127B3 (0x17 bytes), align: 0
  Segment part 29.            Intra module refs:   osalTimerInit
                                                   osal_start_timerEx
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_timer_activate     0001279D 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000C ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000127B4 - 000127E0 (0x2d bytes), align: 0
  Segment part 31.            Intra module refs:   osal_timer_activate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_timer_hw_setup     000127B4 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000009 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000127E1 - 000127EA (0xa bytes), align: 0
  Segment part 33.            Intra module refs:   osal_update_timers
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            000127E1 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000127EB - 00012901 (0x117 bytes), align: 0
  Segment part 34.            Intra module refs:   osal_update_timers
           LOCAL                   ADDRESS         
           =====                   =======         
           osalTimerUpdate         000127EB 
               calls direct
               stack 1 = 00000002 ( 00000001 )
               stack 2 = 00000000 ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012902 - 0001290A (0x9 bytes), align: 0
  Segment part 35.            Intra module refs:   osalDeleteTimer
                                                   osalTimerUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            00012902 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001290B - 0001291E (0x14 bytes), align: 0
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_update_timers      0001290B        Onboard_TimerCallBack (OnBoard)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001291F - 00012936 (0x18 bytes), align: 0
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_GetSystemClock     0001291F        HalLedBlink (hal_led)
                                                   HalLedUpdate (hal_led)
                                                   MT_ProcessSerialCommand (MTEL)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F079 - 0000F07C (0x4 bytes), align: 0
  Segment part 14.            Intra module refs:   NLDE_DataIndSend (nwk_util)
                                                   RTG_UpdateNeighborEntry (nwk_util)
                                                   ZDO_StartDevice (ZDObject)
                                                   _small_write (?smallwr)
                                                   halAssertHazardLights (hal_assert)
                                                   halWait (wait)
                                                   macBackoffTimerCompareIsr (mac_backoff_timer)
                                                   macBackoffTimerInit (mac_backoff_timer)
                                                   macBackoffTimerSetTrigger (mac_backoff_timer)
                                                   macTimerRecalcUnaligned (mac_timer)
                                                   nwk_data_ind_processing (nwk)
                                                   osalTimerInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_0            0000F079 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000015CF - 000015D2 (0x4 bytes), align: 0
  Segment part 15.            Intra module refs:   __Constant_0

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\OnBoard.r51
  PROGRAM MODULE, NAME : OnBoard

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 0000008F - 0000008F (0x1 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0INP                   0000008F 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BE - 000000BE (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SLEEP                   000000BE 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000FE - 000000FE (0x1 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1DIR                   000000FE 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EB10 - 0000EB10 (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   InitBoard
                                                   OnBoard_KeyCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OnboardKeyIntEnable     0000EB10 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EB11 - 0000EB11 (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   InitBoard
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OnboardTimerIntEnable   0000EB11 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EB12 - 0000EB19 (0x8 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aExtendedAddress        0000EB12        ZMacGetReq (zmac)
                                                   ZMacReset (zmac)
                                                   ZMacSetReq (zmac)
                                                   zmain_ext_addr (ZMain)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F07D - 0000F07D (0x1 bytes), align: 0
  Segment part 13.            Intra module refs:   OnBoard_SendKeys
                                                   RegisterForKeys
           LOCAL                   ADDRESS         
           =====                   =======         
           registeredKeysTaskID    0000F07D 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015BF7 - 00015CD4 (0xde bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InitBoard               00015BF7        main (ZMain)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015CD5 - 00015CEB (0x17 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RegisterForKeys         00015CD5        SampleApp_Init (SampleApp)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015CEC - 00015D3A (0x4f bytes), align: 0
  Segment part 17.            Intra module refs:   OnBoard_KeyCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OnBoard_SendKeys        00015CEC        MT_ProcessSerialCommand (MTEL)
               calls direct
               stack 1 = 00000002 ( 00000001 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015D3B - 00015D65 (0x2b bytes), align: 0
  Segment part 18.            Intra module refs:   InitBoard
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OnBoard_KeyCallback     00015D3B 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015D66 - 00015D6C (0x7 bytes), align: 0
  Segment part 20.            Intra module refs:   OnBoard_KeyCallback
                                                   Onboard_TimerCallBack
                                                   RegisterForKeys
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00015D66 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015D6D - 00015D8F (0x23 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Onboard_rand            00015D6D        osal_rand (OSAL)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015D90 - 00015DA9 (0x1a bytes), align: 0
  Segment part 23.            Intra module refs:   InitBoard
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Onboard_wait            00015D90        zmain_ext_addr (ZMain)
                                                   zmain_vdd_check (ZMain)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000B ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015DAA - 00015DC2 (0x19 bytes), align: 0
  Segment part 24.            Intra module refs:   InitBoard
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Onboard_TimerCallBack   00015DAA 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000015D3 - 000015D3 (0x1 bytes), align: 0
  Segment part 14.            Intra module refs:   registeredKeysTaskID

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\SPIMgr.r51
  PROGRAM MODULE, NAME : SPIMgr

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000EB1A - 0000EB1A (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   SPIMgr_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           App_TaskID              0000EB1A 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EB1B - 0000EB1B (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   SPIMgr_ProcessZToolData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           state                   0000EB1B 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EB1C - 0000EB1D (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   SPIMgr_ProcessZToolData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CMD_Token               0000EB1C 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EB1E - 0000EB1E (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   SPIMgr_ProcessZToolData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LEN_Token               0000EB1E 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EB1F - 0000EB1F (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   SPIMgr_ProcessZToolData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FSC_Token               0000EB1F 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EB20 - 0000EB21 (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   ?Subroutine3
                                                   ?Subroutine5
                                                   SPIMgr_ProcessZToolData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SPI_Msg                 0000EB20 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EB22 - 0000EB22 (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   SPIMgr_ProcessZToolData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tempDataLen             0000EB22 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00013F41 - 00013FBE (0x7e bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SPIMgr_Init             00013F41        MT_TaskInit (MTEL)
               calls direct
               stack 1 = 00000000 ( 00000003 )
               stack 2 = 00000000 ( 0000001E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00013FBF - 00013FC5 (0x7 bytes), align: 0
  Segment part 18.            Intra module refs:   SPIMgr_Init
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            00013FBF 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00013FC6 - 00013FEA (0x25 bytes), align: 0
  Segment part 20.            Intra module refs:   SPIMgr_ProcessZToolData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SPIMgr_CalcFCS          00013FC6        MT_BuildSPIMsg (MTEL)
                                                   MT_ProcessCommand (MTEL)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000A ( 00000009 )
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EB23 - 0000EB24 (0x2 bytes), align: 0
  Segment part 15.            Intra module refs:   ?Subroutine0
                                                   SPIMgr_ProcessZToolData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Uart_len                0000EB23 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EB25 - 0000EB56 (0x32 bytes), align: 0
  Segment part 16.            Intra module refs:   ?Subroutine0
                                                   SPIMgr_ProcessZToolData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Uart_Rx_Data            0000EB25 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00013FEB - 000141DC (0x1f2 bytes), align: 0
  Segment part 21.            Intra module refs:   SPIMgr_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SPIMgr_ProcessZToolData
                                   00013FEB 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000141DD - 000141EA (0xe bytes), align: 0
  Segment part 22.            Intra module refs:   SPIMgr_ProcessZToolData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            000141DD 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000141EB - 000141EE (0x4 bytes), align: 0
  Segment part 23.            Intra module refs:   SPIMgr_ProcessZToolData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            000141EB 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000141EF - 000141F5 (0x7 bytes), align: 0
  Segment part 24.            Intra module refs:   ?Subroutine1
                                                   ?Subroutine2
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            000141EF 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000141F6 - 000141FD (0x8 bytes), align: 0
  Segment part 25.            Intra module refs:   SPIMgr_ProcessZToolData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            000141F6 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000141FE - 00014209 (0xc bytes), align: 0
  Segment part 26.            Intra module refs:   ?Subroutine1
                                                   ?Subroutine4
                                                   SPIMgr_ProcessZToolData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            000141FE 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001420A - 0001421B (0x12 bytes), align: 0
  Segment part 27.            Intra module refs:   SPIMgr_ProcessZToolData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001420A 

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\SampleApp.r51
  PROGRAM MODULE, NAME : SampleApp

  SEGMENTS IN THE MODULE
  ======================
XDATA_I
  Relative segment, address: XDATA 0000F07E - 0000F085 (0x8 bytes), align: 0
  Segment part 9.             Intra module refs:   SampleApp_Init
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EB57 - 0000EB77 (0x21 bytes), align: 0
  Segment part 13.            Intra module refs:   SampleApp_MessageMSGCB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RfRx                    0000EB57 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EB78 - 0000EB98 (0x21 bytes), align: 0
  Segment part 14.            Intra module refs:   Frist_Data
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RfTx                    0000EB78        ?Subroutine0 (menu_lcd)
                                                   ?Subroutine9 (menu_lcd)
                                                   PingpongTxTest (menu_lcd)
                                                   SPIMgr_ProcessZToolData (SPIMgr)
                                                   SingleTxTest (menu_lcd)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F086 - 0000F089 (0x4 bytes), align: 0
  Segment part 15.            Intra module refs:   Segment part 18
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SampleApp_ClusterList   0000F086 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F08A - 0000F095 (0xc bytes), align: 0
  Segment part 17.            Intra module refs:   SampleApp_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SampleApp_SimpleDesc    0000F08A 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EB99 - 0000ED2A (0x192 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           JoinNode                0000EB99        ?Subroutine1 (menu_lcd)
                                                   SelectTxAddr (menu_lcd)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ED2B - 0000ED2B (0x1 bytes), align: 0
  Segment part 20.            Intra module refs:   SampleApp_Init
                                                   SampleApp_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SampleApp_TaskID        0000ED2B 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ED2C - 0000ED2C (0x1 bytes), align: 0
  Segment part 22.            Intra module refs:   SampleApp_Init
                                                   SampleApp_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SampleApp_NwkState      0000ED2C 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ED2D - 0000ED2D (0x1 bytes), align: 0
  Segment part 23.            Intra module refs:   SampleApp_Init
                                                   SendData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SampleApp_TransID       0000ED2D 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ED2E - 0000ED31 (0x4 bytes), align: 0
  Segment part 24.            Intra module refs:   SampleApp_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SampleApp_Periodic_DstAddr
                                   0000ED2E 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ED32 - 0000ED35 (0x4 bytes), align: 0
  Segment part 25.            Intra module refs:   SampleApp_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SampleApp_Flash_DstAddr
                                   0000ED32 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ED36 - 0000ED47 (0x12 bytes), align: 0
  Segment part 26.            Intra module refs:   SampleApp_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SampleApp_Group         0000ED36 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ED48 - 0000ED48 (0x1 bytes), align: 0
  Segment part 30.            Intra module refs:   SampleApp_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           state2                  0000ED48 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00013504 - 000135BF (0xbc bytes), align: 0
  Segment part 46.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SampleApp_Init          00013504        osalAddTasks (OSAL_SampleApp)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ED49 - 0000ED4A (0x2 bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Send_Data               0000ED49        PingpongTxTest (menu_lcd)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ED4B - 0000ED4C (0x2 bytes), align: 0
  Segment part 35.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Sensor_Flag             0000ED4B        ?Subroutine12 (menu_lcd)
                                                   ReadBattery_menu (menu_lcd)
                                                   Temp_menu (menu_lcd)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ED4D - 0000ED4D (0x1 bytes), align: 0
  Segment part 42.            Intra module refs:   SampleApp_MessageMSGCB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           outputnum               0000ED4D 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000135C0 - 000136BE (0xff bytes), align: 0
  Segment part 47.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SampleApp_ProcessEvent
                                   000135C0        osalAddTasks (OSAL_SampleApp)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000136BF - 000136C3 (0x5 bytes), align: 0
  Segment part 49.            Intra module refs:   SampleApp_MessageMSGCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            000136BF 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000136C4 - 0001374B (0x88 bytes), align: 0
  Segment part 50.            Intra module refs:   SampleApp_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Frist_Data              000136C4 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000C ( 0000000C )
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ED4E - 0000ED53 (0x6 bytes), align: 0
  Segment part 44.            Intra module refs:   SampleApp_Init
                                                   SendData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SampleApp_epDesc        0000ED4E 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001374C - 00013801 (0xb6 bytes), align: 0
  Segment part 52.            Intra module refs:   SampleApp_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SampleApp_MessageMSGCB
                                   0001374C 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000C ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00013802 - 0001387B (0x7a bytes), align: 0
  Segment part 55.            Intra module refs:   Frist_Data
                                                   SampleApp_MessageMSGCB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SendData                00013802        ?Subroutine0 (menu_lcd)
                                                   SPIMgr_ProcessZToolData (SPIMgr)
                                                   Send_Broadcast (menu_lcd)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000A ( 00000017 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001387C - 00013883 (0x8 bytes), align: 0
  Segment part 56.            Intra module refs:   Frist_Data
                                                   SendData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0001387C 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000015D4 - 000015DB (0x8 bytes), align: 0
  Segment part 10.            Intra module refs:   Segment part 9
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000015DC - 000015DF (0x4 bytes), align: 0
  Segment part 16.            Intra module refs:   SampleApp_ClusterList
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000015E0 - 000015EB (0xc bytes), align: 0
  Segment part 18.            Intra module refs:   SampleApp_SimpleDesc
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000088 - 00000088 (0x1 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCON                 00000088 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000090 - 00000090 (0x1 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P1                   00000090 

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\SampleAppHw.r51
  PROGRAM MODULE, NAME : SampleAppHw

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000F3 - 000000F3 (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0SEL                   000000F3 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000FD - 000000FD (0x1 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0DIR                   000000FD 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000080 - 00000080 (0x1 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P0                   00000080 

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\ZDApp.r51
  PROGRAM MODULE, NAME : ZDApp

  SEGMENTS IN THE MODULE
  ======================
XDATA_I
  Relative segment, address: XDATA 0000F096 - 0000F096 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   ZDApp_ProcessNetworkJoin
                                                   ZDApp_ProcessOSALMsg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zdoDiscCounter          0000F096 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ED54 - 0000ED5C (0x9 bytes), align: 0
  Segment part 10.            Intra module refs:   ZDApp_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDAppNwkAddr            0000ED54        ?Subroutine4 (ZDObject)
                                                   ZDO_ProcessActiveEPReq (ZDObject)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_ProcessSimpleDescReq (ZDObject)
                                                   ZDO_UpdateNwkStatus (ZDObject)
                                                   ZDP_SimpleDescMsg (ZDProfile)
                                                   zdpProcessAddrReq (ZDProfile)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F097 - 0000F097 (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   ZDApp_ProcessOSALMsg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           continueJoining         0000F097 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ED5D - 0000ED5D (0x1 bytes), align: 0
  Segment part 13.            Intra module refs:   ZDApp_ProcessNetworkJoin
                                                   ZDApp_ProcessOSALMsg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _tmpRejoinState         0000ED5D        NLME_ReJoinRequest (NLMEDE)
                                                   nwk_beacon_notify_ind_processing (nwk)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ED5E - 0000ED5E (0x1 bytes), align: 0
  Segment part 14.            Intra module refs:   ?Subroutine26
                                                   ?Subroutine5
                                                   ?Subroutine6
                                                   Segment part 27
                                                   ZDApp_Init
                                                   ZDApp_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDAppTaskID             0000ED5E        Segment part 14 (APSMEDE_CB)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ED5F - 0000ED5F (0x1 bytes), align: 0
  Segment part 15.            Intra module refs:   ZDApp_ProcessNetworkJoin
                                                   ZDO_JoinConfirmCB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkStatus               0000ED5F 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ED60 - 0000ED61 (0x2 bytes), align: 0
  Segment part 16.            Intra module refs:   ?Subroutine9
                                                   ZDApp_MatchDescRspCB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_AutoFindMode_epDesc
                                   0000ED60 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ED62 - 0000ED62 (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   ?Subroutine3
                                                   ZDApp_LeaveCtrlSet
                                                   ZDApp_LeaveCtrlStartup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_LeaveCtrl         0000ED62 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F098 - 0000F098 (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   ?Subroutine0
                                                   ZDAppCheckForHoldKey
                                                   ZDApp_Init
                                                   ZDApp_ProcessNetworkJoin
                                                   ZDApp_ProcessOSALMsg
                                                   ZDApp_event_loop
                                                   ZDOInitDevice
                                                   ZDO_JoinConfirmCB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devState                0000F098        ?Subroutine1 (ZDObject)
                                                   MT_ProcessGetDeviceInfo (MTEL)
                                                   ZDO_StartDevice (ZDObject)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ED63 - 0000ED63 (0x1 bytes), align: 0
  Segment part 20.            Intra module refs:   ZDApp_ProcessNetworkJoin
                                                   ZDApp_ProcessOSALMsg
                                                   ZDApp_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devStartMode            0000ED63 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ED64 - 0000ED64 (0x1 bytes), align: 0
  Segment part 21.            Intra module refs:   ZDApp_MatchDescRspCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ZDApp_MatchDescRsp_TaskID
                                   0000ED64 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ED65 - 0000ED65 (0x1 bytes), align: 0
  Segment part 23.            Intra module refs:   ZDApp_ProcessNetworkJoin
                                                   ZDApp_ProcessOSALMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           retryCnt                0000ED65 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F099 - 0000F09A (0x2 bytes), align: 0
  Segment part 24.            Intra module refs:   ?Subroutine21
                                                   ZDAppSetupProtoVersion
                                                   ZDO_NetworkDiscoveryConfirmCB
           LOCAL                   ADDRESS         
           =====                   =======         
           sPVerList               0000F099 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F09B - 0000F0A0 (0x6 bytes), align: 0
  Segment part 26.            Intra module refs:   ZDApp_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_epDesc            0000F09B        fillAndSend (ZDProfile)
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000096B3 - 00009747 (0x95 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_Init              000096B3        osalAddTasks (OSAL_SampleApp)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009748 - 000097FC (0xb5 bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_event_loop        00009748        osalAddTasks (OSAL_SampleApp)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000097FD - 00009871 (0x75 bytes), align: 0
  Segment part 30.            Intra module refs:   ZDApp_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDOInitDevice           000097FD 
               calls direct
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000001 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009872 - 00009879 (0x8 bytes), align: 0
  Segment part 32.            Intra module refs:   ZDO_LeaveCnf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine25           00009872 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000987A - 000098BF (0x46 bytes), align: 0
  Segment part 37.            Intra module refs:   ZDApp_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDAppSetupProtoVersion
                                   0000987A 
               calls direct
               stack 1 = 00000002 ( 00000003 )
               stack 2 = 00000001 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000098C0 - 000098D8 (0x19 bytes), align: 0
  Segment part 39.            Intra module refs:   ZDApp_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDAppCheckForHoldKey    000098C0 
               calls direct
               stack 1 = 00000002 ( 00000002 )
               stack 2 = 00000001 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000098D9 - 00009A18 (0x140 bytes), align: 0
  Segment part 40.            Intra module refs:   ZDApp_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_ProcessOSALMsg    000098D9 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000A ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009A19 - 00009B73 (0x15b bytes), align: 0
  Segment part 41.            Intra module refs:   ZDApp_ProcessOSALMsg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_ProcessNetworkJoin
                                   00009A19 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000A ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009B74 - 00009B7E (0xb bytes), align: 0
  Segment part 42.            Intra module refs:   ZDApp_ProcessNetworkJoin
                                                   ZDApp_ProcessOSALMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           00009B74 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009B7F - 00009B86 (0x8 bytes), align: 0
  Segment part 43.            Intra module refs:   ?Subroutine13
                                                   ?Subroutine2
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine27           00009B7F 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009B87 - 00009B93 (0xd bytes), align: 0
  Segment part 44.            Intra module refs:   ?Subroutine0
                                                   ZDApp_NetworkInit
                                                   ZDApp_ProcessNetworkJoin
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine26           00009B87 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009B94 - 00009B9B (0x8 bytes), align: 0
  Segment part 45.            Intra module refs:   ZDApp_ProcessNetworkJoin
                                                   ZDApp_ProcessOSALMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00009B94 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009B9C - 00009BA4 (0x9 bytes), align: 0
  Segment part 51.            Intra module refs:   ZDApp_MatchDescRspCB
                                                   ZDApp_ProcessOSALMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           00009B9C 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009BA5 - 00009BAC (0x8 bytes), align: 0
  Segment part 52.            Intra module refs:   ZDApp_MatchDescRspCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            00009BA5 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009BAD - 00009BB0 (0x4 bytes), align: 0
  Segment part 53.            Intra module refs:   ?Subroutine10
                                                   ?Subroutine9
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine20           00009BAD 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009BB1 - 00009BB9 (0x9 bytes), align: 0
  Segment part 54.            Intra module refs:   ?Subroutine20
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine22           00009BB1 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009BBA - 00009BCB (0x12 bytes), align: 0
  Segment part 55.            Intra module refs:   ZDApp_LeaveReset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_ResetTimerStart   00009BBA 
               calls direct
               stack 1 = 00000002 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009BCC - 00009C15 (0x4a bytes), align: 0
  Segment part 57.            Intra module refs:   ZDOInitDevice
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_LeaveCtrlInit     00009BCC 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000C ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009C16 - 00009C1F (0xa bytes), align: 0
  Segment part 58.            Intra module refs:   ZDApp_InMsgCB
                                                   ZDApp_LeaveCtrlInit
                                                   ZDApp_LeaveCtrlSet
                                                   ZDApp_LeaveCtrlStartup
                                                   ZDApp_NodeProfileSync
                                                   ZDApp_ProcessNetworkJoin
                                                   ZDApp_ProcessOSALMsg
                                                   ZDApp_event_loop
                                                   ZDOInitDevice
                                                   ZDO_LeaveInd
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine24           00009C16 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009C20 - 00009C5A (0x3b bytes), align: 0
  Segment part 59.            Intra module refs:   ZDApp_LeaveReset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_LeaveCtrlSet      00009C20 
               calls direct
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009C5B - 00009CAE (0x54 bytes), align: 0
  Segment part 61.            Intra module refs:   ZDOInitDevice
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_LeaveCtrlStartup
                                   00009C5B 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000C ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009CAF - 00009CBC (0xe bytes), align: 0
  Segment part 62.            Intra module refs:   ZDApp_LeaveCtrlInit
                                                   ZDApp_LeaveCtrlStartup
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            00009CAF 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009CBD - 00009CD3 (0x17 bytes), align: 0
  Segment part 63.            Intra module refs:   ?Subroutine14
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_LeaveReset        00009CBD 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 0000000A ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009CD4 - 00009CDC (0x9 bytes), align: 0
  Segment part 64.            Intra module refs:   ZDApp_EndDeviceBindRsp
                                                   ZDApp_LeaveReset
                                                   ZDApp_NetworkInit
                                                   ZDApp_ResetTimerStart
                                                   ZDO_JoinConfirmCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine29           00009CD4 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009CDD - 00009D91 (0xb5 bytes), align: 0
  Segment part 66.            Intra module refs:   ZDApp_MatchDescRspCB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_SendNewDstAddr    00009CDD 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000013 ( 00000015 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009D92 - 00009D96 (0x5 bytes), align: 0
  Segment part 67.            Intra module refs:   ZDApp_MatchDescRspCB
                                                   ZDApp_SendMsg
                                                   ZDApp_SendNewDstAddr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine28           00009D92 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009D97 - 00009D9E (0x8 bytes), align: 0
  Segment part 68.            Intra module refs:   ZDApp_ProcessNetworkJoin
                                                   ZDApp_SendNewDstAddr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            00009D97 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009D9F - 00009E05 (0x67 bytes), align: 0
  Segment part 70.            Intra module refs:   ?Subroutine6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_SendMsg           00009D9F 
               calls direct
               stack 1 = 00000002 ( 00000001 )
               stack 2 = 0000001B ( 00000013 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009E06 - 00009EEA (0xe5 bytes), align: 0
  Segment part 71.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_MatchDescRspCB    00009E06        ZDO_ProcessEPListRsp (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000002 ( 00000013 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009EEB - 00009EF3 (0x9 bytes), align: 0
  Segment part 72.            Intra module refs:   ZDApp_MatchDescRspCB
                                                   ZDApp_SendNewDstAddr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine17           00009EEB 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009EF4 - 00009EFD (0xa bytes), align: 0
  Segment part 73.            Intra module refs:   ZDApp_MatchDescRspCB
                                                   ZDApp_ProcessOSALMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine12           00009EF4 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009EFE - 00009F14 (0x17 bytes), align: 0
  Segment part 74.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_EndDeviceBindRsp
                                   00009EFE        ZDO_ProcessBindUnbindRsp (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009F15 - 00009F23 (0xf bytes), align: 0
  Segment part 75.            Intra module refs:   ?Subroutine29
                                                   ZDAppCheckForHoldKey
                                                   ZDAppSetupProtoVersion
                                                   ZDApp_Init
                                                   ZDO_SyncIndicationCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine23           00009F15 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009F24 - 0000A0A3 (0x180 bytes), align: 0
  Segment part 76.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_NetworkDiscoveryConfirmCB
                                   00009F24        NLME_NetworkDiscoveryConfirm (NLMEDE_CB)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 0000001B )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A0A4 - 0000A0A8 (0x5 bytes), align: 0
  Segment part 77.            Intra module refs:   ZDO_NetworkDiscoveryConfirmCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine15           0000A0A4 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A0A9 - 0000A0B7 (0xf bytes), align: 0
  Segment part 78.            Intra module refs:   ?Subroutine15
                                                   ZDO_NetworkDiscoveryConfirmCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine21           0000A0A9 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A0B8 - 0000A0C2 (0xb bytes), align: 0
  Segment part 79.            Intra module refs:   ?Subroutine29
                                                   ZDO_NetworkDiscoveryConfirmCB
                                                   ZDO_SyncIndicationCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            0000A0B8 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A0C3 - 0000A0D5 (0x13 bytes), align: 0
  Segment part 80.            Intra module refs:   ZDApp_NetworkInit
                                                   ZDApp_ResetTimerStart
                                                   ZDO_JoinConfirmCB
                                                   ZDO_NetworkDiscoveryConfirmCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0000A0C3 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A0D6 - 0000A0DC (0x7 bytes), align: 0
  Segment part 81.            Intra module refs:   ZDApp_MatchDescRspCB
                                                   ZDO_NetworkDiscoveryConfirmCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0000A0D6 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A0DD - 0000A0E3 (0x7 bytes), align: 0
  Segment part 82.            Intra module refs:   ?Subroutine4
                                                   ZDO_NetworkDiscoveryConfirmCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine18           0000A0DD 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A0E4 - 0000A128 (0x45 bytes), align: 0
  Segment part 84.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_JoinConfirmCB       0000A0E4        NLME_JoinConfirm (NLMEDE_CB)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A129 - 0000A15E (0x36 bytes), align: 0
  Segment part 85.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_LeaveCnf            0000A129        NLME_LeaveCnf (NLMEDE_CB)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A15F - 0000A1DB (0x7d bytes), align: 0
  Segment part 86.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_LeaveInd            0000A15F        NLME_LeaveInd (NLMEDE_CB)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A1DC - 0000A1E4 (0x9 bytes), align: 0
  Segment part 87.            Intra module refs:   ZDApp_SendNewDstAddr
                                                   ZDO_LeaveInd
                                                   ZDO_NetworkDiscoveryConfirmCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine16           0000A1DC 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A1E5 - 0000A1F3 (0xf bytes), align: 0
  Segment part 88.            Intra module refs:   ZDO_LeaveCnf
                                                   ZDO_LeaveInd
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine14           0000A1E5 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A1F4 - 0000A20D (0x1a bytes), align: 0
  Segment part 89.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_SyncIndicationCB    0000A1F4        NLME_SyncIndication (NLMEDE_CB)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A20E - 0000A210 (0x3 bytes), align: 0
  Segment part 90.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_PollConfirmCB       0000A20E        NLME_PollConfirm (NLMEDE_CB)
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A211 - 0000A267 (0x57 bytes), align: 0
  Segment part 92.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_InMsgCB           0000A211        ZDP_IncomingData (ZDProfile)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000005 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A268 - 0000A286 (0x1f bytes), align: 0
  Segment part 95.            Intra module refs:   ?Subroutine27
                                                   ZDApp_ProcessOSALMsg
                                                   ZDOInitDevice
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_NetworkInit       0000A268 
               calls direct
               stack 1 = 00000002 ( 00000002 )
               stack 2 = 0000000C ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A287 - 0000A28C (0x6 bytes), align: 0
  Segment part 101.           Intra module refs:   ZDApp_ProcessOSALMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0000A287 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A28D - 0000A2FA (0x6e bytes), align: 0
  Segment part 103.           Intra module refs:   ZDApp_ProcessOSALMsg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_NodeProfileSync   0000A28D 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000A ( 0000000A )
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000015EC - 000015EC (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   zdoDiscCounter
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000015ED - 000015ED (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   continueJoining
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000015EE - 000015EE (0x1 bytes), align: 0
  Segment part 19.            Intra module refs:   devState
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000015EF - 000015F0 (0x2 bytes), align: 0
  Segment part 25.            Intra module refs:   sPVerList
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000015F1 - 000015F6 (0x6 bytes), align: 0
  Segment part 27.            Intra module refs:   ZDApp_epDesc

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\ZDCache.r51
    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\ZDConfig.r51
  PROGRAM MODULE, NAME : ZDConfig

  SEGMENTS IN THE MODULE
  ======================
XDATA_I
  Relative segment, address: XDATA 0000F0A1 - 0000F0AA (0xa bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_Config_Node_Descriptor
                                   0000F0A1        NIB_init (nwk_globals)
                                                   ZDApp_NodeProfileSync (ZDApp)
                                                   ZDApp_ProcessNetworkJoin (ZDApp)
                                                   ZDApp_ProcessOSALMsg (ZDApp)
                                                   ZDApp_event_loop (ZDApp)
                                                   ZDO_LeaveInd (ZDApp)
                                                   ZDO_ProcessNodeDescReq (ZDObject)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F0AB - 0000F0AC (0x2 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_Config_Power_Descriptor
                                   0000F0AB        ZDO_ProcessPowerDescReq (ZDObject)
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000015F7 - 00001600 (0xa bytes), align: 0
  Segment part 7.             Intra module refs:   ZDO_Config_Node_Descriptor
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001601 - 00001602 (0x2 bytes), align: 0
  Segment part 9.             Intra module refs:   ZDO_Config_Power_Descriptor

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\ZDObject.r51
  PROGRAM MODULE, NAME : ZDObject

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000ED66 - 0000ED99 (0x34 bytes), align: 0
  Segment part 6.             Intra module refs:   ZDO_ProcessActiveEPReq
                                                   ZDO_ProcessMatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ZDOBuildBuf             0000ED66 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B967 - 0000B97A (0x14 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_Init                0000B967        ZDApp_Init (ZDApp)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B97B - 0000B981 (0x7 bytes), align: 0
  Segment part 10.            Intra module refs:   ZDO_Init
                                                   ZDO_ProcessBindUnbindRsp
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine21           0000B97B 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B982 - 0000BA44 (0xc3 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_StartDevice         0000B982        ZDApp_event_loop (ZDApp)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000017 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BA45 - 0000BA53 (0xf bytes), align: 0
  Segment part 12.            Intra module refs:   ZDO_StartDevice
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0000BA45 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BA54 - 0000BAC6 (0x73 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_UpdateNwkStatus     0000BA54        ZDApp_event_loop (ZDApp)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BAC7 - 0000BB4B (0x85 bytes), align: 0
  Segment part 14.            Intra module refs:   ZDO_ProcessMatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ZDO_CreateAlignedUINT16List
                                   0000BAC7 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000001E ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BB4C - 0000BB50 (0x5 bytes), align: 0
  Segment part 15.            Intra module refs:   ZDO_CreateAlignedUINT16List
                                                   ZDO_ProcessSimpleDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine24           0000BB4C 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BB51 - 0000BBB3 (0x63 bytes), align: 0
  Segment part 16.            Intra module refs:   ZDO_ProcessMatchDescReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_AnyClusterMatches   0000BB51 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000020 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BBB4 - 0000BC11 (0x5e bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ProcessNodeDescReq
                                   0000BBB4        ZDP_IncomingData (ZDProfile)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000001 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BC12 - 0000BC16 (0x5 bytes), align: 0
  Segment part 18.            Intra module refs:   ZDO_AnyClusterMatches
                                                   ZDO_ProcessEPListRsp
                                                   ZDO_ProcessNodeDescReq
                                                   ZDO_ProcessPowerDescReq
                                                   ZDO_StartDevice
                                                   ZDO_UpdateNwkStatus
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine22           0000BC12 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BC17 - 0000BC76 (0x60 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ProcessPowerDescReq
                                   0000BC17        ZDP_IncomingData (ZDProfile)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000001 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BC77 - 0000BC91 (0x1b bytes), align: 0
  Segment part 20.            Intra module refs:   ZDO_ProcessNodeDescReq
                                                   ZDO_ProcessPowerDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0000BC77 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BC92 - 0000BD4E (0xbd bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ProcessSimpleDescReq
                                   0000BC92        ZDP_IncomingData (ZDProfile)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000001 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BD4F - 0000BE0B (0xbd bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ProcessActiveEPReq
                                   0000BD4F        ZDP_IncomingData (ZDProfile)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000001 ( 00000017 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BE0C - 0000BE10 (0x5 bytes), align: 0
  Segment part 23.            Intra module refs:   ZDO_ProcessActiveEPReq
                                                   ZDO_ProcessMatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine25           0000BE0C 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BE11 - 0000C292 (0x482 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ProcessMatchDescReq
                                   0000BE11        ZDP_IncomingData (ZDProfile)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000001 ( 00000025 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C293 - 0000C297 (0x5 bytes), align: 0
  Segment part 25.            Intra module refs:   ZDO_ProcessMatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine14           0000C293 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C298 - 0000C2A0 (0x9 bytes), align: 0
  Segment part 26.            Intra module refs:   ?Subroutine14
                                                   ?Subroutine5
                                                   ?Subroutine9
                                                   ZDO_ProcessMatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine18           0000C298 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C2A1 - 0000C2A6 (0x6 bytes), align: 0
  Segment part 27.            Intra module refs:   ZDO_AnyClusterMatches
                                                   ZDO_ProcessEPListRsp
                                                   ZDO_ProcessMatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           0000C2A1 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C2A7 - 0000C2B3 (0xd bytes), align: 0
  Segment part 28.            Intra module refs:   ZDO_ProcessMatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine12           0000C2A7 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C2B4 - 0000C2B7 (0x4 bytes), align: 0
  Segment part 29.            Intra module refs:   ZDO_ProcessMatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           0000C2B4 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C2B8 - 0000C2BD (0x6 bytes), align: 0
  Segment part 30.            Intra module refs:   ?Subroutine11
                                                   ?Subroutine7
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine16           0000C2B8 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C2BE - 0000C2C3 (0x6 bytes), align: 0
  Segment part 31.            Intra module refs:   ?Subroutine16
                                                   ?Subroutine17
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine20           0000C2BE 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C2C4 - 0000C2C8 (0x5 bytes), align: 0
  Segment part 32.            Intra module refs:   ?Subroutine20
                                                   ?Subroutine7
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine23           0000C2C4 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C2C9 - 0000C2CC (0x4 bytes), align: 0
  Segment part 33.            Intra module refs:   ZDO_ProcessMatchDescReq
                                                   ZDO_UpdateNwkStatus
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           0000C2C9 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C2CD - 0000C2D3 (0x7 bytes), align: 0
  Segment part 34.            Intra module refs:   ZDO_ProcessMatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            0000C2CD 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C2D4 - 0000C2DD (0xa bytes), align: 0
  Segment part 35.            Intra module refs:   ?Subroutine10
                                                   ?Subroutine5
                                                   ?Subroutine9
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine15           0000C2D4 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C2DE - 0000C2E5 (0x8 bytes), align: 0
  Segment part 36.            Intra module refs:   ZDO_ProcessMatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            0000C2DE 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C2E6 - 0000C2EA (0x5 bytes), align: 0
  Segment part 37.            Intra module refs:   ?Subroutine8
                                                   ZDO_ProcessMatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine17           0000C2E6 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C2EB - 0000C2F0 (0x6 bytes), align: 0
  Segment part 38.            Intra module refs:   ZDO_ProcessMatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            0000C2EB 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C2F1 - 0000C2F9 (0x9 bytes), align: 0
  Segment part 39.            Intra module refs:   ZDO_ProcessMatchDescReq
                                                   ZDO_ProcessSimpleDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            0000C2F1 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C2FA - 0000C2FF (0x6 bytes), align: 0
  Segment part 40.            Intra module refs:   ?Subroutine6
                                                   ZDO_ProcessMatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine19           0000C2FA 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C300 - 0000C30D (0xe bytes), align: 0
  Segment part 41.            Intra module refs:   ZDO_ProcessMatchDescReq
                                                   ZDO_UpdateNwkStatus
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0000C300 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C30E - 0000C313 (0x6 bytes), align: 0
  Segment part 42.            Intra module refs:   ZDO_ProcessMatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0000C30E 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C314 - 0000C31C (0x9 bytes), align: 0
  Segment part 43.            Intra module refs:   ZDO_ProcessMatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0000C314 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C31D - 0000C329 (0xd bytes), align: 0
  Segment part 44.            Intra module refs:   ZDO_ProcessMatchDescReq
                                                   ZDO_ProcessSimpleDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0000C31D 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C32A - 0000C38F (0x66 bytes), align: 0
  Segment part 45.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ProcessEPListRsp    0000C32A        ZDP_IncomingData (ZDProfile)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000002 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C390 - 0000C3A8 (0x19 bytes), align: 0
  Segment part 46.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ProcessBindUnbindRsp
                                   0000C390        ZDP_IncomingData (ZDProfile)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000001 ( 00000000 )

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\ZDProfile.r51
  PROGRAM MODULE, NAME : ZDProfile

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000ED9A - 0000EDE9 (0x50 bytes), align: 0
  Segment part 8.             Intra module refs:   Segment part 10
           LOCAL                   ADDRESS         
           =====                   =======         
           ZDP_Buf                 0000ED9A 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F0AD - 0000F0AE (0x2 bytes), align: 0
  Segment part 9.             Intra module refs:   ?Subroutine10
                                                   ?Subroutine16
                                                   ?Subroutine18
                                                   ZDP_GenericRsp
                                                   ZDP_SimpleDescMsg
                                                   fillAndSend
                                                   zdpProcessAddrReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ZDP_TmpBuf              0000F0AD 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EDEA - 0000EDEA (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   ZDP_EPRsp
                                                   fillAndSend
                                                   zdpProcessAddrReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ZDP_TxOptions           0000EDEA 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C3A9 - 0000C456 (0xae bytes), align: 0
  Segment part 12.            Intra module refs:   ?Subroutine46
                                                   ZDP_EPRsp
                                                   ZDP_NodeDescMsg
                                                   ZDP_SimpleDescMsg
                                                   zdpProcessAddrReq
           LOCAL                   ADDRESS         
           =====                   =======         
           fillAndSend             0000C3A9 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000015 ( 0000001C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C457 - 0000C45E (0x8 bytes), align: 0
  Segment part 13.            Intra module refs:   ZDP_SimpleDescMsg
                                                   fillAndSend
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine41           0000C457 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C45F - 0000C468 (0xa bytes), align: 0
  Segment part 16.            Intra module refs:   ZDP_EPRsp
                                                   zdpProcessAddrReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine42           0000C45F 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C469 - 0000C471 (0x9 bytes), align: 0
  Segment part 18.            Intra module refs:   ?Subroutine32
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine40           0000C469 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C472 - 0000C479 (0x8 bytes), align: 0
  Segment part 19.            Intra module refs:   ZDP_SimpleDescMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           0000C472 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C47A - 0000C58C (0x113 bytes), align: 0
  Segment part 22.            Intra module refs:   ZDP_IncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           zdpProcessAddrReq       0000C47A 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000019 ( 00000013 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C58D - 0000C64C (0xc0 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_NodeDescMsg         0000C58D        ZDO_ProcessNodeDescReq (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000003 ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C64D - 0000C657 (0xb bytes), align: 0
  Segment part 24.            Intra module refs:   ZDP_NodeDescMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine21           0000C64D 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C658 - 0000C65D (0x6 bytes), align: 0
  Segment part 25.            Intra module refs:   ZDP_NodeDescMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            0000C658 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C65E - 0000C661 (0x4 bytes), align: 0
  Segment part 26.            Intra module refs:   ?Subroutine8
                                                   ZDP_NodeDescMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine35           0000C65E 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C662 - 0000C66A (0x9 bytes), align: 0
  Segment part 27.            Intra module refs:   ?Subroutine26
                                                   ?Subroutine35
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine38           0000C662 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C66B - 0000C670 (0x6 bytes), align: 0
  Segment part 28.            Intra module refs:   ?Subroutine14
                                                   ?Subroutine38
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine43           0000C66B 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C671 - 0000C674 (0x4 bytes), align: 0
  Segment part 29.            Intra module refs:   ZDP_NodeDescMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            0000C671 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C675 - 0000C67C (0x8 bytes), align: 0
  Segment part 30.            Intra module refs:   ?Subroutine5
                                                   ?Subroutine6
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine26           0000C675 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C67D - 0000C682 (0x6 bytes), align: 0
  Segment part 31.            Intra module refs:   ZDP_NodeDescMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0000C67D 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C683 - 0000C6CC (0x4a bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_PowerDescMsg        0000C683        ZDO_ProcessPowerDescReq (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000003 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C6CD - 0000C6ED (0x21 bytes), align: 0
  Segment part 33.            Intra module refs:   ZDP_GenericRsp
                                                   ZDP_PowerDescMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine46           0000C6CD 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C6EE - 0000C6F2 (0x5 bytes), align: 0
  Segment part 34.            Intra module refs:   ZDP_NodeDescMsg
                                                   ZDP_PowerDescMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine19           0000C6EE 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C6F3 - 0000C6FF (0xd bytes), align: 0
  Segment part 35.            Intra module refs:   ZDP_PowerDescMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine14           0000C6F3 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C700 - 0000C8B0 (0x1b1 bytes), align: 0
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_SimpleDescMsg       0000C700        ZDO_ProcessSimpleDescReq (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000004 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C8B1 - 0000C8B8 (0x8 bytes), align: 0
  Segment part 37.            Intra module refs:   ZDP_SimpleDescMsg
                                                   fillAndSend
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine30           0000C8B1 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C8B9 - 0000C8BD (0x5 bytes), align: 0
  Segment part 38.            Intra module refs:   ZDP_SimpleDescMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine25           0000C8B9 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C8BE - 0000C8C3 (0x6 bytes), align: 0
  Segment part 39.            Intra module refs:   ?Subroutine17
                                                   ?Subroutine19
                                                   ?Subroutine25
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine44           0000C8BE 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C8C4 - 0000C8C6 (0x3 bytes), align: 0
  Segment part 40.            Intra module refs:   ZDP_NodeDescMsg
                                                   ZDP_SimpleDescMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine15           0000C8C4 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C8C7 - 0000C8CC (0x6 bytes), align: 0
  Segment part 41.            Intra module refs:   ?Subroutine15
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine45           0000C8C7 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C8CD - 0000C8D2 (0x6 bytes), align: 0
  Segment part 42.            Intra module refs:   ?Subroutine15
                                                   zdpProcessAddrReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine33           0000C8CD 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C8D3 - 0000C8DC (0xa bytes), align: 0
  Segment part 43.            Intra module refs:   ZDP_SimpleDescMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0000C8D3 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C8DD - 0000C8E4 (0x8 bytes), align: 0
  Segment part 44.            Intra module refs:   ?Subroutine4
                                                   ZDP_SimpleDescMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine31           0000C8DD 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C8E5 - 0000C8EC (0x8 bytes), align: 0
  Segment part 45.            Intra module refs:   ?Subroutine28
                                                   ?Subroutine31
                                                   ZDP_SimpleDescMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine39           0000C8E5 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C8ED - 0000C8F4 (0x8 bytes), align: 0
  Segment part 46.            Intra module refs:   ZDP_SimpleDescMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0000C8ED 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C8F5 - 0000C901 (0xd bytes), align: 0
  Segment part 47.            Intra module refs:   ?Subroutine3
                                                   ?Subroutine4
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine32           0000C8F5 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C902 - 0000C90D (0xc bytes), align: 0
  Segment part 48.            Intra module refs:   ZDP_SimpleDescMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0000C902 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C90E - 0000C914 (0x7 bytes), align: 0
  Segment part 49.            Intra module refs:   ?Subroutine2
                                                   ?Subroutine3
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine28           0000C90E 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C915 - 0000C9CE (0xba bytes), align: 0
  Segment part 50.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_EPRsp               0000C915        ZDO_ProcessActiveEPReq (ZDObject)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000007 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C9CF - 0000CA31 (0x63 bytes), align: 0
  Segment part 51.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_GenericRsp          0000C9CF        ZDApp_InMsgCB (ZDApp)
                                                   ZDO_ProcessActiveEPReq (ZDObject)
                                                   ZDO_ProcessNodeDescReq (ZDObject)
                                                   ZDO_ProcessPowerDescReq (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000004 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CA32 - 0000CA3F (0xe bytes), align: 0
  Segment part 52.            Intra module refs:   ZDP_GenericRsp
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine16           0000CA32 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CA40 - 0000CA4E (0xf bytes), align: 0
  Segment part 53.            Intra module refs:   ZDP_EPRsp
                                                   ZDP_GenericRsp
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           0000CA40 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CA4F - 0000CC4B (0x1fd bytes), align: 0
  Segment part 66.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_IncomingData        0000CA4F        ZDApp_ProcessOSALMsg (ZDApp)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000001B )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CC4C - 0000CC57 (0xc bytes), align: 0
  Segment part 67.            Intra module refs:   ZDP_IncomingData
                                                   zdpProcessAddrReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine24           0000CC4C 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CC58 - 0000CC60 (0x9 bytes), align: 0
  Segment part 68.            Intra module refs:   ZDP_EPRsp
                                                   ZDP_GenericRsp
                                                   ZDP_IncomingData
                                                   ZDP_NodeDescMsg
                                                   ZDP_PowerDescMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine18           0000CC58 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CC61 - 0000CC67 (0x7 bytes), align: 0
  Segment part 69.            Intra module refs:   ZDP_IncomingData
                                                   zdpProcessAddrReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine17           0000CC61 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001603 - 00001604 (0x2 bytes), align: 0
  Segment part 10.            Intra module refs:   ZDP_TmpBuf

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\ZDSecMgr.r51
  PROGRAM MODULE, NAME : ZDSecMgr

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00016BD3, align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDSecMgrInit            00016BD3        ZDO_Init (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00016BD3 - 00016BE5 (0x13 bytes), align: 0
  Segment part 7.             Intra module refs:   ZDSecMgrConfig
                                                   ZDSecMgrInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00016BD3 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00016BE6 - 00016BE7 (0x2 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDSecMgrConfig          00016BE6        ZDO_StartDevice (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000002 )

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\ZGlobals.r51
  PROGRAM MODULE, NAME : ZGlobals

  SEGMENTS IN THE MODULE
  ======================
XDATA_I
  Relative segment, address: XDATA 0000F0AF - 0000F0B0 (0x2 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgPollRate              0000F0AF        NLME_SetPollRate (nwk_util)
                                                   Segment part 33 (nwk)
                                                   nwk_event_loop (nwk)
                                                   nwk_set_poll_evt (nwk)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F0B1 - 0000F0B2 (0x2 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgQueuedPollRate        0000F0B1        NLME_SetQueuedPollRate (nwk_util)
                                                   nwk_event_loop (nwk)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F0B3 - 0000F0B4 (0x2 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgResponsePollRate      0000F0B3        NLME_ReJoinRequest (NLMEDE)
                                                   NLME_RejoinRspCmdProcess (nwk_util)
                                                   NLME_SetResponseRate (nwk_util)
                                                   nwk_data_cnf_processing (nwk)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F0B5 - 0000F0B6 (0x2 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgRejoinPollRate        0000F0B5        NLME_ReJoinRequest (NLMEDE)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F0B7 - 0000F0B7 (0x1 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgMaxDataRetries        0000F0B7        nwk_MacDataBuffersAdd (nwk_bufs)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F0B8 - 0000F0B8 (0x1 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgMaxPollFailureRetries
                                   0000F0B8        RTG_UpdateNeighborEntry (nwk_util)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F0B9 - 0000F0BC (0x4 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgDefaultChannelList    0000F0B9        ?Subroutine1 (ZDObject)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F0BD - 0000F0BD (0x1 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgDefaultStartingScanDuration
                                   0000F0BD        ?Subroutine1 (ZDObject)
                                                   ZDApp_ProcessOSALMsg (ZDApp)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F0BE - 0000F0BE (0x1 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgStackProfile          0000F0BE        ZDApp_NodeProfileSync (ZDApp)
                                                   ZDO_NetworkDiscoveryConfirmCB (ZDApp)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F0BF - 0000F0BF (0x1 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgIndirectMsgTimeout    0000F0BF        NIB_init (nwk_globals)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EDEB - 0000EDEB (0x1 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgSecurityLevel         0000EDEB        NIB_init (nwk_globals)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F0C0 - 0000F0C0 (0x1 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgRouteExpiryTime       0000F0C0        NIB_init (nwk_globals)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EDEC - 0000EDF3 (0x8 bytes), align: 0
  Segment part 29.            Intra module refs:   zgInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgExtendedPANID         0000EDEC        NIB_init (nwk_globals)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F0C1 - 0000F0C1 (0x1 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgMaxBcastRetires       0000F0C1        NIB_init (nwk_globals)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F0C2 - 0000F0C2 (0x1 bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgPassiveAckTimeout     0000F0C2        NIB_init (nwk_globals)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F0C3 - 0000F0C3 (0x1 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgBcastDeliveryTime     0000F0C3        NIB_init (nwk_globals)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F0C4 - 0000F0C4 (0x1 bytes), align: 0
  Segment part 44.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgApscMaxFrameRetries   0000F0C4        NLDE_DataCnf (NLMEDE_CB)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F0C5 - 0000F0C6 (0x2 bytes), align: 0
  Segment part 46.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgApscAckWaitDurationPolled
                                   0000F0C5        NLDE_DataCnf (NLMEDE_CB)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F0C7 - 0000F0C8 (0x2 bytes), align: 0
  Segment part 50.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgApsDefaultMaxBindingTime
                                   0000F0C7        APS_Init (APS)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EDF4 - 0000EE03 (0x10 bytes), align: 0
  Segment part 52.            Intra module refs:   zgInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgPreConfigKey          0000EDF4 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F0C9 - 0000F0CA (0x2 bytes), align: 0
  Segment part 54.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgConfigPANID           0000F0C9        ZDO_NetworkDiscoveryConfirmCB (ZDApp)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000021C8 - 000021CD (0x6 bytes), align: 0
  Segment part 62.            Intra module refs:   zgInit
           LOCAL                   ADDRESS         
           =====                   =======         
           zgItemTable             000021C8 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000155FE - 0001572A (0x12d bytes), align: 0
  Segment part 63.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgInit                  000155FE        main (ZMain)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000013 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001572B - 0001577F (0x55 bytes), align: 0
  Segment part 64.            Intra module refs:   zgInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgReadStartupOptions    0001572B 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000F ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015780 - 00015789 (0xa bytes), align: 0
  Segment part 65.            Intra module refs:   zgReadStartupOptions
                                                   zgWriteStartupOptions
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            00015780 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001578A - 0001579A (0x11 bytes), align: 0
  Segment part 66.            Intra module refs:   zgReadStartupOptions
                                                   zgWriteStartupOptions
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001578A 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001579B - 00015814 (0x7a bytes), align: 0
  Segment part 67.            Intra module refs:   zgInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgWriteStartupOptions   0001579B 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000F ( 0000000F )
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001605 - 00001606 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   zgPollRate
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001607 - 00001608 (0x2 bytes), align: 0
  Segment part 9.             Intra module refs:   zgQueuedPollRate
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001609 - 0000160A (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   zgResponsePollRate
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000160B - 0000160C (0x2 bytes), align: 0
  Segment part 13.            Intra module refs:   zgRejoinPollRate
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000160D - 0000160D (0x1 bytes), align: 0
  Segment part 15.            Intra module refs:   zgMaxDataRetries
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000160E - 0000160E (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   zgMaxPollFailureRetries
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000160F - 00001612 (0x4 bytes), align: 0
  Segment part 19.            Intra module refs:   zgDefaultChannelList
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001613 - 00001613 (0x1 bytes), align: 0
  Segment part 21.            Intra module refs:   zgDefaultStartingScanDuration
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001614 - 00001614 (0x1 bytes), align: 0
  Segment part 23.            Intra module refs:   zgStackProfile
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001615 - 00001615 (0x1 bytes), align: 0
  Segment part 25.            Intra module refs:   zgIndirectMsgTimeout
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001616 - 00001616 (0x1 bytes), align: 0
  Segment part 28.            Intra module refs:   zgRouteExpiryTime
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001617 - 00001617 (0x1 bytes), align: 0
  Segment part 31.            Intra module refs:   zgMaxBcastRetires
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001618 - 00001618 (0x1 bytes), align: 0
  Segment part 33.            Intra module refs:   zgPassiveAckTimeout
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001619 - 00001619 (0x1 bytes), align: 0
  Segment part 35.            Intra module refs:   zgBcastDeliveryTime
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000161A - 0000161A (0x1 bytes), align: 0
  Segment part 45.            Intra module refs:   zgApscMaxFrameRetries
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000161B - 0000161C (0x2 bytes), align: 0
  Segment part 47.            Intra module refs:   zgApscAckWaitDurationPolled
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000161D - 0000161E (0x2 bytes), align: 0
  Segment part 51.            Intra module refs:   zgApsDefaultMaxBindingTime
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000161F - 00001620 (0x2 bytes), align: 0
  Segment part 55.            Intra module refs:   zgConfigPANID

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\ZMain.r51
  PROGRAM MODULE, NAME : ZMain

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000081 - 00000081 (0x1 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SP                      00000081 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000E91 - 00000F48 (0xb8 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    00000E91        ?call_main (?cmain)
               calls direct
               stack 1 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000F49 - 00000F55 (0xd bytes), align: 0
  Segment part 11.            Intra module refs:   main
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00000F49 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000F56 - 00000FCA (0x75 bytes), align: 0
  Segment part 12.            Intra module refs:   main
           LOCAL                   ADDRESS         
           =====                   =======         
           zmain_vdd_check         00000F56 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000FCB - 000010B5 (0xeb bytes), align: 0
  Segment part 13.            Intra module refs:   main
           LOCAL                   ADDRESS         
           =====                   =======         
           zmain_ext_addr          00000FCB 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000D )

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\chipcon_banked_code_support.r51
  LIBRARY MODULE, NAME : ?BANKED_CODE_SUPPORT

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 00000086 - 000000A7 (0x22 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?BCALL                  00000086        ?Subroutine0 (ZDSecMgr)
                                                   ?Subroutine0 (hal_drivers)
                                                   ?Subroutine0 (mac_low_level)
                                                   ?Subroutine0 (mac_radio)
                                                   ?Subroutine1 (mac_csp_tx)
                                                   ?Subroutine10 (hal_lcd)
                                                   ?Subroutine10 (hal_led)
                                                   ?Subroutine15 (hal_timer)
                                                   ?Subroutine16 (MTEL)
                                                   ?Subroutine19 (OSAL)
                                                   ?Subroutine2 (mac_backoff_timer)
                                                   ?Subroutine2 (mac_csp_tx)
                                                   ?Subroutine20 (mac_rx)
                                                   ?Subroutine23 (ZDApp)
                                                   ?Subroutine29 (ZDApp)
                                                   ?Subroutine4 (OSAL_Timers)
                                                   ?Subroutine46 (ZDProfile)
                                                   ?Subroutine5 (OSAL_Timers)
                                                   ?Subroutine5 (mac_tx)
                                                   ?Subroutine7 (zmac)
                                                   ?Subroutine9 (hal_lcd)
                                                   ?call_main (?cmain)
                                                   AF_DataRequest (AF)
                                                   APSDE_DataConfirm (APSMEDE_CB)
                                                   APSDE_DataIndication (APSMEDE_CB)
                                                   APSDE_DataReq (APSMEDE)
                                                   APSDE_DataReqMTU (APSMEDE)
                                                   APSDE_FrameAlloc (APSMEDE)
                                                   APSDE_FrameBlkFree (APSMEDE)
                                                   APSDE_FrameBlkInit (APSMEDE)
                                                   APSDE_FrameHdrInit (APSMEDE)
                                                   APSDE_FrameHdrSet (APSMEDE)
                                                   APSDE_FrameSend (APSMEDE)
                                                   APSDE_ParseMsg (aps_util)
                                                   APSME_FrameSecInit (APSMEDE)
                                                   APSME_LookupNwkAddr (APSMEDE)
                                                   APSME_SecurityNM (APSMEDE)
                                                   APS_CmdInd (APS)
                                                   APS_event_loop (APS)
                                                   Aboat_Driver (menu_lcd)
                                                   AddrMgrEntryLookupExt (AddrMgr)
                                                   AddrMgrInit (AddrMgr)
                                                   AddrMgrNwkAddrLookup (AddrMgr)
                                                   ClearScreen (hal_lcd)
                                                   ClearScreenLcd (menu_lcd)
                                                   DrawMenu (menu_lcd)
                                                   Frist_Data (SampleApp)
                                                   HalDriverInit (hal_drivers)
                                                   HalKeyConfig (hal_key)
                                                   HalKeyPoll (hal_key)
                                                   HalLcdInit (hal_lcd)
                                                   HalLedBlink (hal_led)
                                                   HalLedSet (hal_led)
                                                   HalLedUpdate (hal_led)
                                                   HalTimerConfig (hal_timer)
                                                   HalTimerStart (hal_timer)
                                                   HalTimerStop (hal_timer)
                                                   HalTimerTick (hal_timer)
                                                   HalUARTOpen (hal_uart)
                                                   HalUARTPoll (hal_uart)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   Hal_ProcessPoll (hal_drivers)
                                                   IEEE_menu (menu_lcd)
                                                   InitBoard (OnBoard)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MAC_McpsDataAlloc (mac_data)
                                                   MAC_MlmeGetReq (mac_pib)
                                                   MAC_MlmeResetReq (mac_mgmt)
                                                   MAC_MlmeSetReq (mac_pib)
                                                   MTProcessAppMsg (MTEL)
                                                   MTProcessAppRspMsg (MTEL)
                                                   MTProcessLedControl (MTEL)
                                                   MT_BuildAndSendZToolResponse (MTEL)
                                                   MT_BuildSPIMsg (MTEL)
                                                   MT_ProcessCommand (MTEL)
                                                   MT_ProcessDebugMsg (MTEL)
                                                   MT_ProcessDebugStr (MTEL)
                                                   MT_ProcessEvent (MTEL)
                                                   MT_ProcessGetDeviceInfo (MTEL)
                                                   MT_ProcessGetNV (MTEL)
                                                   MT_ProcessGetNvInfo (MTEL)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   MT_ProcessSetNV (MTEL)
                                                   MT_TaskInit (MTEL)
                                                   MenuMenuDisp (menu_lcd)
                                                   Menu_all (menu_lcd)
                                                   NIB_init (nwk_globals)
                                                   NLDE_BuildFrameControl (nwk_util)
                                                   NLDE_BuildMsg (nwk_util)
                                                   NLDE_DataCnf (NLMEDE_CB)
                                                   NLDE_DataIndSend (nwk_util)
                                                   NLDE_DataIndication (NLMEDE_CB)
                                                   NLDE_DataReq (NLMEDE)
                                                   NLDE_DataReqAlloc (NLMEDE)
                                                   NLDE_DataReqSend (nwk_util)
                                                   NLDE_FrameDataLoad (APSMEDE)
                                                   NLDE_GetHandle (nwk_util)
                                                   NLDE_ParseMsg (nwk_util)
                                                   NLDE_ParseMsg2 (nwk_util)
                                                   NLDE_SendMsg (nwk_util)
                                                   NLME_CmdCnf (nwk_util)
                                                   NLME_CmdDataReqAlloc (nwk_util)
                                                   NLME_GetProtocolVersion (nwk_util)
                                                   NLME_GetRequest (NLMEDE)
                                                   NLME_IsAddressBroadcast (nwk_util)
                                                   NLME_JoinRequest (NLMEDE)
                                                   NLME_LeaveCmdCnf (nwk_util)
                                                   NLME_LeaveCmdProcess (nwk_util)
                                                   NLME_ReJoinRequest (NLMEDE)
                                                   NLME_RejoinRspCmdProcess (nwk_util)
                                                   NLME_SetBroadcastFilter (nwk_util)
                                                   NLME_SetPollRate (nwk_util)
                                                   OnBoard_KeyCallback (OnBoard)
                                                   OnBoard_SendKeys (OnBoard)
                                                   Onboard_TimerCallBack (OnBoard)
                                                   Onboard_rand (OnBoard)
                                                   PingpongTxTest (menu_lcd)
                                                   Print (hal_lcd)
                                                   Print8 (hal_lcd)
                                                   RTG_UpdateNeighborEntry (nwk_util)
                                                   ReadBattery_menu (menu_lcd)
                                                   SPIMgr_Init (SPIMgr)
                                                   SPIMgr_ProcessZToolData (SPIMgr)
                                                   SSP_GetMicLen (ssp)
                                                   SSP_NwkSecurity (ssp)
                                                   SampleApp_Init (SampleApp)
                                                   SampleApp_MessageMSGCB (SampleApp)
                                                   SampleApp_ProcessEvent (SampleApp)
                                                   Segment part 110 (APSMEDE)
                                                   Segment part 15 (hal_aes)
                                                   Segment part 16 (AddrMgr)
                                                   Segment part 16 (NLMEDE_CB)
                                                   Segment part 27 (mac_scan)
                                                   Segment part 29 (mac_timer)
                                                   Segment part 32 (APSMEDE)
                                                   Segment part 34 (mac_data)
                                                   Segment part 34 (mac_device)
                                                   Segment part 45 (mac_device)
                                                   Segment part 62 (mac_data)
                                                   Segment part 73 (mac_mgmt)
                                                   Segment part 9 (AddrMgr)
                                                   SelectTxAddr (menu_lcd)
                                                   SendData (SampleApp)
                                                   Send_Broadcast (menu_lcd)
                                                   Send_Option (menu_lcd)
                                                   Send_Test (menu_lcd)
                                                   Sensor_Menu (menu_lcd)
                                                   SetContrast (hal_lcd)
                                                   SetRamAddr (hal_lcd)
                                                   Short_menu (menu_lcd)
                                                   SingleTxTest (menu_lcd)
                                                   Temp_menu (menu_lcd)
                                                   Uart_Menu (menu_lcd)
                                                   Uart_Pingpong (menu_lcd)
                                                   Uart_RX (menu_lcd)
                                                   Uart_Send (menu_lcd)
                                                   WriteLCD (hal_lcd)
                                                   ZDAppCheckForHoldKey (ZDApp)
                                                   ZDAppSetupProtoVersion (ZDApp)
                                                   ZDApp_InMsgCB (ZDApp)
                                                   ZDApp_Init (ZDApp)
                                                   ZDApp_LeaveCtrlInit (ZDApp)
                                                   ZDApp_LeaveCtrlSet (ZDApp)
                                                   ZDApp_LeaveCtrlStartup (ZDApp)
                                                   ZDApp_LeaveReset (ZDApp)
                                                   ZDApp_MatchDescRspCB (ZDApp)
                                                   ZDApp_NodeProfileSync (ZDApp)
                                                   ZDApp_ProcessNetworkJoin (ZDApp)
                                                   ZDApp_ProcessOSALMsg (ZDApp)
                                                   ZDApp_SendMsg (ZDApp)
                                                   ZDApp_SendNewDstAddr (ZDApp)
                                                   ZDApp_event_loop (ZDApp)
                                                   ZDOInitDevice (ZDApp)
                                                   ZDO_CreateAlignedUINT16List (ZDObject)
                                                   ZDO_Init (ZDObject)
                                                   ZDO_JoinConfirmCB (ZDApp)
                                                   ZDO_LeaveCnf (ZDApp)
                                                   ZDO_LeaveInd (ZDApp)
                                                   ZDO_NetworkDiscoveryConfirmCB (ZDApp)
                                                   ZDO_ProcessActiveEPReq (ZDObject)
                                                   ZDO_ProcessBindUnbindRsp (ZDObject)
                                                   ZDO_ProcessEPListRsp (ZDObject)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_ProcessNodeDescReq (ZDObject)
                                                   ZDO_ProcessPowerDescReq (ZDObject)
                                                   ZDO_ProcessSimpleDescReq (ZDObject)
                                                   ZDO_StartDevice (ZDObject)
                                                   ZDO_SyncIndicationCB (ZDApp)
                                                   ZDO_UpdateNwkStatus (ZDObject)
                                                   ZDP_EPRsp (ZDProfile)
                                                   ZDP_GenericRsp (ZDProfile)
                                                   ZDP_IncomingData (ZDProfile)
                                                   ZDP_NodeDescMsg (ZDProfile)
                                                   ZDP_SimpleDescMsg (ZDProfile)
                                                   ZMacDataReq (zmac)
                                                   ZMacGetReq (zmac)
                                                   ZMacInit (zmac)
                                                   ZMacReset (zmac)
                                                   ZMacScanReq (zmac)
                                                   ZMacSetReq (zmac)
                                                   Zigbee_Network (menu_lcd)
                                                   _small_write (?smallwr)
                                                   afBuildMSGIncoming (AF)
                                                   afDataConfirm (AF)
                                                   afDataReqMTU (AF)
                                                   afFindEndPointDesc (AF)
                                                   afFindSimpleDesc (AF)
                                                   afGetReflector (AF)
                                                   afIncomingData (AF)
                                                   afRegister (AF)
                                                   afRegisterExtended (AF)
                                                   apsGenerateAck (aps_util)
                                                   apsProcessAck (aps_util)
                                                   aps_AddGroup (aps_groups)
                                                   aps_GroupsWriteNV (aps_groups)
                                                   compactPage (OSAL_Nv)
                                                   cspPrepForTxProgram (mac_csp_tx)
                                                   fillAndSend (ZDProfile)
                                                   findItem (OSAL_Nv)
                                                   halAssertHandler (hal_assert)
                                                   halKeyPort0Isr (hal_key)
                                                   halKeyPort1Isr (hal_key)
                                                   halKeyPort2Isr (hal_key)
                                                   halProcessKeyInterrupt (hal_key)
                                                   halProcessTimer1 (hal_timer)
                                                   halProcessTimer3 (hal_timer)
                                                   halProcessTimer4 (hal_timer)
                                                   halTimerSendCallBack (hal_timer)
                                                   initItem (OSAL_Nv)
                                                   initItem2 (OSAL_Nv)
                                                   initNV (OSAL_Nv)
                                                   initPage (OSAL_Nv)
                                                   macAllocTxBuffer (mac_data)
                                                   macApiAssociateReq (mac_device)
                                                   macApiDisassociateReq (mac_mgmt)
                                                   macApiPending (mac_mgmt)
                                                   macApiPollReq (mac_device)
                                                   macApiScanReq (mac_scan)
                                                   macAssocDataReq (mac_device)
                                                   macAssocDataReqComplete (mac_device)
                                                   macAssocDataRxInd (mac_device)
                                                   macAssocFailed (mac_device)
                                                   macAssocFrameResponseTimeout (mac_device)
                                                   macAssociateCnf (mac_device)
                                                   macBackoffTimerCancelTrigger (mac_backoff_timer)
                                                   macBackoffTimerCapture (mac_backoff_timer)
                                                   macBackoffTimerCompareIsr (mac_backoff_timer)
                                                   macBackoffTimerCount (mac_backoff_timer)
                                                   macBackoffTimerInit (mac_backoff_timer)
                                                   macBackoffTimerReset (mac_backoff_timer)
                                                   macBackoffTimerRolloverCallback (mac_timer)
                                                   macBackoffTimerSetRollover (mac_backoff_timer)
                                                   macBackoffTimerSetTrigger (mac_backoff_timer)
                                                   macBackoffTimerTriggerCallback (mac_timer)
                                                   macBuildBeaconNotifyInd (mac_mgmt)
                                                   macBuildCommonReq (mac_mgmt)
                                                   macBuildDataFrame (mac_data)
                                                   macBuildDisassociateReq (mac_mgmt)
                                                   macBuildHeader (mac_mgmt)
                                                   macCbackForEvent (mac_main)
                                                   macCheckSched (mac_data)
                                                   macCommStatusInd (mac_mgmt)
                                                   macConflictSyncLossInd (mac_mgmt)
                                                   macCoordAddrCmp (mac_mgmt)
                                                   macCspForceTxDoneIfPending (mac_csp_tx)
                                                   macCspTxGoCsma (mac_csp_tx)
                                                   macCspTxGoSlotted (mac_csp_tx)
                                                   macCspTxIntIsr (mac_csp_tx)
                                                   macCspTxPrepCsmaSlotted (mac_csp_tx)
                                                   macCspTxPrepCsmaUnslotted (mac_csp_tx)
                                                   macCspTxPrepSlotted (mac_csp_tx)
                                                   macCspTxRequestAckTimeoutCallback (mac_csp_tx)
                                                   macCspTxStopIsr (mac_csp_tx)
                                                   macDataReset (mac_data)
                                                   macDataRxMemAlloc (mac_data)
                                                   macDataTxComplete (mac_data)
                                                   macDataTxEnqueue (mac_data)
                                                   macDataTxSend (mac_data)
                                                   macDataTxTimeAvailable (mac_data)
                                                   macDefaultAction (mac_mgmt)
                                                   macDisassocComplete (mac_mgmt)
                                                   macEventLoop (mac_main)
                                                   macExecute (mac_main)
                                                   macGetCoordAddress (mac_mgmt)
                                                   macLowLevelInit (mac_low_level)
                                                   macLowLevelReset (mac_low_level)
                                                   macMainReset (mac_main)
                                                   macMcuAndT2PEROF2 (mac_mcu)
                                                   macMcuInit (mac_mcu)
                                                   macMcuOrT2PEROF2 (mac_mcu)
                                                   macMcuOverflowSetCompare (mac_mcu)
                                                   macMcuOverflowSetCount (mac_mcu)
                                                   macMcuRecordMaxRssiStart (mac_mcu)
                                                   macMcuRecordMaxRssiStop (mac_mcu)
                                                   macMcuRfIsr (mac_mcu)
                                                   macMcuTimer2Isr (mac_mcu)
                                                   macMemReadRxFifo (mac_mem)
                                                   macMemWriteTxFifo (mac_mem)
                                                   macPibReset (mac_pib)
                                                   macPollCnf (mac_device)
                                                   macPollDataReqComplete (mac_device)
                                                   macPollDataRxInd (mac_device)
                                                   macPollFrameResponseTimeout (mac_device)
                                                   macPollRxAssocRsp (mac_device)
                                                   macPollRxDisassoc (mac_device)
                                                   macRadioEnergyDetectStop (mac_radio)
                                                   macRadioReset (mac_radio)
                                                   macRadioSetChannel (mac_radio)
                                                   macRadioSetTxPower (mac_radio)
                                                   macRadioStartScan (mac_radio)
                                                   macRadioUpdateChannel (mac_radio)
                                                   macRxAckTxDoneCallback (mac_rx)
                                                   macRxAssocRsp (mac_device)
                                                   macRxBeacon (mac_mgmt)
                                                   macRxCheckPendingCallback (mac_data)
                                                   macRxCompleteCallback (mac_data)
                                                   macRxCoordRealign (mac_device)
                                                   macRxDisable (mac_rx_onoff)
                                                   macRxDisassoc (mac_mgmt)
                                                   macRxEnable (mac_rx_onoff)
                                                   macRxHaltCleanup (mac_rx)
                                                   macRxHardDisable (mac_rx_onoff)
                                                   macRxOffRequest (mac_rx_onoff)
                                                   macRxOnRequest (mac_rx_onoff)
                                                   macRxPromiscuousMode (mac_rx)
                                                   macRxSoftEnable (mac_rx_onoff)
                                                   macRxThresholdIsr (mac_rx)
                                                   macRxTxReset (mac_rx)
                                                   macScanComplete (mac_scan)
                                                   macScanFailedInProgress (mac_scan)
                                                   macScanNextChan (mac_scan)
                                                   macScanRxBeacon (mac_scan)
                                                   macScanRxCoordRealign (mac_scan)
                                                   macScanStartTimer (mac_scan)
                                                   macSendDataMsg (mac_main)
                                                   macSendMsg (mac_main)
                                                   macSetEvent (mac_main)
                                                   macSleepWakeUp (mac_sleep)
                                                   macStartFrameResponseTimer (mac_device)
                                                   macStartResponseTimer (mac_device)
                                                   macTimer (mac_timer)
                                                   macTimerAddTimer (mac_timer)
                                                   macTimerCancel (mac_timer)
                                                   macTimerRecalcUnaligned (mac_timer)
                                                   macTimerUpdateBackoffTimer (mac_timer)
                                                   macTxAckNotReceivedCallback (mac_tx)
                                                   macTxAckReceivedCallback (mac_tx)
                                                   macTxChannelBusyCallback (mac_tx)
                                                   macTxCompleteCallback (mac_data)
                                                   macTxDoneCallback (mac_tx)
                                                   macTxFrame (mac_tx)
                                                   macTxStartQueuedFrame (mac_tx)
                                                   macTxTimestampCallback (mac_tx)
                                                   main (ZMain)
                                                   nwkBuildDataCnf (nwk)
                                                   nwkDB_Add (nwk_bufs)
                                                   nwkDB_CreateHdr (nwk_bufs)
                                                   nwkDB_DeleteRecAll (nwk_bufs)
                                                   nwkDB_FindMatch (nwk_bufs)
                                                   nwkDB_UserDataLoad (nwk_util)
                                                   nwkSimulateDataCnf (nwk)
                                                   nwk_BeaconFromNative (nwk)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
                                                   nwk_MacDataBuffersDealloc (nwk_bufs)
                                                   nwk_MacDataBuffersFull (nwk_bufs)
                                                   nwk_ScanJoiningOrphan (nwk)
                                                   nwk_SendNextDataBuf (nwk_bufs)
                                                   nwk_associate_cnf_processing (nwk)
                                                   nwk_beacon_notify_ind_processing (nwk)
                                                   nwk_data_cnf_processing (nwk)
                                                   nwk_data_ind_processing (nwk)
                                                   nwk_data_req_send (nwk)
                                                   nwk_desc_list_free (nwk)
                                                   nwk_event_loop (nwk)
                                                   nwk_getNetworkDesc (nwk)
                                                   nwk_globals_init (nwk_globals)
                                                   nwk_init (nwk)
                                                   nwk_scan_cnf_processing (nwk)
                                                   nwk_set_poll_evt (nwk)
                                                   osalAddTasks (OSAL_SampleApp)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalDeleteTimer (OSAL_Timers)
                                                   osalInitTasks (OSAL_Tasks)
                                                   osalTaskAdd (OSAL_Tasks)
                                                   osalTimerInit (OSAL_Timers)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_cpyExtAddr (OSAL)
                                                   osal_get_timeoutEx (OSAL_Timers)
                                                   osal_init_system (OSAL)
                                                   osal_mem_alloc (OSAL_Memory)
                                                   osal_mem_free (OSAL_Memory)
                                                   osal_mem_init (OSAL_Memory)
                                                   osal_memset (OSAL)
                                                   osal_msg_allocate (OSAL)
                                                   osal_msg_deallocate (OSAL)
                                                   osal_msg_receive (OSAL)
                                                   osal_msg_send (OSAL)
                                                   osal_nv_init (OSAL_Nv)
                                                   osal_nv_item_init (OSAL_Nv)
                                                   osal_nv_item_len (OSAL_Nv)
                                                   osal_nv_read (OSAL_Nv)
                                                   osal_nv_write (OSAL_Nv)
                                                   osal_set_event (OSAL)
                                                   osal_start_system (OSAL)
                                                   osal_start_timer (OSAL_Timers)
                                                   osal_start_timerEx (OSAL_Timers)
                                                   osal_stop_timer (OSAL_Timers)
                                                   osal_stop_timerEx (OSAL_Timers)
                                                   osal_timer_activate (OSAL_Timers)
                                                   osal_timer_hw_setup (OSAL_Timers)
                                                   pollDMA (hal_uart)
                                                   rxAddrIsr (mac_rx)
                                                   rxDiscardFrame (mac_rx)
                                                   rxDiscardIsr (mac_rx)
                                                   rxDone (mac_rx)
                                                   rxFcsIsr (mac_rx)
                                                   rxHaltCleanupFinalStep (mac_rx)
                                                   rxPayloadIsr (mac_rx)
                                                   rxPostRxUpdates (mac_rx)
                                                   rxStartIsr (mac_rx)
                                                   sAddrCmp (saddr)
                                                   sAddrCpy (saddr)
                                                   sAddrExtCpy (saddr)
                                                   setItem (OSAL_Nv)
                                                   setPageUse (OSAL_Nv)
                                                   sprintf (?sprintf)
                                                   txComplete (mac_tx)
                                                   txCsmaGo (mac_tx)
                                                   txCsmaPrep (mac_tx)
                                                   txGo (mac_tx)
                                                   writeBuf (OSAL_Nv)
                                                   writeItem (OSAL_Nv)
                                                   writeWord (OSAL_Nv)
                                                   writeWordD (OSAL_Nv)
                                                   writeWordH (OSAL_Nv)
                                                   xferBuf (OSAL_Nv)
                                                   zdpProcessAddrReq (ZDProfile)
                                                   zgInit (ZGlobals)
                                                   zgReadStartupOptions (ZGlobals)
                                                   zgWriteStartupOptions (ZGlobals)
                                                   zmain_ext_addr (ZMain)
                                                   zmain_vdd_check (ZMain)
           ?BRET                   0000009A        ?BANKED_LEAVE_XDATA (?BANKED_LEAVE_XDATA)
                                                   ?Subroutine0 (OSAL_PwrMgr)
                                                   ?Subroutine0 (OnBoard)
                                                   ?Subroutine0 (ZDSecMgr)
                                                   ?Subroutine0 (hal_adc)
                                                   ?Subroutine0 (hal_drivers)
                                                   ?Subroutine0 (mac_csp_tx)
                                                   ?Subroutine0 (mac_low_level)
                                                   ?Subroutine0 (mac_radio)
                                                   ?Subroutine0 (nwk_globals)
                                                   ?Subroutine0 (wxl_uart)
                                                   ?Subroutine1 (hal_key)
                                                   ?Subroutine1 (mac_rx_onoff)
                                                   ?Subroutine10 (hal_led)
                                                   ?Subroutine13 (hal_timer)
                                                   ?Subroutine15 (MTEL)
                                                   ?Subroutine19 (OSAL)
                                                   ?Subroutine2 (OSAL_Memory)
                                                   ?Subroutine2 (hal_key)
                                                   ?Subroutine20 (mac_rx)
                                                   ?Subroutine21 (ZDObject)
                                                   ?Subroutine21 (hal_uart)
                                                   ?Subroutine23 (ZDApp)
                                                   ?Subroutine3 (OSAL_Tasks)
                                                   ?Subroutine3 (mac_mcu)
                                                   ?Subroutine3 (mac_tx)
                                                   ?Subroutine30 (AF)
                                                   ?Subroutine4 (mac_mcu)
                                                   ?Subroutine5 (OSAL_Timers)
                                                   ?Subroutine6 (SPIMgr)
                                                   ?Subroutine67 (OSAL_Nv)
                                                   ?Subroutine9 (hal_lcd)
                                                   APSME_CmdPktNM (APSMEDE)
                                                   HalDmaInit (hal_dma)
                                                   MAC_CbackCheckPending (zmac_cb)
                                                   Menu_all (menu_lcd)
                                                   NLME_GetCoordExtAddr (nwk_util)
                                                   NLME_GetExtAddr (nwk_util)
                                                   NLME_RemoveChild (nwk_util)
                                                   Onboard_wait (OnBoard)
                                                   Segment part 15 (hal_aes)
                                                   Segment part 16 (AddrMgr)
                                                   Segment part 16 (NLMEDE_CB)
                                                   Segment part 18 (aps_groups)
                                                   Segment part 19 (NLMEDE)
                                                   Segment part 22 (APS)
                                                   Segment part 23 (nwk_bufs)
                                                   Segment part 27 (mac_scan)
                                                   Segment part 28 (nwk)
                                                   Segment part 29 (mac_main)
                                                   Segment part 34 (mac_data)
                                                   Segment part 40 (APSMEDE)
                                                   Segment part 46 (mac_device)
                                                   Segment part 68 (APSMEDE)
                                                   Segment part 7 (APSMEDE_CB)
                                                   Segment part 73 (mac_mgmt)
                                                   Segment part 78 (nwk_util)
                                                   Segment part 8 (mac_pwr)
                                                   Ten_to_16 (menu_lcd)
                                                   UartRX_Receive_Char (wxl_uart)
                                                   Write595 (hal_lcd)
                                                   ZDO_PollConfirmCB (ZDApp)
                                                   delay1 (hal_lcd)
                                                   delay_us (hal_lcd)
                                                   getZMacDynamicSize (zmac_cb)
                                                   halAssertHandler (hal_assert)
                                                   macApiPwrOnReq (mac_pwr)
                                                   macBackoffTimerReset (mac_backoff_timer)
                                                   macFrameDuration (mac_data)
                                                   macMcuRandomByte (mac_mcu)
                                                   macMcuTimerCapture (mac_mcu)
                                                   macNoAction (mac_mgmt)
                                                   macPibIndex (mac_pib)
                                                   macPibReset (mac_pib)
                                                   macSleepWakeUp (mac_sleep)
                                                   nwk_Status (nwk_globals)
                                                   osal_int_disable (OSAL)
                                                   osal_int_enable (OSAL)
                                                   put_c_in_string (?sprintf)
                                                   radioComputeED (mac_radio)
                                                   strlen (?strlen)

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\chipcon_cexit.r51
  LIBRARY MODULE, NAME : ?cexit

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 000000A8 - 000000AC (0x5 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           exit                    000000A8        ?call_main (?cmain)
           ?ROM_MONITOR_NOPS       000000A8 

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\chipcon_cstartup.r51
  PROGRAM MODULE, NAME : CSTARTUP

  SEGMENTS IN THE MODULE
  ======================
REGISTERS
  Relative segment, address: DATA 00000000, align: 0
  Segment part 0.             Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?REGISTERS              00000000 
    -------------------------------------------------------------------------
ISTACK
  Relative segment, address: IDATA 00000040, align: 0
  Segment part 1.             Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ISTACK_START           00000040 
    -------------------------------------------------------------------------
XSTACK
  Relative segment, address: XDATA 0000E008, align: 0
  Segment part 3.             Intra module refs:   ?RESET_XSP
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSTACK_START           0000E008 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000002 (0x3 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   Segment part 6
           LOCAL                   ADDRESS         
           =====                   =======         
           ?reset_vector           00000000 
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000AD - 000000B2 (0x6 bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   ?reset_vector
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __program_start         000000AD        Absolute parts (?ABS_ENTRY_MOD)
           ?RESET_SP               000000B0 
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000B3 - 000000B8 (0x6 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?RESET_XSP              000000B3        ?XSP (VIRTUAL_REGISTERS)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000B9 - 000000B9 (0x1 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?RESET_CODE_BANK        000000B9        Absolute parts (?BANKED_CODE_SUPPORT)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000BA - 000000BC (0x3 bytes), align: 0
  Segment part 11.            Intra module refs:   Absolute parts
           LOCAL                   ADDRESS         
           =====                   =======         
           __call_main             000000BA 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : VIRTUAL_REGISTERS

  SEGMENTS IN THE MODULE
  ======================
BREG
  Relative segment, address: BIT 00000020.0 - 00000020.7 (0x8 bits), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?B0                     00000020.0      Absolute parts (CSTARTUP)
    -------------------------------------------------------------------------
VREG
  Relative segment, address: DATA 00000008, align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V0                     00000008        ?BANKED_ENTER_XDATA (?BANKED_ENTER_XDATA)
                                                   ?BANKED_LEAVE_XDATA (?BANKED_LEAVE_XDATA)
                                                   ?FUNC_ENTER_XDATA (?FUNC_ENTER_XDATA)
                                                   ?FUNC_LEAVE_XDATA (?FUNC_LEAVE_XDATA)
                                                   ?INTERRUPT_ENTER_XSP (?INTERRUPT_ENTER_XSP)
                                                   ?INTERRUPT_LEAVE_XSP (?INTERRUPT_LEAVE_XSP)
                                                   ?Subroutine0 (OSAL_Nv)
                                                   ?Subroutine0 (ZGlobals)
                                                   ?Subroutine0 (hal_lcd)
                                                   ?Subroutine0 (mac_backoff_timer)
                                                   ?Subroutine0 (mac_mcu)
                                                   ?Subroutine0 (zmac_cb)
                                                   ?Subroutine1 (MTEL)
                                                   ?Subroutine1 (OSAL)
                                                   ?Subroutine1 (ZDObject)
                                                   ?Subroutine1 (mac_mcu)
                                                   ?Subroutine1 (zmac_cb)
                                                   ?Subroutine10 (ZDApp)
                                                   ?Subroutine10 (ZDProfile)
                                                   ?Subroutine10 (hal_uart)
                                                   ?Subroutine11 (MTEL)
                                                   ?Subroutine12 (OSAL_Nv)
                                                   ?Subroutine12 (ZDObject)
                                                   ?Subroutine12 (mac_rx)
                                                   ?Subroutine13 (OSAL_Nv)
                                                   ?Subroutine13 (ZDApp)
                                                   ?Subroutine13 (ZDProfile)
                                                   ?Subroutine14 (hal_uart)
                                                   ?Subroutine14 (menu_lcd)
                                                   ?Subroutine15 (OSAL)
                                                   ?Subroutine15 (mac_rx)
                                                   ?Subroutine16 (ZDApp)
                                                   ?Subroutine19 (OSAL_Nv)
                                                   ?Subroutine2 (MTEL)
                                                   ?Subroutine2 (OSAL_Nv)
                                                   ?Subroutine2 (hal_lcd)
                                                   ?Subroutine2 (hal_led)
                                                   ?Subroutine2 (mac_backoff_timer)
                                                   ?Subroutine21 (OSAL_Nv)
                                                   ?Subroutine21 (ZDApp)
                                                   ?Subroutine21 (ZDProfile)
                                                   ?Subroutine22 (AF)
                                                   ?Subroutine25 (ZDProfile)
                                                   ?Subroutine3 (OSAL_Nv)
                                                   ?Subroutine3 (ZDApp)
                                                   ?Subroutine3 (menu_lcd)
                                                   ?Subroutine3 (zmac_cb)
                                                   ?Subroutine30 (OSAL_Nv)
                                                   ?Subroutine30 (ZDProfile)
                                                   ?Subroutine34 (OSAL_Nv)
                                                   ?Subroutine38 (OSAL_Nv)
                                                   ?Subroutine4 (ZDObject)
                                                   ?Subroutine4 (zmac_cb)
                                                   ?Subroutine42 (OSAL_Nv)
                                                   ?Subroutine43 (OSAL_Nv)
                                                   ?Subroutine47 (OSAL_Nv)
                                                   ?Subroutine48 (OSAL_Nv)
                                                   ?Subroutine49 (OSAL_Nv)
                                                   ?Subroutine5 (OSAL)
                                                   ?Subroutine5 (mac_mcu)
                                                   ?Subroutine5 (zmac_cb)
                                                   ?Subroutine57 (OSAL_Nv)
                                                   ?Subroutine59 (OSAL_Nv)
                                                   ?Subroutine6 (hal_led)
                                                   ?Subroutine7 (hal_lcd)
                                                   ?Subroutine7 (menu_lcd)
                                                   ?Subroutine7 (zmac_cb)
                                                   ?Subroutine73 (OSAL_Nv)
                                                   ?Subroutine8 (OSAL)
                                                   ?Subroutine8 (OSAL_Nv)
                                                   ?Subroutine8 (hal_lcd)
                                                   ?Subroutine8 (menu_lcd)
                                                   AF_DataRequest (AF)
                                                   APSDE_DataIndication (APSMEDE_CB)
                                                   APSDE_DataReq (APSMEDE)
                                                   APSDE_FrameAlloc (APSMEDE)
                                                   APSDE_FrameHdrInit (APSMEDE)
                                                   APSDE_FrameHdrSet (APSMEDE)
                                                   APSDE_ParseMsg (aps_util)
                                                   APSME_LookupNwkAddr (APSMEDE)
                                                   APS_CmdInd (APS)
                                                   APS_event_loop (APS)
                                                   Aboat_Driver (menu_lcd)
                                                   AddrMgrEntryLookupExt (AddrMgr)
                                                   AddrMgrExtAddrValid (AddrMgr)
                                                   ClearScreenLcd (menu_lcd)
                                                   DrawMenu (menu_lcd)
                                                   Frist_Data (SampleApp)
                                                   HalAdcRead (hal_adc)
                                                   HalKeyPoll (hal_key)
                                                   HalLedBlink (hal_led)
                                                   HalLedSet (hal_led)
                                                   HalLedUpdate (hal_led)
                                                   HalTimerConfig (hal_timer)
                                                   HalTimerStart (hal_timer)
                                                   HalUARTOpen (hal_uart)
                                                   HalUARTPoll (hal_uart)
                                                   HalUARTRead (hal_uart)
                                                   HalUARTWrite (hal_uart)
                                                   IEEE_menu (menu_lcd)
                                                   InitBoard (OnBoard)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MAC_McpsDataAlloc (mac_data)
                                                   MAC_MlmeGetReq (mac_pib)
                                                   MAC_MlmeResetReq (mac_mgmt)
                                                   MAC_MlmeSetReq (mac_pib)
                                                   MTProcessAppMsg (MTEL)
                                                   MTProcessAppRspMsg (MTEL)
                                                   MT_BuildAndSendZToolResponse (MTEL)
                                                   MT_BuildSPIMsg (MTEL)
                                                   MT_ProcessCommand (MTEL)
                                                   MT_ProcessDebugMsg (MTEL)
                                                   MT_ProcessDebugStr (MTEL)
                                                   MT_ProcessGetDeviceInfo (MTEL)
                                                   MT_ProcessGetNV (MTEL)
                                                   MT_ProcessGetNvInfo (MTEL)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   MT_ProcessSetNV (MTEL)
                                                   MT_Reset (MTEL)
                                                   MT_ReverseBytes (MTEL)
                                                   NLDE_BuildFrameControl (nwk_util)
                                                   NLDE_BuildMsg (nwk_util)
                                                   NLDE_DataCnf (NLMEDE_CB)
                                                   NLDE_DataIndication (NLMEDE_CB)
                                                   NLDE_DataReq (NLMEDE)
                                                   NLDE_DataReqAlloc (NLMEDE)
                                                   NLDE_DataReqSend (nwk_util)
                                                   NLDE_ParseFrameControl (nwk_util)
                                                   NLDE_ParseMsg (nwk_util)
                                                   NLDE_ParseMsg2 (nwk_util)
                                                   NLDE_SendMsg (nwk_util)
                                                   NLME_GetRequest (NLMEDE)
                                                   NLME_IsAddressBroadcast (nwk_util)
                                                   NLME_JoinRequest (NLMEDE)
                                                   NLME_LeaveCmdCnf (nwk_util)
                                                   NLME_LeaveCmdProcess (nwk_util)
                                                   NLME_NetworkDiscoveryRequest (NLMEDE)
                                                   NLME_OrphanJoinRequest (NLMEDE)
                                                   NLME_ReJoinRequest (NLMEDE)
                                                   NLME_RejoinRspCmdProcess (nwk_util)
                                                   NLME_SetRequest (NLMEDE)
                                                   PingpongTxTest (menu_lcd)
                                                   Print (hal_lcd)
                                                   Print8 (hal_lcd)
                                                   RTG_UpdateNeighborEntry (nwk_util)
                                                   ReadBattery_menu (menu_lcd)
                                                   SSP_NwkSecurity (ssp)
                                                   SampleApp_Init (SampleApp)
                                                   SampleApp_ProcessEvent (SampleApp)
                                                   Segment part 10 (APSMEDE_CB)
                                                   Segment part 10 (aps_util)
                                                   Segment part 11 (NLMEDE_CB)
                                                   Segment part 116 (APSMEDE)
                                                   Segment part 117 (APSMEDE)
                                                   Segment part 14 (mac_pib)
                                                   Segment part 16 (mac_pib)
                                                   Segment part 19 (nwk_util)
                                                   Segment part 22 (aps_util)
                                                   Segment part 24 (nwk_util)
                                                   Segment part 27 (?smallwr)
                                                   Segment part 27 (mac_timer)
                                                   Segment part 29 (?smallwr)
                                                   Segment part 29 (nwk_util)
                                                   Segment part 30 (NLMEDE)
                                                   Segment part 32 (ssp)
                                                   Segment part 35 (APS)
                                                   Segment part 35 (mac_main)
                                                   Segment part 36 (NLMEDE)
                                                   Segment part 36 (nwk_util)
                                                   Segment part 37 (mac_mgmt)
                                                   Segment part 38 (mac_main)
                                                   Segment part 40 (nwk)
                                                   Segment part 44 (APS)
                                                   Segment part 47 (NLMEDE)
                                                   Segment part 49 (NLMEDE)
                                                   Segment part 50 (APS)
                                                   Segment part 54 (AddrMgr)
                                                   Segment part 58 (AddrMgr)
                                                   Segment part 58 (nwk_util)
                                                   Segment part 59 (nwk_util)
                                                   Segment part 61 (nwk_util)
                                                   Segment part 63 (mac_data)
                                                   Segment part 63 (nwk_util)
                                                   Segment part 65 (nwk_util)
                                                   Segment part 66 (APS)
                                                   Segment part 69 (nwk)
                                                   Segment part 7 (aps_util)
                                                   Segment part 70 (mac_data)
                                                   Segment part 74 (nwk)
                                                   Segment part 84 (APSMEDE)
                                                   Segment part 92 (APSMEDE)
                                                   Segment part 97 (nwk_util)
                                                   SelectTxAddr (menu_lcd)
                                                   SendData (SampleApp)
                                                   Send_Broadcast (menu_lcd)
                                                   Short_menu (menu_lcd)
                                                   SingleTxTest (menu_lcd)
                                                   Temp_menu (menu_lcd)
                                                   Uart_Baud_rate (wxl_uart)
                                                   Uart_Pingpong (menu_lcd)
                                                   Uart_RX (menu_lcd)
                                                   Uart_Send (menu_lcd)
                                                   ZDApp_InMsgCB (ZDApp)
                                                   ZDApp_LeaveCtrlInit (ZDApp)
                                                   ZDApp_LeaveCtrlSet (ZDApp)
                                                   ZDApp_LeaveCtrlStartup (ZDApp)
                                                   ZDApp_MatchDescRspCB (ZDApp)
                                                   ZDApp_ProcessNetworkJoin (ZDApp)
                                                   ZDApp_ProcessOSALMsg (ZDApp)
                                                   ZDApp_SendMsg (ZDApp)
                                                   ZDApp_SendNewDstAddr (ZDApp)
                                                   ZDApp_event_loop (ZDApp)
                                                   ZDOInitDevice (ZDApp)
                                                   ZDO_AnyClusterMatches (ZDObject)
                                                   ZDO_CreateAlignedUINT16List (ZDObject)
                                                   ZDO_LeaveInd (ZDApp)
                                                   ZDO_NetworkDiscoveryConfirmCB (ZDApp)
                                                   ZDO_ProcessActiveEPReq (ZDObject)
                                                   ZDO_ProcessEPListRsp (ZDObject)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_ProcessNodeDescReq (ZDObject)
                                                   ZDO_ProcessPowerDescReq (ZDObject)
                                                   ZDO_ProcessSimpleDescReq (ZDObject)
                                                   ZDO_StartDevice (ZDObject)
                                                   ZDO_UpdateNwkStatus (ZDObject)
                                                   ZDP_EPRsp (ZDProfile)
                                                   ZDP_GenericRsp (ZDProfile)
                                                   ZDP_IncomingData (ZDProfile)
                                                   ZDP_NodeDescMsg (ZDProfile)
                                                   ZDP_PowerDescMsg (ZDProfile)
                                                   ZDP_SimpleDescMsg (ZDProfile)
                                                   ZMacDataReq (zmac)
                                                   ZMacScanReq (zmac)
                                                   ZMacSetReq (zmac)
                                                   _small_write (?smallwr)
                                                   afBuildMSGIncoming (AF)
                                                   afDataConfirm (AF)
                                                   afDataReqMTU (AF)
                                                   afFindSimpleDesc (AF)
                                                   afIncomingData (AF)
                                                   afRegister (AF)
                                                   afRegisterExtended (AF)
                                                   apsProcessAck (aps_util)
                                                   aps_AddGroup (aps_groups)
                                                   aps_GroupsWriteNV (aps_groups)
                                                   calcChkF (OSAL_Nv)
                                                   compactPage (OSAL_Nv)
                                                   fillAndSend (ZDProfile)
                                                   findItem (OSAL_Nv)
                                                   halAssertHazardLights (hal_assert)
                                                   halTimerSendCallBack (hal_timer)
                                                   halTimerSetCount (hal_timer)
                                                   halWait (wait)
                                                   initItem (OSAL_Nv)
                                                   initItem2 (OSAL_Nv)
                                                   initNV (OSAL_Nv)
                                                   initPage (OSAL_Nv)
                                                   macAllocTxBuffer (mac_data)
                                                   macApiDisassociateReq (mac_mgmt)
                                                   macApiScanReq (mac_scan)
                                                   macBackoffTimerCancelTrigger (mac_backoff_timer)
                                                   macBackoffTimerCapture (mac_backoff_timer)
                                                   macBackoffTimerCompareIsr (mac_backoff_timer)
                                                   macBackoffTimerCount (mac_backoff_timer)
                                                   macBackoffTimerInit (mac_backoff_timer)
                                                   macBackoffTimerRolloverCallback (mac_timer)
                                                   macBackoffTimerSetRollover (mac_backoff_timer)
                                                   macBackoffTimerSetTrigger (mac_backoff_timer)
                                                   macBackoffTimerTriggerCallback (mac_timer)
                                                   macBuildBeaconNotifyInd (mac_mgmt)
                                                   macBuildCommonReq (mac_mgmt)
                                                   macBuildHeader (mac_mgmt)
                                                   macCbackForEvent (mac_main)
                                                   macCspTxRequestAckTimeoutCallback (mac_csp_tx)
                                                   macDataTxSend (mac_data)
                                                   macEventLoop (mac_main)
                                                   macExecute (mac_main)
                                                   macFrameDuration (mac_data)
                                                   macMcuOverflowSetCompare (mac_mcu)
                                                   macMcuOverflowSetCount (mac_mcu)
                                                   macMemReadRxFifo (mac_mem)
                                                   macMemWriteTxFifo (mac_mem)
                                                   macRadioSetTxPower (mac_radio)
                                                   macRxAssocRsp (mac_device)
                                                   macRxCompleteCallback (mac_data)
                                                   macRxDisassoc (mac_mgmt)
                                                   macScanCnfInit (mac_scan)
                                                   macScanNextChan (mac_scan)
                                                   macScanRxBeacon (mac_scan)
                                                   macScanRxCoordRealign (mac_scan)
                                                   macScanStartTimer (mac_scan)
                                                   macSendDataMsg (mac_main)
                                                   macSendMsg (mac_main)
                                                   macStartFrameResponseTimer (mac_device)
                                                   macStartResponseTimer (mac_device)
                                                   macTimer (mac_timer)
                                                   macTimerAddTimer (mac_timer)
                                                   macTimerCancel (mac_timer)
                                                   macTimerRecalcUnaligned (mac_timer)
                                                   macTimerUpdateBackoffTimer (mac_timer)
                                                   macTxAckReceivedCallback (mac_tx)
                                                   macTxTimestampCallback (mac_tx)
                                                   main (ZMain)
                                                   memcpy (?memcpy)
                                                   nwkDB_Add (nwk_bufs)
                                                   nwkDB_CreateHdr (nwk_bufs)
                                                   nwkDB_FindMatch (nwk_bufs)
                                                   nwk_BeaconFromNative (nwk)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
                                                   nwk_ScanJoiningOrphan (nwk)
                                                   nwk_beacon_notify_ind_processing (nwk)
                                                   nwk_data_cnf_processing (nwk)
                                                   nwk_data_ind_processing (nwk)
                                                   nwk_data_req_send (nwk)
                                                   nwk_event_loop (nwk)
                                                   nwk_getNetworkDesc (nwk)
                                                   osalAddTasks (OSAL_SampleApp)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalTaskAdd (OSAL_Tasks)
                                                   osalTimerInit (OSAL_Timers)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_ExtAddrEqual (OSAL)
                                                   osal_GetSystemClock (OSAL_Timers)
                                                   osal_build_uint32 (OSAL)
                                                   osal_cpyExtAddr (OSAL)
                                                   osal_get_timeoutEx (OSAL_Timers)
                                                   osal_mem_alloc (OSAL_Memory)
                                                   osal_memcpy (OSAL)
                                                   osal_memset (OSAL)
                                                   osal_msg_allocate (OSAL)
                                                   osal_msg_dequeue (OSAL)
                                                   osal_msg_enqueue_max (OSAL)
                                                   osal_msg_extract (OSAL)
                                                   osal_msg_receive (OSAL)
                                                   osal_msg_send (OSAL)
                                                   osal_nv_item_init (OSAL_Nv)
                                                   osal_nv_item_len (OSAL_Nv)
                                                   osal_nv_read (OSAL_Nv)
                                                   osal_nv_write (OSAL_Nv)
                                                   osal_start_system (OSAL)
                                                   osal_start_timerEx (OSAL_Timers)
                                                   osal_stop_timerEx (OSAL_Timers)
                                                   osal_timer_hw_setup (OSAL_Timers)
                                                   pollDMA (hal_uart)
                                                   readHdr (OSAL_Nv)
                                                   rxFcsIsr (mac_rx)
                                                   rxStartIsr (mac_rx)
                                                   sAddrExtCmp (saddr)
                                                   sAddrExtCpy (saddr)
                                                   setItem (OSAL_Nv)
                                                   sprintf (?sprintf)
                                                   txCsmaPrep (mac_tx)
                                                   writeBuf (OSAL_Nv)
                                                   writeItem (OSAL_Nv)
                                                   writeWord (OSAL_Nv)
                                                   writeWordD (OSAL_Nv)
                                                   xferBuf (OSAL_Nv)
                                                   zdpProcessAddrReq (ZDProfile)
                                                   zgInit (ZGlobals)
                                                   zgReadStartupOptions (ZGlobals)
                                                   zgWriteStartupOptions (ZGlobals)
                                                   zmain_ext_addr (ZMain)
    -------------------------------------------------------------------------
XSP
  Relative segment, address: DATA 00000010 - 00000011 (0x2 bytes), align: 0
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSP                    00000010        ?ADD_XSTACK_DISP0_8 (?ADD_XSTACK_DISP8)
                                                   ?ALLOC_XSTACK8 (?ALLOC_XSTACK8)
                                                   ?BANKED_ENTER_XDATA (?BANKED_ENTER_XDATA)
                                                   ?BANKED_LEAVE_XDATA (?BANKED_LEAVE_XDATA)
                                                   ?DEALLOC_XSTACK8 (?DEALLOC_XSTACK8)
                                                   ?FUNC_ENTER_XDATA (?FUNC_ENTER_XDATA)
                                                   ?FUNC_LEAVE_XDATA (?FUNC_LEAVE_XDATA)
                                                   ?INTERRUPT_ENTER_XSP (?INTERRUPT_ENTER_XSP)
                                                   ?INTERRUPT_LEAVE_XSP (?INTERRUPT_LEAVE_XSP)
                                                   ?PUSH_XSTACK8_C (?PUSH_XSTACK8_C)
                                                   ?PUSH_XSTACK8_X (?PUSH_XSTACK8_X)
                                                   ?RESET_XSP (CSTARTUP)
                                                   ?Subroutine0 (ZGlobals)
                                                   ?Subroutine0 (mac_mcu)
                                                   ?Subroutine1 (MTEL)
                                                   ?Subroutine1 (OSAL_Nv)
                                                   ?Subroutine1 (ZDApp)
                                                   ?Subroutine11 (AF)
                                                   ?Subroutine11 (OSAL_Nv)
                                                   ?Subroutine13 (AF)
                                                   ?Subroutine13 (MTEL)
                                                   ?Subroutine15 (OSAL_Nv)
                                                   ?Subroutine15 (menu_lcd)
                                                   ?Subroutine2 (ZDObject)
                                                   ?Subroutine28 (OSAL_Nv)
                                                   ?Subroutine29 (OSAL_Nv)
                                                   ?Subroutine3 (hal_led)
                                                   ?Subroutine30 (OSAL_Nv)
                                                   ?Subroutine4 (MTEL)
                                                   ?Subroutine4 (hal_lcd)
                                                   ?Subroutine5 (MTEL)
                                                   ?Subroutine53 (OSAL_Nv)
                                                   ?Subroutine6 (AF)
                                                   ?Subroutine6 (MTEL)
                                                   ?Subroutine7 (MTEL)
                                                   ?Subroutine8 (MTEL)
                                                   ?Subroutine8 (mac_rx)
                                                   ?Subroutine9 (hal_uart)
                                                   ?XSTACK_DISP0_8 (?XSTACK_DISP8)
                                                   AF_DataRequest (AF)
                                                   APSDE_DataIndication (APSMEDE_CB)
                                                   APSDE_DataReq (APSMEDE)
                                                   APSDE_FrameAlloc (APSMEDE)
                                                   APSME_LookupNwkAddr (APSMEDE)
                                                   AddrMgrNwkAddrLookup (AddrMgr)
                                                   HalAdcInit (hal_adc)
                                                   HalAdcRead (hal_adc)
                                                   HalLedBlink (hal_led)
                                                   HalLedUpdate (hal_led)
                                                   IEEE_menu (menu_lcd)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MTProcessAppMsg (MTEL)
                                                   MT_ProcessDebugMsg (MTEL)
                                                   MT_ProcessGetNvInfo (MTEL)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   NLDE_DataIndication (NLMEDE_CB)
                                                   NLDE_DataReqSend (nwk_util)
                                                   NLDE_SendMsg (nwk_util)
                                                   NLME_CmdCnf (nwk_util)
                                                   NLME_GetCoordShortAddr (nwk_util)
                                                   NLME_GetProtocolVersion (nwk_util)
                                                   NLME_JoinRequest (NLMEDE)
                                                   NLME_LeaveCmdCnf (nwk_util)
                                                   NLME_LeaveCmdProcess (nwk_util)
                                                   NwkPollReq (nwk)
                                                   PingpongTxTest (menu_lcd)
                                                   SPIMgr_Init (SPIMgr)
                                                   Segment part 109 (nwk_util)
                                                   Segment part 110 (nwk_util)
                                                   Segment part 143 (APSMEDE)
                                                   Segment part 15 (mac_device)
                                                   Segment part 190 (APSMEDE)
                                                   Segment part 232 (APSMEDE)
                                                   Segment part 24 (?smallwr)
                                                   Segment part 24 (aps_util)
                                                   Segment part 24 (mac_scan)
                                                   Segment part 25 (mac_scan)
                                                   Segment part 35 (nwk)
                                                   Segment part 38 (mac_main)
                                                   Segment part 39 (nwk)
                                                   Segment part 40 (nwk)
                                                   Segment part 41 (NLMEDE)
                                                   Segment part 41 (mac_main)
                                                   Segment part 59 (mac_mgmt)
                                                   Segment part 65 (mac_mgmt)
                                                   SelectTxAddr (menu_lcd)
                                                   SendData (SampleApp)
                                                   ZDAppSetupProtoVersion (ZDApp)
                                                   ZDApp_Init (ZDApp)
                                                   ZDApp_ProcessNetworkJoin (ZDApp)
                                                   ZDApp_SendNewDstAddr (ZDApp)
                                                   ZDOInitDevice (ZDApp)
                                                   ZDO_NetworkDiscoveryConfirmCB (ZDApp)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_ProcessSimpleDescReq (ZDObject)
                                                   ZDO_StartDevice (ZDObject)
                                                   ZDP_EPRsp (ZDProfile)
                                                   ZDP_GenericRsp (ZDProfile)
                                                   ZDP_IncomingData (ZDProfile)
                                                   ZDP_NodeDescMsg (ZDProfile)
                                                   ZDP_PowerDescMsg (ZDProfile)
                                                   ZDP_SimpleDescMsg (ZDProfile)
                                                   ZMacReset (zmac)
                                                   _small_write (?smallwr)
                                                   afBuildMSGIncoming (AF)
                                                   afIncomingData (AF)
                                                   apsGenerateAck (aps_util)
                                                   apsProcessAck (aps_util)
                                                   aps_GroupsWriteNV (aps_groups)
                                                   calcChkF (OSAL_Nv)
                                                   compactPage (OSAL_Nv)
                                                   fillAndSend (ZDProfile)
                                                   halAssertHazardLights (hal_assert)
                                                   initNV (OSAL_Nv)
                                                   initPage (OSAL_Nv)
                                                   macAssocDataReq (mac_device)
                                                   macAssociateCnf (mac_device)
                                                   macBuildHeader (mac_mgmt)
                                                   macCbackForEvent (mac_main)
                                                   macCommStatusInd (mac_mgmt)
                                                   macConflictSyncLossInd (mac_mgmt)
                                                   macEventLoop (mac_main)
                                                   macMcuOverflowCapture (mac_mcu)
                                                   macMcuOverflowCount (mac_mcu)
                                                   macMcuOverflowSetCompare (mac_mcu)
                                                   macMcuOverflowSetCount (mac_mcu)
                                                   macPollCnf (mac_device)
                                                   macRxAssocRsp (mac_device)
                                                   macRxBeacon (mac_mgmt)
                                                   macRxCoordRealign (mac_device)
                                                   macScanFailedInProgress (mac_scan)
                                                   macScanNextChan (mac_scan)
                                                   macScanRxBeacon (mac_scan)
                                                   macStartFrameResponseTimer (mac_device)
                                                   nwk_ScanJoiningOrphan (nwk)
                                                   nwk_associate_cnf_processing (nwk)
                                                   nwk_beacon_notify_ind_processing (nwk)
                                                   nwk_data_cnf_processing (nwk)
                                                   nwk_data_ind_processing (nwk)
                                                   nwk_getNetworkDesc (nwk)
                                                   osalTaskAdd (OSAL_Tasks)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_nv_item_len (OSAL_Nv)
                                                   osal_nv_read (OSAL_Nv)
                                                   osal_nv_write (OSAL_Nv)
                                                   readHdr (OSAL_Nv)
                                                   rxAddrIsr (mac_rx)
                                                   rxStartIsr (mac_rx)
                                                   setItem (OSAL_Nv)
                                                   setPageUse (OSAL_Nv)
                                                   sprintf (?sprintf)
                                                   writeBuf (OSAL_Nv)
                                                   writeItem (OSAL_Nv)
                                                   writeWordH (OSAL_Nv)
                                                   xferBuf (OSAL_Nv)
                                                   zdpProcessAddrReq (ZDProfile)
                                                   zgReadStartupOptions (ZGlobals)
                                                   zgWriteStartupOptions (ZGlobals)

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\flashDmaTrigger.r51
  LIBRARY MODULE, NAME : flashDmaTrigger

Absolute parts
           LOCAL                   ADDRESS         
           =====                   =======         
           __KEIL__                00000000 
  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000144 - 00000147 (0x4 bytes), align: 2
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halFlashDmaTrigger      00000144        writeWord (OSAL_Nv)

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\hal_adc.r51
  PROGRAM MODULE, NAME : hal_adc

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000B4 - 000000B4 (0x1 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCCON1                 000000B4 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000B5 - 000000B5 (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCCON2                 000000B5 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000B6 - 000000B6 (0x1 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCCON3                 000000B6 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BA - 000000BA (0x1 bytes), align: 0
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCL                    000000BA 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BB - 000000BB (0x1 bytes), align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCH                    000000BB 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F2 - 000000F2 (0x1 bytes), align: 0
  Segment part 7. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCCFG                  000000F2 
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000021CE - 000021DF (0x12 bytes), align: 0
  Segment part 13.            Intra module refs:   HalAdcCheckVdd
           LOCAL                   ADDRESS         
           =====                   =======         
           HalAdcVddLimit          000021CE 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00016208 - 00016245 (0x3e bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAdcInit              00016208        HalDriverInit (hal_drivers)
               stack 1 = 00000000 ( 00000003 )
               stack 2 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00016246 - 0001624C (0x7 bytes), align: 0
  Segment part 15.            Intra module refs:   HalAdcCheckVdd
                                                   HalAdcInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00016246 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001624D - 00016303 (0xb7 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAdcRead              0001624D        HalKeyPoll (hal_key)
                                                   zmain_ext_addr (ZMain)
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00016304 - 00016346 (0x43 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAdcCheckVdd          00016304        ?Subroutine37 (OSAL_Nv)
                                                   zmain_vdd_check (ZMain)
               stack 1 = 00000000 ( 00000002 )

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\hal_assert.r51
  PROGRAM MODULE, NAME : hal_assert

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000091 - 00000091 (0x1 bytes), align: 0
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFIM                    00000091 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015F47 - 00015F59 (0x13 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halAssertHandler        00015F47        cspPrepForTxProgram (mac_csp_tx)
                                                   macBackoffTimerSetRollover (mac_backoff_timer)
                                                   macBackoffTimerSetTrigger (mac_backoff_timer)
                                                   macBackoffTimerTriggerCallback (mac_timer)
                                                   macCspTxRequestAckTimeoutCallback (mac_csp_tx)
                                                   macCspTxStopIsr (mac_csp_tx)
                                                   macLowLevelReset (mac_low_level)
                                                   macMcuAndT2PEROF2 (mac_mcu)
                                                   macMcuInit (mac_mcu)
                                                   macMcuOrT2PEROF2 (mac_mcu)
                                                   macMcuOverflowSetCompare (mac_mcu)
                                                   macMcuOverflowSetCount (mac_mcu)
                                                   macMemReadRxFifo (mac_mem)
                                                   macMemWriteTxFifo (mac_mem)
                                                   macRadioSetChannel (mac_radio)
                                                   macRadioStartScan (mac_radio)
                                                   macRadioUpdateChannel (mac_radio)
                                                   macRxDisable (mac_rx_onoff)
                                                   macRxEnable (mac_rx_onoff)
                                                   macRxPromiscuousMode (mac_rx)
                                                   macRxSoftEnable (mac_rx_onoff)
                                                   macSleepWakeUp (mac_sleep)
                                                   macTimerRecalcUnaligned (mac_timer)
                                                   macTxChannelBusyCallback (mac_tx)
                                                   macTxFrame (mac_tx)
                                                   macTxStartQueuedFrame (mac_tx)
                                                   macTxTimestampCallback (mac_tx)
                                                   rxAddrIsr (mac_rx)
                                                   rxDiscardFrame (mac_rx)
                                                   rxStartIsr (mac_rx)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015F5A - 000160A4 (0x14b bytes), align: 0
  Segment part 20.            Intra module refs:   halAssertHandler
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halAssertHazardLights   00015F5A 
               stack 1 = 00000002 ( 00000002 )
               stack 2 = 00000000 ( 00000015 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000160A5 - 000160B9 (0x15 bytes), align: 0
  Segment part 21.            Intra module refs:   halAssertHazardLights
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            000160A5 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EE04 - 0000EE04 (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   halAssertHazardLights
           LOCAL                   ADDRESS         
           =====                   =======         
           halAssertHazardLights{7}{8}{18}::escape
                                   0000EE04 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F0CB - 0000F0CE (0x4 bytes), align: 0
  Segment part 17.            Intra module refs:   halAssertHazardLights
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_5800         0000F0CB 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001621 - 00001624 (0x4 bytes), align: 0
  Segment part 18.            Intra module refs:   __Constant_5800

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\hal_dma.r51
  PROGRAM MODULE, NAME : hal_dma

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000D2 - 000000D2 (0x1 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMA1CFGL                000000D2 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D3 - 000000D3 (0x1 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMA1CFGH                000000D3 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D4 - 000000D4 (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMA0CFGL                000000D4 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D5 - 000000D5 (0x1 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMA0CFGH                000000D5 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EE05 - 0000EE0C (0x8 bytes), align: 0
  Segment part 10.            Intra module refs:   HalDmaInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dmaCh0                  0000EE05        osal_nv_init (OSAL_Nv)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EE0D - 0000EE2C (0x20 bytes), align: 0
  Segment part 11.            Intra module refs:   HalDmaInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dmaCh1234               0000EE0D        ?Subroutine8 (hal_uart)
                                                   ?Subroutine9 (hal_uart)
                                                   HalUARTInit (hal_uart)
                                                   aesDmaInit (hal_aes)
                                                   pollDMA (hal_uart)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00016BFB - 00016C0B (0x11 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalDmaInit              00016BFB        HalDriverInit (hal_drivers)

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\hal_drivers.r51
  PROGRAM MODULE, NAME : hal_drivers

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000EE2D - 0000EE2D (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   Hal_Init
                                                   Hal_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_TaskID              0000EE2D        HalKeyConfig (hal_key)
                                                   HalLedBlink (hal_led)
                                                   halProcessKeyInterrupt (hal_key)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00016666 - 00016670 (0xb bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_Init                00016666        osalAddTasks (OSAL_SampleApp)
               is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00016671 - 000166B1 (0x41 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalDriverInit           00016671        main (ZMain)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000166B2 - 000166BB (0xa bytes), align: 0
  Segment part 9.             Intra module refs:   HalDriverInit
                                                   Hal_Init
                                                   Hal_ProcessPoll
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            000166B2 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000166BC - 0001673A (0x7f bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_ProcessEvent        000166BC        osalAddTasks (OSAL_SampleApp)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001673B - 0001674E (0x14 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_ProcessPoll         0001673B        osal_start_system (OSAL)
               calls direct
               stack 1 = 00000000 ( 00000002 )

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\hal_key.r51
  PROGRAM MODULE, NAME : hal_key

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000089 - 00000089 (0x1 bytes), align: 0
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0IFG                   00000089 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000008C - 0000008C (0x1 bytes), align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PICTL                   0000008C 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EE2E - 0000EE2E (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   HalKeyInit
                                                   HalKeyPoll
           LOCAL                   ADDRESS         
           =====                   =======         
           halKeySavedKeys         0000EE2E 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EE2F - 0000EE31 (0x3 bytes), align: 0
  Segment part 19.            Intra module refs:   HalKeyConfig
                                                   HalKeyInit
                                                   HalKeyPoll
           LOCAL                   ADDRESS         
           =====                   =======         
           pHalKeyProcessFunction
                                   0000EE2F 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EE32 - 0000EE32 (0x1 bytes), align: 0
  Segment part 20.            Intra module refs:   HalKeyConfig
                                                   HalKeyPoll
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_KeyIntEnable        0000EE32        Hal_ProcessEvent (hal_drivers)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EE33 - 0000EE33 (0x1 bytes), align: 0
  Segment part 22.            Intra module refs:   HalKeyConfig
                                                   HalKeyInit
           LOCAL                   ADDRESS         
           =====                   =======         
           HalKeyConfigured        0000EE33 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015DC3 - 00015DE6 (0x24 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyInit              00015DC3        HalDriverInit (hal_drivers)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015DE7 - 00015DED (0x7 bytes), align: 0
  Segment part 24.            Intra module refs:   HalKeyInit
                                                   halProcessKeyInterrupt
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            00015DE7 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015DEE - 00015E67 (0x7a bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyConfig            00015DEE        InitBoard (OnBoard)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000003 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015E68, align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyRead              00015E68        ZDAppCheckForHoldKey (ZDApp)
                                                   zmain_ext_addr (ZMain)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015E68 - 00015E6C (0x5 bytes), align: 0
  Segment part 27.            Intra module refs:   HalKeyRead
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            00015E68 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015E6D - 00015F07 (0x9b bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyPoll              00015E6D        Hal_ProcessEvent (hal_drivers)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015F08 - 00015F10 (0x9 bytes), align: 0
  Segment part 29.            Intra module refs:   HalKeyConfig
                                                   HalKeyPoll
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00015F08 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00015F11 - 00015F46 (0x36 bytes), align: 0
  Segment part 31.            Intra module refs:   halKeyPort0Isr
                                                   halKeyPort1Isr
                                                   halKeyPort2Isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halProcessKeyInterrupt
                                   00015F11 
               calls direct
               stack 1 = 0000000F ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000010B6 - 000010D2 (0x1d bytes), align: 0
  Segment part 34.            Intra module refs:   halKeyPort0Isr::??INTVEC 107
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halKeyPort0Isr          000010B6 
               interrupt function
               calls direct
               stack 1 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000010D3 - 000010D7 (0x5 bytes), align: 0
  Segment part 35.            Intra module refs:   halKeyPort0Isr
                                                   halKeyPort1Isr
                                                   halKeyPort2Isr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            000010D3 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000010D8 - 000010FE (0x27 bytes), align: 0
  Segment part 36.            Intra module refs:   halKeyPort1Isr::??INTVEC 123
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halKeyPort1Isr          000010D8 
               interrupt function
               calls direct
               stack 1 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000010FF - 00001125 (0x27 bytes), align: 0
  Segment part 37.            Intra module refs:   halKeyPort2Isr::??INTVEC 51
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halKeyPort2Isr          000010FF 
               interrupt function
               calls direct
               stack 1 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000035 (0x36 bytes), align: 0
  Segment part 10. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halKeyPort2Isr::??INTVEC 51
                                   00000033 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000006D (0x6e bytes), align: 0
  Segment part 11. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halKeyPort0Isr::??INTVEC 107
                                   0000006B 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000007D (0x7e bytes), align: 0
  Segment part 12. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halKeyPort1Isr::??INTVEC 123
                                   0000007B 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000B8 - 000000B8 (0x1 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN1                 000000B8 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C0 - 000000C0 (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IRCON                000000C0 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E8 - 000000E8 (0x1 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IRCON2               000000E8 

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\hal_lcd.r51
  PROGRAM MODULE, NAME : hal_lcd

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000FF - 000000FF (0x1 bytes), align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2DIR                   000000FF 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F0CF - 0000F0CF (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   HalLcdInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ContrastValue           0000F0CF 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012081 - 0001208D (0xd bytes), align: 0
  Segment part 16.            Intra module refs:   WriteLCD
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           delay1                  00012081 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000009 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001208E - 000120BA (0x2d bytes), align: 0
  Segment part 17.            Intra module refs:   HalLcdInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           delay_us                0001208E 
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000009 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000120BB - 000120D9 (0x1f bytes), align: 0
  Segment part 18.            Intra module refs:   WriteLCD
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Write595                000120BB 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000009 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000120DA - 00012115 (0x3c bytes), align: 0
  Segment part 19.            Intra module refs:   ?Subroutine10
                                                   ClearScreen
                                                   HalLcdInit
                                                   Print8
                                                   SetContrast
                                                   SetRamAddr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WriteLCD                000120DA 
               calls direct
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000010 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012116 - 00012123 (0xe bytes), align: 0
  Segment part 20.            Intra module refs:   ClearScreen
                                                   SetContrast
                                                   SetRamAddr
                                                   WriteLCD
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           00012116 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012124 - 0001214C (0x29 bytes), align: 0
  Segment part 21.            Intra module refs:   ClearScreen
                                                   Print8
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SetRamAddr              00012124 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000010 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001214D - 00012170 (0x24 bytes), align: 0
  Segment part 22.            Intra module refs:   HalLcdInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SetContrast             0001214D 
               calls direct
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012171 - 0001217A (0xa bytes), align: 0
  Segment part 24.            Intra module refs:   HalLcdInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            00012171 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001217B - 000121A9 (0x2f bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ClearScreen             0001217B        Aboat_Driver (menu_lcd)
                                                   ClearScreenLcd (menu_lcd)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000121AA - 0001231F (0x176 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdInit              000121AA        HalDriverInit (hal_drivers)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012320 - 00012324 (0x5 bytes), align: 0
  Segment part 31.            Intra module refs:   ?Subroutine8
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine12           00012320 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012325 - 000123F0 (0xcc bytes), align: 0
  Segment part 34.            Intra module refs:   Print
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Print8                  00012325 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000001A ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000123F1 - 000123F5 (0x5 bytes), align: 0
  Segment part 35.            Intra module refs:   Print
                                                   Print8
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           000123F1 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000123F6 - 000123F9 (0x4 bytes), align: 0
  Segment part 36.            Intra module refs:   Print8
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            000123F6 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000123FA - 00012406 (0xd bytes), align: 0
  Segment part 37.            Intra module refs:   ?Subroutine5
                                                   ?Subroutine6
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            000123FA 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012407 - 0001240B (0x5 bytes), align: 0
  Segment part 38.            Intra module refs:   Print8
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            00012407 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001240C - 00012415 (0xa bytes), align: 0
  Segment part 39.            Intra module refs:   Print8
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0001240C 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012416 - 00012422 (0xd bytes), align: 0
  Segment part 40.            Intra module refs:   Print8
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            00012416 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012423 - 0001242D (0xb bytes), align: 0
  Segment part 41.            Intra module refs:   Print8
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00012423 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001242E - 0001243C (0xf bytes), align: 0
  Segment part 42.            Intra module refs:   ?Subroutine0
                                                   Print8
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            0001242E 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001243D - 000124EA (0xae bytes), align: 0
  Segment part 43.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Print                   0001243D        ?Subroutine14 (menu_lcd)
                                                   Aboat_Driver (menu_lcd)
                                                   ClearScreenLcd (menu_lcd)
                                                   PingpongTxTest (menu_lcd)
                                                   ReadBattery_menu (menu_lcd)
                                                   SelectTxAddr (menu_lcd)
                                                   Send_Broadcast (menu_lcd)
                                                   SingleTxTest (menu_lcd)
                                                   Temp_menu (menu_lcd)
                                                   Uart_Pingpong (menu_lcd)
                                                   Uart_RX (menu_lcd)
                                                   Uart_Send (menu_lcd)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000002 ( 00000016 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000124EB - 000124F3 (0x9 bytes), align: 0
  Segment part 44.            Intra module refs:   Print
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            000124EB 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001625 - 00001625 (0x1 bytes), align: 0
  Segment part 13.            Intra module refs:   ContrastValue
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A0 - 000000A0 (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P2                   000000A0 

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\hal_led.r51
  PROGRAM MODULE, NAME : hal_led

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000EE34 - 0000EE34 (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   HalLedBlink
                                                   HalLedOnOff
                                                   HalLedSet
           LOCAL                   ADDRESS         
           =====                   =======         
           HalLedState             0000EE34 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EE35 - 0000EE35 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   HalLedBlink
                                                   HalLedUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           preBlinkState           0000EE35 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EE36 - 0000EE5A (0x25 bytes), align: 0
  Segment part 10.            Intra module refs:   ?Subroutine10
                                                   HalLedBlink
                                                   HalLedSet
                                                   HalLedUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           HalLedStatusControl     0000EE36 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00011288 - 00011297 (0x10 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedInit              00011288        HalDriverInit (hal_drivers)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00011298 - 0001131F (0x88 bytes), align: 0
  Segment part 14.            Intra module refs:   HalLedBlink
                                                   HalLedInit
                                                   HalLedUpdate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedSet               00011298        InitBoard (OnBoard)
                                                   MTProcessLedControl (MTEL)
                                                   ZDApp_EndDeviceBindRsp (ZDApp)
                                                   ZDApp_MatchDescRspCB (ZDApp)
                                                   ZDO_JoinConfirmCB (ZDApp)
                                                   zmain_ext_addr (ZMain)
               calls direct, is recursive
               stack 1 = 00000002 ( 00000001 )
               stack 2 = 0000001A ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00011320 - 00011440 (0x121 bytes), align: 0
  Segment part 15.            Intra module refs:   HalLedSet
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedBlink             00011320        Frist_Data (SampleApp)
                                                   ZDApp_Init (ZDApp)
               calls direct, is recursive
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000B ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00011441 - 00011448 (0x8 bytes), align: 0
  Segment part 16.            Intra module refs:   HalLedBlink
                                                   HalLedUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           00011441 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00011449 - 00011451 (0x9 bytes), align: 0
  Segment part 17.            Intra module refs:   HalLedBlink
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            00011449 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00011452 - 000116A7 (0x256 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedUpdate            00011452        Hal_ProcessEvent (hal_drivers)
               calls direct
               stack 1 = 00000002 ( 00000002 )
               stack 2 = 00000000 ( 0000001A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000116A8 - 000116B1 (0xa bytes), align: 0
  Segment part 19.            Intra module refs:   HalLedUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            000116A8 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000116B2 - 000116B5 (0x4 bytes), align: 0
  Segment part 20.            Intra module refs:   HalLedUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            000116B2 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000116B6 - 000116BF (0xa bytes), align: 0
  Segment part 21.            Intra module refs:   ?Subroutine4
                                                   ?Subroutine5
                                                   HalLedUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            000116B6 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000116C0 - 000116C5 (0x6 bytes), align: 0
  Segment part 22.            Intra module refs:   HalLedUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            000116C0 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000116C6 - 000116D3 (0xe bytes), align: 0
  Segment part 23.            Intra module refs:   HalLedUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            000116C6 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000116D4 - 000116DD (0xa bytes), align: 0
  Segment part 24.            Intra module refs:   HalLedUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            000116D4 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000116DE - 000116E7 (0xa bytes), align: 0
  Segment part 25.            Intra module refs:   ?Subroutine2
                                                   HalLedUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            000116DE 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000116E8 - 0001173F (0x58 bytes), align: 0
  Segment part 26.            Intra module refs:   ?Subroutine3
                                                   HalLedSet
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedOnOff             000116E8 
               stack 1 = 00000002 ( 00000002 )
               stack 2 = 0000001A ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00011740 - 0001174E (0xf bytes), align: 0
  Segment part 27.            Intra module refs:   HalLedInit
                                                   HalLedOnOff
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           00011740 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F0D0 - 0000F0D3 (0x4 bytes), align: 0
  Segment part 11.            Intra module refs:   HalLedUpdate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_64           0000F0D0 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001626 - 00001629 (0x4 bytes), align: 0
  Segment part 12.            Intra module refs:   __Constant_64

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\hal_sleep.r51
  PROGRAM MODULE, NAME : hal_sleep

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000087 - 00000087 (0x1 bytes), align: 0
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PCON                    00000087 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000095 - 00000095 (0x1 bytes), align: 0
  Segment part 7. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ST0                     00000095 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000096 - 00000096 (0x1 bytes), align: 0
  Segment part 8. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ST1                     00000096 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000097 - 00000097 (0x1 bytes), align: 0
  Segment part 9. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ST2                     00000097 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000009A - 0000009A (0x1 bytes), align: 0
  Segment part 10. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IEN2                    0000009A 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C6 - 000000C6 (0x1 bytes), align: 0
  Segment part 12. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLKCON                  000000C6 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001126 - 0000113C (0x17 bytes), align: 0
  Segment part 62.            Intra module refs:   halSleepTimerIsr::??INTVEC 43
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSleepTimerIsr        00001126 
               interrupt function
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000002D (0x2e bytes), align: 0
  Segment part 14. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSleepTimerIsr::??INTVEC 43
                                   0000002B 

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\hal_target.r51
    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\hal_timer.r51
  PROGRAM MODULE, NAME : hal_timer

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000CB - 000000CB (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T3CTL                   000000CB 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000CC - 000000CC (0x1 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T3CCTL0                 000000CC 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000CE - 000000CE (0x1 bytes), align: 0
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T3CCTL1                 000000CE 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E4 - 000000E4 (0x1 bytes), align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1CTL                   000000E4 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E5 - 000000E5 (0x1 bytes), align: 0
  Segment part 7. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1CCTL0                 000000E5 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E6 - 000000E6 (0x1 bytes), align: 0
  Segment part 8. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1CCTL1                 000000E6 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E7 - 000000E7 (0x1 bytes), align: 0
  Segment part 9. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1CCTL2                 000000E7 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000EB - 000000EB (0x1 bytes), align: 0
  Segment part 10. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T4CTL                   000000EB 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000EC - 000000EC (0x1 bytes), align: 0
  Segment part 11. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T4CCTL0                 000000EC 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000EE - 000000EE (0x1 bytes), align: 0
  Segment part 12. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T4CCTL1                 000000EE 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EE5B - 0000EE7B (0x21 bytes), align: 0
  Segment part 21.            Intra module refs:   ?Subroutine10
                                                   ?Subroutine8
                                                   HalTimerConfig
                                                   HalTimerInit
                                                   HalTimerInterruptEnable
                                                   HalTimerStart
                                                   HalTimerTick
                                                   halTimerSetCount
           LOCAL                   ADDRESS         
           =====                   =======         
           halTimerRecord          0000EE5B 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EE7C - 0000EE99 (0x1e bytes), align: 0
  Segment part 22.            Intra module refs:   ?Subroutine2
                                                   ?Subroutine5
                                                   ?Subroutine6
                                                   ?Subroutine7
                                                   HalTimerInit
           LOCAL                   ADDRESS         
           =====                   =======         
           halTimerChannel         0000EE7C 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F3CC - 0000F49D (0xd2 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalTimerInit            0000F3CC        HalDriverInit (hal_drivers)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F49E - 0000F4A5 (0x8 bytes), align: 0
  Segment part 24.            Intra module refs:   HalTimerInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0000F49E 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F4A6 - 0000F530 (0x8b bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalTimerConfig          0000F4A6        InitBoard (OnBoard)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000003 ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F531 - 0000F5EA (0xba bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalTimerStart           0000F531        osal_timer_hw_setup (OSAL_Timers)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F5EB - 0000F5EF (0x5 bytes), align: 0
  Segment part 27.            Intra module refs:   HalTimerStart
                                                   halTimerSetCount
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine14           0000F5EB 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F5F0 - 0000F620 (0x31 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalTimerTick            0000F5F0        Hal_ProcessPoll (hal_drivers)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F621 - 0000F659 (0x39 bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalTimerStop            0000F621        osal_timer_hw_setup (OSAL_Timers)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F65A - 0000F6C2 (0x69 bytes), align: 0
  Segment part 30.            Intra module refs:   HalTimerStart
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimerSetCount        0000F65A 
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000010 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F6C3 - 0000F6C7 (0x5 bytes), align: 0
  Segment part 31.            Intra module refs:   HalTimerConfig
                                                   halTimerSetCount
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0000F6C3 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F6C8 - 0000F6D0 (0x9 bytes), align: 0
  Segment part 32.            Intra module refs:   ?Subroutine1
                                                   HalTimerConfig
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           0000F6C8 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F6D1 - 0000F70D (0x3d bytes), align: 0
  Segment part 33.            Intra module refs:   HalTimerStart
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimerSetPrescale     0000F6D1 
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000010 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F70E - 0000F78F (0x82 bytes), align: 0
  Segment part 34.            Intra module refs:   HalTimerStart
                                                   HalTimerStop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimerSetOpMode       0000F70E 
               stack 1 = 00000002 ( 00000002 )
               stack 2 = 00000010 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F790 - 0000F7BD (0x2e bytes), align: 0
  Segment part 35.            Intra module refs:   HalTimerStart
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimerSetChannelMode
                                   0000F790 
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000010 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F7BE - 0000F7C6 (0x9 bytes), align: 0
  Segment part 36.            Intra module refs:   halTimerSetChannelMode
                                                   halTimerSetCount
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            0000F7BE 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F7C7 - 0000F7D7 (0x11 bytes), align: 0
  Segment part 37.            Intra module refs:   halTimerSetChannelMode
                                                   halTimerSetCount
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            0000F7C7 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F7D8 - 0000F852 (0x7b bytes), align: 0
  Segment part 38.            Intra module refs:   HalTimerStart
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalTimerInterruptEnable
                                   0000F7D8 
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000010 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F853 - 0000F863 (0x11 bytes), align: 0
  Segment part 39.            Intra module refs:   HalTimerInterruptEnable
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            0000F853 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F864 - 0000F87F (0x1c bytes), align: 0
  Segment part 40.            Intra module refs:   HalTimerInterruptEnable
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0000F864 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F880 - 0000F893 (0x14 bytes), align: 0
  Segment part 41.            Intra module refs:   HalTimerInterruptEnable
                                                   halTimerSetChannelMode
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0000F880 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F894 - 0000F89C (0x9 bytes), align: 0
  Segment part 42.            Intra module refs:   ?Subroutine2
                                                   halTimerSetCount
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine12           0000F894 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F89D - 0000F8DC (0x40 bytes), align: 0
  Segment part 43.            Intra module refs:   halProcessTimer1
                                                   halProcessTimer3
                                                   halProcessTimer4
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimerSendCallBack    0000F89D 
               calls direct
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F8DD - 0000F8EB (0xf bytes), align: 0
  Segment part 44.            Intra module refs:   halTimerSendCallBack
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            0000F8DD 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F8EC - 0000F90D (0x22 bytes), align: 0
  Segment part 45.            Intra module refs:   HalTimerConfig
                                                   HalTimerStart
                                                   HalTimerStop
                                                   halProcessTimer1
                                                   halProcessTimer3
                                                   halProcessTimer4
                                                   halTimerSendCallBack
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimerRemap           0000F8EC 
               stack 1 = 00000002 ( 00000002 )
               stack 2 = 00000010 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F90E - 0000F914 (0x7 bytes), align: 0
  Segment part 46.            Intra module refs:   HalTimerInit
                                                   HalTimerInterruptEnable
                                                   HalTimerStop
                                                   HalTimerTick
                                                   halProcessTimer1
                                                   halProcessTimer3
                                                   halProcessTimer4
                                                   halTimerRemap
                                                   halTimerSetChannelMode
                                                   halTimerSetOpMode
                                                   halTimerSetPrescale
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           0000F90E 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F915 - 0000F98C (0x78 bytes), align: 0
  Segment part 47.            Intra module refs:   HalTimerTick
                                                   halTimer1Isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halProcessTimer1        0000F915 
               calls direct
               stack 1 = 0000000F ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F98D - 0000F9E5 (0x59 bytes), align: 0
  Segment part 48.            Intra module refs:   HalTimerTick
                                                   halTimer3Isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halProcessTimer3        0000F98D 
               calls direct
               stack 1 = 0000000F ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F9E6 - 0000F9EB (0x6 bytes), align: 0
  Segment part 49.            Intra module refs:   halProcessTimer1
                                                   halProcessTimer3
                                                   halProcessTimer4
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0000F9E6 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F9EC - 0000F9F1 (0x6 bytes), align: 0
  Segment part 50.            Intra module refs:   halProcessTimer1
                                                   halProcessTimer3
                                                   halProcessTimer4
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0000F9EC 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F9F2 - 0000FA02 (0x11 bytes), align: 0
  Segment part 51.            Intra module refs:   ?Subroutine3
                                                   ?Subroutine4
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           0000F9F2 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FA03 - 0000FA5B (0x59 bytes), align: 0
  Segment part 52.            Intra module refs:   HalTimerTick
                                                   halTimer4Isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halProcessTimer4        0000FA03 
               calls direct
               stack 1 = 0000000F ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000113D - 00001148 (0xc bytes), align: 0
  Segment part 53.            Intra module refs:   halTimer1Isr::??INTVEC 75
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimer1Isr            0000113D 
               interrupt function
               calls direct
               stack 1 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001149 - 00001150 (0x8 bytes), align: 0
  Segment part 54.            Intra module refs:   halTimer1Isr
                                                   halTimer3Isr
                                                   halTimer4Isr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine15           00001149 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001151 - 0000115E (0xe bytes), align: 0
  Segment part 55.            Intra module refs:   halTimer3Isr::??INTVEC 91
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimer3Isr            00001151 
               interrupt function
               calls direct
               stack 1 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000115F - 0000116C (0xe bytes), align: 0
  Segment part 56.            Intra module refs:   halTimer4Isr::??INTVEC 99
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimer4Isr            0000115F 
               interrupt function
               calls direct
               stack 1 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000004D (0x4e bytes), align: 0
  Segment part 13. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimer1Isr::??INTVEC 75
                                   0000004B 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000005D (0x5e bytes), align: 0
  Segment part 14. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimer3Isr::??INTVEC 91
                                   0000005B 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000065 (0x66 bytes), align: 0
  Segment part 15. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimer4Isr::??INTVEC 99
                                   00000063 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D8 - 000000D8 (0x1 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TIMIF                000000D8 

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\hal_uart.r51
  PROGRAM MODULE, NAME : hal_uart

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000086 - 00000086 (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U0CSR                   00000086 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C1 - 000000C1 (0x1 bytes), align: 0
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U0DBUF                  000000C1 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C2 - 000000C2 (0x1 bytes), align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U0BAUD                  000000C2 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C4 - 000000C4 (0x1 bytes), align: 0
  Segment part 7. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U0UCR                   000000C4 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C5 - 000000C5 (0x1 bytes), align: 0
  Segment part 8. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U0GCR                   000000C5 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D7 - 000000D7 (0x1 bytes), align: 0
  Segment part 11. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMAREQ                  000000D7 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F1 - 000000F1 (0x1 bytes), align: 0
  Segment part 12. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PERCFG                  000000F1 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EE9A - 0000EE9B (0x2 bytes), align: 0
  Segment part 22.            Intra module refs:   HalUARTOpen
                                                   HalUARTPoll
                                                   HalUARTRead
                                                   HalUARTWrite
                                                   Hal_UART_RxBufLen
           LOCAL                   ADDRESS         
           =====                   =======         
           cfg0                    0000EE9A 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D4C7 - 0000D6ED (0x227 bytes), align: 0
  Segment part 24.            Intra module refs:   HalUARTPoll
           LOCAL                   ADDRESS         
           =====                   =======         
           pollDMA                 0000D4C7 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000A ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D6EE - 0000D6F2 (0x5 bytes), align: 0
  Segment part 25.            Intra module refs:   HalUARTPoll
                                                   pollDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine19           0000D6EE 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D6F3 - 0000D6FA (0x8 bytes), align: 0
  Segment part 26.            Intra module refs:   HalUARTOpen
                                                   HalUARTPoll
                                                   pollDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            0000D6F3 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D6FB - 0000D705 (0xb bytes), align: 0
  Segment part 27.            Intra module refs:   pollDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            0000D6FB 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D706 - 0000D711 (0xc bytes), align: 0
  Segment part 28.            Intra module refs:   HalUARTPoll
                                                   pollDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0000D706 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D712 - 0000D71C (0xb bytes), align: 0
  Segment part 29.            Intra module refs:   pollDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0000D712 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D71D - 0000D72C (0x10 bytes), align: 0
  Segment part 30.            Intra module refs:   pollDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0000D71D 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D72D - 0000D731 (0x5 bytes), align: 0
  Segment part 31.            Intra module refs:   ?Subroutine0
                                                   ?Subroutine12
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine20           0000D72D 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D732 - 0000D73B (0xa bytes), align: 0
  Segment part 32.            Intra module refs:   ?Subroutine0
                                                   pollDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine16           0000D732 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D73C - 0000D798 (0x5d bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTInit             0000D73C        HalDriverInit (hal_drivers)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D799 - 0000D79F (0x7 bytes), align: 0
  Segment part 34.            Intra module refs:   HalUARTInit
                                                   Hal_UART_RxBufLen
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine21           0000D799 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D7A0 - 0000D928 (0x189 bytes), align: 0
  Segment part 35.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTOpen             0000D7A0        SPIMgr_Init (SPIMgr)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D929 - 0000D937 (0xf bytes), align: 0
  Segment part 36.            Intra module refs:   HalUARTOpen
                                                   pollDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine15           0000D929 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D938 - 0000D943 (0xc bytes), align: 0
  Segment part 37.            Intra module refs:   HalUARTOpen
                                                   pollDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           0000D938 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D944 - 0000D95D (0x1a bytes), align: 0
  Segment part 38.            Intra module refs:   HalUARTOpen
                                                   pollDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            0000D944 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D95E - 0000D964 (0x7 bytes), align: 0
  Segment part 39.            Intra module refs:   ?Subroutine15
                                                   ?Subroutine9
                                                   HalUARTOpen
                                                   HalUARTWrite
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine17           0000D95E 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D965 - 0000D977 (0x13 bytes), align: 0
  Segment part 40.            Intra module refs:   HalUARTOpen
                                                   pollDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            0000D965 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D978 - 0000DA99 (0x122 bytes), align: 0
  Segment part 42.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTPoll             0000D978        Hal_ProcessPoll (hal_drivers)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DA9A - 0000DAA4 (0xb bytes), align: 0
  Segment part 43.            Intra module refs:   HalUARTOpen
                                                   HalUARTPoll
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine14           0000DA9A 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DAA5 - 0000DABE (0x1a bytes), align: 0
  Segment part 44.            Intra module refs:   HalUARTPoll
                                                   pollDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0000DAA5 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EE9C - 0000EE9C (0x1 bytes), align: 0
  Segment part 23.            Intra module refs:   HalUARTPoll
           LOCAL                   ADDRESS         
           =====                   =======         
           HalUARTPoll::tickShdw   0000EE9C 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DABF - 0000DB20 (0x62 bytes), align: 0
  Segment part 45.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_UART_RxBufLen       0000DABF        SPIMgr_ProcessZToolData (SPIMgr)
               stack 1 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DB21 - 0000DB29 (0x9 bytes), align: 0
  Segment part 46.            Intra module refs:   Hal_UART_RxBufLen
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine12           0000DB21 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DB2A - 0000DBBD (0x94 bytes), align: 0
  Segment part 47.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTRead             0000DB2A        SPIMgr_ProcessZToolData (SPIMgr)
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DBBE - 0000DBC2 (0x5 bytes), align: 0
  Segment part 48.            Intra module refs:   HalUARTRead
                                                   HalUARTWrite
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine22           0000DBBE 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DBC3 - 0000DBCB (0x9 bytes), align: 0
  Segment part 49.            Intra module refs:   HalUARTRead
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           0000DBC3 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DBCC - 0000DBD5 (0xa bytes), align: 0
  Segment part 50.            Intra module refs:   HalUARTOpen
                                                   HalUARTPoll
                                                   HalUARTRead
                                                   HalUARTWrite
                                                   pollDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0000DBCC 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DBD6 - 0000DBDB (0x6 bytes), align: 0
  Segment part 51.            Intra module refs:   ?Subroutine2
                                                   ?Subroutine3
                                                   ?Subroutine4
                                                   ?Subroutine5
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine18           0000DBD6 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DBDC - 0000DCF8 (0x11d bytes), align: 0
  Segment part 52.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTWrite            0000DBDC        ?Subroutine10 (MTEL)
                                                   MT_BuildAndSendZToolResponse (MTEL)
                                                   MT_ProcessCommand (MTEL)
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DCF9 - 0000DD13 (0x1b bytes), align: 0
  Segment part 53.            Intra module refs:   HalUARTWrite
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           0000DCF9 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DD14 - 0000DD1E (0xb bytes), align: 0
  Segment part 54.            Intra module refs:   HalUARTPoll
                                                   HalUARTWrite
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0000DD14 

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\mac_backoff_timer.r51
  PROGRAM MODULE, NAME : mac_backoff_timer

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000A6 - 000000A6 (0x1 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2TLD                   000000A6 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A7 - 000000A7 (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2THD                   000000A7 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C3 - 000000C3 (0x1 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2CNF                   000000C3 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EE9D - 0000EEA0 (0x4 bytes), align: 0
  Segment part 10.            Intra module refs:   ?Subroutine0
                                                   macBackoffTimerCapture
                                                   macBackoffTimerCount
                                                   macBackoffTimerSetRollover
                                                   macBackoffTimerSetTrigger
           LOCAL                   ADDRESS         
           =====                   =======         
           backoffTimerRollover    0000EE9D 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EEA1 - 0000EEA4 (0x4 bytes), align: 0
  Segment part 11.            Intra module refs:   macBackoffTimerCompareIsr
                                                   macBackoffTimerSetTrigger
           LOCAL                   ADDRESS         
           =====                   =======         
           backoffTimerTrigger     0000EEA1 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EEA5 - 0000EEA5 (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   ?Subroutine0
                                                   macBackoffTimerCompareIsr
                                                   macBackoffTimerInit
                                                   macBackoffTimerSetTrigger
           LOCAL                   ADDRESS         
           =====                   =======         
           compareState            0000EEA5 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014CA9 - 00014CF3 (0x4b bytes), align: 0
  Segment part 19.            Intra module refs:   macBackoffTimerReset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerInit     00014CA9        macLowLevelInit (mac_low_level)
               calls direct
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014CF4 - 00014D10 (0x1d bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerReset    00014CF4        macLowLevelReset (mac_low_level)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014D11 - 00014D51 (0x41 bytes), align: 0
  Segment part 21.            Intra module refs:   macBackoffTimerInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerSetRollover
                                   00014D11        macBackoffTimerRolloverCallback (mac_timer)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000C ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014D52 - 00014D8E (0x3d bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerCount    00014D52        macTimer (mac_timer)
                                                   macTimerUpdateBackoffTimer (mac_timer)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014D8F - 00014DA8 (0x1a bytes), align: 0
  Segment part 24.            Intra module refs:   macBackoffTimerCapture
                                                   macBackoffTimerCount
                                                   macBackoffTimerSetRollover
                                                   macBackoffTimerSetTrigger
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            00014D8F 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014DA9 - 00014DE5 (0x3d bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerCapture
                                   00014DA9        macTxTimestampCallback (mac_tx)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014DE6 - 00014E55 (0x70 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerSetTrigger
                                   00014DE6        macTimerUpdateBackoffTimer (mac_timer)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014E56 - 00014E7D (0x28 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerCancelTrigger
                                   00014E56        macTimerUpdateBackoffTimer (mac_timer)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014E7E - 00014E82 (0x5 bytes), align: 0
  Segment part 29.            Intra module refs:   macBackoffTimerCancelTrigger
                                                   macBackoffTimerCompareIsr
                                                   macBackoffTimerInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            00014E7E 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014E83 - 00014E8E (0xc bytes), align: 0
  Segment part 30.            Intra module refs:   macBackoffTimerCancelTrigger
                                                   macBackoffTimerCompareIsr
                                                   macBackoffTimerSetTrigger
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00014E83 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014E8F - 00014F19 (0x8b bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerCompareIsr
                                   00014E8F        macMcuTimer2Isr (mac_mcu)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F0D4 - 0000F0D7 (0x4 bytes), align: 0
  Segment part 15.            Intra module refs:   macBackoffTimerInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_c0000        0000F0D4 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000162A - 0000162D (0x4 bytes), align: 0
  Segment part 16.            Intra module refs:   __Constant_c0000
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F0D8 - 0000F0DB (0x4 bytes), align: 0
  Segment part 17.            Intra module refs:   halWait (wait)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffffffff     0000F0D8 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000162E - 00001631 (0x4 bytes), align: 0
  Segment part 18.            Intra module refs:   __Constant_ffffffff

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\mac_cfg.r51
  PROGRAM MODULE, NAME : mac_cfg

  SEGMENTS IN THE MODULE
  ======================
XDATA_I
  Relative segment, address: XDATA 0000F0DC - 0000F0E0 (0x5 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCfg                  0000F0DC        MAC_McpsDataReq (mac_data)
                                                   macDataRxMemAlloc (mac_data)
                                                   macDataTxEnqueue (mac_data)
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001632 - 00001636 (0x5 bytes), align: 0
  Segment part 7.             Intra module refs:   macCfg

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\mac_csp_tx.r51
  PROGRAM MODULE, NAME : mac_csp_tx

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000094 - 00000094 (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2CMP                   00000094 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A1 - 000000A1 (0x1 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2OF0                   000000A1 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E1 - 000000E1 (0x1 bytes), align: 0
  Segment part 7. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFST                    000000E1 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000144DD - 000144E7 (0xb bytes), align: 0
  Segment part 14.            Intra module refs:   macCspTxCancelAckTimeoutCallback
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            000144DD 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000144E8 - 00014514 (0x2d bytes), align: 0
  Segment part 15.            Intra module refs:   macCspTxPrepCsmaSlotted
                                                   macCspTxPrepCsmaUnslotted
                                                   macCspTxPrepSlotted
           LOCAL                   ADDRESS         
           =====                   =======         
           cspPrepForTxProgram     000144E8 
               calls direct
               stack 1 = 00000002 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014515 - 0001451A (0x6 bytes), align: 0
  Segment part 16.            Intra module refs:   cspPrepForTxProgram
                                                   macCspTxIntIsr
                                                   macCspTxStopIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            00014515 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001451B - 00014534 (0x1a bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxPrepCsmaUnslotted
                                   0001451B        txCsmaPrep (mac_tx)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014535 - 00014554 (0x20 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxPrepCsmaSlotted
                                   00014535        txCsmaPrep (mac_tx)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014555 - 00014590 (0x3c bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxGoCsma          00014555        txCsmaGo (mac_tx)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014591 - 000145BB (0x2b bytes), align: 0
  Segment part 20.            Intra module refs:   ?Subroutine1
                                                   ?Subroutine2
                                                   macCspForceTxDoneIfPending
                                                   macCspTxGoCsma
                                                   macCspTxGoSlotted
                                                   macCspTxPrepCsmaSlotted
                                                   macCspTxPrepCsmaUnslotted
                                                   macCspTxPrepSlotted
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00014591 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000145BC - 000145CC (0x11 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxPrepSlotted     000145BC        macTxFrame (mac_tx)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000145CD - 0001461B (0x4f bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxGoSlotted       000145CD        txGo (mac_tx)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001461C - 00014656 (0x3b bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspForceTxDoneIfPending
                                   0001461C        rxStartIsr (mac_rx)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014657 - 00014715 (0xbf bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxRequestAckTimeoutCallback
                                   00014657        macTxDoneCallback (mac_tx)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014716 - 00014721 (0xc bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxCancelAckTimeoutCallback
                                   00014716        macTxAckNotReceivedCallback (mac_tx)
                                                   macTxAckReceivedCallback (mac_tx)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014722 - 00014750 (0x2f bytes), align: 0
  Segment part 26.            Intra module refs:   macCspForceTxDoneIfPending
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxIntIsr          00014722        macMcuRfIsr (mac_mcu)
               calls direct
               stack 1 = 00000002 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014751 - 00014794 (0x44 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxStopIsr         00014751        macMcuRfIsr (mac_mcu)
               calls direct
               stack 1 = 00000000 ( 00000002 )

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\mac_low_level.r51
  PROGRAM MODULE, NAME : mac_low_level

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00016947 - 00016977 (0x31 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macLowLevelInit         00016947        MAC_Init (mac_mgmt)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00016978 - 00016981 (0xa bytes), align: 0
  Segment part 8.             Intra module refs:   macLowLevelInit
                                                   macLowLevelReset
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00016978 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00016982 - 000169B6 (0x35 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macLowLevelReset        00016982        MAC_MlmeResetReq (mac_mgmt)
               calls direct
               stack 1 = 00000000 ( 00000002 )

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\mac_mcu.r51
  PROGRAM MODULE, NAME : mac_mcu

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 0000009B - 0000009B (0x1 bytes), align: 0
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           S1CON                   0000009B 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000009C - 0000009C (0x1 bytes), align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2PEROF0                0000009C 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000009D - 0000009D (0x1 bytes), align: 0
  Segment part 7. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2PEROF1                0000009D 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000009E - 0000009E (0x1 bytes), align: 0
  Segment part 8. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2PEROF2                0000009E 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A2 - 000000A2 (0x1 bytes), align: 0
  Segment part 10. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2OF1                   000000A2 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A3 - 000000A3 (0x1 bytes), align: 0
  Segment part 11. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2OF2                   000000A3 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A4 - 000000A4 (0x1 bytes), align: 0
  Segment part 12. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2CAPLPL                000000A4 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A5 - 000000A5 (0x1 bytes), align: 0
  Segment part 13. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2CAPHPH                000000A5 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A9 - 000000A9 (0x1 bytes), align: 0
  Segment part 16. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IP0                     000000A9 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000B9 - 000000B9 (0x1 bytes), align: 0
  Segment part 18. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IP1                     000000B9 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BC - 000000BC (0x1 bytes), align: 0
  Segment part 19. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RNDL                    000000BC 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BD - 000000BD (0x1 bytes), align: 0
  Segment part 20. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RNDH                    000000BD 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E9 - 000000E9 (0x1 bytes), align: 0
  Segment part 24. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFIF                    000000E9 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EEA6 - 0000EEA6 (0x1 bytes), align: 0
  Segment part 32.            Intra module refs:   macMcuRecordMaxRssiStart
                                                   macMcuRecordMaxRssiStop
                                                   macMcuTimer2Isr
           LOCAL                   ADDRESS         
           =====                   =======         
           maxRssi                 0000EEA6 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EEA7 - 0000EEA7 (0x1 bytes), align: 0
  Segment part 33.            Intra module refs:   macMcuAndT2PEROF2
                                                   macMcuInit
                                                   macMcuOrT2PEROF2
                                                   macMcuOverflowSetCompare
           LOCAL                   ADDRESS         
           =====                   =======         
           shadowPerof2            0000EEA7 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00013BFF - 00013CF2 (0xf4 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuInit              00013BFF        macLowLevelInit (mac_low_level)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00013CF3 - 00013CFF (0xd bytes), align: 0
  Segment part 35.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuRandomByte        00013CF3        Onboard_rand (OnBoard)
                                                   macRadioRandomByte (mac_radio)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00013D00 - 00013D07 (0x8 bytes), align: 0
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuTimerCapture      00013D00        macTxTimestampCallback (mac_tx)
                                                   rxStartIsr (mac_rx)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00013D08 - 00013D2A (0x23 bytes), align: 0
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuOverflowCount     00013D08        macBackoffTimerCount (mac_backoff_timer)
                                                   macBackoffTimerSetRollover (mac_backoff_timer)
                                                   macBackoffTimerSetTrigger (mac_backoff_timer)
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00013D2B - 00013D4F (0x25 bytes), align: 0
  Segment part 39.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuOverflowCapture   00013D2B        macBackoffTimerCapture (mac_backoff_timer)
                                                   rxStartIsr (mac_rx)
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00013D50 - 00013D91 (0x42 bytes), align: 0
  Segment part 40.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuOverflowSetCount
                                   00013D50        macBackoffTimerCompareIsr (mac_backoff_timer)
                                                   macBackoffTimerInit (mac_backoff_timer)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00013D92 - 00013DB9 (0x28 bytes), align: 0
  Segment part 41.            Intra module refs:   macMcuOverflowCapture
                                                   macMcuOverflowCount
                                                   macMcuOverflowSetCompare
                                                   macMcuOverflowSetCount
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            00013D92 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00013DBA - 00013DD3 (0x1a bytes), align: 0
  Segment part 42.            Intra module refs:   ?Subroutine5
                                                   macMcuOverflowSetCompare
                                                   macMcuOverflowSetCount
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00013DBA 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00013DD4 - 00013E42 (0x6f bytes), align: 0
  Segment part 43.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuOverflowSetCompare
                                   00013DD4        ?Subroutine2 (mac_backoff_timer)
                                                   macBackoffTimerCancelTrigger (mac_backoff_timer)
                                                   macBackoffTimerCompareIsr (mac_backoff_timer)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00013E43 - 00013E4E (0xc bytes), align: 0
  Segment part 44.            Intra module refs:   macMcuOverflowSetCompare
                                                   macMcuOverflowSetCount
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            00013E43 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000116D - 000011A5 (0x39 bytes), align: 0
  Segment part 56.            Intra module refs:   macMcuTimer2Isr::??INTVEC 83
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuTimer2Isr         0000116D 
               interrupt function
               calls direct
               stack 1 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000011A6 - 000011AA (0x5 bytes), align: 0
  Segment part 57.            Intra module refs:   macMcuRfIsr
                                                   macMcuTimer2Isr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            000011A6 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00013E4F - 00013E7B (0x2d bytes), align: 0
  Segment part 45.            Intra module refs:   macMcuRecordMaxRssiStart
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuOrT2PEROF2        00013E4F        macBackoffTimerInit (mac_backoff_timer)
               calls direct
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00013E7C - 00013E81 (0x6 bytes), align: 0
  Segment part 46.            Intra module refs:   macMcuAndT2PEROF2
                                                   macMcuOrT2PEROF2
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            00013E7C 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00013E82 - 00013EB2 (0x31 bytes), align: 0
  Segment part 47.            Intra module refs:   macMcuRecordMaxRssiStop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuAndT2PEROF2       00013E82        macBackoffTimerReset (mac_backoff_timer)
               calls direct
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00013EB3 - 00013EBC (0xa bytes), align: 0
  Segment part 48.            Intra module refs:   ?Subroutine6
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            00013EB3 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000011AB - 00001231 (0x87 bytes), align: 0
  Segment part 58.            Intra module refs:   macMcuRfIsr::??INTVEC 131
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuRfIsr             000011AB 
               interrupt function
               calls direct
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00013EBD - 00013ED6 (0x1a bytes), align: 0
  Segment part 49.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuOrRFIM            00013EBD        macCspTxGoCsma (mac_csp_tx)
                                                   macCspTxGoSlotted (mac_csp_tx)
                                                   macCspTxRequestAckTimeoutCallback (mac_csp_tx)
                                                   macRxRadioPowerUpInit (mac_rx)
                                                   rxStartIsr (mac_rx)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00013ED7 - 00013EDB (0x5 bytes), align: 0
  Segment part 50.            Intra module refs:   macMcuAndRFIM
                                                   macMcuOrRFIM
                                                   macMcuWriteRFIF
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            00013ED7 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00013EDC - 00013EF7 (0x1c bytes), align: 0
  Segment part 51.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuAndRFIM           00013EDC        ?Subroutine1 (mac_csp_tx)
                                                   macCspForceTxDoneIfPending (mac_csp_tx)
                                                   macCspTxCancelAckTimeoutCallback (mac_csp_tx)
                                                   macCspTxIntIsr (mac_csp_tx)
                                                   macCspTxStopIsr (mac_csp_tx)
                                                   rxFcsIsr (mac_rx)
                                                   rxHaltCleanupFinalStep (mac_rx)
                                                   rxStartIsr (mac_rx)
                                                   txGo (mac_tx)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00013EF8 - 00013F10 (0x19 bytes), align: 0
  Segment part 52.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuWriteRFIF         00013EF8        cspPrepForTxProgram (mac_csp_tx)
                                                   macCspTxRequestAckTimeoutCallback (mac_csp_tx)
                                                   rxStartIsr (mac_rx)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00013F11 - 00013F24 (0x14 bytes), align: 0
  Segment part 53.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuRecordMaxRssiStart
                                   00013F11        macRadioEnergyDetectStart (mac_radio)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00013F25 - 00013F2B (0x7 bytes), align: 0
  Segment part 54.            Intra module refs:   macMcuInit
                                                   macMcuRecordMaxRssiStart
                                                   macMcuRecordMaxRssiStop
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            00013F25 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00013F2C - 00013F40 (0x15 bytes), align: 0
  Segment part 55.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuRecordMaxRssiStop
                                   00013F2C        macRadioEnergyDetectStop (mac_radio)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000055 (0x56 bytes), align: 0
  Segment part 25. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuTimer2Isr::??INTVEC 83
                                   00000053 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000085 (0x86 bytes), align: 0
  Segment part 26. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuRfIsr::??INTVEC 131
                                   00000083 

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\mac_mem.r51
  PROGRAM MODULE, NAME : mac_mem

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000D9 - 000000D9 (0x1 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFD                     000000D9 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000168CB - 000168EF (0x25 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMemWriteRam          000168CB        macRadioSetIEEEAddr (mac_radio)
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000168F0 - 00016917 (0x28 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMemWriteTxFifo       000168F0        macTxFrame (mac_tx)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00016918 - 0001691C (0x5 bytes), align: 0
  Segment part 11.            Intra module refs:   macMemReadRxFifo
                                                   macMemWriteRam
                                                   macMemWriteTxFifo
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00016918 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001691D - 00016946 (0x2a bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMemReadRxFifo        0001691D        ?Subroutine8 (mac_rx)
                                                   rxFcsIsr (mac_rx)
                                                   rxPayloadIsr (mac_rx)
                                                   rxStartIsr (mac_rx)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000009 )

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\mac_radio.r51
  PROGRAM MODULE, NAME : mac_radio

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000EEA8 - 0000EEA8 (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   macRadioInit
                                                   macRadioUpdateTxPower
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPhyTxPower           0000EEA8 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EEA9 - 0000EEA9 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   macRadioInit
                                                   macRadioUpdateChannel
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPhyChannel           0000EEA9 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EEAA - 0000EEAA (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   macRadioInit
                                                   macRadioSetChannel
                                                   macRadioUpdateChannel
           LOCAL                   ADDRESS         
           =====                   =======         
           reqChannel              0000EEAA 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EEAB - 0000EEAB (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   macRadioInit
                                                   macRadioSetTxPower
                                                   macRadioUpdateTxPower
           LOCAL                   ADDRESS         
           =====                   =======         
           reqTxPower              0000EEAB 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014A26 - 00014A3E (0x19 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioInit            00014A26        macLowLevelInit (mac_low_level)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014A3F - 00014A44 (0x6 bytes), align: 0
  Segment part 12.            Intra module refs:   macRadioInit
                                                   macRadioSetPanCoordinator
                                                   macRadioSetPanID
                                                   macRadioSetShortAddr
                                                   macRadioStopScan
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            00014A3F 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014A45 - 00014A53 (0xf bytes), align: 0
  Segment part 13.            Intra module refs:   ?Subroutine2
                                                   macRadioComputeLQI
                                                   macRadioEnergyDetectStart
                                                   macRadioEnergyDetectStop
                                                   macRadioRandomByte
                                                   macRadioReset
                                                   macRadioSetIEEEAddr
                                                   macRadioUpdateChannel
                                                   macRadioUpdateTxPower
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00014A45 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014A54 - 00014A66 (0x13 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioReset           00014A54        macLowLevelReset (mac_low_level)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014A67 - 00014A71 (0xb bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioRandomByte      00014A67        macPibReset (mac_pib)
                                                   txCsmaPrep (mac_tx)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014A72 - 00014A94 (0x23 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioSetPanCoordinator
                                   00014A72        MAC_MlmeResetReq (mac_mgmt)
               stack 1 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014A95 - 00014AA0 (0xc bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioSetPanID        00014A95        MAC_MlmeResetReq (mac_mgmt)
                                                   MAC_MlmeSetReq (mac_pib)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014AA1 - 00014AAF (0xf bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioSetShortAddr    00014AA1        MAC_MlmeResetReq (mac_mgmt)
                                                   MAC_MlmeSetReq (mac_pib)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014AB0 - 00014AC4 (0x15 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioSetIEEEAddr     00014AB0        MAC_MlmeResetReq (mac_mgmt)
                                                   MAC_MlmeSetReq (mac_pib)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014AC5 - 00014AFE (0x3a bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioSetTxPower      00014AC5        MAC_MlmeResetReq (mac_mgmt)
                                                   MAC_MlmeSetReq (mac_pib)
                                                   macDataTxSend (mac_data)
                                                   macTxCompleteCallback (mac_data)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014AFF - 00014B38 (0x3a bytes), align: 0
  Segment part 21.            Intra module refs:   macRadioSetTxPower
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioUpdateTxPower   00014AFF        rxPostRxUpdates (mac_rx)
                                                   txComplete (mac_tx)
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 0000000A ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014B39 - 00014B72 (0x3a bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioSetChannel      00014B39        MAC_MlmeResetReq (mac_mgmt)
                                                   MAC_MlmeSetReq (mac_pib)
                                                   macDataTxSend (mac_data)
                                                   macTxCompleteCallback (mac_data)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014B73 - 00014B77 (0x5 bytes), align: 0
  Segment part 23.            Intra module refs:   macRadioSetChannel
                                                   macRadioStartScan
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            00014B73 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014B78 - 00014BCB (0x54 bytes), align: 0
  Segment part 24.            Intra module refs:   macRadioSetChannel
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioUpdateChannel   00014B78        txComplete (mac_tx)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000009 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014BCC - 00014C26 (0x5b bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioStartScan       00014BCC        macApiScanReq (mac_scan)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014C27 - 00014C3E (0x18 bytes), align: 0
  Segment part 26.            Intra module refs:   macRadioReset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioStopScan        00014C27        macScanComplete (mac_scan)
               stack 1 = 00000002 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014C3F - 00014C4A (0xc bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioEnergyDetectStart
                                   00014C3F        macScanStartTimer (mac_scan)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014C4B - 00014C5D (0x13 bytes), align: 0
  Segment part 28.            Intra module refs:   macRadioReset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioEnergyDetectStop
                                   00014C4B        macScanNextChan (mac_scan)
               calls direct
               stack 1 = 00000002 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014C5E - 00014CA1 (0x44 bytes), align: 0
  Segment part 29.            Intra module refs:   ?Subroutine0
           LOCAL                   ADDRESS         
           =====                   =======         
           radioComputeED          00014C5E 
               stack 1 = 00000002 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00014CA2 - 00014CA8 (0x7 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioComputeLQI      00014CA2        rxFcsIsr (mac_rx)
               calls direct
               stack 1 = 00000000 ( 00000002 )

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\mac_radio_defs.r51
  PROGRAM MODULE, NAME : mac_radio_defs

  SEGMENTS IN THE MODULE
  ======================
CODE_C
  Relative segment, address: CODE 000021E0 - 000021F9 (0x1a bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioDefsTxPowerTable
                                   000021E0        macRadioSetTxPower (mac_radio)

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\mac_random.r51
    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\mac_rx.r51
  PROGRAM MODULE, NAME : mac_rx

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000EEAC - 0000EEAC (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   macRxAckTxDoneCallback
                                                   macRxInit
                                                   rxDone
                                                   rxFcsIsr
                                                   rxHaltCleanupFinalStep
                                                   rxStartIsr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxActive             0000EEAC        halAssertHazardLights (hal_assert)
                                                   macRxOffRequest (mac_rx_onoff)
                                                   macTxFrame (mac_tx)
                                                   macTxStartQueuedFrame (mac_tx)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EEAD - 0000EEAD (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   macRxInit
                                                   macRxTxReset
                                                   rxStartIsr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxFilter             0000EEAD        macRadioStartScan (mac_radio)
                                                   macRadioStopScan (mac_radio)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EEAE - 0000EEAE (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   macRxAckTxDoneCallback
                                                   macRxInit
                                                   rxDone
                                                   rxFcsIsr
                                                   rxHaltCleanupFinalStep
                                                   rxStartIsr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxOutgoingAckFlag    0000EEAE        macRadioUpdateTxPower (mac_radio)
                                                   macRxOffRequest (mac_rx_onoff)
                                                   macTxFrame (mac_tx)
                                                   macTxStartQueuedFrame (mac_tx)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000021FA - 000021FD (0x4 bytes), align: 0
  Segment part 12.            Intra module refs:   ?Subroutine15
           LOCAL                   ADDRESS         
           =====                   =======         
           macRxAddrLen            000021FA 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EEAF - 0000EEB1 (0x3 bytes), align: 0
  Segment part 13.            Intra module refs:   ?Subroutine16
                                                   ?Subroutine2
                                                   macRxThresholdIsr
                                                   rxDiscardFrame
                                                   rxPrepPayload
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           pFuncRxState            0000EEAF 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EEB2 - 0000EEB3 (0x2 bytes), align: 0
  Segment part 14.            Intra module refs:   ?Subroutine19
                                                   ?Subroutine21
                                                   ?Subroutine3
                                                   ?Subroutine7
                                                   macRxInit
                                                   rxAddrIsr
                                                   rxFcsIsr
                                                   rxHaltCleanupFinalStep
                                                   rxPayloadIsr
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           pRxBuf                  0000EEB2 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EEB4 - 0000EEB7 (0x4 bytes), align: 0
  Segment part 15.            Intra module refs:   rxAddrIsr
                                                   rxFcsIsr
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxBuf                   0000EEB4 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EEB8 - 0000EEB8 (0x1 bytes), align: 0
  Segment part 16.            Intra module refs:   rxDiscardFrame
                                                   rxDiscardIsr
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxUnreadLen             0000EEB8 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EEB9 - 0000EEB9 (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   ?Subroutine8
                                                   rxAddrIsr
                                                   rxDiscardFrame
                                                   rxDiscardIsr
                                                   rxPayloadIsr
                                                   rxPrepPayload
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxNextLen               0000EEB9 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EEBA - 0000EEBA (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   rxPayloadIsr
                                                   rxPrepPayload
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxPayloadLen            0000EEBA 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EEBB - 0000EEBB (0x1 bytes), align: 0
  Segment part 19.            Intra module refs:   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxFilter                0000EEBB 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EEBC - 0000EEBC (0x1 bytes), align: 0
  Segment part 20.            Intra module refs:   macRxInit
                                                   macRxPromiscuousMode
                                                   rxFcsIsr
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxPromiscuousMode       0000EEBC 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EEBD - 0000EEBD (0x1 bytes), align: 0
  Segment part 21.            Intra module refs:   macRxHaltCleanup
                                                   macRxInit
                                                   macRxThresholdIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxIsrActiveFlag         0000EEBD 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EEBE - 0000EEBE (0x1 bytes), align: 0
  Segment part 22.            Intra module refs:   macRxHaltCleanup
                                                   macRxInit
                                                   macRxThresholdIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxResetFlag             0000EEBE 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DD1F - 0000DD47 (0x29 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxInit               0000DD1F        macLowLevelInit (mac_low_level)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DD48 - 0000DD5E (0x17 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxRadioPowerUpInit   0000DD48        macSleepWakeUp (mac_sleep)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DD5F - 0000DD77 (0x19 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxTxReset            0000DD5F        macLowLevelReset (mac_low_level)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DD78 - 0000DD96 (0x1f bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxHaltCleanup        0000DD78        macCspTxIntIsr (mac_csp_tx)
                                                   macRxHardDisable (mac_rx_onoff)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DD97 - 0000DDF5 (0x5f bytes), align: 0
  Segment part 27.            Intra module refs:   macRxHaltCleanup
                                                   macRxThresholdIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxHaltCleanupFinalStep
                                   0000DD97 
               calls direct
               stack 1 = 00000002 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DDF6 - 0000DDFF (0xa bytes), align: 0
  Segment part 28.            Intra module refs:   macRxAckTxDoneCallback
                                                   macRxHaltCleanup
                                                   macRxInit
                                                   macRxPromiscuousMode
                                                   macRxRadioPowerUpInit
                                                   macRxThresholdIsr
                                                   macRxTxReset
                                                   rxDiscardIsr
                                                   rxDone
                                                   rxHaltCleanupFinalStep
                                                   rxPayloadIsr
                                                   rxPostRxUpdates
                                                   rxPrepPayload
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine20           0000DDF6 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DE00 - 0000DE03 (0x4 bytes), align: 0
  Segment part 29.            Intra module refs:   macRxInit
                                                   rxHaltCleanupFinalStep
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0000DE00 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DE04 - 0000DE13 (0x10 bytes), align: 0
  Segment part 30.            Intra module refs:   ?Subroutine0
                                                   ?Subroutine1
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine16           0000DE04 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DE14 - 0000DE4E (0x3b bytes), align: 0
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxThresholdIsr       0000DE14        macMcuRfIsr (mac_mcu)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DE4F - 0000E140 (0x2f2 bytes), align: 0
  Segment part 32.            Intra module refs:   ?Subroutine16
                                                   rxDiscardFrame
           LOCAL                   ADDRESS         
           =====                   =======         
           rxStartIsr              0000DE4F 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E141 - 0000E14E (0xe bytes), align: 0
  Segment part 33.            Intra module refs:   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine15           0000E141 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E14F - 0000E152 (0x4 bytes), align: 0
  Segment part 34.            Intra module refs:   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           0000E14F 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E153 - 0000E159 (0x7 bytes), align: 0
  Segment part 35.            Intra module refs:   ?Subroutine10
                                                   ?Subroutine9
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine17           0000E153 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E15A - 0000E16B (0x12 bytes), align: 0
  Segment part 36.            Intra module refs:   rxAddrIsr
                                                   rxPayloadIsr
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0000E15A 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E16C - 0000E24F (0xe4 bytes), align: 0
  Segment part 37.            Intra module refs:   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxAddrIsr               0000E16C 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000001D )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E250 - 0000E254 (0x5 bytes), align: 0
  Segment part 38.            Intra module refs:   rxAddrIsr
                                                   rxDiscardFrame
                                                   rxFcsIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine22           0000E250 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E255 - 0000E260 (0xc bytes), align: 0
  Segment part 39.            Intra module refs:   rxAddrIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine14           0000E255 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E261 - 0000E26F (0xf bytes), align: 0
  Segment part 40.            Intra module refs:   rxAddrIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            0000E261 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E270 - 0000E274 (0x5 bytes), align: 0
  Segment part 41.            Intra module refs:   ?Subroutine4
                                                   ?Subroutine6
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine21           0000E270 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E275 - 0000E288 (0x14 bytes), align: 0
  Segment part 42.            Intra module refs:   rxAddrIsr
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0000E275 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E289 - 0000E2BE (0x36 bytes), align: 0
  Segment part 43.            Intra module refs:   ?Subroutine2
                                                   rxPayloadIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxPrepPayload           0000E289 
               stack 1 = 00000002 ( 00000002 )
               stack 2 = 0000001D ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E2BF - 0000E30B (0x4d bytes), align: 0
  Segment part 44.            Intra module refs:   ?Subroutine2
           LOCAL                   ADDRESS         
           =====                   =======         
           rxPayloadIsr            0000E2BF 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E30C - 0000E30F (0x4 bytes), align: 0
  Segment part 45.            Intra module refs:   rxPayloadIsr
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           0000E30C 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E310 - 0000E31D (0xe bytes), align: 0
  Segment part 46.            Intra module refs:   ?Subroutine11
                                                   ?Subroutine17
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine19           0000E310 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E31E - 0000E3C7 (0xaa bytes), align: 0
  Segment part 47.            Intra module refs:   rxPrepPayload
           LOCAL                   ADDRESS         
           =====                   =======         
           rxFcsIsr                0000E31E 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E3C8 - 0000E3CB (0x4 bytes), align: 0
  Segment part 48.            Intra module refs:   rxFcsIsr
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           0000E3C8 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E3CC - 0000E3D6 (0xb bytes), align: 0
  Segment part 49.            Intra module refs:   ?Subroutine12
                                                   ?Subroutine13
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine18           0000E3CC 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E3D7 - 0000E3DC (0x6 bytes), align: 0
  Segment part 50.            Intra module refs:   rxFcsIsr
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine12           0000E3D7 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E3DD - 0000E3E2 (0x6 bytes), align: 0
  Segment part 51.            Intra module refs:   rxAddrIsr
                                                   rxFcsIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            0000E3DD 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E3E3 - 0000E3FC (0x1a bytes), align: 0
  Segment part 52.            Intra module refs:   rxFcsIsr
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            0000E3E3 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E3FD - 0000E404 (0x8 bytes), align: 0
  Segment part 53.            Intra module refs:   rxAddrIsr
                                                   rxFcsIsr
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0000E3FD 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E405 - 0000E40E (0xa bytes), align: 0
  Segment part 54.            Intra module refs:   rxFcsIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0000E405 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E40F - 0000E43B (0x2d bytes), align: 0
  Segment part 55.            Intra module refs:   ?Subroutine0
                                                   rxDiscardFrame
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxDone                  0000E40F 
               calls direct
               stack 1 = 00000002 ( 00000002 )
               stack 2 = 00000010 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E43C - 0000E455 (0x1a bytes), align: 0
  Segment part 56.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxAckTxDoneCallback
                                   0000E43C        macMcuRfIsr (mac_mcu)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E456 - 0000E471 (0x1c bytes), align: 0
  Segment part 57.            Intra module refs:   macRxAckTxDoneCallback
                                                   rxDone
                                                   rxHaltCleanupFinalStep
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxPostRxUpdates         0000E456 
               calls direct
               stack 1 = 00000002 ( 00000002 )
               stack 2 = 0000000E ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E472 - 0000E4C9 (0x58 bytes), align: 0
  Segment part 58.            Intra module refs:   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxDiscardFrame          0000E472 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000E ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E4CA - 0000E505 (0x3c bytes), align: 0
  Segment part 59.            Intra module refs:   rxDiscardFrame
           LOCAL                   ADDRESS         
           =====                   =======         
           rxDiscardIsr            0000E4CA 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E506 - 0000E51A (0x15 bytes), align: 0
  Segment part 60.            Intra module refs:   rxAddrIsr
                                                   rxDiscardIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            0000E506 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E51B - 0000E528 (0xe bytes), align: 0
  Segment part 61.            Intra module refs:   rxDiscardIsr
                                                   rxFcsIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0000E51B 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E529 - 0000E565 (0x3d bytes), align: 0
  Segment part 62.            Intra module refs:   macRxTxReset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxPromiscuousMode    0000E529 
               calls direct
               stack 1 = 00000002 ( 00000002 )

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\mac_rx_onoff.r51
  PROGRAM MODULE, NAME : mac_rx_onoff

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000EEBF - 0000EEBF (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   macRxHardDisable
                                                   macRxOff
                                                   macRxOn
                                                   macRxOnOffInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxOnFlag             0000EEBF        macCspTxGoSlotted (mac_csp_tx)
                                                   rxStartIsr (mac_rx)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EEC0 - 0000EEC0 (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   macRxDisable
                                                   macRxEnable
                                                   macRxHardDisable
                                                   macRxOffRequest
                                                   macRxOnOffInit
                                                   macRxOnRequest
                                                   macRxSoftEnable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxEnableFlags        0000EEC0 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000160BA - 000160C8 (0xf bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxOnOffInit          000160BA        macLowLevelInit (mac_low_level)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000160C9 - 000160D1 (0x9 bytes), align: 0
  Segment part 12.            Intra module refs:   macRxHardDisable
                                                   macRxOff
                                                   macRxOn
                                                   macRxOnOffInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            000160C9 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000160D2 - 000160FB (0x2a bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxEnable             000160D2        MAC_MlmeSetReq (mac_pib)
                                                   macApiScanReq (mac_scan)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000160FC - 00016105 (0xa bytes), align: 0
  Segment part 14.            Intra module refs:   macRxDisable
                                                   macRxEnable
                                                   macRxOffRequest
                                                   macRxOnRequest
                                                   macRxSoftEnable
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            000160FC 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00016106 - 00016125 (0x20 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxSoftEnable         00016106        macApiPollReq (mac_device)
                                                   macAssocDataReq (mac_device)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00016126 - 00016152 (0x2d bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxDisable            00016126        MAC_MlmeSetReq (mac_pib)
                                                   macAssocDataReqComplete (mac_device)
                                                   macAssocDataRxInd (mac_device)
                                                   macAssocFailed (mac_device)
                                                   macPollDataReqComplete (mac_device)
                                                   macPollDataRxInd (mac_device)
                                                   macPollFrameResponseTimeout (mac_device)
                                                   macRxAssocRsp (mac_device)
                                                   macScanComplete (mac_scan)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00016153 - 00016175 (0x23 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxHardDisable        00016153        macRxTxReset (mac_rx)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00016176 - 00016193 (0x1e bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxOnRequest          00016176        macRadioUpdateChannel (mac_radio)
                                                   macSleepWakeUp (mac_sleep)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00016194 - 000161C7 (0x34 bytes), align: 0
  Segment part 19.            Intra module refs:   macRxDisable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxOffRequest         00016194        rxFcsIsr (mac_rx)
                                                   rxPostRxUpdates (mac_rx)
                                                   txComplete (mac_tx)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000161C8 - 000161E1 (0x1a bytes), align: 0
  Segment part 20.            Intra module refs:   macRxEnable
                                                   macRxOnRequest
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxOn                 000161C8        macCspTxGoCsma (mac_csp_tx)
                                                   macMcuInit (mac_mcu)
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000009 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000161E2 - 000161FC (0x1b bytes), align: 0
  Segment part 21.            Intra module refs:   macRxOffRequest
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxOff                000161E2        macMcuInit (mac_mcu)
                                                   macRadioUpdateChannel (mac_radio)
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000009 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000161FD - 00016207 (0xb bytes), align: 0
  Segment part 22.            Intra module refs:   macRxHardDisable
                                                   macRxOff
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            000161FD 

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\mac_sleep.r51
  PROGRAM MODULE, NAME : mac_sleep

  SEGMENTS IN THE MODULE
  ======================
XDATA_I
  Relative segment, address: XDATA 0000F0E1 - 0000F0E1 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   macSleepWakeUp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSleepState           0000F0E1        macLowLevelReset (mac_low_level)
                                                   macRadioStartScan (mac_radio)
                                                   macTxFrame (mac_tx)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00016AE1 - 00016B2E (0x4e bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSleepWakeUp          00016AE1        macLowLevelReset (mac_low_level)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001637 - 00001637 (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   macSleepState

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\mac_tx.r51
  PROGRAM MODULE, NAME : mac_tx

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000EEC1 - 0000EEC1 (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   ?Subroutine3
                                                   macTxAckNotReceivedCallback
                                                   macTxAckReceivedCallback
                                                   macTxDoneCallback
                                                   macTxFrame
                                                   macTxStartQueuedFrame
                                                   txComplete
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxActive             0000EEC1        halAssertHazardLights (hal_assert)
                                                   macRadioSetChannel (mac_radio)
                                                   macRadioUpdateChannel (mac_radio)
                                                   macRadioUpdateTxPower (mac_radio)
                                                   macRxOffRequest (mac_rx_onoff)
                                                   rxStartIsr (mac_rx)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EEC2 - 0000EEC2 (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   macTxChannelBusyCallback
                                                   macTxFrame
                                                   macTxFrameRetransmit
                                                   txCsmaGo
                                                   txCsmaPrep
                                                   txGo
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxType               0000EEC2 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EEC3 - 0000EEC3 (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   macTxChannelBusyCallback
                                                   macTxFrame
                                                   txCsmaPrep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxBe                 0000EEC3 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EEC4 - 0000EEC4 (0x1 bytes), align: 0
  Segment part 13.            Intra module refs:   txCsmaGo
                                                   txCsmaPrep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxCsmaBackoffDelay   0000EEC4        macCspTxGoCsma (mac_csp_tx)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EEC5 - 0000EEC5 (0x1 bytes), align: 0
  Segment part 14.            Intra module refs:   macTxChannelBusyCallback
                                                   macTxFrame
           LOCAL                   ADDRESS         
           =====                   =======         
           nb                      0000EEC5 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EEC6 - 0000EEC6 (0x1 bytes), align: 0
  Segment part 15.            Intra module refs:   macTxAckReceivedCallback
                                                   macTxFrame
           LOCAL                   ADDRESS         
           =====                   =======         
           txSeqn                  0000EEC6 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EEC7 - 0000EEC7 (0x1 bytes), align: 0
  Segment part 16.            Intra module refs:   macTxDoneCallback
                                                   macTxFrame
           LOCAL                   ADDRESS         
           =====                   =======         
           txAckReq                0000EEC7 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EEC8 - 0000EEC8 (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   ?Subroutine3
                                                   macTxFrame
                                                   macTxFrameRetransmit
                                                   txComplete
           LOCAL                   ADDRESS         
           =====                   =======         
           txRetransmitFlag        0000EEC8 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012D42 - 00012D48 (0x7 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxInit               00012D42        macLowLevelInit (mac_low_level)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012D49 - 00012E6D (0x125 bytes), align: 0
  Segment part 20.            Intra module refs:   macTxFrameRetransmit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxFrame              00012D49        macDataTxSend (mac_data)
               calls direct, is recursive
               stack 1 = 00000002 ( 00000001 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012E6E - 00012E79 (0xc bytes), align: 0
  Segment part 21.            Intra module refs:   macTxFrame
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            00012E6E 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012E7A - 00012EB9 (0x40 bytes), align: 0
  Segment part 22.            Intra module refs:   macTxChannelBusyCallback
                                                   macTxFrame
           LOCAL                   ADDRESS         
           =====                   =======         
           txCsmaPrep              00012E7A 
               calls direct
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000009 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012EBA - 00012EDD (0x24 bytes), align: 0
  Segment part 23.            Intra module refs:   ?Subroutine2
           LOCAL                   ADDRESS         
           =====                   =======         
           txGo                    00012EBA 
               calls direct, is recursive
               stack 1 = 00000002 ( 00000002 )
               stack 2 = 00000009 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012EDE - 00012F09 (0x2c bytes), align: 0
  Segment part 24.            Intra module refs:   macTxChannelBusyCallback
                                                   txGo
           LOCAL                   ADDRESS         
           =====                   =======         
           txCsmaGo                00012EDE 
               calls direct, is recursive
               stack 1 = 00000002 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012F0A - 00012F1D (0x14 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxFrameRetransmit    00012F0A        macTxCompleteCallback (mac_data)
               calls direct, is recursive
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012F1E - 00012F22 (0x5 bytes), align: 0
  Segment part 26.            Intra module refs:   macTxChannelBusyCallback
                                                   macTxFrameRetransmit
                                                   txCsmaGo
                                                   txGo
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            00012F1E 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012F23 - 00012F32 (0x10 bytes), align: 0
  Segment part 27.            Intra module refs:   ?Subroutine5
                                                   macTxInit
                                                   macTxStartQueuedFrame
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            00012F23 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012F33 - 00012F67 (0x35 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxStartQueuedFrame   00012F33        rxPostRxUpdates (mac_rx)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012F68 - 00012F70 (0x9 bytes), align: 0
  Segment part 29.            Intra module refs:   macTxFrame
                                                   macTxStartQueuedFrame
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            00012F68 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012F71 - 00012FDE (0x6e bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxChannelBusyCallback
                                   00012F71        macCspTxStopIsr (mac_csp_tx)
               calls direct
               stack 1 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012FDF - 00013022 (0x44 bytes), align: 0
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxDoneCallback       00012FDF        macCspForceTxDoneIfPending (mac_csp_tx)
                                                   macCspTxStopIsr (mac_csp_tx)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00013023 - 0001306D (0x4b bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxAckReceivedCallback
                                   00013023        rxStartIsr (mac_rx)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001306E - 00013072 (0x5 bytes), align: 0
  Segment part 33.            Intra module refs:   macTxAckNotReceivedCallback
                                                   macTxAckReceivedCallback
                                                   macTxDoneCallback
                                                   macTxFrame
                                                   txComplete
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0001306E 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00013073 - 000130A7 (0x35 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxAckNotReceivedCallback
                                   00013073        macCspTxStopIsr (mac_csp_tx)
                                                   rxStartIsr (mac_rx)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000130A8 - 000130DB (0x34 bytes), align: 0
  Segment part 35.            Intra module refs:   macTxAckNotReceivedCallback
                                                   macTxAckReceivedCallback
                                                   macTxChannelBusyCallback
                                                   macTxDoneCallback
                                                   macTxFrame
                                                   txCsmaGo
           LOCAL                   ADDRESS         
           =====                   =======         
           txComplete              000130A8 
               calls direct, is recursive
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000130DC - 00013134 (0x59 bytes), align: 0
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxTimestampCallback
                                   000130DC        macCspTxIntIsr (mac_csp_tx)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00013135 - 00013144 (0x10 bytes), align: 0
  Segment part 37.            Intra module refs:   macTxFrame
                                                   macTxTimestampCallback
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00013135 

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\menu_lcd.r51
  PROGRAM MODULE, NAME : menu_lcd

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000EEC9 - 0000EEC9 (0x1 bytes), align: 0
  Segment part 102.           Intra module refs:   ?Subroutine21
                                                   ?Subroutine28
                                                   DrawMenu
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NowItem                 0000EEC9 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EECA - 0000EECA (0x1 bytes), align: 0
  Segment part 103.           Intra module refs:   ?Subroutine11
                                                   ?Subroutine20
                                                   ?Subroutine21
                                                   DrawMenu
                                                   MenuMenuDisp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FirstItem               0000EECA 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F0E2 - 0000F0F2 (0x11 bytes), align: 0
  Segment part 10.            Intra module refs:   Uart_Menu
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F0F3 - 0000F101 (0xf bytes), align: 0
  Segment part 12.            Intra module refs:   Uart_Send
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F102 - 0000F10C (0xb bytes), align: 0
  Segment part 14.            Intra module refs:   Uart_Pingpong
                                                   Uart_RX
                                                   Uart_Send
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F10D - 0000F111 (0x5 bytes), align: 0
  Segment part 16.            Intra module refs:   Uart_Pingpong
                                                   Uart_RX
                                                   Uart_Send
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F112 - 0000F122 (0x11 bytes), align: 0
  Segment part 18.            Intra module refs:   Uart_Send
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F123 - 0000F150 (0x2e bytes), align: 0
  Segment part 20.            Intra module refs:   Uart_Pingpong
                                                   Uart_RX
                                                   Uart_Send
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F151 - 0000F160 (0x10 bytes), align: 0
  Segment part 22.            Intra module refs:   Uart_Send
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F161 - 0000F16F (0xf bytes), align: 0
  Segment part 24.            Intra module refs:   Aboat_Driver
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F170 - 0000F180 (0x11 bytes), align: 0
  Segment part 26.            Intra module refs:   Uart_Pingpong
                                                   Uart_RX
                                                   Uart_Send
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F181 - 0000F18D (0xd bytes), align: 0
  Segment part 28.            Intra module refs:   Uart_Send
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F18E - 0000F19A (0xd bytes), align: 0
  Segment part 30.            Intra module refs:   Uart_RX
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F19B - 0000F1A0 (0x6 bytes), align: 0
  Segment part 32.            Intra module refs:   Uart_Pingpong
                                                   Uart_RX
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F1A1 - 0000F1AE (0xe bytes), align: 0
  Segment part 34.            Intra module refs:   Uart_RX
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F1AF - 0000F1BB (0xd bytes), align: 0
  Segment part 36.            Intra module refs:   Uart_Pingpong
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F1BC - 0000F1CF (0x14 bytes), align: 0
  Segment part 38.            Intra module refs:   Uart_Pingpong
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F1D0 - 0000F1DB (0xc bytes), align: 0
  Segment part 40.            Intra module refs:   ReadBattery_menu
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F1DC - 0000F1E6 (0xb bytes), align: 0
  Segment part 42.            Intra module refs:   Temp_menu
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F1E7 - 0000F1F7 (0x11 bytes), align: 0
  Segment part 44.            Intra module refs:   ClearScreenLcd
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F1F8 - 0000F208 (0x11 bytes), align: 0
  Segment part 46.            Intra module refs:   MenuMenuDisp
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F209 - 0000F219 (0x11 bytes), align: 0
  Segment part 48.            Intra module refs:   MenuMenuDisp
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F21A - 0000F22A (0x11 bytes), align: 0
  Segment part 50.            Intra module refs:   MenuMenuDisp
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F22B - 0000F23B (0x11 bytes), align: 0
  Segment part 52.            Intra module refs:   MenuMenuDisp
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F23C - 0000F24C (0x11 bytes), align: 0
  Segment part 54.            Intra module refs:   Zigbee_Network
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F24D - 0000F25D (0x11 bytes), align: 0
  Segment part 56.            Intra module refs:   Zigbee_Network
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F25E - 0000F26E (0x11 bytes), align: 0
  Segment part 58.            Intra module refs:   Send_Option
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F26F - 0000F27F (0x11 bytes), align: 0
  Segment part 60.            Intra module refs:   Send_Option
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F280 - 0000F290 (0x11 bytes), align: 0
  Segment part 62.            Intra module refs:   Send_Test
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F291 - 0000F2A1 (0x11 bytes), align: 0
  Segment part 64.            Intra module refs:   Send_Test
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F2A2 - 0000F2A7 (0x6 bytes), align: 0
  Segment part 66.            Intra module refs:   Send_Broadcast
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F2A8 - 0000F2B6 (0xf bytes), align: 0
  Segment part 68.            Intra module refs:   Send_Broadcast
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F2B7 - 0000F2BC (0x6 bytes), align: 0
  Segment part 70.            Intra module refs:   Aboat_Driver
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F2BD - 0000F2C2 (0x6 bytes), align: 0
  Segment part 72.            Intra module refs:   Uart_Send
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F2C3 - 0000F2CD (0xb bytes), align: 0
  Segment part 74.            Intra module refs:   Aboat_Driver
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F2CE - 0000F2D1 (0x4 bytes), align: 0
  Segment part 76.            Intra module refs:   Aboat_Driver
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F2D2 - 0000F2DE (0xd bytes), align: 0
  Segment part 78.            Intra module refs:   SelectTxAddr
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F2DF - 0000F2EB (0xd bytes), align: 0
  Segment part 80.            Intra module refs:   SingleTxTest
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F2EC - 0000F2F6 (0xb bytes), align: 0
  Segment part 82.            Intra module refs:   SingleTxTest
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F2F7 - 0000F2FE (0x8 bytes), align: 0
  Segment part 84.            Intra module refs:   PingpongTxTest
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F2FF - 0000F306 (0x8 bytes), align: 0
  Segment part 86.            Intra module refs:   PingpongTxTest
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F307 - 0000F310 (0xa bytes), align: 0
  Segment part 88.            Intra module refs:   PingpongTxTest
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F311 - 0000F313 (0x3 bytes), align: 0
  Segment part 90.            Intra module refs:   PingpongTxTest
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F314 - 0000F31E (0xb bytes), align: 0
  Segment part 92.            Intra module refs:   PingpongTxTest
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F31F - 0000F32F (0x11 bytes), align: 0
  Segment part 94.            Intra module refs:   Sensor_Menu
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F330 - 0000F340 (0x11 bytes), align: 0
  Segment part 96.            Intra module refs:   Sensor_Menu
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F341 - 0000F351 (0x11 bytes), align: 0
  Segment part 98.            Intra module refs:   Uart_Menu
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F352 - 0000F362 (0x11 bytes), align: 0
  Segment part 100.           Intra module refs:   Uart_Menu
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EECB - 0000EFA7 (0xdd bytes), align: 0
  Segment part 106.           Intra module refs:   ?Subroutine8
                                                   MenuMenuDisp
                                                   SelectTxAddr
                                                   Send_Option
                                                   Send_Test
                                                   Sensor_Menu
                                                   Uart_Menu
                                                   Zigbee_Network
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MenuItem                0000EECB 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EFA8 - 0000EFB8 (0x11 bytes), align: 0
  Segment part 107.           Intra module refs:   Aboat_Driver
                                                   IEEE_menu
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           disp_ieee               0000EFA8 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EFB9 - 0000EFBF (0x7 bytes), align: 0
  Segment part 108.           Intra module refs:   Aboat_Driver
                                                   Short_menu
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Short_Add               0000EFB9 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F363 - 0000F364 (0x2 bytes), align: 0
  Segment part 109.           Intra module refs:   ?Subroutine11
                                                   ?Subroutine2
                                                   ?Subroutine29
                                                   Aboat_Driver
                                                   MenuMenuDisp
                                                   Menu_all
                                                   Send_Broadcast
                                                   Send_Option
                                                   Send_Test
                                                   Sensor_Menu
                                                   Uart_Menu
                                                   Uart_Send
                                                   Zigbee_Network
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Menu_option             0000F363 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EFC0 - 0000EFC1 (0x2 bytes), align: 0
  Segment part 111.           Intra module refs:   Uart_RX
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Uart_Rx_Flag            0000EFC0 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EFC2 - 0000EFC3 (0x2 bytes), align: 0
  Segment part 112.           Intra module refs:   Uart_Pingpong
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Uart_PP_Flag            0000EFC2 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EFC4 - 0000EFC5 (0x2 bytes), align: 0
  Segment part 113.           Intra module refs:   PingpongTxTest
                                                   Send_Broadcast
                                                   Send_Option
                                                   SingleTxTest
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Send_Flag               0000EFC4 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EFC6 - 0000EFC7 (0x2 bytes), align: 0
  Segment part 114.           Intra module refs:   PingpongTxTest
                                                   Send_Broadcast
                                                   SingleTxTest
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Send_Flag_Consecution   0000EFC6 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EFC8 - 0000EFC9 (0x2 bytes), align: 0
  Segment part 115.           Intra module refs:   ?Subroutine0
                                                   PingpongTxTest
                                                   SelectTxAddr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SrcSaddr                0000EFC8 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004770 - 0000479C (0x2d bytes), align: 0
  Segment part 122.           Intra module refs:   DrawMenu
                                                   PingpongTxTest
                                                   ReadBattery_menu
                                                   SelectTxAddr
                                                   Send_Broadcast
                                                   SingleTxTest
                                                   Temp_menu
                                                   Uart_Pingpong
                                                   Uart_RX
                                                   Uart_Send
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ClearScreenLcd          00004770 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000020 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000479D - 00004897 (0xfb bytes), align: 0
  Segment part 123.           Intra module refs:   MenuMenuDisp
                                                   SelectTxAddr
                                                   Send_Option
                                                   Send_Test
                                                   Sensor_Menu
                                                   Uart_Menu
                                                   Zigbee_Network
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DrawMenu                0000479D 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000020 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004898 - 000048C2 (0x2b bytes), align: 0
  Segment part 124.           Intra module refs:   DrawMenu
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine14           00004898 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000048C3 - 00004966 (0xa4 bytes), align: 0
  Segment part 125.           Intra module refs:   Menu_all
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MenuMenuDisp            000048C3 
               calls direct, is recursive
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004967 - 00004AB5 (0x14f bytes), align: 0
  Segment part 126.           Intra module refs:   ?Subroutine27
                                                   MenuMenuDisp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Menu_all                00004967        SampleApp_ProcessEvent (SampleApp)
               calls direct, is recursive
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000020 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004AB6 - 00004B1A (0x65 bytes), align: 0
  Segment part 127.           Intra module refs:   Menu_all
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Zigbee_Network          00004AB6 
               calls direct, is recursive
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004B1B - 00004B91 (0x77 bytes), align: 0
  Segment part 128.           Intra module refs:   Menu_all
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Send_Option             00004B1B 
               calls direct, is recursive
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004B92 - 00004B96 (0x5 bytes), align: 0
  Segment part 129.           Intra module refs:   ?Subroutine20
                                                   MenuMenuDisp
                                                   Send_Option
                                                   Sensor_Menu
                                                   Uart_Menu
                                                   Zigbee_Network
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine28           00004B92 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004B97 - 00004C00 (0x6a bytes), align: 0
  Segment part 130.           Intra module refs:   Menu_all
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Send_Test               00004B97 
               calls direct, is recursive
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004C01 - 00004C05 (0x5 bytes), align: 0
  Segment part 131.           Intra module refs:   MenuMenuDisp
                                                   Send_Option
                                                   Send_Test
                                                   Sensor_Menu
                                                   Uart_Menu
                                                   Zigbee_Network
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine30           00004C01 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004C06 - 00004C0C (0x7 bytes), align: 0
  Segment part 132.           Intra module refs:   Send_Broadcast
                                                   Send_Option
                                                   Send_Test
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            00004C06 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004C0D - 00004C13 (0x7 bytes), align: 0
  Segment part 133.           Intra module refs:   ?Subroutine2
                                                   ?Subroutine5
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine20           00004C0D 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004C14 - 00004CA1 (0x8e bytes), align: 0
  Segment part 134.           Intra module refs:   Menu_all
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Send_Broadcast          00004C14 
               calls direct, is recursive
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004CA2 - 00004D76 (0xd5 bytes), align: 0
  Segment part 135.           Intra module refs:   Menu_all
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Aboat_Driver            00004CA2 
               calls direct, is recursive
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004D77 - 00004E6C (0xf6 bytes), align: 0
  Segment part 136.           Intra module refs:   Aboat_Driver
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IEEE_menu               00004D77 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000A ( 00000022 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004E6D - 00004E6D (0x1 bytes), align: 0
  Segment part 137.           Intra module refs:   IEEE_menu
                                                   Short_menu
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine17           00004E6D 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004E6E - 00004E75 (0x8 bytes), align: 0
  Segment part 138.           Intra module refs:   ?Subroutine17
                                                   ?Subroutine7
                                                   PingpongTxTest
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine26           00004E6E 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004E76 - 00004E85 (0x10 bytes), align: 0
  Segment part 139.           Intra module refs:   IEEE_menu
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            00004E76 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004E86 - 00004ECA (0x45 bytes), align: 0
  Segment part 140.           Intra module refs:   IEEE_menu
                                                   PingpongTxTest
                                                   Short_menu
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Ten_to_16               00004E86 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000022 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004ECB - 00004F52 (0x88 bytes), align: 0
  Segment part 141.           Intra module refs:   Aboat_Driver
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Short_menu              00004ECB 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000A ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004F53 - 00004F5C (0xa bytes), align: 0
  Segment part 142.           Intra module refs:   Aboat_Driver
                                                   ClearScreenLcd
                                                   IEEE_menu
                                                   ReadBattery_menu
                                                   Send_Broadcast
                                                   Short_menu
                                                   SingleTxTest
                                                   Temp_menu
                                                   Uart_Pingpong
                                                   Uart_RX
                                                   Uart_Send
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine25           00004F53 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004F5D - 00004F60 (0x4 bytes), align: 0
  Segment part 143.           Intra module refs:   IEEE_menu
                                                   Short_menu
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine19           00004F5D 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004F61 - 00004F6B (0xb bytes), align: 0
  Segment part 144.           Intra module refs:   ?Subroutine19
                                                   ?Subroutine7
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine23           00004F61 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004F6C - 00004F76 (0xb bytes), align: 0
  Segment part 145.           Intra module refs:   IEEE_menu
                                                   Short_menu
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine15           00004F6C 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004F77 - 00004F81 (0xb bytes), align: 0
  Segment part 146.           Intra module refs:   ?Subroutine15
                                                   IEEE_menu
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine24           00004F77 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004F82 - 00005133 (0x1b2 bytes), align: 0
  Segment part 147.           Intra module refs:   Menu_all
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SelectTxAddr            00004F82 
               calls direct, is recursive
               stack 1 = 00000002 ( 00000001 )
               stack 2 = 00000000 ( 00000022 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005134 - 00005142 (0xf bytes), align: 0
  Segment part 148.           Intra module refs:   SelectTxAddr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine18           00005134 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005143 - 00005158 (0x16 bytes), align: 0
  Segment part 149.           Intra module refs:   SelectTxAddr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine16           00005143 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005159 - 00005181 (0x29 bytes), align: 0
  Segment part 150.           Intra module refs:   SelectTxAddr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            00005159 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005182 - 0000519F (0x1e bytes), align: 0
  Segment part 151.           Intra module refs:   SelectTxAddr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            00005182 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000051A0 - 000051AB (0xc bytes), align: 0
  Segment part 152.           Intra module refs:   ?Subroutine3
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine22           000051A0 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000051AC - 000051B8 (0xd bytes), align: 0
  Segment part 153.           Intra module refs:   SelectTxAddr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            000051AC 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000051B9 - 00005272 (0xba bytes), align: 0
  Segment part 154.           Intra module refs:   Menu_all
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SingleTxTest            000051B9 
               calls direct, is recursive
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EFCA - 0000EFCB (0x2 bytes), align: 0
  Segment part 117.           Intra module refs:   PingpongTxTest
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           flag                    0000EFCA 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005273 - 00005488 (0x216 bytes), align: 0
  Segment part 155.           Intra module refs:   Menu_all
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PingpongTxTest          00005273 
               calls direct, is recursive
               stack 1 = 00000002 ( 00000001 )
               stack 2 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005489 - 0000548E (0x6 bytes), align: 0
  Segment part 156.           Intra module refs:   PingpongTxTest
                                                   SingleTxTest
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           00005489 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000548F - 0000549F (0x11 bytes), align: 0
  Segment part 157.           Intra module refs:   PingpongTxTest
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            0000548F 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000054A0 - 000054B3 (0x14 bytes), align: 0
  Segment part 158.           Intra module refs:   PingpongTxTest
                                                   SingleTxTest
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            000054A0 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000054B4 - 00005523 (0x70 bytes), align: 0
  Segment part 159.           Intra module refs:   Menu_all
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Sensor_Menu             000054B4 
               calls direct, is recursive
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005524 - 0000552E (0xb bytes), align: 0
  Segment part 160.           Intra module refs:   Sensor_Menu
                                                   Uart_Menu
                                                   Zigbee_Network
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           00005524 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000552F - 000055A9 (0x7b bytes), align: 0
  Segment part 161.           Intra module refs:   Menu_all
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Uart_Menu               0000552F 
               calls direct, is recursive
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000055AA - 000055B2 (0x9 bytes), align: 0
  Segment part 162.           Intra module refs:   PingpongTxTest
                                                   SelectTxAddr
                                                   SingleTxTest
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            000055AA 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000055B3 - 000055BA (0x8 bytes), align: 0
  Segment part 163.           Intra module refs:   ?Subroutine2
                                                   ?Subroutine4
                                                   Send_Option
                                                   Send_Test
                                                   Sensor_Menu
                                                   Uart_Menu
                                                   Zigbee_Network
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine27           000055B3 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000055BB - 000055C1 (0x7 bytes), align: 0
  Segment part 164.           Intra module refs:   ?Subroutine10
                                                   ?Subroutine4
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine21           000055BB 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000055C2 - 000055C6 (0x5 bytes), align: 0
  Segment part 165.           Intra module refs:   ?Subroutine12
                                                   ?Subroutine21
                                                   Send_Broadcast
                                                   Send_Option
                                                   Uart_Pingpong
                                                   Uart_RX
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine29           000055C2 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000055C7 - 000056E5 (0x11f bytes), align: 0
  Segment part 166.           Intra module refs:   Menu_all
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Uart_Send               000055C7 
               calls direct, is recursive
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000056E6 - 000057EB (0x106 bytes), align: 0
  Segment part 167.           Intra module refs:   Menu_all
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Uart_RX                 000056E6 
               calls direct, is recursive
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000057EC - 000058F1 (0x106 bytes), align: 0
  Segment part 168.           Intra module refs:   Menu_all
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Uart_Pingpong           000057EC 
               calls direct, is recursive
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000058F2 - 000058FA (0x9 bytes), align: 0
  Segment part 169.           Intra module refs:   ReadBattery_menu
                                                   Temp_menu
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine12           000058F2 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000058FB - 00005902 (0x8 bytes), align: 0
  Segment part 170.           Intra module refs:   ReadBattery_menu
                                                   SingleTxTest
                                                   Temp_menu
                                                   Uart_Pingpong
                                                   Uart_RX
                                                   Uart_Send
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            000058FB 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005903 - 00005949 (0x47 bytes), align: 0
  Segment part 171.           Intra module refs:   Menu_all
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ReadBattery_menu        00005903 
               calls direct, is recursive
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000594A - 00005990 (0x47 bytes), align: 0
  Segment part 172.           Intra module refs:   Menu_all
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Temp_menu               0000594A 
               calls direct, is recursive
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005991 - 000059A2 (0x12 bytes), align: 0
  Segment part 173.           Intra module refs:   Aboat_Driver
                                                   ReadBattery_menu
                                                   Send_Broadcast
                                                   Temp_menu
                                                   Uart_Pingpong
                                                   Uart_RX
                                                   Uart_Send
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            00005991 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001638 - 00001648 (0x11 bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 10
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001649 - 00001657 (0xf bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 12
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001658 - 00001662 (0xb bytes), align: 0
  Segment part 15.            Intra module refs:   Segment part 14
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001663 - 00001667 (0x5 bytes), align: 0
  Segment part 17.            Intra module refs:   Segment part 16
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001668 - 00001678 (0x11 bytes), align: 0
  Segment part 19.            Intra module refs:   Segment part 18
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001679 - 000016A6 (0x2e bytes), align: 0
  Segment part 21.            Intra module refs:   Segment part 20
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000016A7 - 000016B6 (0x10 bytes), align: 0
  Segment part 23.            Intra module refs:   Segment part 22
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000016B7 - 000016C5 (0xf bytes), align: 0
  Segment part 25.            Intra module refs:   Segment part 24
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000016C6 - 000016D6 (0x11 bytes), align: 0
  Segment part 27.            Intra module refs:   Segment part 26
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000016D7 - 000016E3 (0xd bytes), align: 0
  Segment part 29.            Intra module refs:   Segment part 28
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000016E4 - 000016F0 (0xd bytes), align: 0
  Segment part 31.            Intra module refs:   Segment part 30
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000016F1 - 000016F6 (0x6 bytes), align: 0
  Segment part 33.            Intra module refs:   Segment part 32
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000016F7 - 00001704 (0xe bytes), align: 0
  Segment part 35.            Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001705 - 00001711 (0xd bytes), align: 0
  Segment part 37.            Intra module refs:   Segment part 36
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001712 - 00001725 (0x14 bytes), align: 0
  Segment part 39.            Intra module refs:   Segment part 38
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001726 - 00001731 (0xc bytes), align: 0
  Segment part 41.            Intra module refs:   Segment part 40
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001732 - 0000173C (0xb bytes), align: 0
  Segment part 43.            Intra module refs:   Segment part 42
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000173D - 0000174D (0x11 bytes), align: 0
  Segment part 45.            Intra module refs:   Segment part 44
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000174E - 0000175E (0x11 bytes), align: 0
  Segment part 47.            Intra module refs:   Segment part 46
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000175F - 0000176F (0x11 bytes), align: 0
  Segment part 49.            Intra module refs:   Segment part 48
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001770 - 00001780 (0x11 bytes), align: 0
  Segment part 51.            Intra module refs:   Segment part 50
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001781 - 00001791 (0x11 bytes), align: 0
  Segment part 53.            Intra module refs:   Segment part 52
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001792 - 000017A2 (0x11 bytes), align: 0
  Segment part 55.            Intra module refs:   Segment part 54
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000017A3 - 000017B3 (0x11 bytes), align: 0
  Segment part 57.            Intra module refs:   Segment part 56
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000017B4 - 000017C4 (0x11 bytes), align: 0
  Segment part 59.            Intra module refs:   Segment part 58
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000017C5 - 000017D5 (0x11 bytes), align: 0
  Segment part 61.            Intra module refs:   Segment part 60
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000017D6 - 000017E6 (0x11 bytes), align: 0
  Segment part 63.            Intra module refs:   Segment part 62
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000017E7 - 000017F7 (0x11 bytes), align: 0
  Segment part 65.            Intra module refs:   Segment part 64
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000017F8 - 000017FD (0x6 bytes), align: 0
  Segment part 67.            Intra module refs:   Segment part 66
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000017FE - 0000180C (0xf bytes), align: 0
  Segment part 69.            Intra module refs:   Segment part 68
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000180D - 00001812 (0x6 bytes), align: 0
  Segment part 71.            Intra module refs:   Segment part 70
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001813 - 00001818 (0x6 bytes), align: 0
  Segment part 73.            Intra module refs:   Segment part 72
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001819 - 00001823 (0xb bytes), align: 0
  Segment part 75.            Intra module refs:   Segment part 74
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001824 - 00001827 (0x4 bytes), align: 0
  Segment part 77.            Intra module refs:   Segment part 76
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001828 - 00001834 (0xd bytes), align: 0
  Segment part 79.            Intra module refs:   Segment part 78
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001835 - 00001841 (0xd bytes), align: 0
  Segment part 81.            Intra module refs:   Segment part 80
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001842 - 0000184C (0xb bytes), align: 0
  Segment part 83.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000184D - 00001854 (0x8 bytes), align: 0
  Segment part 85.            Intra module refs:   Segment part 84
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001855 - 0000185C (0x8 bytes), align: 0
  Segment part 87.            Intra module refs:   Segment part 86
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000185D - 00001866 (0xa bytes), align: 0
  Segment part 89.            Intra module refs:   Segment part 88
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001867 - 00001869 (0x3 bytes), align: 0
  Segment part 91.            Intra module refs:   Segment part 90
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000186A - 00001874 (0xb bytes), align: 0
  Segment part 93.            Intra module refs:   Segment part 92
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001875 - 00001885 (0x11 bytes), align: 0
  Segment part 95.            Intra module refs:   Segment part 94
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001886 - 00001896 (0x11 bytes), align: 0
  Segment part 97.            Intra module refs:   Segment part 96
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001897 - 000018A7 (0x11 bytes), align: 0
  Segment part 99.            Intra module refs:   Segment part 98
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000018A8 - 000018B8 (0x11 bytes), align: 0
  Segment part 101.           Intra module refs:   Segment part 100
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000018B9 - 000018BA (0x2 bytes), align: 0
  Segment part 110.           Intra module refs:   Menu_option

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\nwk_globals.r51
  PROGRAM MODULE, NAME : nwk_globals

  SEGMENTS IN THE MODULE
  ======================
CODE_C
  Relative segment, address: CODE 000021FE - 000021FE (0x1 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gNWK_MAX_DATABUFS_WAITING
                                   000021FE        nwkDB_Add (nwk_bufs)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000021FF - 000021FF (0x1 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gNWK_MAX_DATABUFS_SCHEDULED
                                   000021FF        nwkDB_Add (nwk_bufs)
                                                   nwk_MacDataBuffersFull (nwk_bufs)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00002200 - 00002200 (0x1 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gNWK_MAX_DATABUFS_TOTAL
                                   00002200        nwk_MacDataBuffersFull (nwk_bufs)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F365 - 0000F365 (0x1 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gMIN_TREE_LINK_COST     0000F365        nwk_ScanJoiningOrphan (nwk)
                                                   nwk_beacon_notify_ind_processing (nwk)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00002201 - 00002201 (0x1 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gMAX_NEIGHBOR_ENTRIES   00002201        NLME_GetNeighborIndex (nwk_util)
                                                   NLME_GetNeighborLinkInfo (nwk_util)
                                                   NLME_GetRequest (NLMEDE)
                                                   RTG_UpdateNeighborEntry (nwk_util)
                                                   nwk_associate_cnf_processing (nwk)
                                                   nwk_init (nwk)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EFCC - 0000EFF7 (0x2c bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           neighborTable           0000EFCC        NLME_GetNeighborIndex (nwk_util)
                                                   NLME_GetNeighborLinkInfo (nwk_util)
                                                   NLME_GetRequest (NLMEDE)
                                                   Segment part 46 (nwk)
                                                   Segment part 79 (nwk_util)
                                                   nwk_associate_cnf_processing (nwk)
                                                   nwk_init (nwk)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00002202 - 00002202 (0x1 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gAPS_MAX_GROUPS         00002202        aps_AddGroup (aps_groups)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00002203 - 00002212 (0x10 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           defaultKey              00002203        zgInit (ZGlobals)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001674F - 0001675E (0x10 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_globals_init        0001674F        nwk_init (nwk)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001675F - 00016765 (0x7 bytes), align: 0
  Segment part 26.            Intra module refs:   NIB_init
                                                   nwk_globals_init
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001675F 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00016766 - 0001681F (0xba bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NIB_init                00016766        nwk_init (nwk)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00016820 - 00016822 (0x3 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_Status              00016820        nwk_associate_cnf_processing (nwk)
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000018BB - 000018BB (0x1 bytes), align: 0
  Segment part 15.            Intra module refs:   gMIN_TREE_LINK_COST

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\saddr.r51
  PROGRAM MODULE, NAME : saddr

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00016347 - 000163AF (0x69 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sAddrCmp                00016347        macCoordAddrCmp (mac_mgmt)
                                                   macRxCoordRealign (mac_device)
                                                   macScanRxBeacon (mac_scan)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000163B0 - 000163B4 (0x5 bytes), align: 0
  Segment part 7.             Intra module refs:   sAddrCmp
                                                   sAddrCpy
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            000163B0 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000163B5 - 00016408 (0x54 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sAddrCpy                000163B5        macBuildBeaconNotifyInd (mac_mgmt)
                                                   macDisassocComplete (mac_mgmt)
                                                   macGetCoordAddress (mac_mgmt)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00016409 - 00016449 (0x41 bytes), align: 0
  Segment part 9.             Intra module refs:   sAddrCmp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sAddrExtCmp             00016409 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000009 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001644A - 00016470 (0x27 bytes), align: 0
  Segment part 10.            Intra module refs:   sAddrCpy
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sAddrExtCpy             0001644A        ?Subroutine14 (mac_rx)
                                                   macApiAssociateReq (mac_device)
                                                   macBuildHeader (mac_mgmt)
                                                   macCommStatusInd (mac_mgmt)
                                                   macRxDisassoc (mac_mgmt)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000009 ( 0000000E )

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\wait.r51
  PROGRAM MODULE, NAME : wait

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00016A23 - 00016A86 (0x64 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halWait                 00016A23        MenuMenuDisp (menu_lcd)
                                                   SampleApp_MessageMSGCB (SampleApp)
                                                   SampleApp_ProcessEvent (SampleApp)
                                                   SingleTxTest (menu_lcd)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000010 )

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\wxl_uart.r51
  PROGRAM MODULE, NAME : wxl_uart

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00016570 - 00016590 (0x21 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           initUARTtest            00016570        SampleApp_Init (SampleApp)
                                                   main (ZMain)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00016591 - 00016595 (0x5 bytes), align: 0
  Segment part 18.            Intra module refs:   initUARTtest
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00016591 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00016596 - 000165CB (0x36 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UartTX_Send_String      00016596        SampleApp_MessageMSGCB (SampleApp)
                                                   Uart_Pingpong (menu_lcd)
                                                   Uart_RX (menu_lcd)
                                                   Uart_Send (menu_lcd)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000165CC - 000165DF (0x14 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UartRX_Receive_Char     000165CC        SampleApp_MessageMSGCB (SampleApp)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000165E0 - 00016665 (0x86 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Uart_Baud_rate          000165E0        Uart_Pingpong (menu_lcd)
                                                   Uart_RX (menu_lcd)
                                                   Uart_Send (menu_lcd)
                                                   main (ZMain)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000A )

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\zmac.r51
  PROGRAM MODULE, NAME : zmac

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000EFF8 - 0000EFFB (0x4 bytes), align: 0
  Segment part 7.             Intra module refs:   ZMacScanReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _ScanChannels           0000EFF8 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EFFC - 0000EFFD (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   ZMacReset
                                                   ZMacScanReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMac_ScanBuf            0000EFFC        ?Subroutine0 (zmac_cb)
                                                   MAC_CbackEvent (zmac_cb)
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001232 - 0000125B (0x2a bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMacInit                00001232        main (ZMain)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000125C - 00001265 (0xa bytes), align: 0
  Segment part 10.            Intra module refs:   ZMacInit
                                                   ZMacReset
                                                   ZMacSetReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            0000125C 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001266 - 000012BF (0x5a bytes), align: 0
  Segment part 12.            Intra module refs:   ZMacInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMacReset               00001266 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000008 ( 00000009 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000012C0 - 000012E3 (0x24 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMacGetReq              000012C0        MT_ProcessSerialCommand (MTEL)
                                                   NLME_GetCoordExtAddr (nwk_util)
                                                   NLME_GetExtAddr (nwk_util)
                                                   NwkPollReq (nwk)
                                                   Segment part 69 (nwk_util)
                                                   nwk_ScanJoiningOrphan (nwk)
                                                   nwk_associate_cnf_processing (nwk)
                                                   zgInit (ZGlobals)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000012E4 - 00001315 (0x32 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMacSetReq              000012E4        MT_ProcessSerialCommand (MTEL)
                                                   NLME_JoinRequest (NLMEDE)
                                                   NLME_ReJoinRequest (NLMEDE)
                                                   NLME_RejoinRspCmdProcess (nwk_util)
                                                   ZDApp_ProcessNetworkJoin (ZDApp)
                                                   nwk_associate_cnf_processing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001316 - 00001327 (0x12 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMacAssociateReq        00001316        NLME_JoinRequest (NLMEDE)
               calls direct
               stack 1 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001328 - 0000132E (0x7 bytes), align: 0
  Segment part 16.            Intra module refs:   ZMacAssociateReq
                                                   ZMacScanReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            00001328 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000132F - 00001338 (0xa bytes), align: 0
  Segment part 20.            Intra module refs:   ZMacPollReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0000132F 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001339 - 0000133F (0x7 bytes), align: 0
  Segment part 21.            Intra module refs:   ?Subroutine0
                                                   ?Subroutine1
                                                   ?Subroutine2
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            00001339 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001340 - 00001454 (0x115 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMacScanReq             00001340        Segment part 31 (NLMEDE)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001455 - 00001459 (0x5 bytes), align: 0
  Segment part 24.            Intra module refs:   ZMacScanReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            00001455 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000145A - 00001462 (0x9 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMacSyncReq             0000145A        NLME_JoinRequest (NLMEDE)
                                                   nwk_ScanJoiningOrphan (nwk)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001463 - 0000146C (0xa bytes), align: 0
  Segment part 27.            Intra module refs:   ZMacAssociateReq
                                                   ZMacGetReq
                                                   ZMacPollReq
                                                   ZMacSyncReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            00001463 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000146D - 0000147A (0xe bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMacPollReq             0000146D        NwkPollReq (nwk)
               calls direct
               stack 1 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000147B - 00001540 (0xc6 bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMacDataReq             0000147B        nwk_data_req_send (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001541 - 00001548 (0x8 bytes), align: 0
  Segment part 30.            Intra module refs:   ZMacDataReq
                                                   ZMacScanReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            00001541 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001549 - 00001553 (0xb bytes), align: 0
  Segment part 31.            Intra module refs:   ZMacDataReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            00001549 

    *************************************************************************

  FILE NAME : E:\CPESÆ½Ì¨\Ó²¼þÆ½Ì¨\CC2430Í¨Ñ¶Æ½Ì¨\CC2430´®¿ÚÊÕ·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\EndDeviceEB\Obj\zmac_cb.r51
  PROGRAM MODULE, NAME : zmac_cb

  SEGMENTS IN THE MODULE
  ======================
CODE_C
  Relative segment, address: CODE 00002213 - 00002223 (0x11 bytes), align: 0
  Segment part 6.             Intra module refs:   ?Subroutine2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zmacCBSizeTable         00002213 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00013145 - 0001319C (0x58 bytes), align: 0
  Segment part 8.             Intra module refs:   MAC_CbackEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           getZMacDynamicSize      00013145 
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000015 ( 00000000 )
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00002224 - 00002234 (0x11 bytes), align: 0
  Segment part 7.             Intra module refs:   MAC_CbackEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zmacCBEventTable        00002224 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001319D - 0001349B (0x2ff bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_CbackEvent          0001319D        Segment part 15 (mac_device)
                                                   macCbackForEvent (mac_main)
                                                   macCommStatusInd (mac_mgmt)
                                                   macConflictSyncLossInd (mac_mgmt)
                                                   macDataRxInd (mac_data)
                                                   macDisassocComplete (mac_mgmt)
                                                   macRxBeacon (mac_mgmt)
                                                   macRxCompleteCallback (mac_data)
                                                   macRxCoordRealign (mac_device)
                                                   macRxDisassoc (mac_mgmt)
                                                   macScanComplete (mac_scan)
                                                   macScanFailedInProgress (mac_scan)
                                                   macScanRxBeacon (mac_scan)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000018 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001349C - 000134A4 (0x9 bytes), align: 0
  Segment part 10.            Intra module refs:   MAC_CbackEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            0001349C 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000134A5 - 000134AD (0x9 bytes), align: 0
  Segment part 11.            Intra module refs:   MAC_CbackEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            000134A5 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000134AE - 000134B8 (0xb bytes), align: 0
  Segment part 12.            Intra module refs:   MAC_CbackEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            000134AE 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000134B9 - 000134C2 (0xa bytes), align: 0
  Segment part 13.            Intra module refs:   MAC_CbackEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            000134B9 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000134C3 - 000134CF (0xd bytes), align: 0
  Segment part 14.            Intra module refs:   MAC_CbackEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            000134C3 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000134D0 - 000134DB (0xc bytes), align: 0
  Segment part 15.            Intra module refs:   MAC_CbackEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            000134D0 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000134DC - 000134ED (0x12 bytes), align: 0
  Segment part 16.            Intra module refs:   MAC_CbackEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            000134DC 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000134EE - 000134FE (0x11 bytes), align: 0
  Segment part 17.            Intra module refs:   MAC_CbackEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            000134EE 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000134FF - 00013503 (0x5 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_CbackCheckPending   000134FF        macRxCheckPendingCallback (mac_data)

    *************************************************************************

  FILE NAME : D:\Program Files\IAR Systems\Embedded Workbench 4.05 Evaluation version\8051\LIB\CLIB\cl-pli-blxd-1e16x01.r51
  LIBRARY MODULE, NAME : ?cmain

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 000000BD, align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cmain                  000000BD        __call_main (CSTARTUP)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000BD - 000000C5 (0x9 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __low_level_init_call   000000BD        __low_level_init (?low_level_init)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000C6 - 000000D5 (0x10 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_XDATA_Z          000000C6        AIB_MaxBindingTime (APS)
                                                   APSME_CmdPktHook (APSMEDE)
                                                   APSME_FrameSecApplyExtHook (APSMEDE)
                                                   APSME_FrameSecApplyHook (APSMEDE)
                                                   APSME_FrameSecRemoveHook (APSMEDE)
                                                   APSME_FrameSecSetupHook (APSMEDE)
                                                   APS_Counter (APS)
                                                   APS_TaskID (APS)
                                                   AddrMgrEntryData (AddrMgr)
                                                   AddrMgrEntryTotal (AddrMgr)
                                                   App_TaskID (SPIMgr)
                                                   CMD_Token (SPIMgr)
                                                   FBuff (OSAL_Nv)
                                                   FSC_Token (SPIMgr)
                                                   FirstItem (menu_lcd)
                                                   HalKeyConfigured (hal_key)
                                                   HalLedState (hal_led)
                                                   HalLedStatusControl (hal_led)
                                                   HalUARTPoll::tickShdw (hal_uart)
                                                   Hal_KeyIntEnable (hal_key)
                                                   Hal_TaskID (hal_drivers)
                                                   JoinNode (SampleApp)
                                                   LEN_Token (SPIMgr)
                                                   MT_TaskID (MTEL)
                                                   MenuItem (menu_lcd)
                                                   NLME_ScanFields (NLMEDE)
                                                   NWK_TaskID (nwk)
                                                   NowItem (menu_lcd)
                                                   NwkDescList (nwk)
                                                   OnboardKeyIntEnable (OnBoard)
                                                   OnboardTimerIntEnable (OnBoard)
                                                   RfRx (SampleApp)
                                                   RfTx (SampleApp)
                                                   SPI_Msg (SPIMgr)
                                                   SSP_GetMicLenHook (ssp)
                                                   SSP_NwkSecurityHook (ssp)
                                                   SampleApp_Flash_DstAddr (SampleApp)
                                                   SampleApp_Group (SampleApp)
                                                   SampleApp_NwkState (SampleApp)
                                                   SampleApp_Periodic_DstAddr (SampleApp)
                                                   SampleApp_TaskID (SampleApp)
                                                   SampleApp_TransID (SampleApp)
                                                   SampleApp_epDesc (SampleApp)
                                                   Segment part 13 (mac_timer)
                                                   Segment part 13 (nwk_util)
                                                   Segment part 6 (aps_groups)
                                                   Segment part 6 (nwk_util)
                                                   Segment part 7 (mac_scan)
                                                   Send_Data (SampleApp)
                                                   Send_Flag (menu_lcd)
                                                   Send_Flag_Consecution (menu_lcd)
                                                   Sensor_Flag (SampleApp)
                                                   Short_Add (menu_lcd)
                                                   SrcSaddr (menu_lcd)
                                                   Uart_PP_Flag (menu_lcd)
                                                   Uart_Rx_Data (SPIMgr)
                                                   Uart_Rx_Flag (menu_lcd)
                                                   Uart_len (SPIMgr)
                                                   ZDAppNwkAddr (ZDApp)
                                                   ZDAppTaskID (ZDApp)
                                                   ZDApp_AutoFindMode_epDesc (ZDApp)
                                                   ZDApp_LeaveCtrl (ZDApp)
                                                   ZDApp_MatchDescRsp_TaskID (ZDApp)
                                                   ZDOBuildBuf (ZDObject)
                                                   ZDP_Buf (ZDProfile)
                                                   ZDP_TxOptions (ZDProfile)
                                                   ZMac_ScanBuf (zmac)
                                                   _NIB (nwk)
                                                   _ScanChannels (zmac)
                                                   _theHeap (OSAL_Memory)
                                                   _tmpRejoinState (ZDApp)
                                                   aExtendedAddress (OnBoard)
                                                   activeTask (OSAL_Tasks)
                                                   apsfProcessAck (APS)
                                                   apsfSendFragmented (APS)
                                                   apsfSendOsalMsg (APS)
                                                   backoffTimerRollover (mac_backoff_timer)
                                                   backoffTimerTrigger (mac_backoff_timer)
                                                   cfg0 (hal_uart)
                                                   cntIndirectHolding (nwk_bufs)
                                                   compareState (mac_backoff_timer)
                                                   debugCompId (MTEL)
                                                   debugThreshold (MTEL)
                                                   devStartMode (ZDApp)
                                                   disp_ieee (menu_lcd)
                                                   dmaCh0 (hal_dma)
                                                   dmaCh1234 (hal_dma)
                                                   epList (AF)
                                                   failF (OSAL_Nv)
                                                   ff1 (OSAL_Memory)
                                                   ff2 (OSAL_Memory)
                                                   findPg (OSAL_Nv)
                                                   flag (menu_lcd)
                                                   halAssertHazardLights{7}{8}{18}::escape (hal_assert)
                                                   halKeySavedKeys (hal_key)
                                                   halTimerChannel (hal_timer)
                                                   halTimerRecord (hal_timer)
                                                   macData (mac_data)
                                                   macDataCheckTxTime (mac_data)
                                                   macDevice (mac_device)
                                                   macMain (mac_main)
                                                   macMgmt (mac_mgmt)
                                                   macPanCoordinator (mac_mgmt)
                                                   macPhyChannel (mac_radio)
                                                   macPhyTxPower (mac_radio)
                                                   macPib (mac_pib)
                                                   macPwr (mac_pwr)
                                                   macReset (mac_main)
                                                   macRxActive (mac_rx)
                                                   macRxEnableFlags (mac_rx_onoff)
                                                   macRxFilter (mac_rx)
                                                   macRxOnFlag (mac_rx_onoff)
                                                   macRxOutgoingAckFlag (mac_rx)
                                                   macTaskId (mac_main)
                                                   macTxActive (mac_tx)
                                                   macTxBe (mac_tx)
                                                   macTxCsmaBackoffDelay (mac_tx)
                                                   macTxType (mac_tx)
                                                   maxRssi (mac_mcu)
                                                   nb (mac_tx)
                                                   neighborTable (nwk_globals)
                                                   nsduHandleCounter (nwk_util)
                                                   nwkDataBufQueue (nwk_bufs)
                                                   nwkStatus (ZDApp)
                                                   osal_qHead (OSAL)
                                                   osal_systemClock (OSAL_Timers)
                                                   outputnum (SampleApp)
                                                   pAPS_DataConfirmReflect (APS)
                                                   pAPS_DataIndReflect (APS)
                                                   pFuncRxState (mac_rx)
                                                   pHalKeyProcessFunction (hal_key)
                                                   pMacDataTx (mac_data)
                                                   pNLME_NetworkFormationConfirm (NLMEDE)
                                                   pRxBuf (mac_rx)
                                                   pgLost (OSAL_Nv)
                                                   pgOff (OSAL_Nv)
                                                   pgRes (OSAL_Nv)
                                                   pnwk_ScanJoiningOrphan (NLMEDE)
                                                   pnwk_ScanPANChanSelect (NLMEDE)
                                                   pnwk_ScanPANChanVerify (NLMEDE)
                                                   pnwk_associate_cnf_processing (NLMEDE)
                                                   preBlinkState (hal_led)
                                                   pwrmgr_attribute (OSAL_PwrMgr)
                                                   ready (OSAL_Memory)
                                                   reqChannel (mac_radio)
                                                   reqTxPower (mac_radio)
                                                   retryCnt (ZDApp)
                                                   rxBuf (mac_rx)
                                                   rxFilter (mac_rx)
                                                   rxIsrActiveFlag (mac_rx)
                                                   rxNextLen (mac_rx)
                                                   rxPayloadLen (mac_rx)
                                                   rxPromiscuousMode (mac_rx)
                                                   rxResetFlag (mac_rx)
                                                   rxUnreadLen (mac_rx)
                                                   saveExtAddr (nwk_util)
                                                   save_cmd (MTEL)
                                                   savedResponseRate (NLMEDE)
                                                   shadowPerof2 (mac_mcu)
                                                   state (SPIMgr)
                                                   state2 (SampleApp)
                                                   taskIDs (OSAL_Tasks)
                                                   tasksHead (OSAL_Tasks)
                                                   tempDataLen (SPIMgr)
                                                   timerActive (OSAL_Timers)
                                                   timerAlignedQ (mac_timer)
                                                   timerHead (OSAL_Timers)
                                                   timerUnalignedQ (mac_timer)
                                                   tmr_count (OSAL_Timers)
                                                   tmr_decr_time (OSAL_Timers)
                                                   txAckReq (mac_tx)
                                                   txRetransmitFlag (mac_tx)
                                                   txSeqn (mac_tx)
                                                   zgExtendedPANID (ZGlobals)
                                                   zgPreConfigKey (ZGlobals)
                                                   zgSecurityLevel (ZGlobals)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000D6 - 000000FE (0x29 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_XDATA_I          000000D6        ContrastValue (hal_lcd)
                                                   MTVersionString (MTEL)
                                                   Menu_option (menu_lcd)
                                                   SampleApp_ClusterList (SampleApp)
                                                   SampleApp_SimpleDesc (SampleApp)
                                                   Segment part 10 (menu_lcd)
                                                   Segment part 100 (menu_lcd)
                                                   Segment part 11 (MTEL)
                                                   Segment part 11 (mac_timer)
                                                   Segment part 12 (menu_lcd)
                                                   Segment part 14 (menu_lcd)
                                                   Segment part 16 (menu_lcd)
                                                   Segment part 18 (menu_lcd)
                                                   Segment part 20 (menu_lcd)
                                                   Segment part 22 (menu_lcd)
                                                   Segment part 24 (menu_lcd)
                                                   Segment part 26 (menu_lcd)
                                                   Segment part 28 (menu_lcd)
                                                   Segment part 30 (menu_lcd)
                                                   Segment part 32 (menu_lcd)
                                                   Segment part 34 (menu_lcd)
                                                   Segment part 36 (menu_lcd)
                                                   Segment part 38 (menu_lcd)
                                                   Segment part 40 (menu_lcd)
                                                   Segment part 42 (menu_lcd)
                                                   Segment part 44 (menu_lcd)
                                                   Segment part 46 (menu_lcd)
                                                   Segment part 48 (menu_lcd)
                                                   Segment part 50 (menu_lcd)
                                                   Segment part 52 (menu_lcd)
                                                   Segment part 54 (menu_lcd)
                                                   Segment part 56 (menu_lcd)
                                                   Segment part 58 (menu_lcd)
                                                   Segment part 6 (nwk)
                                                   Segment part 60 (menu_lcd)
                                                   Segment part 62 (menu_lcd)
                                                   Segment part 64 (menu_lcd)
                                                   Segment part 66 (menu_lcd)
                                                   Segment part 68 (menu_lcd)
                                                   Segment part 70 (menu_lcd)
                                                   Segment part 72 (menu_lcd)
                                                   Segment part 74 (menu_lcd)
                                                   Segment part 76 (menu_lcd)
                                                   Segment part 78 (menu_lcd)
                                                   Segment part 80 (menu_lcd)
                                                   Segment part 82 (menu_lcd)
                                                   Segment part 84 (menu_lcd)
                                                   Segment part 86 (menu_lcd)
                                                   Segment part 88 (menu_lcd)
                                                   Segment part 9 (MTEL)
                                                   Segment part 9 (SampleApp)
                                                   Segment part 9 (mac_timer)
                                                   Segment part 90 (menu_lcd)
                                                   Segment part 92 (menu_lcd)
                                                   Segment part 94 (menu_lcd)
                                                   Segment part 96 (menu_lcd)
                                                   Segment part 98 (menu_lcd)
                                                   ZDApp_epDesc (ZDApp)
                                                   ZDO_Config_Node_Descriptor (ZDConfig)
                                                   ZDO_Config_Power_Descriptor (ZDConfig)
                                                   ZDP_TmpBuf (ZDProfile)
                                                   __Constant_0 (OSAL_Timers)
                                                   __Constant_1 (OSAL_Nv)
                                                   __Constant_1000 (?smallwr)
                                                   __Constant_10000000 (?smallwr)
                                                   __Constant_2 (?smallwr)
                                                   __Constant_2710 (OSAL)
                                                   __Constant_30 (mac_coord)
                                                   __Constant_3b9aca00 (?smallwr)
                                                   __Constant_3e8 (MTEL)
                                                   __Constant_40000000 (?smallwr)
                                                   __Constant_53544159 (MTEL)
                                                   __Constant_5800 (hal_assert)
                                                   __Constant_64 (hal_led)
                                                   __Constant_8000 (?smallwr)
                                                   __Constant_c0000 (mac_backoff_timer)
                                                   __Constant_ffffffff (mac_backoff_timer)
                                                   continueJoining (ZDApp)
                                                   devState (ZDApp)
                                                   gMIN_TREE_LINK_COST (nwk_globals)
                                                   macActionSet (mac_main)
                                                   macCfg (mac_cfg)
                                                   macDataBeaconRequeue (mac_data)
                                                   macDataCheckSched (mac_data)
                                                   macDataRequeueIndirect (mac_data)
                                                   macDataRxBeaconCritical (mac_data)
                                                   macDataSetSched (mac_data)
                                                   macDataTxBeaconComplete (mac_data)
                                                   macDataTxIndirect (mac_data)
                                                   macSleepState (mac_sleep)
                                                   macStateTbl (mac_main)
                                                   registeredKeysTaskID (OnBoard)
                                                   sPVerList (ZDApp)
                                                   theHeap (OSAL_Memory)
                                                   zdoDiscCounter (ZDApp)
                                                   zgApsDefaultMaxBindingTime (ZGlobals)
                                                   zgApscAckWaitDurationPolled (ZGlobals)
                                                   zgApscMaxFrameRetries (ZGlobals)
                                                   zgBcastDeliveryTime (ZGlobals)
                                                   zgConfigPANID (ZGlobals)
                                                   zgDefaultChannelList (ZGlobals)
                                                   zgDefaultStartingScanDuration (ZGlobals)
                                                   zgIndirectMsgTimeout (ZGlobals)
                                                   zgMaxBcastRetires (ZGlobals)
                                                   zgMaxDataRetries (ZGlobals)
                                                   zgMaxPollFailureRetries (ZGlobals)
                                                   zgPassiveAckTimeout (ZGlobals)
                                                   zgPollRate (ZGlobals)
                                                   zgQueuedPollRate (ZGlobals)
                                                   zgRejoinPollRate (ZGlobals)
                                                   zgResponsePollRate (ZGlobals)
                                                   zgRouteExpiryTime (ZGlobals)
                                                   zgStackProfile (ZGlobals)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000FF - 00000127 (0x29 bytes), align: 0
  Segment part 31.            Intra module refs:   __low_level_init_call
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_IXDATA_I         000000FF 
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000128 - 0000013D (0x16 bytes), align: 0
  Segment part 32.            Intra module refs:   ?cmain
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?call_main              00000128 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_EQ_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000148 - 0000014A (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_EQ_X_REW             00000148 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000014B - 0000015F (0x15 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?L_EQ_X_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_EQ_X                 0000014B        _small_write (?smallwr)
                                                   halWait (wait)
                                                   macBackoffTimerRolloverCallback (mac_timer)
                                                   macBackoffTimerSetTrigger (mac_backoff_timer)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?SL_GT_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000160 - 00000162 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SL_GT_X_REW            00000160 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000163 - 00000177 (0x15 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?SL_GT_X_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SL_GT_X                00000163        _small_write (?smallwr)
                                                   macBackoffTimerRolloverCallback (mac_timer)
                                                   macBackoffTimerTriggerCallback (mac_timer)
                                                   macTimerAddTimer (mac_timer)
                                                   macTimerRecalcUnaligned (mac_timer)
                                                   macTimerUpdateBackoffTimer (mac_timer)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_GT

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000178 - 0000017A (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_GT_REW              00000178 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000017B - 0000018A (0x10 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?UL_GT_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_GT                  0000017B        macBackoffTimerCapture (mac_backoff_timer)
                                                   macBackoffTimerCount (mac_backoff_timer)
                                                   macBackoffTimerSetRollover (mac_backoff_timer)
                                                   macBackoffTimerSetTrigger (mac_backoff_timer)
                                                   nwk_data_ind_processing (nwk)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_GT_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000018B - 0000018D (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_GT_X_REW            0000018B 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000018E - 0000019D (0x10 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?UL_GT_X_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_GT_X                0000018E        HalLedUpdate (hal_led)
                                                   _small_write (?smallwr)
                                                   halAssertHazardLights (hal_assert)
                                                   macTimerUpdateBackoffTimer (mac_timer)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?G_EQ

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000019E - 000001A8 (0xb bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?G_EQ                   0000019E        rxDiscardFrame (mac_rx)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?C_GPTR_LOAD

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000001A9 - 000001C2 (0x1a bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?C_GPTR_LOAD            000001A9        osal_memcpy (OSAL)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_TO_FLT

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000001C3 - 000001C5 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_TO_FLT               000001C3 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000001C6 - 000001DA (0x15 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?L_TO_FLT
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_TO_FLT_REW           000001C6 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000001DB - 000001DD (0x3 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   ?L_TO_FLT_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_TO_FLT_REW          000001DB 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000001DE - 0000023A (0x5d bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   ?L_TO_FLT_REW
                                                   ?UL_TO_FLT_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_TO_FLT              000001DE 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TO_L

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000023B - 0000023D (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TO_UL_REW          0000023B 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000023E - 00000248 (0xb bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?FLT_TO_UL_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TO_UL              0000023E 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000249 - 0000024B (0x3 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TO_L_REW           00000249 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000024C - 0000027F (0x34 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   ?FLT_TO_L_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TO_L               0000024C 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000280 - 0000028B (0xc bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   ?FLT_TO_L
                                                   ?FLT_TO_UL
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000028C - 000002DA (0x4f bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   ?FLT_TO_L
                                                   ?FLT_TO_UL

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_ZERO

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000002DB - 000002DD (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_ZERO          000002DB 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000002DE - 000002E7 (0xa bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?FLT_TEST_ZERO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_ZERO_REW      000002DE        ?FLT_DIV (?FLT_DIV)
                                                   ?FLT_MUL (?FLT_MUL)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_ZERO_R1

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000002E8 - 000002EA (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_ZERO_R1       000002E8 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000002EB - 000002F4 (0xa bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?FLT_TEST_ZERO_R1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_ZERO_R1_REW   000002EB        ?FLT_DIV (?FLT_DIV)
                                                   ?FLT_MUL (?FLT_MUL)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_INF

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000002F5 - 000002F7 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_INF_REW       000002F5        ?FLT_MUL (?FLT_MUL)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000002F8 - 00000309 (0x12 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?FLT_TEST_INF_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_INF           000002F8        ?FLT_DIV (?FLT_DIV)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_INF_R1

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000030A - 0000030C (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_INF_R1_REW    0000030A        ?FLT_MUL (?FLT_MUL)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000030D - 0000031E (0x12 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?FLT_TEST_INF_R1_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_INF_R1        0000030D        ?FLT_DIV (?FLT_DIV)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_NAN

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000031F - 00000321 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_NAN_REW       0000031F 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000322 - 00000330 (0xf bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?FLT_TEST_NAN_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_NAN           00000322        ?FLT_DIV (?FLT_DIV)
                                                   ?FLT_MUL (?FLT_MUL)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_NAN_R1

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000331 - 00000333 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_NAN_R1_REW    00000331 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000334 - 00000342 (0xf bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?FLT_TEST_NAN_R1_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_NAN_R1        00000334        ?FLT_DIV (?FLT_DIV)
                                                   ?FLT_MUL (?FLT_MUL)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_MUL

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000343 - 00000345 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_MUL_REW            00000343 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000346 - 000004C5 (0x180 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?FLT_MUL_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_MUL                00000346 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_DIV

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000004C6 - 000004C8 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_DIV_REW            000004C6 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000004C9 - 000006AE (0x1e6 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?FLT_DIV_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_DIV                000004C9 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_MUL

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000006AF - 000006B1 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MUL                  000006AF        HalLedUpdate (hal_led)
                                                   halTimerSetCount (hal_timer)
                                                   macScanStartTimer (mac_scan)
                                                   macStartResponseTimer (mac_device)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000006B2 - 0000072E (0x7d bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?L_MUL
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MUL_REW              000006B2 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_DIV_MOD

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000072F, align: 0
  Segment part 0. ROOT.
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000072F - 0000079E (0x70 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_DIV_MOD             0000072F        HalLedUpdate (hal_led)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   _small_write (?smallwr)
                                                   halTimerSetCount (hal_timer)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_NEG

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000079F - 000007A1 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_NEG_REW              0000079F        ?L_TO_FLT_REW (?L_TO_FLT)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000007A2 - 000007B2 (0x11 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?L_NEG_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_NEG                  000007A2        _small_write (?smallwr)
                                                   macBackoffTimerRolloverCallback (mac_timer)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_NOT

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000007B3 - 000007B5 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_NOT_REW              000007B3 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000007B6 - 000007C5 (0x10 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?L_NOT_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_NOT                  000007B6        macScanStartTimer (mac_scan)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_SHR

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000007C6 - 000007CB (0x6 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_SHR_REW             000007C6 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000007CC - 000007D0 (0x5 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_SHR                 000007CC        MT_ProcessGetNvInfo (MTEL)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   halWait (wait)
                                                   macApiScanReq (mac_scan)
                                                   macMcuOverflowSetCompare (mac_mcu)
                                                   macMcuOverflowSetCount (mac_mcu)
                                                   macScanNextChan (mac_scan)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000007D1 - 000007E4 (0x14 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   ?UL_SHR
                                                   ?UL_SHR_REW

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_SHL

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000007E5 - 000007EA (0x6 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SHL                  000007E5        MT_ProcessSerialCommand (MTEL)
                                                   calcChkF (OSAL_Nv)
                                                   macScanStartTimer (mac_scan)
                                                   osal_build_uint32 (OSAL)
                                                   osal_nv_read (OSAL_Nv)
                                                   osal_nv_write (OSAL_Nv)
                                                   readHdr (OSAL_Nv)
                                                   writeBuf (OSAL_Nv)
                                                   xferBuf (OSAL_Nv)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000007EB - 000007EF (0x5 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SHL_REW              000007EB 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000007F0 - 00000803 (0x14 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   ?L_SHL
                                                   ?L_SHL_REW

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_ADD

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000804 - 00000806 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_ADD_REW              00000804 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000807 - 00000819 (0x13 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?L_ADD_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_ADD                  00000807        MT_ProcessSerialCommand (MTEL)
                                                   calcChkF (OSAL_Nv)
                                                   halWait (wait)
                                                   macTimer (mac_timer)
                                                   osal_build_uint32 (OSAL)
                                                   osal_nv_read (OSAL_Nv)
                                                   osal_nv_write (OSAL_Nv)
                                                   readHdr (OSAL_Nv)
                                                   writeBuf (OSAL_Nv)
                                                   xferBuf (OSAL_Nv)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_ADD_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000081A - 0000081C (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_ADD_X_REW            0000081A 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000081D - 0000082F (0x13 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?L_ADD_X_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_ADD_X                0000081D        HalLedUpdate (hal_led)
                                                   calcChkF (OSAL_Nv)
                                                   halWait (wait)
                                                   macScanStartTimer (mac_scan)
                                                   nwk_data_ind_processing (nwk)
                                                   osal_nv_read (OSAL_Nv)
                                                   osal_nv_write (OSAL_Nv)
                                                   readHdr (OSAL_Nv)
                                                   writeBuf (OSAL_Nv)
                                                   xferBuf (OSAL_Nv)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_ADD_TO_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000830 - 00000832 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_ADD_TO_X_REW         00000830 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000833 - 00000845 (0x13 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?L_ADD_TO_X_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_ADD_TO_X             00000833        halAssertHazardLights (hal_assert)
                                                   macTimerRecalcUnaligned (mac_timer)
                                                   osalTimerUpdate (OSAL_Timers)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_SUB

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000846 - 00000848 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SUB_REW              00000846 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000849 - 0000085C (0x14 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?L_SUB_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SUB                  00000849 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_SUB_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000085D - 0000085F (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SUB_X_REW            0000085D 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000860 - 00000877 (0x18 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?L_SUB_X_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SUB_X                00000860 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_SUB_FROM_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000878 - 0000087A (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SUB_FROM_X_REW       00000878 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000087B - 0000088E (0x14 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?L_SUB_FROM_X_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SUB_FROM_X           0000087B        macBackoffTimerRolloverCallback (mac_timer)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_AND_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000088F - 00000891 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_AND_X_REW            0000088F 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000892 - 000008A4 (0x13 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?L_AND_X_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_AND_X                00000892 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_AND_TO_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000008A5 - 000008A7 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_AND_TO_X_REW         000008A5 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000008A8 - 000008BA (0x13 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?L_AND_TO_X_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_AND_TO_X             000008A8        macScanStartTimer (mac_scan)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_MOV_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000008BB - 000008C9 (0xf bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MOV_X                000008BB        ?Subroutine5 (mac_mcu)
                                                   APSDE_DataIndication (APSMEDE_CB)
                                                   HalLedUpdate (hal_led)
                                                   MT_ProcessGetNvInfo (MTEL)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   MT_Reset (MTEL)
                                                   NLDE_DataIndication (NLMEDE_CB)
                                                   RTG_UpdateNeighborEntry (nwk_util)
                                                   ZDO_StartDevice (ZDObject)
                                                   ZMacScanReq (zmac)
                                                   _small_write (?smallwr)
                                                   afBuildMSGIncoming (AF)
                                                   afIncomingData (AF)
                                                   halAssertHazardLights (hal_assert)
                                                   macApiScanReq (mac_scan)
                                                   macBackoffTimerCancelTrigger (mac_backoff_timer)
                                                   macBackoffTimerCapture (mac_backoff_timer)
                                                   macBackoffTimerCompareIsr (mac_backoff_timer)
                                                   macBackoffTimerCount (mac_backoff_timer)
                                                   macBackoffTimerInit (mac_backoff_timer)
                                                   macBackoffTimerRolloverCallback (mac_timer)
                                                   macBackoffTimerSetTrigger (mac_backoff_timer)
                                                   macBackoffTimerTriggerCallback (mac_timer)
                                                   macBuildBeaconNotifyInd (mac_mgmt)
                                                   macCbackForEvent (mac_main)
                                                   macMcuOverflowSetCompare (mac_mcu)
                                                   macMcuOverflowSetCount (mac_mcu)
                                                   macScanCnfInit (mac_scan)
                                                   macScanNextChan (mac_scan)
                                                   macScanStartTimer (mac_scan)
                                                   macStartResponseTimer (mac_device)
                                                   macTimer (mac_timer)
                                                   macTimerAddTimer (mac_timer)
                                                   macTimerRecalcUnaligned (mac_timer)
                                                   macTimerUpdateBackoffTimer (mac_timer)
                                                   nwk_data_ind_processing (nwk)
                                                   osalTimerInit (OSAL_Timers)
                                                   osal_GetSystemClock (OSAL_Timers)
                                                   osal_timer_hw_setup (OSAL_Timers)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_MOV_C

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000008CA - 000008DC (0x13 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MOV_C                000008CA 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_MOV_TO_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000008DD - 000008E6 (0xa bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MOV_TO_X_REWX        000008DD 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000008E7 - 000008E9 (0x3 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?L_MOV_TO_X_REWX
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MOV_TO_X_REW         000008E7 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000008EA - 000008F8 (0xf bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   ?L_MOV_TO_X_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MOV_TO_X             000008EA        HalLedUpdate (hal_led)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   MT_Reset (MTEL)
                                                   NLME_NetworkDiscoveryRequest (NLMEDE)
                                                   NLME_OrphanJoinRequest (NLMEDE)
                                                   RTG_UpdateNeighborEntry (nwk_util)
                                                   Segment part 20 (ssp)
                                                   ZDO_StartDevice (ZDObject)
                                                   ZMacScanReq (zmac)
                                                   _small_write (?smallwr)
                                                   afBuildMSGIncoming (AF)
                                                   halAssertHazardLights (hal_assert)
                                                   macApiScanReq (mac_scan)
                                                   macBackoffTimerRolloverCallback (mac_timer)
                                                   macBackoffTimerSetRollover (mac_backoff_timer)
                                                   macBackoffTimerSetTrigger (mac_backoff_timer)
                                                   macScanNextChan (mac_scan)
                                                   macTimer (mac_timer)
                                                   macTimerRecalcUnaligned (mac_timer)
                                                   macTimerUpdateBackoffTimer (mac_timer)
                                                   macTxTimestampCallback (mac_tx)
                                                   nwk_data_ind_processing (nwk)
                                                   osalTimerInit (OSAL_Timers)
                                                   rxStartIsr (mac_rx)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?MOVE_LONG8_XDATA_IDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000008F9 - 00000905 (0xd bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?MOVE_LONG8_XDATA_IDATA
                                   000008F9        ?PUSH_XSTACK_I (?PUSH_XSTACK_I)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?MOVE_LONG8_XDATA_XDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000906 - 00000926 (0x21 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?MOVE_LONG8_XDATA_XDATA
                                   00000906        ?PUSH_XSTACK8_X (?PUSH_XSTACK8_X)
                                                   NLDE_SendMsg (nwk_util)
                                                   nwk_getNetworkDesc (nwk)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?MOVE_LONG8_XDATA_CODE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000927 - 00000948 (0x22 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?MOVE_LONG8_XDATA_CODE
                                   00000927        ?PUSH_XSTACK8_C (?PUSH_XSTACK8_C)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?S_DIV_MOD

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000949 - 00000989 (0x41 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?S_DIV_MOD              00000982        macCspTxRequestAckTimeoutCallback (mac_csp_tx)
                                                   macFrameDuration (mac_data)
                                                   radioComputeED (mac_radio)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000098A - 000009E2 (0x59 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?S_DIV_MOD
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_DIV_MOD             0000098A        macStartFrameResponseTimer (mac_device)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?SS_SHR

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000009E3 - 000009E6 (0x4 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SS_SHR_REW             000009E3 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000009E7 - 000009E9 (0x3 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SS_SHR                 000009E7        HalAdcRead (hal_adc)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000009EA - 000009F6 (0xd bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   ?SS_SHR
                                                   ?SS_SHR_REW

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_SHR

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000009F7 - 000009FA (0x4 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SHR_REW             000009F7 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000009FB - 000009FD (0x3 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SHR                 000009FB        NLDE_ParseFrameControl (nwk_util)
                                                   PingpongTxTest (menu_lcd)
                                                   Short_menu (menu_lcd)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
                                                   writeBuf (OSAL_Nv)
                                                   writeWord (OSAL_Nv)
                                                   xferBuf (OSAL_Nv)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000009FE - 00000A09 (0xc bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   ?US_SHR
                                                   ?US_SHR_REW

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?S_SHL

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000A0A - 00000A0C (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?S_SHL                  00000A0A        MAC_MlmeGetReq (mac_pib)
                                                   MAC_MlmeSetReq (mac_pib)
                                                   NLDE_BuildFrameControl (nwk_util)
                                                   Print8 (hal_lcd)
                                                   halAssertHazardLights (hal_assert)
                                                   halWait (wait)
                                                   macBuildBeaconNotifyInd (mac_mgmt)
                                                   macBuildHeader (mac_mgmt)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
                                                   txCsmaPrep (mac_tx)
                                                   writeWord (OSAL_Nv)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000A0D - 00000A0F (0x3 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?S_SHL_REW              00000A0D 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000A10 - 00000A1C (0xd bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   ?S_SHL
                                                   ?S_SHL_REW

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?ALLOC_XSTACK8

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000A1D - 00000A2B (0xf bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ALLOC_XSTACK8          00000A1D        AF_DataRequest (AF)
                                                   APSDE_DataIndication (APSMEDE_CB)
                                                   APSDE_DataReq (APSMEDE)
                                                   APSDE_FrameAlloc (APSMEDE)
                                                   APSME_LookupNwkAddr (APSMEDE)
                                                   AddrMgrNwkAddrLookup (AddrMgr)
                                                   HalAdcInit (hal_adc)
                                                   HalAdcRead (hal_adc)
                                                   HalLedBlink (hal_led)
                                                   HalLedUpdate (hal_led)
                                                   HalUARTOpen (hal_uart)
                                                   IEEE_menu (menu_lcd)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MTProcessAppMsg (MTEL)
                                                   MT_IndReset (MTEL)
                                                   MT_ProcessDebugMsg (MTEL)
                                                   MT_ProcessGetNvInfo (MTEL)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   MT_SendErrorNotification (MTEL)
                                                   NLDE_DataIndSend (nwk_util)
                                                   NLDE_DataIndication (NLMEDE_CB)
                                                   NLDE_DataReqSend (nwk_util)
                                                   NLDE_SendMsg (nwk_util)
                                                   NLME_CmdCnf (nwk_util)
                                                   NLME_GetCoordShortAddr (nwk_util)
                                                   NLME_GetProtocolVersion (nwk_util)
                                                   NLME_JoinRequest (NLMEDE)
                                                   NLME_LeaveCmdCnf (nwk_util)
                                                   NLME_LeaveCmdProcess (nwk_util)
                                                   NLME_NetworkDiscoveryRequest (NLMEDE)
                                                   NLME_OrphanJoinRequest (NLMEDE)
                                                   NLME_ReJoinRequest (NLMEDE)
                                                   NwkPollReq (nwk)
                                                   PingpongTxTest (menu_lcd)
                                                   Print (hal_lcd)
                                                   SPIMgr_Init (SPIMgr)
                                                   SelectTxAddr (menu_lcd)
                                                   SendData (SampleApp)
                                                   Short_menu (menu_lcd)
                                                   Uart_Pingpong (menu_lcd)
                                                   Uart_RX (menu_lcd)
                                                   Uart_Send (menu_lcd)
                                                   ZDAppSetupProtoVersion (ZDApp)
                                                   ZDApp_Init (ZDApp)
                                                   ZDApp_ProcessNetworkJoin (ZDApp)
                                                   ZDApp_SendNewDstAddr (ZDApp)
                                                   ZDOInitDevice (ZDApp)
                                                   ZDO_NetworkDiscoveryConfirmCB (ZDApp)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_ProcessSimpleDescReq (ZDObject)
                                                   ZDO_StartDevice (ZDObject)
                                                   ZDP_EPRsp (ZDProfile)
                                                   ZDP_GenericRsp (ZDProfile)
                                                   ZDP_IncomingData (ZDProfile)
                                                   ZDP_NodeDescMsg (ZDProfile)
                                                   ZDP_PowerDescMsg (ZDProfile)
                                                   ZDP_SimpleDescMsg (ZDProfile)
                                                   ZMacReset (zmac)
                                                   _small_write (?smallwr)
                                                   afBuildMSGIncoming (AF)
                                                   afIncomingData (AF)
                                                   apsGenerateAck (aps_util)
                                                   apsProcessAck (aps_util)
                                                   aps_GroupsWriteNV (aps_groups)
                                                   calcChkF (OSAL_Nv)
                                                   compactPage (OSAL_Nv)
                                                   fillAndSend (ZDProfile)
                                                   halAssertHazardLights (hal_assert)
                                                   initNV (OSAL_Nv)
                                                   initPage (OSAL_Nv)
                                                   macAssocDataReq (mac_device)
                                                   macAssociateCnf (mac_device)
                                                   macBuildHeader (mac_mgmt)
                                                   macCbackForEvent (mac_main)
                                                   macCommStatusInd (mac_mgmt)
                                                   macConflictSyncLossInd (mac_mgmt)
                                                   macDisassocComplete (mac_mgmt)
                                                   macEventLoop (mac_main)
                                                   macMcuOverflowCapture (mac_mcu)
                                                   macMcuOverflowCount (mac_mcu)
                                                   macMcuOverflowSetCompare (mac_mcu)
                                                   macMcuOverflowSetCount (mac_mcu)
                                                   macPollCnf (mac_device)
                                                   macRxAssocRsp (mac_device)
                                                   macRxBeacon (mac_mgmt)
                                                   macRxCoordRealign (mac_device)
                                                   macRxDisassoc (mac_mgmt)
                                                   macScanFailedInProgress (mac_scan)
                                                   macScanNextChan (mac_scan)
                                                   macScanRxBeacon (mac_scan)
                                                   macScanRxCoordRealign (mac_scan)
                                                   macSendDataMsg (mac_main)
                                                   macSendMsg (mac_main)
                                                   macStartFrameResponseTimer (mac_device)
                                                   nwk_ScanJoiningOrphan (nwk)
                                                   nwk_associate_cnf_processing (nwk)
                                                   nwk_beacon_notify_ind_processing (nwk)
                                                   nwk_data_cnf_processing (nwk)
                                                   nwk_data_ind_processing (nwk)
                                                   nwk_getNetworkDesc (nwk)
                                                   osalTaskAdd (OSAL_Tasks)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_nv_item_len (OSAL_Nv)
                                                   osal_nv_read (OSAL_Nv)
                                                   osal_nv_write (OSAL_Nv)
                                                   pollDMA (hal_uart)
                                                   readHdr (OSAL_Nv)
                                                   rxAddrIsr (mac_rx)
                                                   rxDiscardIsr (mac_rx)
                                                   rxStartIsr (mac_rx)
                                                   setItem (OSAL_Nv)
                                                   setPageUse (OSAL_Nv)
                                                   sprintf (?sprintf)
                                                   writeBuf (OSAL_Nv)
                                                   writeItem (OSAL_Nv)
                                                   writeWordH (OSAL_Nv)
                                                   xferBuf (OSAL_Nv)
                                                   zdpProcessAddrReq (ZDProfile)
                                                   zgReadStartupOptions (ZGlobals)
                                                   zgWriteStartupOptions (ZGlobals)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DEALLOC_XSTACK8

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000A2C - 00000A3E (0x13 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DEALLOC_XSTACK8        00000A2C        ?Subroutine1 (SampleApp)
                                                   ?Subroutine1 (ZGlobals)
                                                   ?Subroutine11 (hal_led)
                                                   ?Subroutine16 (MTEL)
                                                   ?Subroutine17 (MTEL)
                                                   ?Subroutine18 (MTEL)
                                                   ?Subroutine23 (ZDApp)
                                                   ?Subroutine24 (ZDApp)
                                                   ?Subroutine25 (ZDApp)
                                                   ?Subroutine25 (menu_lcd)
                                                   ?Subroutine33 (AF)
                                                   ?Subroutine41 (ZDProfile)
                                                   ?Subroutine42 (ZDProfile)
                                                   ?Subroutine46 (ZDProfile)
                                                   ?Subroutine5 (mac_mcu)
                                                   ?Subroutine6 (zmac)
                                                   ?Subroutine66 (OSAL_Nv)
                                                   ?Subroutine75 (OSAL_Nv)
                                                   AF_DataRequest (AF)
                                                   APSDE_DataIndication (APSMEDE_CB)
                                                   APSDE_DataReq (APSMEDE)
                                                   APS_CmdInd (APS)
                                                   APS_event_loop (APS)
                                                   Aboat_Driver (menu_lcd)
                                                   DrawMenu (menu_lcd)
                                                   Frist_Data (SampleApp)
                                                   HalAdcInit (hal_adc)
                                                   HalAdcRead (hal_adc)
                                                   HalUARTOpen (hal_uart)
                                                   InitBoard (OnBoard)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MAC_MlmeGetReq (mac_pib)
                                                   MAC_MlmeSetReq (mac_pib)
                                                   MTProcessAppMsg (MTEL)
                                                   MT_BuildAndSendZToolResponse (MTEL)
                                                   MT_BuildSPIMsg (MTEL)
                                                   MT_ProcessDebugMsg (MTEL)
                                                   MT_ProcessDebugStr (MTEL)
                                                   MT_ProcessGetDeviceInfo (MTEL)
                                                   MT_ProcessGetNV (MTEL)
                                                   MT_ProcessGetNvInfo (MTEL)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   NLDE_BuildMsg (nwk_util)
                                                   NLDE_DataIndSend (nwk_util)
                                                   NLDE_DataIndication (NLMEDE_CB)
                                                   NLDE_DataReqSend (nwk_util)
                                                   NLDE_SendMsg (nwk_util)
                                                   NLME_CmdCnf (nwk_util)
                                                   NLME_GetRequest (NLMEDE)
                                                   NLME_JoinRequest (NLMEDE)
                                                   NwkPollReq (nwk)
                                                   PingpongTxTest (menu_lcd)
                                                   Print (hal_lcd)
                                                   ReadBattery_menu (menu_lcd)
                                                   SPIMgr_Init (SPIMgr)
                                                   SampleApp_Init (SampleApp)
                                                   SampleApp_MessageMSGCB (SampleApp)
                                                   Segment part 194 (APSMEDE)
                                                   Segment part 212 (APSMEDE)
                                                   Segment part 22 (NLMEDE)
                                                   Segment part 23 (mac_device)
                                                   Segment part 26 (mac_main)
                                                   Segment part 28 (NLMEDE)
                                                   Segment part 31 (APSMEDE)
                                                   Segment part 32 (AddrMgr)
                                                   Segment part 33 (mac_mgmt)
                                                   Segment part 38 (nwk_util)
                                                   Segment part 46 (mac_device)
                                                   Segment part 55 (APSMEDE)
                                                   Segment part 55 (nwk)
                                                   Segment part 56 (mac_mgmt)
                                                   Segment part 78 (nwk)
                                                   Segment part 78 (nwk_util)
                                                   Segment part 88 (nwk_util)
                                                   Segment part 9 (AddrMgr)
                                                   SelectTxAddr (menu_lcd)
                                                   SendData (SampleApp)
                                                   Send_Broadcast (menu_lcd)
                                                   SingleTxTest (menu_lcd)
                                                   Temp_menu (menu_lcd)
                                                   Uart_Pingpong (menu_lcd)
                                                   Uart_RX (menu_lcd)
                                                   Uart_Send (menu_lcd)
                                                   ZDApp_InMsgCB (ZDApp)
                                                   ZDApp_LeaveCtrlInit (ZDApp)
                                                   ZDApp_LeaveCtrlStartup (ZDApp)
                                                   ZDApp_MatchDescRspCB (ZDApp)
                                                   ZDApp_ProcessOSALMsg (ZDApp)
                                                   ZDApp_SendMsg (ZDApp)
                                                   ZDApp_SendNewDstAddr (ZDApp)
                                                   ZDO_NetworkDiscoveryConfirmCB (ZDApp)
                                                   ZDO_ProcessActiveEPReq (ZDObject)
                                                   ZDO_ProcessEPListRsp (ZDObject)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_ProcessNodeDescReq (ZDObject)
                                                   ZDO_ProcessPowerDescReq (ZDObject)
                                                   ZDO_ProcessSimpleDescReq (ZDObject)
                                                   ZDO_StartDevice (ZDObject)
                                                   ZDP_EPRsp (ZDProfile)
                                                   ZDP_IncomingData (ZDProfile)
                                                   ZDP_NodeDescMsg (ZDProfile)
                                                   ZDP_SimpleDescMsg (ZDProfile)
                                                   ZMacDataReq (zmac)
                                                   _small_write (?smallwr)
                                                   afBuildMSGIncoming (AF)
                                                   afIncomingData (AF)
                                                   afRegister (AF)
                                                   apsGenerateAck (aps_util)
                                                   apsProcessAck (aps_util)
                                                   aps_AddGroup (aps_groups)
                                                   aps_GroupsWriteNV (aps_groups)
                                                   compactPage (OSAL_Nv)
                                                   fillAndSend (ZDProfile)
                                                   halAssertHazardLights (hal_assert)
                                                   initItem (OSAL_Nv)
                                                   initItem2 (OSAL_Nv)
                                                   initPage (OSAL_Nv)
                                                   macApiAssociateReq (mac_device)
                                                   macAssocDataReq (mac_device)
                                                   macBackoffTimerRolloverCallback (mac_timer)
                                                   macBuildCommonReq (mac_mgmt)
                                                   macBuildDataFrame (mac_data)
                                                   macBuildDisassociateReq (mac_mgmt)
                                                   macBuildHeader (mac_mgmt)
                                                   macDataTxSend (mac_data)
                                                   macRxBeacon (mac_mgmt)
                                                   macRxDisassoc (mac_mgmt)
                                                   macScanFailedInProgress (mac_scan)
                                                   macScanNextChan (mac_scan)
                                                   macScanRxBeacon (mac_scan)
                                                   macScanRxCoordRealign (mac_scan)
                                                   macScanStartTimer (mac_scan)
                                                   macSendDataMsg (mac_main)
                                                   macSendMsg (mac_main)
                                                   macStartFrameResponseTimer (mac_device)
                                                   macStartResponseTimer (mac_device)
                                                   nwk_BeaconFromNative (nwk)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
                                                   nwk_ScanJoiningOrphan (nwk)
                                                   nwk_associate_cnf_processing (nwk)
                                                   nwk_beacon_notify_ind_processing (nwk)
                                                   nwk_data_cnf_processing (nwk)
                                                   nwk_data_ind_processing (nwk)
                                                   nwk_event_loop (nwk)
                                                   osalAddTasks (OSAL_SampleApp)
                                                   osalTaskAdd (OSAL_Tasks)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_cpyExtAddr (OSAL)
                                                   osal_memset (OSAL)
                                                   osal_msg_receive (OSAL)
                                                   osal_nv_item_init (OSAL_Nv)
                                                   osal_nv_write (OSAL_Nv)
                                                   pollDMA (hal_uart)
                                                   rxAddrIsr (mac_rx)
                                                   rxDiscardIsr (mac_rx)
                                                   rxStartIsr (mac_rx)
                                                   sAddrExtCpy (saddr)
                                                   setItem (OSAL_Nv)
                                                   setPageUse (OSAL_Nv)
                                                   sprintf (?sprintf)
                                                   writeItem (OSAL_Nv)
                                                   writeWordH (OSAL_Nv)
                                                   zdpProcessAddrReq (ZDProfile)
                                                   zgInit (ZGlobals)
                                                   zgReadStartupOptions (ZGlobals)
                                                   zgWriteStartupOptions (ZGlobals)
                                                   zmain_ext_addr (ZMain)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?ADD_XSTACK_DISP8

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000A3F - 00000A52 (0x14 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ADD_XSTACK_DISP0_8     00000A3F        ?PUSH_XSTACK_I (?PUSH_XSTACK_I)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?XSTACK_DISP8

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000A53 - 00000A5C (0xa bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSTACK_DISP0_8         00000A53        ?Subroutine46 (ZDProfile)
                                                   ?Subroutine5 (mac_mcu)
                                                   AF_DataRequest (AF)
                                                   APSDE_DataIndication (APSMEDE_CB)
                                                   APSDE_DataReq (APSMEDE)
                                                   APSDE_FrameAlloc (APSMEDE)
                                                   AddrMgrNwkAddrLookup (AddrMgr)
                                                   HalKeyConfig (hal_key)
                                                   HalLedBlink (hal_led)
                                                   HalLedUpdate (hal_led)
                                                   HalTimerConfig (hal_timer)
                                                   IEEE_menu (menu_lcd)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MT_BuildAndSendZToolResponse (MTEL)
                                                   MT_BuildSPIMsg (MTEL)
                                                   MT_ProcessDebugMsg (MTEL)
                                                   MT_ProcessGetNvInfo (MTEL)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   NLDE_DataIndSend (nwk_util)
                                                   NLDE_DataIndication (NLMEDE_CB)
                                                   NLDE_DataReqSend (nwk_util)
                                                   NLDE_SendMsg (nwk_util)
                                                   NLME_CmdCnf (nwk_util)
                                                   NLME_JoinRequest (NLMEDE)
                                                   NLME_LeaveCmdCnf (nwk_util)
                                                   NLME_LeaveCmdProcess (nwk_util)
                                                   NLME_NetworkDiscoveryRequest (NLMEDE)
                                                   NLME_OrphanJoinRequest (NLMEDE)
                                                   NLME_ReJoinRequest (NLMEDE)
                                                   NwkPollReq (nwk)
                                                   PingpongTxTest (menu_lcd)
                                                   Print (hal_lcd)
                                                   Print8 (hal_lcd)
                                                   RTG_UpdateNeighborEntry (nwk_util)
                                                   SPIMgr_Init (SPIMgr)
                                                   Segment part 194 (APSMEDE)
                                                   SelectTxAddr (menu_lcd)
                                                   SendData (SampleApp)
                                                   Short_menu (menu_lcd)
                                                   Uart_Pingpong (menu_lcd)
                                                   Uart_RX (menu_lcd)
                                                   Uart_Send (menu_lcd)
                                                   ZDApp_InMsgCB (ZDApp)
                                                   ZDApp_MatchDescRspCB (ZDApp)
                                                   ZDApp_SendNewDstAddr (ZDApp)
                                                   ZDO_AnyClusterMatches (ZDObject)
                                                   ZDO_NetworkDiscoveryConfirmCB (ZDApp)
                                                   ZDO_ProcessActiveEPReq (ZDObject)
                                                   ZDO_ProcessEPListRsp (ZDObject)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_ProcessNodeDescReq (ZDObject)
                                                   ZDO_ProcessPowerDescReq (ZDObject)
                                                   ZDO_ProcessSimpleDescReq (ZDObject)
                                                   ZDO_StartDevice (ZDObject)
                                                   ZDP_EPRsp (ZDProfile)
                                                   ZDP_GenericRsp (ZDProfile)
                                                   ZDP_IncomingData (ZDProfile)
                                                   ZDP_NodeDescMsg (ZDProfile)
                                                   ZDP_PowerDescMsg (ZDProfile)
                                                   ZDP_SimpleDescMsg (ZDProfile)
                                                   _small_write (?smallwr)
                                                   afBuildMSGIncoming (AF)
                                                   afIncomingData (AF)
                                                   afRegisterExtended (AF)
                                                   apsGenerateAck (aps_util)
                                                   apsProcessAck (aps_util)
                                                   aps_GroupsWriteNV (aps_groups)
                                                   compactPage (OSAL_Nv)
                                                   fillAndSend (ZDProfile)
                                                   halAssertHazardLights (hal_assert)
                                                   initItem (OSAL_Nv)
                                                   initItem2 (OSAL_Nv)
                                                   initNV (OSAL_Nv)
                                                   initPage (OSAL_Nv)
                                                   macAssocDataReq (mac_device)
                                                   macAssociateCnf (mac_device)
                                                   macBuildCommonReq (mac_mgmt)
                                                   macBuildHeader (mac_mgmt)
                                                   macCbackForEvent (mac_main)
                                                   macCommStatusInd (mac_mgmt)
                                                   macConflictSyncLossInd (mac_mgmt)
                                                   macDisassocComplete (mac_mgmt)
                                                   macEventLoop (mac_main)
                                                   macMcuOverflowCapture (mac_mcu)
                                                   macMcuOverflowCount (mac_mcu)
                                                   macMcuOverflowSetCompare (mac_mcu)
                                                   macMcuOverflowSetCount (mac_mcu)
                                                   macPollCnf (mac_device)
                                                   macRxBeacon (mac_mgmt)
                                                   macRxCoordRealign (mac_device)
                                                   macRxDisassoc (mac_mgmt)
                                                   macScanFailedInProgress (mac_scan)
                                                   macScanNextChan (mac_scan)
                                                   macScanRxBeacon (mac_scan)
                                                   macTimer (mac_timer)
                                                   macTimerRecalcUnaligned (mac_timer)
                                                   memcpy (?memcpy)
                                                   memset (?memset)
                                                   nwkDB_Add (nwk_bufs)
                                                   nwk_ScanJoiningOrphan (nwk)
                                                   nwk_associate_cnf_processing (nwk)
                                                   nwk_beacon_notify_ind_processing (nwk)
                                                   nwk_data_cnf_processing (nwk)
                                                   nwk_data_ind_processing (nwk)
                                                   osalTaskAdd (OSAL_Tasks)
                                                   osal_memcpy (OSAL)
                                                   osal_msg_extract (OSAL)
                                                   osal_nv_item_init (OSAL_Nv)
                                                   osal_nv_item_len (OSAL_Nv)
                                                   osal_nv_read (OSAL_Nv)
                                                   osal_nv_write (OSAL_Nv)
                                                   rxAddrIsr (mac_rx)
                                                   rxStartIsr (mac_rx)
                                                   setItem (OSAL_Nv)
                                                   setPageUse (OSAL_Nv)
                                                   sprintf (?sprintf)
                                                   writeBuf (OSAL_Nv)
                                                   writeItem (OSAL_Nv)
                                                   writeWordH (OSAL_Nv)
                                                   xferBuf (OSAL_Nv)
                                                   zdpProcessAddrReq (ZDProfile)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?POP_BIT_ISP

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000A5D - 00000A6F (0x13 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?POP_BIT_ISP            00000A5D        macMcuRfIsr (mac_mcu)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?BANKED_ENTER_XDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000A70 - 00000AD4 (0x65 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?BANKED_ENTER_XDATA     00000A70        AF_DataRequest (AF)
                                                   APSDE_DataIndication (APSMEDE_CB)
                                                   APSDE_DataReq (APSMEDE)
                                                   APSDE_FrameAlloc (APSMEDE)
                                                   APSDE_FrameBlkInit (APSMEDE)
                                                   APSDE_FrameHdrInit (APSMEDE)
                                                   APSDE_FrameHdrSet (APSMEDE)
                                                   APSDE_FrameSend (APSMEDE)
                                                   APSDE_ParseMsg (aps_util)
                                                   APSME_CmdPkt (APSMEDE)
                                                   APSME_FrameSecInit (APSMEDE)
                                                   APSME_FrameSecurityRemove (APSMEDE)
                                                   APSME_LookupNwkAddr (APSMEDE)
                                                   APS_CmdInd (APS)
                                                   APS_event_loop (APS)
                                                   Aboat_Driver (menu_lcd)
                                                   AddrMgrEntryLookupExt (AddrMgr)
                                                   AddrMgrExtAddrValid (AddrMgr)
                                                   AddrMgrInit (AddrMgr)
                                                   AddrMgrNwkAddrLookup (AddrMgr)
                                                   ClearScreen (hal_lcd)
                                                   ClearScreenLcd (menu_lcd)
                                                   DrawMenu (menu_lcd)
                                                   Frist_Data (SampleApp)
                                                   HalAdcRead (hal_adc)
                                                   HalKeyConfig (hal_key)
                                                   HalKeyPoll (hal_key)
                                                   HalLedBlink (hal_led)
                                                   HalLedSet (hal_led)
                                                   HalLedUpdate (hal_led)
                                                   HalTimerConfig (hal_timer)
                                                   HalTimerStart (hal_timer)
                                                   HalUARTOpen (hal_uart)
                                                   HalUARTPoll (hal_uart)
                                                   HalUARTRead (hal_uart)
                                                   HalUARTWrite (hal_uart)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   IEEE_menu (menu_lcd)
                                                   InitBoard (OnBoard)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MAC_McpsDataAlloc (mac_data)
                                                   MAC_MlmeGetReq (mac_pib)
                                                   MAC_MlmeResetReq (mac_mgmt)
                                                   MAC_MlmeSetReq (mac_pib)
                                                   MTProcessAppMsg (MTEL)
                                                   MTProcessAppRspMsg (MTEL)
                                                   MT_BuildAndSendZToolResponse (MTEL)
                                                   MT_BuildSPIMsg (MTEL)
                                                   MT_IndReset (MTEL)
                                                   MT_ProcessCommand (MTEL)
                                                   MT_ProcessDebugMsg (MTEL)
                                                   MT_ProcessDebugStr (MTEL)
                                                   MT_ProcessEvent (MTEL)
                                                   MT_ProcessGetDeviceInfo (MTEL)
                                                   MT_ProcessGetNV (MTEL)
                                                   MT_ProcessGetNvInfo (MTEL)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   MT_ProcessSetNV (MTEL)
                                                   MT_Reset (MTEL)
                                                   MT_ReverseBytes (MTEL)
                                                   MT_SendErrorNotification (MTEL)
                                                   MenuMenuDisp (menu_lcd)
                                                   NLDE_BuildFrameControl (nwk_util)
                                                   NLDE_BuildMsg (nwk_util)
                                                   NLDE_DataCnf (NLMEDE_CB)
                                                   NLDE_DataIndication (NLMEDE_CB)
                                                   NLDE_DataReq (NLMEDE)
                                                   NLDE_DataReqAlloc (NLMEDE)
                                                   NLDE_DataReqSend (nwk_util)
                                                   NLDE_FrameDataLoad (APSMEDE)
                                                   NLDE_GetHandle (nwk_util)
                                                   NLDE_ParseFrameControl (nwk_util)
                                                   NLDE_ParseMsg (nwk_util)
                                                   NLDE_ParseMsg2 (nwk_util)
                                                   NLDE_SendMsg (nwk_util)
                                                   NLME_CmdCnf (nwk_util)
                                                   NLME_CmdDataReqAlloc (nwk_util)
                                                   NLME_GetNeighborIndex (nwk_util)
                                                   NLME_GetNeighborLinkInfo (nwk_util)
                                                   NLME_GetRequest (NLMEDE)
                                                   NLME_IsAddressBroadcast (nwk_util)
                                                   NLME_JoinRequest (NLMEDE)
                                                   NLME_LeaveCmdCnf (nwk_util)
                                                   NLME_LeaveCmdProcess (nwk_util)
                                                   NLME_NetworkDiscoveryRequest (NLMEDE)
                                                   NLME_OrphanJoinRequest (NLMEDE)
                                                   NLME_ReJoinRequest (NLMEDE)
                                                   NLME_RejoinRspCmdProcess (nwk_util)
                                                   NLME_SetBroadcastFilter (nwk_util)
                                                   NLME_SetRequest (NLMEDE)
                                                   OnBoard_SendKeys (OnBoard)
                                                   Onboard_rand (OnBoard)
                                                   PingpongTxTest (menu_lcd)
                                                   Print (hal_lcd)
                                                   Print8 (hal_lcd)
                                                   RTG_UpdateNeighborEntry (nwk_util)
                                                   ReadBattery_menu (menu_lcd)
                                                   SPIMgr_CalcFCS (SPIMgr)
                                                   SPIMgr_ProcessZToolData (SPIMgr)
                                                   SSP_GetMicLen (ssp)
                                                   SSP_NwkSecurity (ssp)
                                                   SampleApp_Init (SampleApp)
                                                   SampleApp_MessageMSGCB (SampleApp)
                                                   SampleApp_ProcessEvent (SampleApp)
                                                   SelectTxAddr (menu_lcd)
                                                   SendData (SampleApp)
                                                   Send_Broadcast (menu_lcd)
                                                   Send_Option (menu_lcd)
                                                   Send_Test (menu_lcd)
                                                   Sensor_Menu (menu_lcd)
                                                   SetContrast (hal_lcd)
                                                   SetRamAddr (hal_lcd)
                                                   Short_menu (menu_lcd)
                                                   SingleTxTest (menu_lcd)
                                                   Temp_menu (menu_lcd)
                                                   UartTX_Send_String (wxl_uart)
                                                   Uart_Baud_rate (wxl_uart)
                                                   Uart_Menu (menu_lcd)
                                                   Uart_Pingpong (menu_lcd)
                                                   Uart_RX (menu_lcd)
                                                   Uart_Send (menu_lcd)
                                                   WriteLCD (hal_lcd)
                                                   ZDApp_InMsgCB (ZDApp)
                                                   ZDApp_LeaveCtrlInit (ZDApp)
                                                   ZDApp_LeaveCtrlSet (ZDApp)
                                                   ZDApp_LeaveCtrlStartup (ZDApp)
                                                   ZDApp_MatchDescRspCB (ZDApp)
                                                   ZDApp_NodeProfileSync (ZDApp)
                                                   ZDApp_ProcessNetworkJoin (ZDApp)
                                                   ZDApp_ProcessOSALMsg (ZDApp)
                                                   ZDApp_SendMsg (ZDApp)
                                                   ZDApp_SendNewDstAddr (ZDApp)
                                                   ZDApp_event_loop (ZDApp)
                                                   ZDOInitDevice (ZDApp)
                                                   ZDO_AnyClusterMatches (ZDObject)
                                                   ZDO_CreateAlignedUINT16List (ZDObject)
                                                   ZDO_LeaveCnf (ZDApp)
                                                   ZDO_LeaveInd (ZDApp)
                                                   ZDO_NetworkDiscoveryConfirmCB (ZDApp)
                                                   ZDO_ProcessActiveEPReq (ZDObject)
                                                   ZDO_ProcessEPListRsp (ZDObject)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_ProcessNodeDescReq (ZDObject)
                                                   ZDO_ProcessPowerDescReq (ZDObject)
                                                   ZDO_ProcessSimpleDescReq (ZDObject)
                                                   ZDO_StartDevice (ZDObject)
                                                   ZDO_UpdateNwkStatus (ZDObject)
                                                   ZDP_EPRsp (ZDProfile)
                                                   ZDP_GenericRsp (ZDProfile)
                                                   ZDP_IncomingData (ZDProfile)
                                                   ZDP_NodeDescMsg (ZDProfile)
                                                   ZDP_PowerDescMsg (ZDProfile)
                                                   ZDP_SimpleDescMsg (ZDProfile)
                                                   Zigbee_Network (menu_lcd)
                                                   _small_write (?smallwr)
                                                   afBuildMSGIncoming (AF)
                                                   afCopyAddress (AF)
                                                   afDataConfirm (AF)
                                                   afDataReqMTU (AF)
                                                   afFindEndPointDesc (AF)
                                                   afFindSimpleDesc (AF)
                                                   afGetReflector (AF)
                                                   afIncomingData (AF)
                                                   afRegister (AF)
                                                   afRegisterExtended (AF)
                                                   apsAckFindMatchCB (aps_util)
                                                   apsGenerateAck (aps_util)
                                                   apsProcessAck (aps_util)
                                                   aps_AddGroup (aps_groups)
                                                   aps_FindGroup (aps_groups)
                                                   aps_FindGroupForEndpoint (aps_groups)
                                                   aps_GroupsWriteNV (aps_groups)
                                                   calcChkF (OSAL_Nv)
                                                   compactPage (OSAL_Nv)
                                                   fillAndSend (ZDProfile)
                                                   findItem (OSAL_Nv)
                                                   halAssertHazardLights (hal_assert)
                                                   halTimerSendCallBack (hal_timer)
                                                   halTimerSetCount (hal_timer)
                                                   halWait (wait)
                                                   initItem (OSAL_Nv)
                                                   initItem2 (OSAL_Nv)
                                                   initNV (OSAL_Nv)
                                                   initPage (OSAL_Nv)
                                                   macAllocTxBuffer (mac_data)
                                                   macApiAssociateReq (mac_device)
                                                   macApiDisassociateReq (mac_mgmt)
                                                   macApiPending (mac_mgmt)
                                                   macApiPollReq (mac_device)
                                                   macApiScanReq (mac_scan)
                                                   macAssocDataReqComplete (mac_device)
                                                   macAssocDataRxInd (mac_device)
                                                   macAssocFailed (mac_device)
                                                   macAssocFrameResponseTimeout (mac_device)
                                                   macAssocRxDisassoc (mac_device)
                                                   macBackoffTimerCancelTrigger (mac_backoff_timer)
                                                   macBackoffTimerCapture (mac_backoff_timer)
                                                   macBackoffTimerCompareIsr (mac_backoff_timer)
                                                   macBackoffTimerCount (mac_backoff_timer)
                                                   macBackoffTimerInit (mac_backoff_timer)
                                                   macBackoffTimerRolloverCallback (mac_timer)
                                                   macBackoffTimerSetRollover (mac_backoff_timer)
                                                   macBackoffTimerSetTrigger (mac_backoff_timer)
                                                   macBackoffTimerTriggerCallback (mac_timer)
                                                   macBuildBeaconNotifyInd (mac_mgmt)
                                                   macBuildCommonReq (mac_mgmt)
                                                   macBuildDataFrame (mac_data)
                                                   macBuildDisassociateReq (mac_mgmt)
                                                   macBuildHeader (mac_mgmt)
                                                   macCbackForEvent (mac_main)
                                                   macCommStatusInd (mac_mgmt)
                                                   macCspTxRequestAckTimeoutCallback (mac_csp_tx)
                                                   macDataTxComplete (mac_data)
                                                   macDataTxEnqueue (mac_data)
                                                   macDataTxSend (mac_data)
                                                   macDataTxTimeAvailable (mac_data)
                                                   macEventLoop (mac_main)
                                                   macExecute (mac_main)
                                                   macMainReset (mac_main)
                                                   macMcuAndT2PEROF2 (mac_mcu)
                                                   macMcuOrT2PEROF2 (mac_mcu)
                                                   macMcuOverflowCapture (mac_mcu)
                                                   macMcuOverflowCount (mac_mcu)
                                                   macMcuOverflowSetCompare (mac_mcu)
                                                   macMcuOverflowSetCount (mac_mcu)
                                                   macMemReadRxFifo (mac_mem)
                                                   macMemWriteRam (mac_mem)
                                                   macMemWriteTxFifo (mac_mem)
                                                   macPollDataReqComplete (mac_device)
                                                   macPollDataRxInd (mac_device)
                                                   macPollFrameResponseTimeout (mac_device)
                                                   macPollRxAssocRsp (mac_device)
                                                   macPollRxDisassoc (mac_device)
                                                   macRadioSetChannel (mac_radio)
                                                   macRadioSetTxPower (mac_radio)
                                                   macRadioStartScan (mac_radio)
                                                   macRxAssocRsp (mac_device)
                                                   macRxBeacon (mac_mgmt)
                                                   macRxCompleteCallback (mac_data)
                                                   macRxCoordRealign (mac_device)
                                                   macRxDisable (mac_rx_onoff)
                                                   macRxDisassoc (mac_mgmt)
                                                   macRxEnable (mac_rx_onoff)
                                                   macRxOffRequest (mac_rx_onoff)
                                                   macRxOnRequest (mac_rx_onoff)
                                                   macRxSoftEnable (mac_rx_onoff)
                                                   macScanCnfInit (mac_scan)
                                                   macScanNextChan (mac_scan)
                                                   macScanRxBeacon (mac_scan)
                                                   macScanRxCoordRealign (mac_scan)
                                                   macScanStartTimer (mac_scan)
                                                   macSendDataMsg (mac_main)
                                                   macSendMsg (mac_main)
                                                   macSetEvent (mac_main)
                                                   macStartFrameResponseTimer (mac_device)
                                                   macStartResponseTimer (mac_device)
                                                   macTimer (mac_timer)
                                                   macTimerAddTimer (mac_timer)
                                                   macTimerCancel (mac_timer)
                                                   macTimerRecalcUnaligned (mac_timer)
                                                   macTimerRemoveTimer (mac_timer)
                                                   macTimerUpdateBackoffTimer (mac_timer)
                                                   macTxAckNotReceivedCallback (mac_tx)
                                                   macTxAckReceivedCallback (mac_tx)
                                                   macTxCompleteCallback (mac_data)
                                                   macTxDoneCallback (mac_tx)
                                                   macTxFrame (mac_tx)
                                                   macTxTimestampCallback (mac_tx)
                                                   memcpy (?memcpy)
                                                   memset (?memset)
                                                   nwkBuildDataCnf (nwk)
                                                   nwkDB_Add (nwk_bufs)
                                                   nwkDB_CreateHdr (nwk_bufs)
                                                   nwkDB_DeleteRecAll (nwk_bufs)
                                                   nwkDB_FindMatch (nwk_bufs)
                                                   nwkDB_FindNextType (nwk_bufs)
                                                   nwkDB_RemoveFromList (nwk_bufs)
                                                   nwkDB_UserDataLoad (nwk_util)
                                                   nwk_BeaconFromNative (nwk)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
                                                   nwk_MacDataBuffersDealloc (nwk_bufs)
                                                   nwk_ScanJoiningOrphan (nwk)
                                                   nwk_SendNextDataBuf (nwk_bufs)
                                                   nwk_associate_cnf_processing (nwk)
                                                   nwk_beacon_notify_ind_processing (nwk)
                                                   nwk_data_cnf_processing (nwk)
                                                   nwk_data_ind_processing (nwk)
                                                   nwk_data_req_send (nwk)
                                                   nwk_desc_list_free (nwk)
                                                   nwk_event_loop (nwk)
                                                   nwk_getNetworkDesc (nwk)
                                                   nwk_scan_cnf_processing (nwk)
                                                   osalAddTasks (OSAL_SampleApp)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalDeleteTimer (OSAL_Timers)
                                                   osalFindTimer (OSAL_Timers)
                                                   osalInitTasks (OSAL_Tasks)
                                                   osalTaskAdd (OSAL_Tasks)
                                                   osalTimerInit (OSAL_Timers)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_ExtAddrEqual (OSAL)
                                                   osal_GetSystemClock (OSAL_Timers)
                                                   osal_build_uint32 (OSAL)
                                                   osal_cpyExtAddr (OSAL)
                                                   osal_get_timeoutEx (OSAL_Timers)
                                                   osal_mem_alloc (OSAL_Memory)
                                                   osal_mem_free (OSAL_Memory)
                                                   osal_memcpy (OSAL)
                                                   osal_memset (OSAL)
                                                   osal_msg_allocate (OSAL)
                                                   osal_msg_dequeue (OSAL)
                                                   osal_msg_enqueue (OSAL)
                                                   osal_msg_enqueue_max (OSAL)
                                                   osal_msg_extract (OSAL)
                                                   osal_msg_receive (OSAL)
                                                   osal_msg_send (OSAL)
                                                   osal_nv_item_init (OSAL_Nv)
                                                   osal_nv_item_len (OSAL_Nv)
                                                   osal_nv_read (OSAL_Nv)
                                                   osal_nv_write (OSAL_Nv)
                                                   osal_set_event (OSAL)
                                                   osal_start_system (OSAL)
                                                   osal_start_timer (OSAL_Timers)
                                                   osal_start_timerEx (OSAL_Timers)
                                                   osal_stop_timer (OSAL_Timers)
                                                   osal_stop_timerEx (OSAL_Timers)
                                                   osal_timer_activate (OSAL_Timers)
                                                   osal_timer_hw_setup (OSAL_Timers)
                                                   pollDMA (hal_uart)
                                                   readHdr (OSAL_Nv)
                                                   rxAddrIsr (mac_rx)
                                                   rxDiscardFrame (mac_rx)
                                                   rxFcsIsr (mac_rx)
                                                   rxStartIsr (mac_rx)
                                                   sAddrCmp (saddr)
                                                   sAddrCpy (saddr)
                                                   sAddrExtCmp (saddr)
                                                   sAddrExtCpy (saddr)
                                                   setItem (OSAL_Nv)
                                                   sprintf (?sprintf)
                                                   strcpy (?strcpy)
                                                   txComplete (mac_tx)
                                                   txCsmaPrep (mac_tx)
                                                   writeBuf (OSAL_Nv)
                                                   writeItem (OSAL_Nv)
                                                   writeWord (OSAL_Nv)
                                                   writeWordD (OSAL_Nv)
                                                   writeWordH (OSAL_Nv)
                                                   xferBuf (OSAL_Nv)
                                                   zdpProcessAddrReq (ZDProfile)
                                                   zgInit (ZGlobals)
                                                   zgReadStartupOptions (ZGlobals)
                                                   zgWriteStartupOptions (ZGlobals)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FUNC_ENTER_XDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000AD5 - 00000B33 (0x5f bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FUNC_ENTER_XDATA       00000AD5        ZMacDataReq (zmac)
                                                   ZMacInit (zmac)
                                                   ZMacReset (zmac)
                                                   ZMacScanReq (zmac)
                                                   ZMacSetReq (zmac)
                                                   zmain_ext_addr (ZMain)
                                                   zmain_vdd_check (ZMain)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?BANKED_LEAVE_XDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000B34 - 00000B74 (0x41 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?BANKED_LEAVE_XDATA     00000B34        ?Subroutine0 (SampleApp)
                                                   ?Subroutine0 (mac_mem)
                                                   ?Subroutine0 (saddr)
                                                   ?Subroutine1 (SampleApp)
                                                   ?Subroutine1 (ZGlobals)
                                                   ?Subroutine1 (mac_backoff_timer)
                                                   ?Subroutine1 (mac_radio)
                                                   ?Subroutine10 (hal_lcd)
                                                   ?Subroutine11 (hal_led)
                                                   ?Subroutine13 (hal_lcd)
                                                   ?Subroutine14 (hal_timer)
                                                   ?Subroutine16 (MTEL)
                                                   ?Subroutine17 (MTEL)
                                                   ?Subroutine18 (MTEL)
                                                   ?Subroutine19 (MTEL)
                                                   ?Subroutine19 (hal_uart)
                                                   ?Subroutine2 (mac_backoff_timer)
                                                   ?Subroutine2 (mac_rx_onoff)
                                                   ?Subroutine20 (OSAL)
                                                   ?Subroutine21 (OSAL)
                                                   ?Subroutine22 (OSAL)
                                                   ?Subroutine22 (ZDObject)
                                                   ?Subroutine22 (hal_uart)
                                                   ?Subroutine22 (mac_rx)
                                                   ?Subroutine23 (OSAL)
                                                   ?Subroutine24 (OSAL)
                                                   ?Subroutine24 (ZDApp)
                                                   ?Subroutine24 (ZDObject)
                                                   ?Subroutine25 (OSAL)
                                                   ?Subroutine25 (ZDApp)
                                                   ?Subroutine25 (ZDObject)
                                                   ?Subroutine25 (menu_lcd)
                                                   ?Subroutine28 (ZDApp)
                                                   ?Subroutine3 (OSAL_Timers)
                                                   ?Subroutine30 (menu_lcd)
                                                   ?Subroutine31 (AF)
                                                   ?Subroutine33 (AF)
                                                   ?Subroutine34 (AF)
                                                   ?Subroutine35 (AF)
                                                   ?Subroutine4 (OSAL_Timers)
                                                   ?Subroutine4 (mac_tx)
                                                   ?Subroutine41 (ZDProfile)
                                                   ?Subroutine42 (ZDProfile)
                                                   ?Subroutine46 (ZDProfile)
                                                   ?Subroutine5 (mac_mcu)
                                                   ?Subroutine6 (mac_mcu)
                                                   ?Subroutine66 (OSAL_Nv)
                                                   ?Subroutine68 (OSAL_Nv)
                                                   ?Subroutine74 (OSAL_Nv)
                                                   ?Subroutine75 (OSAL_Nv)
                                                   AF_DataRequest (AF)
                                                   APSDE_DataIndication (APSMEDE_CB)
                                                   APSDE_ParseMsg (aps_util)
                                                   DrawMenu (menu_lcd)
                                                   HalAdcRead (hal_adc)
                                                   HalKeyConfig (hal_key)
                                                   HalKeyPoll (hal_key)
                                                   HalLedSet (hal_led)
                                                   HalTimerConfig (hal_timer)
                                                   HalUARTOpen (hal_uart)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   InitBoard (OnBoard)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MAC_MlmeGetReq (mac_pib)
                                                   MAC_MlmeSetReq (mac_pib)
                                                   NLDE_DataCnf (NLMEDE_CB)
                                                   NLDE_DataIndication (NLMEDE_CB)
                                                   NLDE_ParseMsg2 (nwk_util)
                                                   NLME_JoinRequest (NLMEDE)
                                                   NLME_SetRequest (NLMEDE)
                                                   OnBoard_SendKeys (OnBoard)
                                                   Onboard_rand (OnBoard)
                                                   PingpongTxTest (menu_lcd)
                                                   SPIMgr_CalcFCS (SPIMgr)
                                                   SPIMgr_ProcessZToolData (SPIMgr)
                                                   SSP_GetMicLen (ssp)
                                                   SampleApp_Init (SampleApp)
                                                   SampleApp_ProcessEvent (SampleApp)
                                                   Segment part 10 (nwk_bufs)
                                                   Segment part 112 (nwk_util)
                                                   Segment part 13 (mac_scan)
                                                   Segment part 15 (aps_groups)
                                                   Segment part 15 (mac_mgmt)
                                                   Segment part 17 (mac_scan)
                                                   Segment part 19 (aps_util)
                                                   Segment part 194 (APSMEDE)
                                                   Segment part 20 (ssp)
                                                   Segment part 21 (mac_mgmt)
                                                   Segment part 21 (nwk_util)
                                                   Segment part 212 (APSMEDE)
                                                   Segment part 22 (NLMEDE)
                                                   Segment part 22 (mac_timer)
                                                   Segment part 23 (mac_main)
                                                   Segment part 26 (mac_main)
                                                   Segment part 28 (NLMEDE)
                                                   Segment part 29 (mac_timer)
                                                   Segment part 30 (APS)
                                                   Segment part 30 (mac_data)
                                                   Segment part 30 (nwk)
                                                   Segment part 32 (APSMEDE)
                                                   Segment part 32 (AddrMgr)
                                                   Segment part 32 (nwk_bufs)
                                                   Segment part 33 (mac_mgmt)
                                                   Segment part 34 (mac_device)
                                                   Segment part 37 (mac_timer)
                                                   Segment part 38 (nwk_util)
                                                   Segment part 40 (mac_data)
                                                   Segment part 42 (nwk)
                                                   Segment part 53 (AddrMgr)
                                                   Segment part 55 (APSMEDE)
                                                   Segment part 55 (nwk)
                                                   Segment part 62 (mac_data)
                                                   Segment part 78 (nwk)
                                                   Segment part 84 (nwk)
                                                   Segment part 88 (nwk_util)
                                                   Segment part 9 (AddrMgr)
                                                   Segment part 9 (aps_groups)
                                                   SelectTxAddr (menu_lcd)
                                                   UartTX_Send_String (wxl_uart)
                                                   Uart_Baud_rate (wxl_uart)
                                                   ZDO_NetworkDiscoveryConfirmCB (ZDApp)
                                                   ZDP_IncomingData (ZDProfile)
                                                   ZDP_NodeDescMsg (ZDProfile)
                                                   _small_write (?smallwr)
                                                   afDataConfirm (AF)
                                                   afRegister (AF)
                                                   apsProcessAck (aps_util)
                                                   aps_AddGroup (aps_groups)
                                                   halAssertHazardLights (hal_assert)
                                                   halTimerSendCallBack (hal_timer)
                                                   halWait (wait)
                                                   initPage (OSAL_Nv)
                                                   macBackoffTimerRolloverCallback (mac_timer)
                                                   macCspTxRequestAckTimeoutCallback (mac_csp_tx)
                                                   macRadioSetTxPower (mac_radio)
                                                   macScanRxCoordRealign (mac_scan)
                                                   macScanStartTimer (mac_scan)
                                                   macSendDataMsg (mac_main)
                                                   macSendMsg (mac_main)
                                                   macSetEvent (mac_main)
                                                   macStartFrameResponseTimer (mac_device)
                                                   macStartResponseTimer (mac_device)
                                                   macTimerAddTimer (mac_timer)
                                                   macTxTimestampCallback (mac_tx)
                                                   memcpy (?memcpy)
                                                   memset (?memset)
                                                   nwkDB_Add (nwk_bufs)
                                                   nwkDB_CreateHdr (nwk_bufs)
                                                   nwkDB_FindMatch (nwk_bufs)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
                                                   nwk_data_ind_processing (nwk)
                                                   osalAddTasks (OSAL_SampleApp)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalInitTasks (OSAL_Tasks)
                                                   osalTaskAdd (OSAL_Tasks)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_mem_alloc (OSAL_Memory)
                                                   osal_mem_free (OSAL_Memory)
                                                   rxStartIsr (mac_rx)
                                                   sAddrExtCmp (saddr)
                                                   sAddrExtCpy (saddr)
                                                   sprintf (?sprintf)
                                                   strcpy (?strcpy)
                                                   txCsmaPrep (mac_tx)
                                                   writeWordH (OSAL_Nv)
                                                   zgInit (ZGlobals)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FUNC_LEAVE_XDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000B75 - 00000BAF (0x3b bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FUNC_LEAVE_XDATA       00000B75        ?Subroutine6 (zmac)
                                                   ?Subroutine8 (zmac)
                                                   ZMacDataReq (zmac)
                                                   zmain_ext_addr (ZMain)
                                                   zmain_vdd_check (ZMain)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?INTERRUPT_ENTER_XSP

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000BB0 - 00000C07 (0x58 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?INTERRUPT_ENTER_XSP    00000BB0        halKeyPort0Isr (hal_key)
                                                   halKeyPort1Isr (hal_key)
                                                   halKeyPort2Isr (hal_key)
                                                   halTimer1Isr (hal_timer)
                                                   halTimer3Isr (hal_timer)
                                                   halTimer4Isr (hal_timer)
                                                   macMcuRfIsr (mac_mcu)
                                                   macMcuTimer2Isr (mac_mcu)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?INTERRUPT_LEAVE_XSP

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000C08 - 00000C58 (0x51 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?INTERRUPT_LEAVE_XSP    00000C08        ?Subroutine15 (hal_timer)
                                                   ?Subroutine3 (hal_key)
                                                   ?Subroutine7 (mac_mcu)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?PUSH_XSTACK_I

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000C59 - 00000C5C (0x4 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I_FOUR     00000C59        NLDE_DataIndication (NLMEDE_CB)
                                                   afIncomingData (AF)
                                                   macScanStartTimer (mac_scan)
                                                   macStartFrameResponseTimer (mac_device)
                                                   macStartResponseTimer (mac_device)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000C5D - 00000C60 (0x4 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I_THREE    00000C5D        APSDE_DataIndication (APSMEDE_CB)
                                                   APSDE_DataReq (APSMEDE)
                                                   APS_CmdInd (APS)
                                                   InitBoard (OnBoard)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MAC_MlmeGetReq (mac_pib)
                                                   MAC_MlmeSetReq (mac_pib)
                                                   MTProcessAppMsg (MTEL)
                                                   MT_BuildSPIMsg (MTEL)
                                                   NLDE_BuildMsg (nwk_util)
                                                   NLME_GetRequest (NLMEDE)
                                                   SampleApp_Init (SampleApp)
                                                   ZDApp_MatchDescRspCB (ZDApp)
                                                   ZDApp_SendMsg (ZDApp)
                                                   ZDApp_SendNewDstAddr (ZDApp)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDP_EPRsp (ZDProfile)
                                                   ZMacDataReq (zmac)
                                                   afBuildMSGIncoming (AF)
                                                   afRegister (AF)
                                                   aps_AddGroup (aps_groups)
                                                   aps_GroupsWriteNV (aps_groups)
                                                   macScanRxBeacon (mac_scan)
                                                   macSendDataMsg (mac_main)
                                                   macSendMsg (mac_main)
                                                   nwk_BeaconFromNative (nwk)
                                                   osalAddTasks (OSAL_SampleApp)
                                                   osal_cpyExtAddr (OSAL)
                                                   sAddrExtCpy (saddr)
                                                   sprintf (?sprintf)
                                                   zgInit (ZGlobals)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000C61 - 00000C64 (0x4 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I_TWO      00000C61        Aboat_Driver (menu_lcd)
                                                   ClearScreenLcd (menu_lcd)
                                                   DrawMenu (menu_lcd)
                                                   Frist_Data (SampleApp)
                                                   MTProcessAppRspMsg (MTEL)
                                                   MT_BuildAndSendZToolResponse (MTEL)
                                                   MT_IndReset (MTEL)
                                                   MT_ProcessDebugMsg (MTEL)
                                                   MT_ProcessGetDeviceInfo (MTEL)
                                                   MT_ProcessGetNV (MTEL)
                                                   MT_ProcessGetNvInfo (MTEL)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   MT_ProcessSetNV (MTEL)
                                                   MT_SendErrorNotification (MTEL)
                                                   NLDE_DataReqSend (nwk_util)
                                                   PingpongTxTest (menu_lcd)
                                                   Print (hal_lcd)
                                                   ReadBattery_menu (menu_lcd)
                                                   SelectTxAddr (menu_lcd)
                                                   SendData (SampleApp)
                                                   Send_Broadcast (menu_lcd)
                                                   SingleTxTest (menu_lcd)
                                                   Temp_menu (menu_lcd)
                                                   Uart_Pingpong (menu_lcd)
                                                   Uart_RX (menu_lcd)
                                                   Uart_Send (menu_lcd)
                                                   ZDApp_InMsgCB (ZDApp)
                                                   ZDApp_LeaveCtrlInit (ZDApp)
                                                   ZDApp_LeaveCtrlSet (ZDApp)
                                                   ZDApp_LeaveCtrlStartup (ZDApp)
                                                   ZDO_ProcessActiveEPReq (ZDObject)
                                                   ZDO_ProcessEPListRsp (ZDObject)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_ProcessNodeDescReq (ZDObject)
                                                   ZDO_ProcessPowerDescReq (ZDObject)
                                                   ZDO_ProcessSimpleDescReq (ZDObject)
                                                   ZDP_EPRsp (ZDProfile)
                                                   ZDP_GenericRsp (ZDProfile)
                                                   ZDP_IncomingData (ZDProfile)
                                                   ZDP_NodeDescMsg (ZDProfile)
                                                   ZDP_PowerDescMsg (ZDProfile)
                                                   ZDP_SimpleDescMsg (ZDProfile)
                                                   aps_GroupsWriteNV (aps_groups)
                                                   compactPage (OSAL_Nv)
                                                   fillAndSend (ZDProfile)
                                                   initItem (OSAL_Nv)
                                                   initItem2 (OSAL_Nv)
                                                   macBuildCommonReq (mac_mgmt)
                                                   macDataTxSend (mac_data)
                                                   macScanNextChan (mac_scan)
                                                   osal_memset (OSAL)
                                                   osal_msg_receive (OSAL)
                                                   osal_nv_item_init (OSAL_Nv)
                                                   osal_nv_write (OSAL_Nv)
                                                   sprintf (?sprintf)
                                                   writeItem (OSAL_Nv)
                                                   zdpProcessAddrReq (ZDProfile)
                                                   zgInit (ZGlobals)
                                                   zgReadStartupOptions (ZGlobals)
                                                   zgWriteStartupOptions (ZGlobals)
                                                   zmain_ext_addr (ZMain)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000C65 - 00000C66 (0x2 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I_ONE      00000C65        APS_event_loop (APS)
                                                   NLDE_DataIndication (NLMEDE_CB)
                                                   NLDE_DataReqSend (nwk_util)
                                                   SendData (SampleApp)
                                                   ZDApp_MatchDescRspCB (ZDApp)
                                                   ZDApp_ProcessOSALMsg (ZDApp)
                                                   ZDO_ProcessActiveEPReq (ZDObject)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_ProcessNodeDescReq (ZDObject)
                                                   ZDO_ProcessPowerDescReq (ZDObject)
                                                   ZDP_IncomingData (ZDProfile)
                                                   afIncomingData (AF)
                                                   fillAndSend (ZDProfile)
                                                   nwk_ScanJoiningOrphan (nwk)
                                                   nwk_beacon_notify_ind_processing (nwk)
                                                   nwk_data_cnf_processing (nwk)
                                                   nwk_data_ind_processing (nwk)
                                                   nwk_event_loop (nwk)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000C67 - 00000C73 (0xd bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   ?PUSH_XSTACK_I_FOUR
                                                   ?PUSH_XSTACK_I_ONE
                                                   ?PUSH_XSTACK_I_THREE
                                                   ?PUSH_XSTACK_I_TWO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I          00000C67 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?PUSH_XSTACK8_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000C74 - 00000C77 (0x4 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_X_FOUR    00000C74        APS_event_loop (APS)
                                                   NLDE_DataIndSend (nwk_util)
                                                   nwk_data_ind_processing (nwk)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000C78 - 00000C7B (0x4 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_X_THREE   00000C78 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000C7C - 00000C7F (0x4 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_X_TWO     00000C7C        MT_ProcessDebugStr (MTEL)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   NLDE_DataReqSend (nwk_util)
                                                   SampleApp_MessageMSGCB (SampleApp)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_ProcessSimpleDescReq (ZDObject)
                                                   afIncomingData (AF)
                                                   macApiAssociateReq (mac_device)
                                                   macApiPollReq (mac_device)
                                                   macAssocDataReq (mac_device)
                                                   macBackoffTimerRolloverCallback (mac_timer)
                                                   macBuildDataFrame (mac_data)
                                                   macBuildDisassociateReq (mac_mgmt)
                                                   macRxBeacon (mac_mgmt)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
                                                   osal_nv_write (OSAL_Nv)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000C80 - 00000C81 (0x2 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_X_ONE     00000C80 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000C82 - 00000CA5 (0x24 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   ?PUSH_XSTACK8_X_FOUR
                                                   ?PUSH_XSTACK8_X_ONE
                                                   ?PUSH_XSTACK8_X_THREE
                                                   ?PUSH_XSTACK8_X_TWO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_X         00000C82 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?PUSH_XSTACK8_C

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000CA6 - 00000CA9 (0x4 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_C_FOUR    00000CA6 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000CAA - 00000CAD (0x4 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_C_THREE   00000CAA 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000CAE - 00000CB1 (0x4 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_C_TWO     00000CAE 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000CB2 - 00000CB3 (0x2 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_C_ONE     00000CB2 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000CB4 - 00000CD7 (0x24 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   ?PUSH_XSTACK8_C_FOUR
                                                   ?PUSH_XSTACK8_C_ONE
                                                   ?PUSH_XSTACK8_C_THREE
                                                   ?PUSH_XSTACK8_C_TWO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_C         00000CB4 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UC_SWITCH_DENSE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000CD8 - 00000D0D (0x36 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UC_SWITCH_DENSE        00000CD8        APS_event_loop (APS)
                                                   HalAdcRead (hal_adc)
                                                   HalTimerStop (hal_timer)
                                                   MenuMenuDisp (menu_lcd)
                                                   SPIMgr_ProcessZToolData (SPIMgr)
                                                   Send_Option (menu_lcd)
                                                   Send_Test (menu_lcd)
                                                   Sensor_Menu (menu_lcd)
                                                   Uart_Menu (menu_lcd)
                                                   Zigbee_Network (menu_lcd)
                                                   getZMacDynamicSize (zmac_cb)
                                                   halTimerRemap (hal_timer)
                                                   halTimerSetChannelMode (hal_timer)
                                                   halTimerSetOpMode (hal_timer)
                                                   halTimerSetPrescale (hal_timer)
                                                   macBuildCommonReq (mac_mgmt)
                                                   macRxCompleteCallback (mac_data)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_SWITCH_DENSE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000D0E - 00000D53 (0x46 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SWITCH_DENSE        00000D0E        MT_ProcessSerialCommand (MTEL)
                                                   NLME_IsAddressBroadcast (nwk_util)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UC_SWITCH_SPARSE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000D54 - 00000D7D (0x2a bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UC_SWITCH_SPARSE       00000D54        HalLedSet (hal_led)
                                                   HalTimerInterruptEnable (hal_timer)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MAC_MlmeSetReq (mac_pib)
                                                   MT_ProcessCommand (MTEL)
                                                   NLME_GetRequest (NLMEDE)
                                                   SampleApp_ProcessEvent (SampleApp)
                                                   ZDApp_ProcessOSALMsg (ZDApp)
                                                   _small_write (?smallwr)
                                                   macCommStatusInd (mac_mgmt)
                                                   nwk_event_loop (nwk)
                                                   nwk_scan_cnf_processing (nwk)
           ?UC_SWITCH_SPARSE_LEAVE
                                   00000D71        ?UC_JMP_IF_IN_RANGE (?UC_JMP_IF_IN_RANGE)
                                                   ?UC_JMP_IF_VALUE (?UC_JMP_IF_VALUE)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UC_JMP_IF_IN_RANGE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000D7E - 00000D9C (0x1f bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UC_JMP_IF_IN_RANGE     00000D7E        Segment part 0 (?UC_SWITCH_SPARSE)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UC_JMP_IF_VALUE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000D9D - 00000DB2 (0x16 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UC_JMP_IF_VALUE        00000D9D        Segment part 0 (?UC_SWITCH_SPARSE)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_SWITCH_SPARSE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000DB3 - 00000DFE (0x4c bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SWITCH_SPARSE       00000DB3        Uart_Baud_rate (wxl_uart)
                                                   ZDP_IncomingData (ZDProfile)
           ?US_SWITCH_SPARSE_LEAVE
                                   00000DEF        ?US_JMP_IF_IN_RANGE (?US_JMP_IF_IN_RANGE)
                                                   ?US_JMP_IF_VALUE (?US_JMP_IF_VALUE)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_JMP_IF_IN_RANGE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000DFF - 00000E3D (0x3f bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_JMP_IF_IN_RANGE     00000DFF        Segment part 0 (?US_SWITCH_SPARSE)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_JMP_IF_VALUE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000E3E - 00000E68 (0x2b bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_JMP_IF_VALUE        00000E3E        Segment part 0 (?US_SWITCH_SPARSE)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memcpy

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00016B2F - 00016B76 (0x48 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memcpy                  00016B2F        ?Subroutine18 (menu_lcd)
                                                   Frist_Data (SampleApp)
                                                   SampleApp_MessageMSGCB (SampleApp)
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000002 ( 0000000A )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memset

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FFC3 - 0000FFF1 (0x2f bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memset                  0000FFC3        osal_memset (OSAL)
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000002 ( 00000009 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?smallwr

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00011BFD - 00012020 (0x424 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _small_write            00011BFD        sprintf (?sprintf)
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000005 ( 00000021 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012021 - 0001202C (0xc bytes), align: 0
  Segment part 23.            Intra module refs:   _small_write
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001202D - 0001203A (0xe bytes), align: 0
  Segment part 24.            Intra module refs:   _small_write
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001203B - 00012040 (0x6 bytes), align: 0
  Segment part 25.            Intra module refs:   Segment part 24
                                                   _small_write
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012041 - 0001204A (0xa bytes), align: 0
  Segment part 26.            Intra module refs:   _small_write
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001204B - 0001205C (0x12 bytes), align: 0
  Segment part 27.            Intra module refs:   _small_write
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001205D - 00012068 (0xc bytes), align: 0
  Segment part 28.            Intra module refs:   _small_write
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012069 - 00012077 (0xf bytes), align: 0
  Segment part 29.            Intra module refs:   _small_write
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00012078 - 00012080 (0x9 bytes), align: 0
  Segment part 30.            Intra module refs:   _small_write
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F366 - 0000F369 (0x4 bytes), align: 0
  Segment part 6.             Intra module refs:   _small_write
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_8000         0000F366 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000018BC - 000018BF (0x4 bytes), align: 0
  Segment part 7.             Intra module refs:   __Constant_8000
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F36A - 0000F36D (0x4 bytes), align: 0
  Segment part 10.            Intra module refs:   _small_write
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_40000000     0000F36A 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000018C0 - 000018C3 (0x4 bytes), align: 0
  Segment part 11.            Intra module refs:   __Constant_40000000
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F36E - 0000F371 (0x4 bytes), align: 0
  Segment part 14.            Intra module refs:   _small_write
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_3b9aca00     0000F36E 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000018C4 - 000018C7 (0x4 bytes), align: 0
  Segment part 15.            Intra module refs:   __Constant_3b9aca00
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F372 - 0000F375 (0x4 bytes), align: 0
  Segment part 16.            Intra module refs:   _small_write
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_1000         0000F372 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000018C8 - 000018CB (0x4 bytes), align: 0
  Segment part 17.            Intra module refs:   __Constant_1000
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F376 - 0000F379 (0x4 bytes), align: 0
  Segment part 18.            Intra module refs:   _small_write
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_10000000     0000F376 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000018CC - 000018CF (0x4 bytes), align: 0
  Segment part 19.            Intra module refs:   __Constant_10000000
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F37A - 0000F37D (0x4 bytes), align: 0
  Segment part 20.            Intra module refs:   _small_write
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_2            0000F37A 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000018D0 - 000018D3 (0x4 bytes), align: 0
  Segment part 21.            Intra module refs:   __Constant_2

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?sprintf

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00016823 - 0001684C (0x2a bytes), align: 0
  Segment part 6.             Intra module refs:   sprintf
           LOCAL                   ADDRESS         
           =====                   =======         
           put_c_in_string         00016823 
               is indirectly called
               stack 1 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001684D - 000168C1 (0x75 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sprintf                 0001684D        PingpongTxTest (menu_lcd)
                                                   Uart_Pingpong (menu_lcd)
                                                   Uart_RX (menu_lcd)
                                                   Uart_Send (menu_lcd)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000168C2 - 000168CA (0x9 bytes), align: 0
  Segment part 8.             Intra module refs:   put_c_in_string
                                                   sprintf

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?strcpy

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00016B77 - 00016B9E (0x28 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strcpy                  00016B77        MenuMenuDisp (menu_lcd)
                                                   PingpongTxTest (menu_lcd)
                                                   SelectTxAddr (menu_lcd)
                                                   Send_Option (menu_lcd)
                                                   Send_Test (menu_lcd)
                                                   Sensor_Menu (menu_lcd)
                                                   SingleTxTest (menu_lcd)
                                                   Uart_Menu (menu_lcd)
                                                   Zigbee_Network (menu_lcd)
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000009 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?strlen

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00016B9F - 00016BBC (0x1e bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strlen                  00016B9F        osal_strlen (OSAL)
               stack 1 = 00000000 ( 00000002 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?low_level_init

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 0000013E - 00000140 (0x3 bytes), align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __low_level_init        0000013E        __low_level_init_call (?cmain)




                ****************************************
                *                                      *
                *            MODULE SUMMARY            *
                *                                      *
                ****************************************

Module                       CODE      DATA         XDATA      IDATA    BIT
------                       ----      ----         -----      -----    ---
                            (Rel)  (Rel)  (Abs)  (Rel)  (Abs)  (Rel)  (Rel)
?ADD_XSTACK_DISP8              20
?ALLOC_XSTACK8                 15
?BANKED_CODE_SUPPORT           34
?BANKED_ENTER_XDATA           101
?BANKED_LEAVE_XDATA            65
?C_GPTR_LOAD                   26
?DEALLOC_XSTACK8               19
?FLT_DIV                      489
?FLT_MUL                      387
?FLT_TEST_INF                  21
?FLT_TEST_INF_R1               21
?FLT_TEST_NAN                  18
?FLT_TEST_NAN_R1               18
?FLT_TEST_ZERO                 13
?FLT_TEST_ZERO_R1              13
?FLT_TO_L                     160
?FUNC_ENTER_XDATA              95
?FUNC_LEAVE_XDATA              59
?G_EQ                          11
?INTERRUPT_ENTER_XSP           88
?INTERRUPT_LEAVE_XSP           81
?L_ADD                         22
?L_ADD_TO_X                    22
?L_ADD_X                       22
?L_AND_TO_X                    22
?L_AND_X                       22
?L_EQ_X                        24
?L_MOV_C                       19
?L_MOV_TO_X                    28
?L_MOV_X                       15
?L_MUL                        128
?L_NEG                         20
?L_NOT                         19
?L_SHL                         31
?L_SUB                         23
?L_SUB_FROM_X                  23
?L_SUB_X                       27
?L_TO_FLT                     120
?MOVE_LONG8_XDATA_CODE         34
?MOVE_LONG8_XDATA_IDATA        13
?MOVE_LONG8_XDATA_XDATA        33
?POP_BIT_ISP                   19
?PUSH_XSTACK8_C                50
?PUSH_XSTACK8_X                50
?PUSH_XSTACK_I                 27
?SL_GT_X                       24
?SS_SHR                        20
?S_DIV_MOD                    154
?S_SHL                         19
?UC_JMP_IF_IN_RANGE            31
?UC_JMP_IF_VALUE               22
?UC_SWITCH_DENSE               54
?UC_SWITCH_SPARSE              42
?UL_DIV_MOD                   112
?UL_GT                         19
?UL_GT_X                       19
?UL_SHR                        31
?US_JMP_IF_IN_RANGE            63
?US_JMP_IF_VALUE               43
?US_SHR                        19
?US_SWITCH_DENSE               70
?US_SWITCH_SPARSE              76
?XSTACK_DISP8                  10
?cexit                          5
?cmain                        129
?low_level_init                 3
?memcpy                        72
?memset                        47
?smallwr                    1 180                   24
?sprintf                      168
?strcpy                        40
?strlen                        30
AF                          2 706                    2
APS                           599                   19
APSMEDE                     3 303                   15
APSMEDE_CB                    572
AddrMgr                       593                    4
CC2430_READ_ANY_CODE_BYTE      40
CSTARTUP                       16
  + common                      3
Font                        1 520
MTEL                        3 996                   45      8
  + shared                                    2      4
NLMEDE                      1 572                   19
NLMEDE_CB                     891
OSAL                        1 617                    2
  + shared                                           4
OSAL_Memory                   509                1 671
OSAL_Nv                     6 004             4     15
  + shared                                    2      4
OSAL_PwrMgr                    22                    7
OSAL_SampleApp                255
OSAL_Tasks                    487                    5
OSAL_Timers                 1 095                   13
  + shared                                           4
OnBoard                       461                   11
  + shared                                    3
SPIMgr                        731                   61
SampleApp                     920                  533
  + shared                                    2
SampleAppHw
  + shared                                    3
VIRTUAL_REGISTERS                      2                                  8
ZDApp                       3 155                   29
ZDConfig                       12                   12
ZDObject                    2 626                   52
ZDProfile                   2 241                   83
ZDSecMgr                       21
ZGlobals                      569                   53
ZMain                         549             1
aps_groups                    657                    2
aps_util                    1 383
flashDmaTrigger                 4
hal_adc                       337             1
  + shared                                    5
hal_aes                        90
  + shared                                    1
hal_assert                    375                    5
  + shared                                    1
hal_dma                        17             4     40
hal_drivers                   233                    1
hal_key                       500             2      6
  + shared                    126             3
  + common
hal_lcd                     1 140             1      1
  + shared                                    1
hal_led                     1 227                   39
  + shared                                           4
hal_sleep                      23             3
  + shared                     46             3
  + common
hal_timer                   1 728            11     63
  + common                    102
hal_uart                    2 136             2      3
  + shared                                    5
mac_backoff_timer             633                   13
  + shared                                    3      4
mac_cfg                         5                    5
mac_coord                       4
  + shared                                           4
mac_csp_tx                    696             1
  + shared                                    2
mac_data                    2 205                   35
mac_device                  2 003                   22
mac_low_level                 112
mac_main                    1 651                   55
mac_mcu                     1 031            12      2
  + shared                    134             1
  + common
mac_mem                       124             1
mac_mgmt                    3 070                    2
mac_pib                       900                   59
mac_pwr                        19                    1
mac_radio                     643                    4
mac_radio_defs                 26
mac_rx                      2 123                   19
mac_rx_onoff                  334                    2
mac_scan                    1 577                   29
mac_sleep                      79                    1
mac_timer                   1 043                   14
mac_tx                      1 027                    8
menu_lcd                    5 302                  902
nwk                         4 138                  107
nwk_bufs                    1 740                    3
nwk_globals                   234                   45
nwk_util                    4 247                   11
saddr                         298
ssp                           108                    6
wait                          100
wxl_uart                      246
zmac                          802                    6
zmac_cb                       993
N/A (command line)                    16           768           192
N/A (alignment)
----------                 ------     --     --  -----      -    ---      -
Total:                     89 514     18     80  4 982      8    192      8
  + common                    134


                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
INTVEC               CODE          00000000 - 00000085          86   com    0
CSTART               CODE          00000086 - 00000140          BB   rel    0
RCODE                CODE          00000144 - 00000E68         D25   rel    2
NEAR_CODE            CODE          00000E69 - 00001553         6EB   rel    0
IDATA_ID             CODE               00001554                     dse    0
BDATA_ID             CODE               00001554                     dse    0
BIT_ID               CODE               00001554                     dse    0
IXDATA_ID            CODE               00001554                     dse    0
PDATA_ID             CODE               00001554                     dse    0
DATA_ID              CODE               00001554                     dse    0
XDATA_ID             CODE          00001554 - 000018D3         380   rel    0
CODE_C               CODE          000018D4 - 00002234         961   rel    0
<BANKED_CODE> 1      CODE          00003000 - 0000FFF1        CFF2   rel    0
<BANKED_CODE> 2      CODE          00010000 - 00016C0B        6C0C   rel    0
REGISTERS            DATA          00000000 - 00000007           8   rel    0
VREG                 DATA          00000008 - 0000000F           8   rel    0
PSP                  DATA               00000010                     dse    0
XSP                  DATA          00000010 - 00000011           2   rel    0
BREG                 BIT        00000020.0  -  00000020.7        8   rel    0
SFR_AN               DATA          00000080 - 00000081           2   rel    0
                     DATA          00000086 - 00000089           4 
                     DATA          0000008C - 0000008C           1 
                     DATA          0000008F - 00000091           3 
                     DATA          00000094 - 00000097           4 
                     DATA          0000009A - 0000009E           5 
                     DATA          000000A0 - 000000A9           A 
                     DATA          000000AB - 000000AE           4 
                     DATA          000000B3 - 000000B6           4 
                     DATA          000000B8 - 000000BE           7 
                     DATA          000000C0 - 000000C6           7 
                     DATA          000000C9 - 000000C9           1 
                     DATA          000000CB - 000000CC           2 
                     DATA          000000CE - 000000CE           1 
                     DATA          000000D1 - 000000D9           9 
                     DATA          000000E1 - 000000E1           1 
                     DATA          000000E4 - 000000E9           6 
                     DATA          000000EB - 000000EC           2 
                     DATA          000000EE - 000000EE           1 
                     DATA          000000F1 - 000000F3           3 
                     DATA          000000FD - 000000FF           3 
XDATA_AN             XDATA         0000E000 - 0000E007           8   rel    0
XSTACK               XDATA         0000E008 - 0000E307         300   rel    0
IXDATA_I             XDATA              0000E308                     dse    0
XDATA_N              XDATA              0000E308                     dse    0
XDATA_Z              XDATA         0000E308 - 0000EFFD         CF6   rel    0
XDATA_I              XDATA         0000EFFE - 0000F37D         380   rel    0
ISTACK               IDATA         00000040 - 000000FF          C0   rel    0

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 89 648 bytes of CODE  memory
     18 bytes of DATA  memory (+ 80 absolute )
  4 982 bytes of XDATA memory (+  8 absolute )
    192 bytes of IDATA memory
      8 bits  of BIT   memory

Errors: none
Warnings: 3

