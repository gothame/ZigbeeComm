Warning[w6]: Type conflict for external/entry "RfTx", in module menu_lcd against external/entry in module SampleApp; class/struct/union types have different sizes
  /* In module menu_lcd: */
  union j /* Elements: 2, Bytes: 29 */
  { 
    uint8 TxBuf[29];
    struct RFTXBUF /* Elements: 4, Bytes: 29 */
    { 
      uint8 HeadCom[3];
      uint8 Laddr[8];
      uint16 Saddr;
      uint8 DataBuf[16];
    } TXDATA;
  } RfTx;
    typedef unsigned char uint8;
    typedef unsigned short uint16;
  /* In module SampleApp: */
  union j /* Elements: 2, Bytes: 66 */
  { 
    uint8 TxBuf[66];
    struct RFTXBUF /* Elements: 5, Bytes: 66 */
    { 
      uint8 HeadCom[3];
      uint8 Node_type[3];
      uint8 IEEE[8];
      uint16 Saddr;
      uint8 DataBuf[50];
    } TXDATA;
  } RfTx;
    typedef unsigned char uint8;
    typedef unsigned short uint16;
Warning[w35]: There is more than one definition for the struct/union type with tag 'RFTXBUF'; class/struct/union types have different sizes
  struct RFTXBUF /* Elements: 4, Bytes: 29 */
  { 
    uint8 HeadCom[3];
    uint8 Laddr[8];
    uint16 Saddr;
    uint8 DataBuf[16];
  };
    typedef unsigned char uint8;
    typedef unsigned short uint16;
  struct RFTXBUF /* Elements: 5, Bytes: 66 */
  { 
    uint8 HeadCom[3];
    uint8 Node_type[3];
    uint8 IEEE[8];
    uint16 Saddr;
    uint8 DataBuf[50];
  };
    typedef unsigned char uint8;
    typedef unsigned short uint16;
Warning[w35]: There is more than one definition for the struct/union type with tag 'j'; class/struct/union types have different sizes
  union j /* Elements: 2, Bytes: 29 */
  { 
    uint8 TxBuf[29];
    struct RFTXBUF /* Elements: 4, Bytes: 29 */
    { 
      uint8 HeadCom[3];
      uint8 Laddr[8];
      uint16 Saddr;
      uint8 DataBuf[16];
    } TXDATA;
  };
    typedef unsigned char uint8;
    typedef unsigned short uint16;
  union j /* Elements: 2, Bytes: 66 */
  { 
    uint8 TxBuf[66];
    struct RFTXBUF /* Elements: 5, Bytes: 66 */
    { 
      uint8 HeadCom[3];
      uint8 Node_type[3];
      uint8 IEEE[8];
      uint16 Saddr;
      uint8 DataBuf[50];
    } TXDATA;
  };
    typedef unsigned char uint8;
    typedef unsigned short uint16;
################################################################################
#                                                                              #
#      IAR Universal Linker V4.60D/386                                         #
#                                                                              #
#           Link time     =  24/Jan/2013  14:47:54                             #
#           Target CPU    =  x51                                               #
#           List file     =  E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\List\SampleApp.map   #
#           Output file 1 =  E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Exe\SampleApp.hex    #
#                            Format: intel-extended                            #
#           Command line  =  -C                                                #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\..\..\..\Libraries\TI2430DB\b #
#                            in\Router.lib                                     #
#                            -C                                                #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\..\..\..\Libraries\TI2430DB\b #
#                            in\Security.lib                                   #
#                            -C                                                #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\..\..\..\Libraries\TIMAC\bin\ #
#                            TIMAC-CC2430.lib                                  #
#                            "-ID:\Program Files\IAR Systems\Embedded Workbenc #
#                            h 4.05 Evaluation version\8051\CONFIG\"           #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\AF.r51           #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\AccessCodeSpace. #
#                            r51                                               #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\DebugTrace.r51   #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\FlashErasePage.r #
#                            51                                                #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\Font.r51         #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\MTEL.r51         #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\MT_AF.r51        #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\MT_NWK.r51       #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\MT_ZDO.r51       #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\OSAL.r51         #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\OSAL_Memory.r51  #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\OSAL_Nv.r51      #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\OSAL_PwrMgr.r51  #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\OSAL_SampleApp.r #
#                            51                                                #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\OSAL_Tasks.r51   #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\OSAL_Timers.r51  #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\OnBoard.r51      #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\SPIMgr.r51       #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\SampleApp.r51    #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\SampleAppHw.r51  #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\ZDApp.r51        #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\ZDCache.r51      #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\ZDConfig.r51     #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\ZDObject.r51     #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\ZDProfile.r51    #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\ZDSecMgr.r51     #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\ZGlobals.r51     #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\ZMain.r51        #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\chipcon_banked_c #
#                            ode_support.r51                                   #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\chipcon_cexit.r5 #
#                            1                                                 #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\chipcon_cstartup #
#                            .r51                                              #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\flashDmaTrigger. #
#                            r51                                               #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\hal_adc.r51      #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\hal_assert.r51   #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\hal_dma.r51      #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\hal_drivers.r51  #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\hal_key.r51      #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\hal_lcd.r51      #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\hal_led.r51      #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\hal_sleep.r51    #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\hal_target.r51   #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\hal_timer.r51    #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\hal_uart.r51     #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\mac_backoff_time #
#                            r.r51                                             #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\mac_cfg.r51      #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\mac_csp_tx.r51   #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\mac_low_level.r5 #
#                            1                                                 #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\mac_mcu.r51      #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\mac_mem.r51      #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\mac_radio.r51    #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\mac_radio_defs.r #
#                            51                                                #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\mac_random.r51   #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\mac_rx.r51       #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\mac_rx_onoff.r51 #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\mac_sleep.r51    #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\mac_tx.r51       #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\menu_lcd.r51     #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\nwk_globals.r51  #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\saddr.r51        #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\wait.r51         #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\wxl_uart.r51     #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\zmac.r51         #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Obj\zmac_cb.r51      #
#                            -o                                                #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\Exe\SampleApp.hex    #
#                            -Fintel-extended -l                               #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\RouterEB\List\SampleApp.map   #
#                            -xmsn                                             #
#                            "-ID:\Program Files\IAR Systems\Embedded Workbenc #
#                            h 4.05 Evaluation version\8051\LIB\"              #
#                            -f                                                #
#                            E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª· #
#                            ¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´® #
#                            ¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples #
#                            \SampleApp\CC2430DB\..\..\..\Tools\CC2430DB\f8w24 #
#                            30.xcl                                            #
#                            (-D_IDATA_END=0xFF -D_PDATA_START=0xEF00          #
#                            -D_PDATA_END=0xEFFF -D_IXDATA_START=E000          #
#                            -D_IXDATA_END=FEFF -D_XDATA_START=_IXDATA_START   #
#                            -D_XDATA_END=_IXDATA_END                          #
#                            -D_PM0_XDATA_START=E000 -D_PM0_XDATA_END=EFFF     #
#                            -D_NEAR_CODE_END=0x7FFF -D_TINY_CODE_END=0x7FF    #
#                            -D_CODE_START=0x0000 -D_CODE_END=0x2FFF           #
#                            -D_BANK1A=(10000+_CODE_END+1)                     #
#                            -D_ZIGNV_START=0x3E000 -D_ZIGNV_SIZE=0x1000       #
#                            -D_ZIGNV_END=(_ZIGNV_START+_ZIGNV_SIZE-1)         #
#                            -D?REGISTER_BANK=0 -D_REGISTER_BANK_START=0       #
#                            -D_FIRST_BANK_ADDR=0x10000 -D_NR_OF_BANKS=0x03    #
#                            -D?PBANK_NUMBER=EF -D?PBANK=93                    #
#                            -D_BREG_START=0x00 -D?VB=0x20                     #
#                            -D_FAR_DATA_NR_OF_BANKS=0x0E                      #
#                            -D_FAR_DATA_START=0x010001                        #
#                            -D_FAR_DATA_END=0xFFFFFF                          #
#                            -D_FAR_CODE_START=_CODE_START                     #
#                            -D_FAR_CODE_END=_CODE_END                         #
#                            -Z(BIT)BREG=_BREG_START -Z(BIT)BIT_N=0-7F         #
#                            -Z(DATA)REGISTERS+8=_REGISTER_BANK_START          #
#                            -Z(DATA)BDATA_Z,BDATA_N,BDATA_I=20-2F             #
#                            -Z(DATA)VREG+_NR_OF_VIRTUAL_REGISTERS=08-7F       #
#                            -Z(DATA)PSP,XSP=08-7F -Z(DATA)DOVERLAY=08-7F      #
#                            -Z(DATA)DATA_I,DATA_Z,DATA_N=08-7F                #
#                            -U(IDATA)0-7F=(DATA)0-7F                          #
#                            -Z(IDATA)IDATA_I,IDATA_Z,IDATA_N=08-_IDATA_END    #
#                            -Z(IDATA)ISTACK+_IDATA_STACK_SIZE#08-_IDATA_END   #
#                            -Z(IDATA)IOVERLAY=08-FF -Z(CODE)INTVEC=0          #
#                            -Z(CODE)CSTART=_CODE_START-_CODE_END              #
#                            -Z(CODE)RCODE=_CODE_START-_CODE_END               #
#                            -Z(CODE)TINY_CODE=_CODE_START-_TINY_CODE_END      #
#                            -Z(CODE)NEAR_CODE=_CODE_START-_NEAR_CODE_END      #
#                            -Z(CODE)DIFUNCT=_CODE_START-_CODE_END             #
#                            -Z(CODE)FAR_CODE=_CODE_START-_CODE_END            #
#                            -P(CODE)BANKED_CODE=_BANK1_START-_BANK1_END,_BANK #
#                            2_START-_BANK2_END,_BANK3_START-_BANK3_END,_BANK3 #
#                            b_START-_BANK3b_END                               #
#                            -Z(CODE)BIT_ID,BDATA_ID,DATA_ID,IDATA_ID,IXDATA_I #
#                            D,PDATA_ID,XDATA_ID=_CODE_START-_CODE_END         #
#                            -Z(CODE)HUGE_ID=_FAR_CODE_START-_FAR_CODE_END     #
#                            -Z(CODE)CODE_C=_CODE_START-_CODE_END              #
#                            -Z(CODE)FAR_CODE_C=_FAR_CODE_START-_FAR_CODE_END  #
#                            -Z(CODE)HUGE_CODE_C=_FAR_CODE_START-_FAR_CODE_END #
#                            -Z(CODE)CHECKSUM#_CODE_END                        #
#                            -Z(XDATA)PM0_XDATA=_PM0_XDATA_START-_PM0_XDATA_EN #
#                            D                                                 #
#                            -Z(XDATA)EXT_STACK+_EXTENDED_STACK_SIZE=_EXTENDED #
#                            _STACK_START-_EXTENDED_STACK_END                  #
#                            -Z(XDATA)PSTACK+_PDATA_STACK_SIZE=_PDATA_START-_P #
#                            DATA_END                                          #
#                            -Z(XDATA)XSTACK+_XDATA_STACK_SIZE=_XDATA_START-_X #
#                            DATA_END                                          #
#                            -Z(XDATA)PDATA_N,PDATA_Z,PDATA_I=_PDATA_START-_PD #
#                            ATA_END                                           #
#                            -Z(XDATA)IXDATA_N,IXDATA_Z,IXDATA_I=_IXDATA_START #
#                            -_IXDATA_END                                      #
#                            -Z(XDATA)XDATA_N,XDATA_Z,XDATA_I=_XDATA_START-_XD #
#                            ATA_END                                           #
#                            -Z(XDATA)XDATA_HEAP+_XDATA_HEAP_SIZE=_XDATA_START #
#                            -_XDATA_END                                       #
#                            -Z(CONST)XDATA_ROM_C=_XDATA_START-_XDATA_END      #
#                            -Z(SPLIT-XDATA)FAR_Z=[_FAR_DATA_START-_FAR_DATA_E #
#                            ND]/10000                                         #
#                            -Z(SPLIT-XDATA)FAR_I=[_FAR_DATA_START-_FAR_DATA_E #
#                            ND]/10000                                         #
#                            -Z(SPLIT-CODE)FAR_ID=[_FAR_CODE_START-_FAR_CODE_E #
#                            ND]/10000                                         #
#                            -Z(SPLIT-XDATA)FAR_HEAP+_FAR_HEAP_SIZE=[_FAR_DATA #
#                            _START-_FAR_DATA_END]/10000                       #
#                            -P(XDATA)FAR_N=[_FAR_DATA_START-_FAR_DATA_END]*_F #
#                            AR_DATA_NR_OF_BANKS+10000                         #
#                            -P(CONST)FAR_ROM_C=[_FAR_DATA_START-_FAR_DATA_END #
#                            ]*E+10000                                         #
#                            -Z(XDATA)HUGE_N,HUGE_Z,HUGE_I=_FAR_DATA_START-_FA #
#                            R_DATA_END                                        #
#                            -Z(XDATA)HUGE_HEAP+_HUGE_HEAP_SIZE=_FAR_DATA_STAR #
#                            T-_FAR_DATA_END                                   #
#                            -Z(CONST)HUGE_ROM_C=_FAR_DATA_START-_FAR_DATA_END #
#                            -cx51 -D_BANK1_START=_BANK1A                      #
#                            -D_BANK1_END=0x1FFFF -D_BANK2_START=0x28000       #
#                            -D_BANK2_END=0x2FFFF -D_BANK3_START=0x38000       #
#                            -D_BANK3_END=0x3DFFF                              #
#                            -D_BANK3b_START=(_ZIGNV_END+1)                    #
#                            -D_BANK3b_END=0x3FFF7                             #
#                            -P(CODE)BANK1=_BANK1_START-_BANK1_END             #
#                            -P(CODE)BANK2=_BANK2_START-_BANK2_END             #
#                            -P(CODE)BANK3=_BANK3_START-_BANK3_END             #
#                            -P(CODE)ZIGNV=_ZIGNV_START-_ZIGNV_END             #
#                            -P(CODE)BANK3b=_BANK3b_START-_BANK3b_END          #
#                            -D_IEEE_ADDR_START=0x3FFF8                        #
#                            -D_IEEE_ADDR_END=0x3FFFF                          #
#                            -Z(CODE)IEEE_ADDRESS_SPACE=_IEEE_ADDR_START-_IEEE #
#                            _ADDR_END)                                        #
#                            -D_NR_OF_VIRTUAL_REGISTERS=8 -D?DPL1=0x84         #
#                            -D?DPH1=0x85 -D?CBANK=0xC7                        #
#                            -D_CODEBANK_START=0x2000 -D_CODEBANK_END=0xFFFF   #
#                            -e_small_write=_formatted_write                   #
#                            -e_medium_read=_formatted_read -we24=i -s         #
#                            __program_start                                   #
#                            "D:\Program Files\IAR Systems\Embedded Workbench  #
#                            4.05 Evaluation version\8051\LIB\CLIB\cl-pli-blxd #
#                            -1e16x01.r51"                                     #
#                            -D_IDATA_STACK_SIZE=0xC0                          #
#                            -D_EXTENDED_STACK_START=0x00                      #
#                            -D_EXTENDED_STACK_END=0x00                        #
#                            -D_EXTENDED_STACK_SIZE=0x00                       #
#                            -D_PDATA_STACK_SIZE=0x80                          #
#                            -D_XDATA_STACK_SIZE=0x300                         #
#                            -D_XDATA_HEAP_SIZE=0x00 -D_FAR_HEAP_SIZE=0x000    #
#                            -D_HUGE_HEAP_SIZE=0x000                           #
#                                                                              #
#                        Copyright 1987-2006 IAR Systems. All rights reserved. #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at : CODE      000000AD  Relocatable, from module : CSTARTUP




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  __calling_convention     = xdata_reentrant
  __code_model             = banked
  __core                   = plain
  __data_model             = large
  __dptr_size              = 16
  __extended_stack         = disabled
  __location_for_constants = data
  __number_of_dptrs        = 1
  __rt_version             = 1



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?ABS_ENTRY_MOD

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _HUGE_HEAP_SIZE         00000000 
           _FAR_HEAP_SIZE          00000000 
           _XDATA_HEAP_SIZE        00000000 
           _XDATA_STACK_SIZE       00000300 
           _PDATA_STACK_SIZE       00000080 
           _EXTENDED_STACK_SIZE    00000000 
           _EXTENDED_STACK_END     00000000 
           _EXTENDED_STACK_START   00000000 
           _IDATA_STACK_SIZE       000000C0 
           _CODEBANK_END           0000FFFF 
           _CODEBANK_START         00002000 
           ?CBANK                  000000C7        Segment part 0 (?BANKED_CODE_SUPPORT)
           ?DPH1                   00000085 
           ?DPL1                   00000084 
           _NR_OF_VIRTUAL_REGISTERS
                                   00000008 
           _IEEE_ADDR_END          0003FFFF 
           _IEEE_ADDR_START        0003FFF8 
           _BANK3b_END             0003FFF7 
           _BANK3b_START           0003F000 
           _BANK3_END              0003DFFF 
           _BANK3_START            00038000 
           _BANK2_END              0002FFFF 
           _BANK2_START            00028000 
           _BANK1_END              0001FFFF 
           _BANK1_START            00013000 
           _FAR_CODE_END           00002FFF 
           _FAR_CODE_START         00000000 
           _FAR_DATA_END           00FFFFFF 
           _FAR_DATA_START         00010001 
           _FAR_DATA_NR_OF_BANKS   0000000E 
           ?VB                     00000020        ?BANKED_ENTER_XDATA (?BANKED_ENTER_XDATA)
                                                   ?BANKED_LEAVE_XDATA (?BANKED_LEAVE_XDATA)
                                                   ?FUNC_ENTER_XDATA (?FUNC_ENTER_XDATA)
                                                   ?FUNC_LEAVE_XDATA (?FUNC_LEAVE_XDATA)
                                                   ?INTERRUPT_ENTER_XSP (?INTERRUPT_ENTER_XSP)
                                                   ?INTERRUPT_LEAVE_XSP (?INTERRUPT_LEAVE_XSP)
           _BREG_START             00000000 
           ?PBANK                  00000093 
           ?PBANK_NUMBER           000000EF 
           _NR_OF_BANKS            00000003 
           _FIRST_BANK_ADDR        00010000 
           _REGISTER_BANK_START    00000000 
           ?REGISTER_BANK          00000000        Segment part 6 (CSTARTUP)
           _ZIGNV_END              0003EFFF 
           _ZIGNV_SIZE             00001000 
           _ZIGNV_START            0003E000 
           _BANK1A                 00013000 
           _CODE_END               00002FFF 
           _CODE_START             00000000 
           _TINY_CODE_END          000007FF 
           _NEAR_CODE_END          00007FFF 
           _PM0_XDATA_END          0000EFFF 
           _PM0_XDATA_START        0000E000 
           _XDATA_END              0000FEFF 
           _XDATA_START            0000E000 
           _IXDATA_END             0000FEFF 
           _IXDATA_START           0000E000 
           _PDATA_END              0000EFFF 
           _PDATA_START            0000EF00 
           _IDATA_END              000000FF 
    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Libraries\TI2430DB\bin\Router.lib
  LIBRARY MODULE, NAME : APS

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E308 - 0000E308 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   APS_CmdInd
                                                   APS_Init
                                                   APS_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APS_TaskID              0000E308        APSDE_DataIndication (APSMEDE_CB)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E309 - 0000E30A (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   APS_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AIB_MaxBindingTime      0000E309 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E30B - 0000E30B (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   APS_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APS_Counter             0000E30B        APSDE_FrameHdrSet (APSMEDE)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E30C - 0000E30E (0x3 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pAPS_DataConfirmReflect
                                   0000E30C        NLDE_DataCnf (NLMEDE_CB)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E30F - 0000E311 (0x3 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pAPS_DataIndReflect     0000E30F        NLDE_DataIndication (NLMEDE_CB)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E312 - 0000E314 (0x3 bytes), align: 0
  Segment part 13.            Intra module refs:   APS_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pAPS_BindingTimeoutCB   0000E312 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E315 - 0000E317 (0x3 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           apsfSendFragmented      0000E315        AF_DataRequest (AF)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E318 - 0000E31A (0x3 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           apsfProcessAck          0000E318        apsProcessAck (aps_util)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E31B - 0000E31D (0x3 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           apsfSendOsalMsg         0000E31B        APSDE_DataIndication (APSMEDE_CB)
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038BB5 - 00038BCE (0x1a bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APS_Init                00038BB5        osalAddTasks (OSAL_SampleApp)
               is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038BCF - 00038BD5 (0x7 bytes), align: 0
  Segment part 22.            Intra module refs:   APS_Init
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038BD6 - 00038CA2 (0xcd bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APS_event_loop          00038BD6        osalAddTasks (OSAL_SampleApp)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038CA3 - 00038CA9 (0x7 bytes), align: 0
  Segment part 25.            Intra module refs:   APS_event_loop
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038CAA - 00038D94 (0xeb bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APS_CmdInd              00038CAA        NLDE_DataIndication (NLMEDE_CB)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038D95 - 00038D9B (0x7 bytes), align: 0
  Segment part 27.            Intra module refs:   APS_CmdInd
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038D9C - 00038DA1 (0x6 bytes), align: 0
  Segment part 28.            Intra module refs:   Segment part 27
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038DA2 - 00038DAC (0xb bytes), align: 0
  Segment part 29.            Intra module refs:   APS_CmdInd
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038DAD - 00038DB1 (0x5 bytes), align: 0
  Segment part 31.            Intra module refs:   APS_CmdInd
                                                   APS_event_loop
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038DB2 - 00038DBB (0xa bytes), align: 0
  Segment part 35.            Intra module refs:   APS_CmdInd
                                                   APS_Init
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038DBC - 00038DC1 (0x6 bytes), align: 0
  Segment part 38.            Intra module refs:   Segment part 25
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038DC2 - 00038DC9 (0x8 bytes), align: 0
  Segment part 39.            Intra module refs:   APS_CmdInd
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038DCA - 00038DD5 (0xc bytes), align: 0
  Segment part 40.            Intra module refs:   APS_event_loop
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038DD6 - 00038DDE (0x9 bytes), align: 0
  Segment part 41.            Intra module refs:   APS_CmdInd
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038DDF - 00038DE8 (0xa bytes), align: 0
  Segment part 42.            Intra module refs:   APS_CmdInd
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038DE9 - 00038DEE (0x6 bytes), align: 0
  Segment part 43.            Intra module refs:   Segment part 42
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038DEF - 00038DF2 (0x4 bytes), align: 0
  Segment part 46.            Intra module refs:   APS_CmdInd
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038DF3 - 00038DFB (0x9 bytes), align: 0
  Segment part 47.            Intra module refs:   Segment part 46
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038DFC - 00038E0C (0x11 bytes), align: 0
  Segment part 50.            Intra module refs:   APS_CmdInd
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038E0D - 00038E18 (0xc bytes), align: 0
  Segment part 55.            Intra module refs:   APS_CmdInd
                                                   APS_Init
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038E19 - 00038E23 (0xb bytes), align: 0
  Segment part 61.            Intra module refs:   Segment part 62
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038E24 - 00038E28 (0x5 bytes), align: 0
  Segment part 62.            Intra module refs:   APS_CmdInd
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038E29 - 00038E35 (0xd bytes), align: 0
  Segment part 68.            Intra module refs:   APS_event_loop
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038E36 - 00038E42 (0xd bytes), align: 0
  Segment part 70.            Intra module refs:   APS_CmdInd

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : APSMEDE

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E31E - 0000E320 (0x3 bytes), align: 0
  Segment part 7.             Intra module refs:   APSME_FrameSecInit
                                                   APSME_FrameSecNM
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecSetupHook
                                   0000E31E 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E321 - 0000E323 (0x3 bytes), align: 0
  Segment part 8.             Intra module refs:   APSDE_FrameSend
                                                   APSME_FrameSecNM
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecApplyHook
                                   0000E321 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E324 - 0000E326 (0x3 bytes), align: 0
  Segment part 9.             Intra module refs:   APSME_FrameSecNM
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecApplyExtHook
                                   0000E324 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E327 - 0000E329 (0x3 bytes), align: 0
  Segment part 10.            Intra module refs:   APSME_FrameSecNM
                                                   APSME_FrameSecurityRemove
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecRemoveHook
                                   0000E327 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E32A - 0000E32C (0x3 bytes), align: 0
  Segment part 11.            Intra module refs:   APSME_CmdPkt
                                                   APSME_SecurityNM
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_CmdPktHook        0000E32A 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D272 - 0001D4EF (0x27e bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_DataReq           0001D272        AF_DataRequest (AF)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000019 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D4F0 - 0001D4F7 (0x8 bytes), align: 0
  Segment part 17.            Intra module refs:   APSDE_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D4F8 - 0001D4FF (0x8 bytes), align: 0
  Segment part 18.            Intra module refs:   Segment part 156
                                                   Segment part 157
                                                   Segment part 17
                                                   Segment part 173
                                                   Segment part 20
                                                   Segment part 37
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D500 - 0001D50D (0xe bytes), align: 0
  Segment part 19.            Intra module refs:   APSDE_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D50E - 0001D516 (0x9 bytes), align: 0
  Segment part 20.            Intra module refs:   APSDE_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D517 - 0001D53F (0x29 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_DataReqMTU        0001D517        afDataReqMTU (AF)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D540 - 0001D5D4 (0x95 bytes), align: 0
  Segment part 30.            Intra module refs:   APSDE_DataReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_LookupNwkAddr     0001D540 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000016 ( 00000013 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D5D5 - 0001D5D9 (0x5 bytes), align: 0
  Segment part 31.            Intra module refs:   APSME_LookupNwkAddr
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D5DA - 0001D5E4 (0xb bytes), align: 0
  Segment part 32.            Intra module refs:   APSDE_FrameSend
                                                   APSME_FrameSecInit
                                                   APSME_FrameSecurityRemove
                                                   Segment part 31
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D5E5 - 0001D667 (0x83 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_FrameDataLoad      0001D5E5        nwkDB_UserDataLoad (nwk_util)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D668 - 0001D66B (0x4 bytes), align: 0
  Segment part 34.            Intra module refs:   NLDE_FrameDataLoad
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D66C - 0001D679 (0xe bytes), align: 0
  Segment part 35.            Intra module refs:   Segment part 34
                                                   Segment part 36
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D67A - 0001D67F (0x6 bytes), align: 0
  Segment part 36.            Intra module refs:   NLDE_FrameDataLoad
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D680 - 0001D685 (0x6 bytes), align: 0
  Segment part 37.            Intra module refs:   NLDE_FrameDataLoad
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D686 - 0001D68A (0x5 bytes), align: 0
  Segment part 38.            Intra module refs:   Segment part 37
                                                   Segment part 87
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D68B - 0001D69F (0x15 bytes), align: 0
  Segment part 40.            Intra module refs:   APSDE_DataReqMTU
                                                   APSDE_FrameBlkFree
                                                   APSME_FrameSecApplyNM
                                                   APSME_FrameSecNM
                                                   APSME_FrameSecSetupNM
                                                   APSME_SecurityNM
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D6A0 - 0001D6A6 (0x7 bytes), align: 0
  Segment part 47.            Intra module refs:   APSDE_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D6A7 - 0001D6B0 (0xa bytes), align: 0
  Segment part 52.            Intra module refs:   Segment part 83
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D6B1 - 0001D6B8 (0x8 bytes), align: 0
  Segment part 53.            Intra module refs:   Segment part 112
                                                   Segment part 155
                                                   Segment part 202
                                                   Segment part 52
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D6B9 - 0001D6C2 (0xa bytes), align: 0
  Segment part 55.            Intra module refs:   APSDE_DataReq
                                                   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D6C3 - 0001D6D0 (0xe bytes), align: 0
  Segment part 61.            Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D6D1 - 0001D6D5 (0x5 bytes), align: 0
  Segment part 62.            Intra module refs:   Segment part 61
                                                   Segment part 91
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D6D6 - 0001D6DD (0x8 bytes), align: 0
  Segment part 63.            Intra module refs:   APSME_FrameSecNM
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecSetupNM   0001D6D6 
               is indirectly called
               stack 1 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D6DE - 0001D6E1 (0x4 bytes), align: 0
  Segment part 65.            Intra module refs:   APSDE_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D6E2 - 0001D6E8 (0x7 bytes), align: 0
  Segment part 66.            Intra module refs:   Segment part 177
                                                   Segment part 178
                                                   Segment part 65
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D6E9, align: 0
  Segment part 67.            Intra module refs:   APSME_FrameSecNM
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecRemoveNM
                                   0001D6E9 
               is indirectly called
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D6E9 - 0001D6ED (0x5 bytes), align: 0
  Segment part 68.            Intra module refs:   APSME_FrameSecApplyExtNM
                                                   APSME_FrameSecRemoveNM
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D6EE - 0001D6F3 (0x6 bytes), align: 0
  Segment part 72.            Intra module refs:   APSME_FrameSecInit
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D6F4 - 0001D6FC (0x9 bytes), align: 0
  Segment part 77.            Intra module refs:   APSME_FrameSecNM
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecApplyNM   0001D6F4 
               is indirectly called
               stack 1 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D6FD - 0001D6FF (0x3 bytes), align: 0
  Segment part 79.            Intra module refs:   APSME_FrameSecNM
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecApplyExtNM
                                   0001D6FD 
               is indirectly called
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D700 - 0001D73D (0x3e bytes), align: 0
  Segment part 81.            Intra module refs:   APSME_SecurityNM
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecNM        0001D700 
               stack 1 = 00000002 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D73E - 0001D799 (0x5c bytes), align: 0
  Segment part 82.            Intra module refs:   APSDE_FrameBlkInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecInit      0001D73E 
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000009 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D79A - 0001D79D (0x4 bytes), align: 0
  Segment part 83.            Intra module refs:   APSME_FrameSecInit
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D79E - 0001D7AD (0x10 bytes), align: 0
  Segment part 84.            Intra module refs:   APSDE_FrameSend
                                                   APSME_FrameSecInit
                                                   Segment part 32
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D7AE - 0001D96B (0x1be bytes), align: 0
  Segment part 85.            Intra module refs:   APSDE_FrameSend
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_FrameHdrSet       0001D7AE 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000B ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D96C - 0001D96F (0x4 bytes), align: 0
  Segment part 86.            Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D970 - 0001D978 (0x9 bytes), align: 0
  Segment part 87.            Intra module refs:   Segment part 86
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D979 - 0001D982 (0xa bytes), align: 0
  Segment part 88.            Intra module refs:   APSDE_DataReq
                                                   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D983 - 0001D986 (0x4 bytes), align: 0
  Segment part 89.            Intra module refs:   Segment part 216
                                                   Segment part 225
                                                   Segment part 88
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D987 - 0001D98D (0x7 bytes), align: 0
  Segment part 90.            Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D98E - 0001D996 (0x9 bytes), align: 0
  Segment part 91.            Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D997 - 0001D99E (0x8 bytes), align: 0
  Segment part 92.            Intra module refs:   APSDE_FrameHdrSet
                                                   Segment part 91
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D99F - 0001D9A1 (0x3 bytes), align: 0
  Segment part 93.            Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D9A2 - 0001D9A7 (0x6 bytes), align: 0
  Segment part 94.            Intra module refs:   Segment part 205
                                                   Segment part 93
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D9A8 - 0001D9AF (0x8 bytes), align: 0
  Segment part 95.            Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D9B0 - 0001D9B6 (0x7 bytes), align: 0
  Segment part 96.            Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D9B7 - 0001D9BB (0x5 bytes), align: 0
  Segment part 97.            Intra module refs:   Segment part 90
                                                   Segment part 96
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D9BC - 0001D9C3 (0x8 bytes), align: 0
  Segment part 98.            Intra module refs:   Segment part 96
                                                   Segment part 99
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D9C4 - 0001D9C6 (0x3 bytes), align: 0
  Segment part 99.            Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D9C7 - 0001D9CC (0x6 bytes), align: 0
  Segment part 100.           Intra module refs:   Segment part 101
                                                   Segment part 99
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D9CD - 0001D9D9 (0xd bytes), align: 0
  Segment part 101.           Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D9DA - 0001D9DE (0x5 bytes), align: 0
  Segment part 102.           Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D9DF - 0001DACF (0xf1 bytes), align: 0
  Segment part 103.           Intra module refs:   APSDE_FrameBlkInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_FrameHdrInit      0001D9DF 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000009 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DAD0 - 0001DADF (0x10 bytes), align: 0
  Segment part 104.           Intra module refs:   APSDE_FrameHdrInit
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DAE0 - 0001DAE8 (0x9 bytes), align: 0
  Segment part 105.           Intra module refs:   Segment part 104
                                                   Segment part 173
                                                   Segment part 72
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DAE9 - 0001DAF2 (0xa bytes), align: 0
  Segment part 106.           Intra module refs:   APSDE_FrameHdrInit
                                                   APSME_FrameSecInit
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DAF3 - 0001DB1C (0x2a bytes), align: 0
  Segment part 107.           Intra module refs:   APSDE_FrameAlloc
                                                   APSDE_FrameSend
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_FrameBlkFree      0001DAF3 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000011 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DB1D - 0001DB25 (0x9 bytes), align: 0
  Segment part 108.           Intra module refs:   APSDE_FrameBlkFree
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DB26 - 0001DB59 (0x34 bytes), align: 0
  Segment part 109.           Intra module refs:   APSDE_FrameAlloc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_FrameBlkInit      0001DB26 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000011 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DB5A - 0001DB5F (0x6 bytes), align: 0
  Segment part 110.           Intra module refs:   APSDE_FrameBlkInit
                                                   APSME_CmdPkt
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DB60 - 0001DB69 (0xa bytes), align: 0
  Segment part 111.           Intra module refs:   APSDE_DataReq
                                                   APSDE_FrameAlloc
                                                   APSDE_FrameBlkInit
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DB6A - 0001DB70 (0x7 bytes), align: 0
  Segment part 112.           Intra module refs:   APSDE_FrameBlkInit
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DB71 - 0001DB72 (0x2 bytes), align: 0
  Segment part 113.           Intra module refs:   Segment part 102
                                                   Segment part 112
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DB73 - 0001DB77 (0x5 bytes), align: 0
  Segment part 114.           Intra module refs:   Segment part 113
                                                   Segment part 123
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DB78 - 0001DB7E (0x7 bytes), align: 0
  Segment part 116.           Intra module refs:   APSDE_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DB7F - 0001DB86 (0x8 bytes), align: 0
  Segment part 117.           Intra module refs:   Segment part 116
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DB87 - 0001DB8E (0x8 bytes), align: 0
  Segment part 118.           Intra module refs:   APSDE_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DB8F - 0001DB94 (0x6 bytes), align: 0
  Segment part 119.           Intra module refs:   APSDE_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DB95 - 0001DB9B (0x7 bytes), align: 0
  Segment part 120.           Intra module refs:   Segment part 119
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DB9C - 0001DBA3 (0x8 bytes), align: 0
  Segment part 121.           Intra module refs:   Segment part 119
                                                   Segment part 93
                                                   Segment part 95
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DBA4 - 0001DBAA (0x7 bytes), align: 0
  Segment part 122.           Intra module refs:   Segment part 121
                                                   Segment part 97
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DBAB - 0001DBB0 (0x6 bytes), align: 0
  Segment part 123.           Intra module refs:   Segment part 122
                                                   Segment part 62
                                                   Segment part 89
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DBB1 - 0001DBB3 (0x3 bytes), align: 0
  Segment part 125.           Intra module refs:   APSME_LookupNwkAddr
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DBB4 - 0001DBB8 (0x5 bytes), align: 0
  Segment part 126.           Intra module refs:   Segment part 125
                                                   Segment part 228
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DBB9 - 0001DBD2 (0x1a bytes), align: 0
  Segment part 143.           Intra module refs:   APSDE_FrameAlloc
                                                   APSDE_FrameSend
                                                   APSME_FrameSecInit
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DBD3 - 0001DBE3 (0x11 bytes), align: 0
  Segment part 146.           Intra module refs:   NLDE_FrameDataLoad
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DBE4 - 0001DBEC (0x9 bytes), align: 0
  Segment part 150.           Intra module refs:   NLDE_FrameDataLoad
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DBED - 0001DBF5 (0x9 bytes), align: 0
  Segment part 151.           Intra module refs:   Segment part 146
                                                   Segment part 150
                                                   Segment part 19
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DBF6 - 0001DBFC (0x7 bytes), align: 0
  Segment part 154.           Intra module refs:   APSDE_FrameAlloc
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DBFD - 0001DC09 (0xd bytes), align: 0
  Segment part 155.           Intra module refs:   APSDE_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DC0A - 0001DC14 (0xb bytes), align: 0
  Segment part 156.           Intra module refs:   APSDE_DataReq
                                                   APSDE_FrameAlloc
                                                   APSDE_FrameHdrSet
                                                   NLDE_FrameDataLoad
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DC15 - 0001DC20 (0xc bytes), align: 0
  Segment part 157.           Intra module refs:   APSDE_DataReq
                                                   APSDE_FrameAlloc
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DC21 - 0001DC23 (0x3 bytes), align: 0
  Segment part 170.           Intra module refs:   APSME_SecurityNM
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_CmdPktNM          0001DC21 
               is indirectly called
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DC24 - 0001DC37 (0x14 bytes), align: 0
  Segment part 171.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_CmdPkt            0001DC24        APS_event_loop (APS)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DC38 - 0001DDBC (0x185 bytes), align: 0
  Segment part 172.           Intra module refs:   Segment part 222
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_FrameAlloc        0001DC38        apsGenerateAck (aps_util)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000019 ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DDBD - 0001DDCC (0x10 bytes), align: 0
  Segment part 173.           Intra module refs:   APSDE_DataReq
                                                   APSDE_FrameAlloc
                                                   NLDE_FrameDataLoad
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DDCD - 0001DDD0 (0x4 bytes), align: 0
  Segment part 174.           Intra module refs:   APSDE_FrameAlloc
                                                   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DDD1 - 0001DDDB (0xb bytes), align: 0
  Segment part 175.           Intra module refs:   Segment part 101
                                                   Segment part 174
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DDDC - 0001DDF3 (0x18 bytes), align: 0
  Segment part 176.           Intra module refs:   APSDE_FrameAlloc
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DDF4 - 0001DDF8 (0x5 bytes), align: 0
  Segment part 177.           Intra module refs:   APSDE_FrameAlloc
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DDF9 - 0001DDFE (0x6 bytes), align: 0
  Segment part 178.           Intra module refs:   APSDE_FrameAlloc
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DDFF - 0001DE03 (0x5 bytes), align: 0
  Segment part 179.           Intra module refs:   APSDE_FrameAlloc
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DE04 - 0001DE09 (0x6 bytes), align: 0
  Segment part 180.           Intra module refs:   Segment part 179
                                                   Segment part 47
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DE0A - 0001DE11 (0x8 bytes), align: 0
  Segment part 181.           Intra module refs:   APSDE_FrameAlloc
                                                   APSDE_FrameHdrInit
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DE12 - 0001DE18 (0x7 bytes), align: 0
  Segment part 182.           Intra module refs:   Segment part 181
                                                   Segment part 191
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DE19 - 0001DE85 (0x6d bytes), align: 0
  Segment part 183.           Intra module refs:   APSDE_DataReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_FrameSend         0001DE19        apsGenerateAck (aps_util)
               calls direct, is recursive
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000019 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DE86 - 0001DE90 (0xb bytes), align: 0
  Segment part 184.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecurityRemove
                                   0001DE86        NLDE_DataIndication (NLMEDE_CB)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DE91 - 0001DE91 (0x1 bytes), align: 0
  Segment part 189.           Intra module refs:   APSDE_DataReq
                                                   Segment part 220
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DE92 - 0001DE98 (0x7 bytes), align: 0
  Segment part 190.           Intra module refs:   Segment part 189
                                                   Segment part 208
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DE99 - 0001DE9B (0x3 bytes), align: 0
  Segment part 191.           Intra module refs:   NLDE_FrameDataLoad
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DE9C - 0001DEA0 (0x5 bytes), align: 0
  Segment part 192.           Intra module refs:   Segment part 191
                                                   Segment part 226
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DEA1 - 0001DEB0 (0x10 bytes), align: 0
  Segment part 194.           Intra module refs:   Segment part 110
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DEB1 - 0001DEB8 (0x8 bytes), align: 0
  Segment part 199.           Intra module refs:   Segment part 106
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DEB9 - 0001DEC0 (0x8 bytes), align: 0
  Segment part 202.           Intra module refs:   Segment part 180
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DEC1 - 0001DEC7 (0x7 bytes), align: 0
  Segment part 204.           Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DEC8 - 0001DECB (0x4 bytes), align: 0
  Segment part 205.           Intra module refs:   Segment part 101
                                                   Segment part 204
                                                   Segment part 98
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DECC - 0001DECF (0x4 bytes), align: 0
  Segment part 207.           Intra module refs:   Segment part 118
                                                   Segment part 146
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DED0 - 0001DED7 (0x8 bytes), align: 0
  Segment part 208.           Intra module refs:   Segment part 151
                                                   Segment part 207
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DED8 - 0001DEDF (0x8 bytes), align: 0
  Segment part 212.           Intra module refs:   APSDE_FrameAlloc
                                                   APSDE_FrameHdrInit
                                                   NLDE_FrameDataLoad
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DEE0 - 0001DEE6 (0x7 bytes), align: 0
  Segment part 213.           Intra module refs:   APSDE_FrameAlloc
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DEE7 - 0001DEEB (0x5 bytes), align: 0
  Segment part 214.           Intra module refs:   APSDE_DataReq
                                                   Segment part 194
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DEEC - 0001DEF2 (0x7 bytes), align: 0
  Segment part 216.           Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DEF3 - 0001DEF9 (0x7 bytes), align: 0
  Segment part 217.           Intra module refs:   Segment part 213
                                                   Segment part 216
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DEFA - 0001DF01 (0x8 bytes), align: 0
  Segment part 220.           Intra module refs:   Segment part 222
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DF02 - 0001DF0C (0xb bytes), align: 0
  Segment part 222.           Intra module refs:   APSDE_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DF0D - 0001DF17 (0xb bytes), align: 0
  Segment part 224.           Intra module refs:   APSME_CmdPkt
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DF18 - 0001DF24 (0xd bytes), align: 0
  Segment part 225.           Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DF25 - 0001DF28 (0x4 bytes), align: 0
  Segment part 226.           Intra module refs:   Segment part 111
                                                   Segment part 125
                                                   Segment part 173
                                                   Segment part 225
                                                   Segment part 37
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DF29 - 0001DF2C (0x4 bytes), align: 0
  Segment part 227.           Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DF2D - 0001DF30 (0x4 bytes), align: 0
  Segment part 228.           Intra module refs:   Segment part 182
                                                   Segment part 199
                                                   Segment part 227
                                                   Segment part 66
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DF31 - 0001DF3C (0xc bytes), align: 0
  Segment part 232.           Intra module refs:   Segment part 108
                                                   Segment part 143
                                                   Segment part 17
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DF3D - 0001DF58 (0x1c bytes), align: 0
  Segment part 234.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_SecurityNM        0001DF3D        ?Subroutine0 (ZDSecMgr)
               calls direct
               stack 1 = 00000000 ( 00000002 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : APSMEDE_CB

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039337 - 0003937E (0x48 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_DataConfirm       00039337        NLDE_DataCnf (NLMEDE_CB)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003937F - 00039385 (0x7 bytes), align: 0
  Segment part 7.             Intra module refs:   APSDE_DataConfirm
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039386 - 00039537 (0x1b2 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_DataIndication    00039386        NLDE_DataIndication (NLMEDE_CB)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000005 ( 00000017 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039538 - 00039545 (0xe bytes), align: 0
  Segment part 10.            Intra module refs:   APSDE_DataConfirm
                                                   APSDE_DataIndication
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039546 - 00039555 (0x10 bytes), align: 0
  Segment part 14.            Intra module refs:   APSDE_DataIndication
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039556 - 00039560 (0xb bytes), align: 0
  Segment part 21.            Intra module refs:   APSDE_DataIndication
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039561 - 00039572 (0x12 bytes), align: 0
  Segment part 31.            Intra module refs:   APSDE_DataIndication

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : AddrMgr

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E32D - 0000E32E (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   AddrMgrEntryAdd
                                                   AddrMgrEntryLookupExt
                                                   AddrMgrEntryLookupNwk
                                                   AddrMgrEntryValidate
                                                   AddrMgrInit
                                                   Segment part 37
                                                   Segment part 50
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntryTotal       0000E32D 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E32F - 0000E330 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   AddrMgrEntryLookupNwk
                                                   AddrMgrEntrySet
                                                   AddrMgrInit
                                                   Segment part 25
                                                   Segment part 34
                                                   Segment part 46
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntryData        0000E32F 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B002 - 0002B00E (0xd bytes), align: 0
  Segment part 9.             Intra module refs:   AddrMgrExtAddrValid
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B00F - 0002B021 (0x13 bytes), align: 0
  Segment part 14.            Intra module refs:   AddrMgrEntryAdd
                                                   AddrMgrEntryAddRef
                                                   AddrMgrEntryRelease
                                                   AddrMgrEntrySet
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntryDataSave    0002B00F 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 0000000C ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B022 - 0002B051 (0x30 bytes), align: 0
  Segment part 15.            Intra module refs:   AddrMgrEntryAddRef
                                                   AddrMgrEntryGet
                                                   AddrMgrEntryRelease
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntryValidate    0002B022 
               stack 1 = 00000000 ( 00000004 )
               stack 2 = 0000000B ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B052 - 0002B05B (0xa bytes), align: 0
  Segment part 16.            Intra module refs:   AddrMgrEntryDataSave
                                                   AddrMgrEntryValidate
                                                   AddrMgrExtAddrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B05C - 0002B0C7 (0x6c bytes), align: 0
  Segment part 17.            Intra module refs:   AddrMgrEntryUpdateEx
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntrySet         0002B05C 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000B ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B0C8 - 0002B0CE (0x7 bytes), align: 0
  Segment part 18.            Intra module refs:   AddrMgrEntrySet
                                                   AddrMgrEntryValidate
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B0CF - 0002B0D1 (0x3 bytes), align: 0
  Segment part 19.            Intra module refs:   AddrMgrExtAddrValid
                                                   Segment part 18
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B0D2 - 0002B0D6 (0x5 bytes), align: 0
  Segment part 20.            Intra module refs:   AddrMgrEntryUpdateEx
                                                   Segment part 19
                                                   Segment part 51
                                                   Segment part 56
                                                   Segment part 63
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B0D7 - 0002B0DE (0x8 bytes), align: 0
  Segment part 21.            Intra module refs:   AddrMgrEntryLookupExt
                                                   AddrMgrEntryLookupNwk
                                                   AddrMgrEntrySet
                                                   AddrMgrEntryUpdateEx
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B0DF - 0002B0E5 (0x7 bytes), align: 0
  Segment part 22.            Intra module refs:   AddrMgrEntryGet
                                                   AddrMgrEntryLookupNwk
                                                   AddrMgrEntryUpdateEx
                                                   Segment part 21
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B0E6 - 0002B160 (0x7b bytes), align: 0
  Segment part 23.            Intra module refs:   AddrMgrEntryUpdateEx
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntryAdd         0002B0E6 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000B ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B161 - 0002B165 (0x5 bytes), align: 0
  Segment part 24.            Intra module refs:   AddrMgrEntryAdd
                                                   AddrMgrEntryLookupNwk
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B166 - 0002B189 (0x24 bytes), align: 0
  Segment part 25.            Intra module refs:   AddrMgrEntryAdd
                                                   AddrMgrEntryLookupNwk
                                                   AddrMgrEntryValidate
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B18A - 0002B264 (0xdb bytes), align: 0
  Segment part 26.            Intra module refs:   AddrMgrEntryUpdate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntryUpdateEx    0002B18A 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000002A ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B265 - 0002B26B (0x7 bytes), align: 0
  Segment part 27.            Intra module refs:   AddrMgrEntryGet
                                                   AddrMgrEntryUpdateEx
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B26C - 0002B2C4 (0x59 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrInit             0002B26C        nwk_globals_init (nwk_globals)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B2C5 - 0002B2D0 (0xc bytes), align: 0
  Segment part 30.            Intra module refs:   AddrMgrEntrySet
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B2D1 - 0002B2DA (0xa bytes), align: 0
  Segment part 32.            Intra module refs:   AddrMgrEntrySet
                                                   AddrMgrInit
                                                   AddrMgrNwkAddrLookup
                                                   Segment part 44
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B2DB - 0002B2F3 (0x19 bytes), align: 0
  Segment part 34.            Intra module refs:   AddrMgrEntryAdd
                                                   AddrMgrEntryGet
                                                   AddrMgrEntryLookupExt
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B2F4 - 0002B2FC (0x9 bytes), align: 0
  Segment part 36.            Intra module refs:   AddrMgrEntryAdd
                                                   AddrMgrEntryLookupExt
                                                   AddrMgrEntryLookupNwk
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B2FD - 0002B308 (0xc bytes), align: 0
  Segment part 37.            Intra module refs:   AddrMgrEntryLookupExt
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B309 - 0002B327 (0x1f bytes), align: 0
  Segment part 38.            Intra module refs:   AddrMgrEntryUpdate
                                                   AddrMgrNwkAddrLookup
                                                   Segment part 59
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrExtAddrSet       0002B309        AssocAddNew (AssocList)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000028 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B328 - 0002B34F (0x28 bytes), align: 0
  Segment part 39.            Intra module refs:   AddrMgrEntryUpdateEx
                                                   Segment part 61
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrExtAddrValid     0002B328 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000016 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B350 - 0002B3AE (0x5f bytes), align: 0
  Segment part 42.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrNwkAddrLookup    0002B350        APSME_LookupNwkAddr (APSMEDE)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000016 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B3AF - 0002B3DC (0x2e bytes), align: 0
  Segment part 43.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntryRelease     0002B3AF        AssocRemove (AssocList)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B3DD - 0002B3E1 (0x5 bytes), align: 0
  Segment part 44.            Intra module refs:   AddrMgrEntryAddRef
                                                   AddrMgrEntryRelease
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B3E2 - 0002B41E (0x3d bytes), align: 0
  Segment part 45.            Intra module refs:   AddrMgrEntryUpdate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntryAddRef      0002B3E2 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000028 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B41F - 0002B443 (0x25 bytes), align: 0
  Segment part 46.            Intra module refs:   AddrMgrEntryAddRef
                                                   AddrMgrEntryRelease
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B444 - 0002B500 (0xbd bytes), align: 0
  Segment part 47.            Intra module refs:   AddrMgrEntryUpdate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntryLookupNwk   0002B444 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000028 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B501 - 0002B50C (0xc bytes), align: 0
  Segment part 48.            Intra module refs:   AddrMgrEntryAdd
                                                   AddrMgrEntryLookupNwk
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B50D - 0002B516 (0xa bytes), align: 0
  Segment part 49.            Intra module refs:   AddrMgrEntryLookupExt
                                                   Segment part 48
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B517 - 0002B524 (0xe bytes), align: 0
  Segment part 50.            Intra module refs:   AddrMgrEntryAdd
                                                   AddrMgrEntryLookupNwk
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B525 - 0002B535 (0x11 bytes), align: 0
  Segment part 51.            Intra module refs:   AddrMgrEntryAdd
                                                   AddrMgrEntryGet
                                                   AddrMgrEntryLookupExt
                                                   AddrMgrEntryLookupNwk
                                                   AddrMgrEntryUpdate
                                                   AddrMgrEntryUpdateEx
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B536 - 0002B5C4 (0x8f bytes), align: 0
  Segment part 52.            Intra module refs:   AddrMgrEntryUpdate
                                                   AddrMgrNwkAddrLookup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntryLookupExt   0002B536 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000028 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B5C5 - 0002B5C9 (0x5 bytes), align: 0
  Segment part 53.            Intra module refs:   AddrMgrEntryLookupExt
                                                   AddrMgrEntryUpdate
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B5CA - 0002B5D4 (0xb bytes), align: 0
  Segment part 54.            Intra module refs:   AddrMgrEntryAdd
                                                   AddrMgrEntryLookupExt
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B5D5 - 0002B5E0 (0xc bytes), align: 0
  Segment part 55.            Intra module refs:   AddrMgrEntryAdd
                                                   AddrMgrEntryLookupExt
                                                   AddrMgrEntryUpdate
                                                   AddrMgrEntryUpdateEx
                                                   AddrMgrNwkAddrLookup
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B5E1 - 0002B5E9 (0x9 bytes), align: 0
  Segment part 56.            Intra module refs:   Segment part 46
                                                   Segment part 55
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B5EA - 0002B653 (0x6a bytes), align: 0
  Segment part 57.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntryGet         0002B5EA        AssocGetWithAddress (AssocList)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B654 - 0002B65A (0x7 bytes), align: 0
  Segment part 58.            Intra module refs:   AddrMgrEntryGet
                                                   AddrMgrEntryLookupExt
                                                   AddrMgrEntryLookupNwk
                                                   AddrMgrEntryUpdate
                                                   AddrMgrEntryUpdateEx
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B65B - 0002B66B (0x11 bytes), align: 0
  Segment part 59.            Intra module refs:   AddrMgrEntryAdd
                                                   AddrMgrEntryGet
                                                   AddrMgrEntryLookupNwk
                                                   AddrMgrEntrySet
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B66C - 0002B67B (0x10 bytes), align: 0
  Segment part 60.            Intra module refs:   AddrMgrEntryGet
                                                   AddrMgrEntryUpdateEx
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B67C - 0002B684 (0x9 bytes), align: 0
  Segment part 61.            Intra module refs:   Segment part 21
                                                   Segment part 60
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B685 - 0002B771 (0xed bytes), align: 0
  Segment part 62.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntryUpdate      0002B685        AssocAddNew (AssocList)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000002A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B772 - 0002B778 (0x7 bytes), align: 0
  Segment part 63.            Intra module refs:   AddrMgrEntryAdd
                                                   AddrMgrEntryGet
                                                   AddrMgrEntryLookupExt
                                                   AddrMgrEntryUpdate
                                                   AddrMgrEntryUpdateEx
                                                   AddrMgrNwkAddrLookup
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B779 - 0002B77E (0x6 bytes), align: 0
  Segment part 64.            Intra module refs:   Segment part 37
                                                   Segment part 46
                                                   Segment part 55
                                                   Segment part 63
                                                   Segment part 65
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B77F - 0002B787 (0x9 bytes), align: 0
  Segment part 65.            Intra module refs:   AddrMgrEntryGet
                                                   AddrMgrEntryUpdate

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : AssocList

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CAAC - 0002CACF (0x24 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AssocInit               0002CAAC        nwk_init (nwk)
               calls direct
               stack 1 = 00000002 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CAD0 - 0002CB18 (0x49 bytes), align: 0
  Segment part 9.             Intra module refs:   AssocAddNew
                                                   AssocMakeList
                                                   AssocRemove
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AssocCount              0002CAD0 
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000001D ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CB19 - 0002CB1D (0x5 bytes), align: 0
  Segment part 10.            Intra module refs:   AssocCount
                                                   AssocGetNextNode
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CB1E - 0002CB56 (0x39 bytes), align: 0
  Segment part 11.            Intra module refs:   AssocAddNew
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AssocFindEmpty          0002CB1E 
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 0000001D ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CB57 - 0002CB5D (0x7 bytes), align: 0
  Segment part 12.            Intra module refs:   AssocFindEmpty
                                                   AssocGetNextNode
                                                   Segment part 33
                                                   Segment part 43
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CB5E - 0002CC9B (0x13e bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AssocAddNew             0002CB5E        Segment part 72 (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000027 ( 0000001D )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CC9C - 0002CCA0 (0x5 bytes), align: 0
  Segment part 14.            Intra module refs:   AssocAddNew
                                                   AssocMakeList
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CCA1 - 0002CCA5 (0x5 bytes), align: 0
  Segment part 15.            Intra module refs:   AssocAddNew
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CCA6 - 0002CCAA (0x5 bytes), align: 0
  Segment part 16.            Intra module refs:   Segment part 15
                                                   Segment part 17
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CCAB - 0002CCB4 (0xa bytes), align: 0
  Segment part 17.            Intra module refs:   AssocAddNew
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CCB5 - 0002CCE7 (0x33 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AssocIsChild            0002CCB5        RTG_UpdateNeighborEntry (nwk_util)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CCE8 - 0002CD22 (0x3b bytes), align: 0
  Segment part 19.            Intra module refs:   AssocIsChild
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CD23 - 0002CD31 (0xf bytes), align: 0
  Segment part 21.            Intra module refs:   AssocIsChild
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AssocGetWithShort       0002CD23        NLDE_SendMsg (nwk_util)
                                                   NLME_GetNeighborLinkInfo (nwk_util)
                                                   RTG_GetNextTreeHop (rtg)
                                                   RTG_GetRoutingAddress (rtg)
                                                   RTG_RouteMaintanence (rtg)
                                                   RTG_UpdateNeighborEntry (nwk_util)
                                                   nwk_comm_status_ind_processing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 0000000A ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CD32 - 0002CD3C (0xb bytes), align: 0
  Segment part 22.            Intra module refs:   AssocAddNew
                                                   AssocRemove
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AssocGetWithExt         0002CD32        NLME_RemoveChild (nwk_util)
                                                   Segment part 67 (nwk)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 0000001D ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CD3D - 0002CE00 (0xc4 bytes), align: 0
  Segment part 23.            Intra module refs:   Segment part 38
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AssocGetWithAddress     0002CD3D 
               calls direct
               stack 1 = 00000002 ( 00000001 )
               stack 2 = 00000000 ( 00000019 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CE01 - 0002CE0A (0xa bytes), align: 0
  Segment part 24.            Intra module refs:   AssocGetWithAddress
                                                   AssocRemove
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CE0B - 0002CE88 (0x7e bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AssocRemove             0002CE0B        NLME_RemoveChild (nwk_util)
                                                   Segment part 66 (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000019 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CE89 - 0002CE98 (0x10 bytes), align: 0
  Segment part 26.            Intra module refs:   AssocGetWithAddress
                                                   AssocRemove
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CE99 - 0002CE9E (0x6 bytes), align: 0
  Segment part 27.            Intra module refs:   AssocAddNew
                                                   AssocGetWithAddress
                                                   AssocRemove
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CE9F - 0002CEAE (0x10 bytes), align: 0
  Segment part 28.            Intra module refs:   AssocAddNew
                                                   AssocRemove
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CEAF - 0002CF4E (0xa0 bytes), align: 0
  Segment part 29.            Intra module refs:   Segment part 36
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AssocGetNextNode        0002CEAF 
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CF4F - 0002CF57 (0x9 bytes), align: 0
  Segment part 30.            Intra module refs:   AssocCount
                                                   AssocFindEmpty
                                                   AssocGetNextNode
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CF58 - 0002CF62 (0xb bytes), align: 0
  Segment part 31.            Intra module refs:   AssocGetNextNode
                                                   AssocInit
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CF63 - 0002CF75 (0x13 bytes), align: 0
  Segment part 32.            Intra module refs:   AssocGetNextNode
                                                   AssocGetWithAddress
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CF76 - 0002CF91 (0x1c bytes), align: 0
  Segment part 33.            Intra module refs:   AssocCount
                                                   AssocGetNextNode
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CF92 - 0002CFA1 (0x10 bytes), align: 0
  Segment part 34.            Intra module refs:   AssocCount
                                                   AssocFindEmpty
                                                   AssocGetNextNode
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CFA2 - 0002CFA8 (0x7 bytes), align: 0
  Segment part 36.            Intra module refs:   AssocGetNextChildNode
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CFA9 - 0002CFB0 (0x8 bytes), align: 0
  Segment part 37.            Intra module refs:   AssocMakeList
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AssocGetNextChildNode   0002CFA9 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000010 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CFB1 - 0002CFBF (0xf bytes), align: 0
  Segment part 38.            Intra module refs:   AssocFindEmpty
                                                   AssocGetWithExt
                                                   AssocGetWithShort
                                                   AssocInit
                                                   Segment part 36
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CFC0 - 0002D043 (0x84 bytes), align: 0
  Segment part 40.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AssocMakeList           0002CFC0        MT_ProcessGetDeviceInfo (MTEL)
                                                   zdpProcessAddrReq (ZDProfile)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D044 - 0002D05B (0x18 bytes), align: 0
  Segment part 42.            Intra module refs:   AssocFindEmpty
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D05C - 0002D07B (0x20 bytes), align: 0
  Segment part 43.            Intra module refs:   AssocFindEmpty
                                                   AssocGetNextNode
                                                   AssocGetWithAddress
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D07C - 0002D08B (0x10 bytes), align: 0
  Segment part 48.            Intra module refs:   AssocGetWithAddress

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : NLMEDE

  SEGMENTS IN THE MODULE
  ======================
XDATA_I
  Relative segment, address: XDATA 0000F72C - 0000F72C (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   NLME_PermitJoiningSet
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_PermitJoining      0000F72C        NLME_SetAssocFlags (nwk_util)
                                                   nwk_associate_ind_processing (nwk)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E331 - 0000E331 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   NLME_PermitJoiningEvent
                                                   NLME_PermitJoiningSet
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_PermitJoiningDuration
                                   0000E331 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F72D - 0000F72D (0x1 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_AssocPermission    0000F72D        AssocAddNew (AssocList)
                                                   AssocRemove (AssocList)
                                                   NLME_SetAssocFlags (nwk_util)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E332 - 0000E333 (0x2 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_ScanFields         0000E332        nwk_beacon_notify_ind_processing (nwk)
                                                   nwk_init (nwk)
                                                   nwk_scan_cnf_processing (nwk)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E334 - 0000E335 (0x2 bytes), align: 0
  Segment part 12.            Intra module refs:   NLME_ReJoinRequest
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           savedResponseRate       0000E334        NLME_RejoinRspCmdProcess (nwk_util)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E336 - 0000E338 (0x3 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pnwk_ScanPANChanSelect
                                   0000E336        nwk_scan_cnf_processing (nwk)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E339 - 0000E33B (0x3 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pnwk_ScanPANChanVerify
                                   0000E339        nwk_scan_cnf_processing (nwk)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E33C - 0000E33E (0x3 bytes), align: 0
  Segment part 15.            Intra module refs:   NLME_DeviceJoiningInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pnwk_ScanJoiningOrphan
                                   0000E33C        nwk_scan_cnf_processing (nwk)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E33F - 0000E341 (0x3 bytes), align: 0
  Segment part 16.            Intra module refs:   NLME_DeviceJoiningInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pnwk_associate_cnf_processing
                                   0000E33F        nwk_event_loop (nwk)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E342 - 0000E344 (0x3 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pNLME_NetworkFormationConfirm
                                   0000E342        Segment part 82 (nwk)
                                                   nwk_start_cnf_processing (nwk)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A0BE - 0002A0C7 (0xa bytes), align: 0
  Segment part 19.            Intra module refs:   NLME_DeviceJoiningInit
                                                   NLME_PermitJoiningEvent
                                                   NLME_PermitJoiningSet
                                                   NLME_StartRouterRequest
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A0C8 - 0002A0E9 (0x22 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_DeviceJoiningInit
                                   0002A0C8        ZDO_Init (ZDObject)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A0EA - 0002A13E (0x55 bytes), align: 0
  Segment part 21.            Intra module refs:   NLME_ReJoinRequest
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_DataReq            0002A0EA        APSDE_FrameSend (APSMEDE)
                                                   NLME_RouteDiscoveryRequest (rtg)
                                                   RTG_SendRErr (rtg)
                                                   RTG_SendRrep (rtg)
                                                   Segment part 111 (nwk_util)
               calls direct, is recursive
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000F ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A13F - 0002A1FB (0xbd bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_DataReqAlloc       0002A13F        APSDE_FrameAlloc (APSMEDE)
                                                   NLME_CmdDataReqAlloc (nwk_util)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A1FC - 0002A23D (0x42 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_NetworkDiscoveryRequest
                                   0002A1FC        ZDO_StartDevice (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000021 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A23E - 0002A242 (0x5 bytes), align: 0
  Segment part 25.            Intra module refs:   NLME_JoinRequest
                                                   NLME_LeaveRsp
                                                   NLME_ReJoinRequest
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A243 - 0002A24A (0x8 bytes), align: 0
  Segment part 26.            Intra module refs:   Segment part 25
                                                   Segment part 36
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A24B - 0002A264 (0x1a bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_PermitJoiningEvent
                                   0002A24B        nwk_event_loop (nwk)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A265 - 0002A2BE (0x5a bytes), align: 0
  Segment part 31.            Intra module refs:   NLME_PermitJoiningEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_PermitJoiningSet   0002A265 
               calls direct
               stack 1 = 00000002 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A2BF - 0002A2F3 (0x35 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_OrphanJoinRequest
                                   0002A2BF        ZDO_StartDevice (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000021 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A2F4 - 0002A2F9 (0x6 bytes), align: 0
  Segment part 34.            Intra module refs:   NLME_NetworkDiscoveryRequest
                                                   NLME_OrphanJoinRequest
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A2FA - 0002A301 (0x8 bytes), align: 0
  Segment part 35.            Intra module refs:   Segment part 26
                                                   Segment part 34
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A302 - 0002A30A (0x9 bytes), align: 0
  Segment part 36.            Intra module refs:   Segment part 38
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A30B - 0002A43E (0x134 bytes), align: 0
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_ReJoinRequest      0002A30B        ZDApp_ProcessOSALMsg (ZDApp)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A43F - 0002A449 (0xb bytes), align: 0
  Segment part 38.            Intra module refs:   NLDE_DataReqAlloc
                                                   NLME_GetRequest
                                                   NLME_NetworkDiscoveryRequest
                                                   NLME_OrphanJoinRequest
                                                   NLME_ReJoinRequest
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A44A - 0002A453 (0xa bytes), align: 0
  Segment part 39.            Intra module refs:   NLME_ReJoinRequest
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A454 - 0002A459 (0x6 bytes), align: 0
  Segment part 40.            Intra module refs:   NLDE_DataReqAlloc
                                                   NLME_ReJoinRequest
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A45A - 0002A5D9 (0x180 bytes), align: 0
  Segment part 41.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_JoinRequest        0002A45A        ZDApp_ProcessOSALMsg (ZDApp)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000001 ( 0000002E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A5DA - 0002A5E1 (0x8 bytes), align: 0
  Segment part 42.            Intra module refs:   NLME_JoinRequest
                                                   Segment part 40
                                                   Segment part 46
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A5E2 - 0002A5EB (0xa bytes), align: 0
  Segment part 43.            Intra module refs:   NLME_JoinRequest
                                                   NLME_ReJoinRequest
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A5EC - 0002A5F3 (0x8 bytes), align: 0
  Segment part 44.            Intra module refs:   NLDE_DataReqAlloc
                                                   NLME_ReJoinRequest
                                                   Segment part 43
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A5F4 - 0002A5FD (0xa bytes), align: 0
  Segment part 45.            Intra module refs:   NLME_JoinRequest
                                                   NLME_ReJoinRequest
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A5FE - 0002A603 (0x6 bytes), align: 0
  Segment part 46.            Intra module refs:   NLDE_DataReqAlloc
                                                   NLME_JoinRequest
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A604 - 0002A611 (0xe bytes), align: 0
  Segment part 47.            Intra module refs:   NLDE_DataReqAlloc
                                                   NLME_JoinRequest
                                                   NLME_ReJoinRequest
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A612 - 0002A622 (0x11 bytes), align: 0
  Segment part 48.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_StartRouterRequest
                                   0002A612        ZDApp_ProcessNetworkJoin (ZDApp)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A623 - 0002A62E (0xc bytes), align: 0
  Segment part 50.            Intra module refs:   NLDE_DataReq
                                                   NLME_JoinRequest
                                                   NLME_ReJoinRequest
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A62F - 0002A635 (0x7 bytes), align: 0
  Segment part 51.            Intra module refs:   NLME_LeaveRsp
                                                   NLME_ReJoinRequest
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A636 - 0002A69C (0x67 bytes), align: 0
  Segment part 52.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_LeaveRsp           0002A636        ZDO_LeaveInd (ZDApp)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A69D - 0002A6A3 (0x7 bytes), align: 0
  Segment part 53.            Intra module refs:   NLME_LeaveRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A6A4 - 0002A6AA (0x7 bytes), align: 0
  Segment part 54.            Intra module refs:   NLME_LeaveRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A6AB - 0002A6B2 (0x8 bytes), align: 0
  Segment part 57.            Intra module refs:   NLDE_DataReq
                                                   NLME_LeaveRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A6B3 - 0002A7EB (0x139 bytes), align: 0
  Segment part 59.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_GetRequest         0002A6B3        NLME_GetProtocolVersion (nwk_util)
                                                   ZDApp_Init (ZDApp)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A7EC - 0002A7F5 (0xa bytes), align: 0
  Segment part 60.            Intra module refs:   NLME_GetRequest
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A7F6 - 0002A7F9 (0x4 bytes), align: 0
  Segment part 61.            Intra module refs:   NLME_GetRequest
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A7FA - 0002A803 (0xa bytes), align: 0
  Segment part 62.            Intra module refs:   Segment part 61
                                                   Segment part 63
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A804 - 0002A809 (0x6 bytes), align: 0
  Segment part 63.            Intra module refs:   NLME_GetRequest
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A80A - 0002A868 (0x5f bytes), align: 0
  Segment part 64.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_SetRequest         0002A80A        ZDAppSetupProtoVersion (ZDApp)
                                                   ZDO_NetworkDiscoveryConfirmCB (ZDApp)
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A869 - 0002A874 (0xc bytes), align: 0
  Segment part 65.            Intra module refs:   NLME_GetRequest
                                                   NLME_SetRequest
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000164A - 0000164A (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   NLME_PermitJoining
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000164B - 0000164B (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   NLME_AssocPermission

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : NLMEDE_CB

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F82A - 0002F996 (0x16d bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_DataCnf            0002F82A        nwk_data_cnf_processing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F997 - 0002FB2B (0x195 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_DataIndication     0002F997        NLDE_DataIndSend (nwk_util)
                                                   nwk_data_ind_processing (nwk)
               calls direct, is recursive
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000004 ( 00000037 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FB2C - 0002FB37 (0xc bytes), align: 0
  Segment part 8.             Intra module refs:   NLDE_DataCnf
                                                   NLDE_DataIndication
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FB38 - 0002FB40 (0x9 bytes), align: 0
  Segment part 9.             Intra module refs:   NLDE_DataIndication
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FB41 - 0002FB4C (0xc bytes), align: 0
  Segment part 10.            Intra module refs:   NLDE_DataIndication
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FB4D - 0002FB5A (0xe bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 10
                                                   Segment part 9
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FB5B - 0002FB65 (0xb bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_NetworkDiscoveryConfirm
                                   0002FB5B        nwk_scan_cnf_processing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FB66 - 0002FB70 (0xb bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_StartRouterConfirm
                                   0002FB66        nwk_start_cnf_processing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FB71 - 0002FB7B (0xb bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_JoinConfirm        0002FB71        Segment part 73 (nwk)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FB7C - 0002FB84 (0x9 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_JoinIndication     0002FB7C        nwk_associate_ind_processing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FB85 - 0002FB8E (0xa bytes), align: 0
  Segment part 17.            Intra module refs:   NLME_JoinConfirm
                                                   NLME_JoinIndication
                                                   NLME_LeaveCnf
                                                   NLME_LeaveInd
                                                   NLME_NetworkDiscoveryConfirm
                                                   NLME_PollConfirm
                                                   NLME_StartRouterConfirm
                                                   NLME_SyncIndication
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FB8F - 0002FB99 (0xb bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_LeaveCnf           0002FB8F        NLME_LeaveCmdCnf (nwk_util)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FB9A - 0002FBA4 (0xb bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_LeaveInd           0002FB9A        NLME_LeaveCmdProcess (nwk_util)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FBA5 - 0002FBAF (0xb bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_SyncIndication     0002FBA5        RTG_UpdateNeighborEntry (nwk_util)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FBB0 - 0002FBBA (0xb bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_PollConfirm        0002FBB0        nwk_event_loop (nwk)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FBBB - 0002FBE6 (0x2c bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_RouteDiscoveryIndication
                                   0002FBBB        RTG_ProcessRErr (rtg)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : aps_groups

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E345 - 0000E346 (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   aps_AddGroup
                                                   aps_CountAllGroups
                                                   aps_FindGroup
                                                   aps_FindGroupForEndpoint
                                                   aps_GroupsWriteNV
                                                   aps_RemoveGroup
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038332 - 000383EF (0xbe bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aps_AddGroup            00038332        SampleApp_HandleKeys (SampleApp)
                                                   SampleApp_Init (SampleApp)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000021 ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000383F0 - 00038435 (0x46 bytes), align: 0
  Segment part 8.             Intra module refs:   aps_AddGroup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aps_FindGroup           000383F0        SampleApp_HandleKeys (SampleApp)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000E ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038436 - 0003843A (0x5 bytes), align: 0
  Segment part 9.             Intra module refs:   aps_FindGroup
                                                   aps_FindGroupForEndpoint
                                                   aps_RemoveGroup
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003843B - 00038485 (0x4b bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aps_FindGroupForEndpoint
                                   0003843B        ?Subroutine6 (AF)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038486 - 000384FE (0x79 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aps_RemoveGroup         00038486        SampleApp_HandleKeys (SampleApp)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000384FF - 00038503 (0x5 bytes), align: 0
  Segment part 15.            Intra module refs:   aps_GroupsWriteNV
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038504 - 00038509 (0x6 bytes), align: 0
  Segment part 16.            Intra module refs:   aps_AddGroup
                                                   aps_GroupsWriteNV
                                                   aps_RemoveGroup
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003850A - 00038510 (0x7 bytes), align: 0
  Segment part 18.            Intra module refs:   aps_CountAllGroups
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038511 - 0003851A (0xa bytes), align: 0
  Segment part 19.            Intra module refs:   aps_AddGroup
                                                   aps_CountAllGroups
                                                   aps_RemoveGroup
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003851B - 00038537 (0x1d bytes), align: 0
  Segment part 20.            Intra module refs:   aps_AddGroup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aps_CountAllGroups      0003851B 
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 0000000E ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038538 - 0003862C (0xf5 bytes), align: 0
  Segment part 23.            Intra module refs:   aps_AddGroup
                                                   aps_RemoveGroup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aps_GroupsWriteNV       00038538 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000E ( 00000024 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003862D - 0003863B (0xf bytes), align: 0
  Segment part 24.            Intra module refs:   aps_GroupsWriteNV

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : aps_util

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D08C - 0002D2A8 (0x21d bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_ParseMsg          0002D08C        NLDE_DataIndication (NLMEDE_CB)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D2A9 - 0002D2B6 (0xe bytes), align: 0
  Segment part 7.             Intra module refs:   APSDE_ParseMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D2B7 - 0002D2BF (0x9 bytes), align: 0
  Segment part 8.             Intra module refs:   APSDE_ParseMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D2C0 - 0002D2C6 (0x7 bytes), align: 0
  Segment part 9.             Intra module refs:   APSDE_ParseMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D2C7 - 0002D2D0 (0xa bytes), align: 0
  Segment part 10.            Intra module refs:   Segment part 12
                                                   Segment part 9
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D2D1 - 0002D2DE (0xe bytes), align: 0
  Segment part 11.            Intra module refs:   APSDE_ParseMsg
                                                   Segment part 9
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D2DF - 0002D2E4 (0x6 bytes), align: 0
  Segment part 12.            Intra module refs:   APSDE_ParseMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D2E5 - 0002D2E8 (0x4 bytes), align: 0
  Segment part 13.            Intra module refs:   APSDE_ParseMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D2E9 - 0002D2F0 (0x8 bytes), align: 0
  Segment part 14.            Intra module refs:   Segment part 13
                                                   Segment part 15
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D2F1 - 0002D2F6 (0x6 bytes), align: 0
  Segment part 15.            Intra module refs:   APSDE_ParseMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D2F7 - 0002D2FD (0x7 bytes), align: 0
  Segment part 16.            Intra module refs:   APSDE_ParseMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D2FE - 0002D312 (0x15 bytes), align: 0
  Segment part 17.            Intra module refs:   APSDE_ParseMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D313 - 0002D443 (0x131 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           apsGenerateAck          0002D313        NLDE_DataIndication (NLMEDE_CB)
               calls direct, is recursive
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000013 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D444 - 0002D448 (0x5 bytes), align: 0
  Segment part 19.            Intra module refs:   apsAckFindMatchCB
                                                   apsGenerateAck
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D449 - 0002D44C (0x4 bytes), align: 0
  Segment part 20.            Intra module refs:   apsGenerateAck
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D44D - 0002D453 (0x7 bytes), align: 0
  Segment part 21.            Intra module refs:   Segment part 14
                                                   Segment part 16
                                                   Segment part 20
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D454 - 0002D45C (0x9 bytes), align: 0
  Segment part 22.            Intra module refs:   APSDE_ParseMsg
                                                   apsGenerateAck
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D45D - 0002D469 (0xd bytes), align: 0
  Segment part 23.            Intra module refs:   apsGenerateAck
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D46A - 0002D475 (0xc bytes), align: 0
  Segment part 24.            Intra module refs:   apsGenerateAck
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D476 - 0002D481 (0xc bytes), align: 0
  Segment part 25.            Intra module refs:   APSDE_ParseMsg
                                                   apsAckFindMatchCB
                                                   apsGenerateAck
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D482 - 0002D524 (0xa3 bytes), align: 0
  Segment part 26.            Intra module refs:   apsProcessAck
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           apsAckFindMatchCB       0002D482 
               is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D525 - 0002D532 (0xe bytes), align: 0
  Segment part 27.            Intra module refs:   apsAckFindMatchCB
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D533 - 0002D5E7 (0xb5 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           apsProcessAck           0002D533        NLDE_DataIndication (NLMEDE_CB)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D5E8 - 0002D5F2 (0xb bytes), align: 0
  Segment part 29.            Intra module refs:   apsGenerateAck
                                                   apsProcessAck

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : nwk

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E347 - 0000E3A6 (0x60 bytes), align: 0
  Segment part 8.             Intra module refs:   Segment part 58
                                                   Segment part 98
                                                   nwk_ScanJoiningOrphan
                                                   nwk_associate_cnf_processing
                                                   nwk_associate_ind_processing
                                                   nwk_beacon_notify_ind_processing
                                                   nwk_data_ind_processing
                                                   nwk_event_loop
                                                   nwk_init
                                                   nwk_scan_cnf_processing
                                                   nwk_start_cnf_processing
                                                   nwk_start_coord
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _NIB                    0000E347        APSDE_DataReqMTU (APSMEDE)
                                                   APSME_LookupNwkAddr (APSMEDE)
                                                   AssocAddNew (AssocList)
                                                   NIB_init (nwk_globals)
                                                   NLDE_CheckFrameSecurity (nwk_util)
                                                   NLDE_DataReq (NLMEDE)
                                                   NLDE_DataReqSend (nwk_util)
                                                   NLME_GetNeighborLinkInfo (nwk_util)
                                                   NLME_GetRequest (NLMEDE)
                                                   NLME_GetShortAddr (nwk_util)
                                                   NLME_JoinRequest (NLMEDE)
                                                   NLME_LeaveRsp (NLMEDE)
                                                   NLME_NetworkDiscoveryRequest (NLMEDE)
                                                   NLME_OrphanJoinRequest (NLMEDE)
                                                   NLME_ReJoinRequest (NLMEDE)
                                                   NLME_RejoinRspCmdProcess (nwk_util)
                                                   NLME_RouteDiscoveryRequest (rtg)
                                                   NLME_SetAssocFlags (nwk_util)
                                                   NLME_SetRequest (NLMEDE)
                                                   NLME_StartRouterRequest (NLMEDE)
                                                   RTG_AddRtgEntry (rtg)
                                                   RTG_AllocNewAddress (rtg)
                                                   RTG_BcastAdd (rtg)
                                                   RTG_BcastChk (rtg)
                                                   RTG_BcastTimeout (rtg)
                                                   RTG_CalcAddress (rtg)
                                                   RTG_DataReq (rtg)
                                                   RTG_DeAllocAddress (rtg)
                                                   RTG_DivideCskip (rtg)
                                                   RTG_GetAncestors (rtg)
                                                   RTG_GetLinkCost (rtg)
                                                   RTG_GetNextHop (rtg)
                                                   RTG_GetRoutingAddress (rtg)
                                                   RTG_GetTreeRoute (rtg)
                                                   RTG_MultiplyCskip (rtg)
                                                   RTG_ProcessRrep (rtg)
                                                   RTG_ProcessRreq (rtg)
                                                   RTG_RouteMaintanence (rtg)
                                                   RTG_SendRErr (rtg)
                                                   RTG_UpdateRtDiscEntry (rtg)
                                                   Segment part 104 (rtg)
                                                   Segment part 40 (nwk_util)
                                                   Segment part 43 (NLMEDE)
                                                   Segment part 47 (NLMEDE)
                                                   Segment part 65 (NLMEDE)
                                                   ZDApp_ProcessNetworkJoin (ZDApp)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
                                                   nwkbufs_hold (nwk_bufs)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3A7 - 0000E3A7 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   nwkBuildDataCnf
                                                   nwk_ScanJoiningOrphan
                                                   nwk_event_loop
                                                   nwk_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NWK_TaskID              0000E3A7        MAC_CbackEvent (zmac_cb)
                                                   NLDE_DataCnf (NLMEDE_CB)
                                                   NLME_PermitJoiningSet (NLMEDE)
                                                   NLME_RejoinReqCmdProcess (nwk_util)
                                                   NLME_RejoinRspCmdProcess (nwk_util)
                                                   NLME_SetPollRate (nwk_util)
                                                   RTG_BcastAdd (rtg)
                                                   RTG_BcastTimeout (rtg)
                                                   RTG_BcastTimerHandler (rtg)
                                                   RTG_DataReq (rtg)
                                                   Segment part 17 (nwk_bufs)
                                                   Segment part 83 (rtg)
                                                   nwkDB_Add (nwk_bufs)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3A8 - 0000E3A9 (0x2 bytes), align: 0
  Segment part 10.            Intra module refs:   nwk_beacon_notify_ind_processing
                                                   nwk_desc_list_free
                                                   nwk_getNetworkDesc
                                                   nwk_init
                                                   nwk_scan_cnf_processing
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NwkDescList             0000E3A8 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3AA - 0000E3B4 (0xb bytes), align: 0
  Segment part 11.            Intra module refs:   nwk_start_coord
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_beaconPayload       0000E3AA        NLME_SetAssocFlags (nwk_util)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F72E - 0000F735 (0x8 bytes), align: 0
  Segment part 6.             Intra module refs:   nwk_getNetworkDesc
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F736 - 0000F736 (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   nwk_start_coord
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_beaconPayloadSize   0000F736        NLME_SetAssocFlags (nwk_util)
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014D66 - 00014DC5 (0x60 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_init                00014D66        osalAddTasks (OSAL_SampleApp)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014DC6 - 00014DCC (0x7 bytes), align: 0
  Segment part 19.            Intra module refs:   nwkSimulateDataCnf
                                                   nwk_init
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014DCD - 00015042 (0x276 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_event_loop          00014DCD        osalAddTasks (OSAL_SampleApp)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015043 - 00015047 (0x5 bytes), align: 0
  Segment part 22.            Intra module refs:   nwk_ScanJoiningOrphan
                                                   nwk_orphan_ind_processing
                                                   nwk_start_coord
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015048 - 00015053 (0xc bytes), align: 0
  Segment part 23.            Intra module refs:   Segment part 22
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015054 - 000150E0 (0x8d bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_data_req_send       00015054        nwk_SendNextDataBuf (nwk_bufs)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000150E1 - 000150E7 (0x7 bytes), align: 0
  Segment part 25.            Intra module refs:   nwk_data_req_send
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000150E8 - 000150EE (0x7 bytes), align: 0
  Segment part 26.            Intra module refs:   nwk_data_req_send
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000150EF - 000150FE (0x10 bytes), align: 0
  Segment part 27.            Intra module refs:   nwk_data_req_send
                                                   nwk_event_loop
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000150FF - 00015104 (0x6 bytes), align: 0
  Segment part 28.            Intra module refs:   Segment part 27
                                                   Segment part 44
                                                   Segment part 55
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015105 - 00015113 (0xf bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkSimulateDataCnf      00015105        Segment part 71 (rtg)
                                                   apsProcessAck (aps_util)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015114 - 00015153 (0x40 bytes), align: 0
  Segment part 30.            Intra module refs:   Segment part 27
                                                   nwkSimulateDataCnf
                                                   nwk_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkBuildDataCnf         00015114 
               calls direct
               stack 1 = 00000002 ( 00000001 )
               stack 2 = 0000000E ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015154 - 00015158 (0x5 bytes), align: 0
  Segment part 31.            Intra module refs:   nwkBuildDataCnf
                                                   nwk_scan_cnf_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015159 - 00015268 (0x110 bytes), align: 0
  Segment part 33.            Intra module refs:   nwk_data_ind_processing
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NwkCommandPktProcessing
                                   00015159 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000033 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015269 - 00015272 (0xa bytes), align: 0
  Segment part 34.            Intra module refs:   NwkCommandPktProcessing
                                                   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015273 - 00015492 (0x220 bytes), align: 0
  Segment part 35.            Intra module refs:   nwk_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_data_cnf_processing
                                   00015273 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000E ( 00000026 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015493 - 0001549A (0x8 bytes), align: 0
  Segment part 36.            Intra module refs:   nwk_data_cnf_processing
                                                   nwk_data_req_send
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001549B - 000154A3 (0x9 bytes), align: 0
  Segment part 37.            Intra module refs:   Segment part 108
                                                   Segment part 26
                                                   Segment part 36
                                                   Segment part 54
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000154A4 - 000154AC (0x9 bytes), align: 0
  Segment part 38.            Intra module refs:   NwkCommandPktProcessing
                                                   nwk_data_cnf_processing
                                                   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000154AD - 00015A31 (0x585 bytes), align: 0
  Segment part 39.            Intra module refs:   nwk_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_data_ind_processing
                                   000154AD 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000E ( 00000036 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015A32 - 00015A3C (0xb bytes), align: 0
  Segment part 40.            Intra module refs:   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015A3D - 00015A40 (0x4 bytes), align: 0
  Segment part 41.            Intra module refs:   nwk_data_cnf_processing
                                                   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015A41 - 00015A45 (0x5 bytes), align: 0
  Segment part 42.            Intra module refs:   Segment part 25
                                                   Segment part 41
                                                   Segment part 51
                                                   Segment part 57
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015A46 - 00015A4F (0xa bytes), align: 0
  Segment part 43.            Intra module refs:   Segment part 42
                                                   Segment part 63
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015A50 - 00015A53 (0x4 bytes), align: 0
  Segment part 44.            Intra module refs:   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015A54 - 00015A5C (0x9 bytes), align: 0
  Segment part 45.            Intra module refs:   nwk_data_cnf_processing
                                                   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015A5D - 00015A65 (0x9 bytes), align: 0
  Segment part 46.            Intra module refs:   nwk_data_cnf_processing
                                                   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015A66 - 00015A69 (0x4 bytes), align: 0
  Segment part 47.            Intra module refs:   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015A6A - 00015A6E (0x5 bytes), align: 0
  Segment part 48.            Intra module refs:   Segment part 47
                                                   Segment part 50
                                                   Segment part 52
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015A6F - 00015A78 (0xa bytes), align: 0
  Segment part 49.            Intra module refs:   Segment part 48
                                                   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015A79 - 00015A7D (0x5 bytes), align: 0
  Segment part 50.            Intra module refs:   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015A7E - 00015A8A (0xd bytes), align: 0
  Segment part 51.            Intra module refs:   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015A8B - 00015A91 (0x7 bytes), align: 0
  Segment part 52.            Intra module refs:   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015A92 - 00015A95 (0x4 bytes), align: 0
  Segment part 53.            Intra module refs:   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015A96 - 00015AA0 (0xb bytes), align: 0
  Segment part 54.            Intra module refs:   NwkCommandPktProcessing
                                                   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015AA1 - 00015AA9 (0x9 bytes), align: 0
  Segment part 55.            Intra module refs:   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015AAA - 00015AB0 (0x7 bytes), align: 0
  Segment part 56.            Intra module refs:   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015AB1 - 00015AB8 (0x8 bytes), align: 0
  Segment part 57.            Intra module refs:   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015AB9 - 00015AC1 (0x9 bytes), align: 0
  Segment part 58.            Intra module refs:   NwkCommandPktProcessing
                                                   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015AC2 - 00015AC2 (0x1 bytes), align: 0
  Segment part 59.            Intra module refs:   nwk_beacon_notify_ind_processing
                                                   nwk_data_ind_processing
                                                   nwk_event_loop
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015AC3 - 00015AC8 (0x6 bytes), align: 0
  Segment part 60.            Intra module refs:   Segment part 59
                                                   Segment part 88
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015AC9 - 00015ACD (0x5 bytes), align: 0
  Segment part 61.            Intra module refs:   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015ACE - 00015ADB (0xe bytes), align: 0
  Segment part 62.            Intra module refs:   Segment part 53
                                                   Segment part 56
                                                   Segment part 61
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015ADC - 00015AE0 (0x5 bytes), align: 0
  Segment part 63.            Intra module refs:   Segment part 28
                                                   Segment part 62
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015AE1 - 00015D1D (0x23d bytes), align: 0
  Segment part 64.            Intra module refs:   nwk_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_associate_ind_processing
                                   00015AE1 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000E ( 00000025 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015D1E - 00015D2B (0xe bytes), align: 0
  Segment part 65.            Intra module refs:   nwk_associate_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015D2C - 00015D3B (0x10 bytes), align: 0
  Segment part 66.            Intra module refs:   nwk_associate_ind_processing
                                                   nwk_comm_status_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015D3C - 00015D4A (0xf bytes), align: 0
  Segment part 67.            Intra module refs:   nwk_associate_ind_processing
                                                   nwk_comm_status_ind_processing
                                                   nwk_orphan_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015D4B - 00015EC5 (0x17b bytes), align: 0
  Segment part 68.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_associate_cnf_processing
                                   00015D4B        NLME_DeviceJoiningInit (NLMEDE)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015EC6 - 00015ECA (0x5 bytes), align: 0
  Segment part 69.            Intra module refs:   nwk_associate_cnf_processing
                                                   nwk_desc_list_free
                                                   nwk_start_cnf_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015ECB - 00015ECE (0x4 bytes), align: 0
  Segment part 70.            Intra module refs:   NwkCommandPktProcessing
                                                   nwk_associate_cnf_processing
                                                   nwk_associate_ind_processing
                                                   nwk_data_ind_processing
                                                   nwk_orphan_ind_processing
                                                   nwk_start_coord
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015ECF - 00015ED4 (0x6 bytes), align: 0
  Segment part 71.            Intra module refs:   Segment part 58
                                                   Segment part 70
                                                   Segment part 81
                                                   Segment part 95
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015ED5 - 00015EDD (0x9 bytes), align: 0
  Segment part 72.            Intra module refs:   nwk_associate_cnf_processing
                                                   nwk_associate_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015EDE - 00015EE6 (0x9 bytes), align: 0
  Segment part 73.            Intra module refs:   nwk_associate_cnf_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015EE7 - 00015EFA (0x14 bytes), align: 0
  Segment part 74.            Intra module refs:   nwk_associate_cnf_processing
                                                   nwk_init
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015EFB - 00015F02 (0x8 bytes), align: 0
  Segment part 75.            Intra module refs:   Segment part 74
                                                   nwk_associate_ind_processing
                                                   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015F03 - 00015F65 (0x63 bytes), align: 0
  Segment part 77.            Intra module refs:   nwk_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_scan_cnf_processing
                                   00015F03 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000E ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015F66 - 00015F6B (0x6 bytes), align: 0
  Segment part 78.            Intra module refs:   nwk_beacon_notify_ind_processing
                                                   nwk_desc_list_free
                                                   nwk_scan_cnf_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015F6C - 0001602B (0xc0 bytes), align: 0
  Segment part 79.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_ScanJoiningOrphan   00015F6C        NLME_DeviceJoiningInit (NLMEDE)
                                                   ZDO_StartDevice (ZDObject)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001602C - 00016030 (0x5 bytes), align: 0
  Segment part 81.            Intra module refs:   nwk_data_cnf_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016031 - 0001603F (0xf bytes), align: 0
  Segment part 82.            Intra module refs:   nwk_event_loop
                                                   nwk_scan_cnf_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016040 - 00016305 (0x2c6 bytes), align: 0
  Segment part 85.            Intra module refs:   nwk_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_beacon_notify_ind_processing
                                   00016040 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000E ( 0000001E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016306 - 00016307 (0x2 bytes), align: 0
  Segment part 86.            Intra module refs:   nwk_beacon_notify_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016308 - 0001630F (0x8 bytes), align: 0
  Segment part 87.            Intra module refs:   Segment part 123
                                                   Segment part 86
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016310 - 00016315 (0x6 bytes), align: 0
  Segment part 88.            Intra module refs:   nwk_beacon_notify_ind_processing
                                                   nwk_event_loop
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016316 - 0001631D (0x8 bytes), align: 0
  Segment part 89.            Intra module refs:   NwkCommandPktProcessing
                                                   nwk_beacon_notify_ind_processing
                                                   nwk_getNetworkDesc
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001631E - 00016329 (0xc bytes), align: 0
  Segment part 90.            Intra module refs:   NwkCommandPktProcessing
                                                   nwk_beacon_notify_ind_processing
                                                   nwk_comm_status_ind_processing
                                                   nwk_data_cnf_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001632A - 00016331 (0x8 bytes), align: 0
  Segment part 91.            Intra module refs:   nwk_associate_ind_processing
                                                   nwk_beacon_notify_ind_processing
                                                   nwk_comm_status_ind_processing
                                                   nwk_data_cnf_processing
                                                   nwk_data_ind_processing
                                                   nwk_data_req_send
                                                   nwk_scan_cnf_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016332 - 00016337 (0x6 bytes), align: 0
  Segment part 92.            Intra module refs:   Segment part 118
                                                   Segment part 26
                                                   Segment part 38
                                                   Segment part 45
                                                   Segment part 46
                                                   Segment part 72
                                                   Segment part 73
                                                   Segment part 91
                                                   Segment part 98
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016338 - 0001633C (0x5 bytes), align: 0
  Segment part 93.            Intra module refs:   nwk_beacon_notify_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001633D - 00016344 (0x8 bytes), align: 0
  Segment part 94.            Intra module refs:   Segment part 93
                                                   Segment part 97
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016345 - 00016347 (0x3 bytes), align: 0
  Segment part 95.            Intra module refs:   nwk_ScanJoiningOrphan
                                                   nwk_beacon_notify_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016348 - 0001634C (0x5 bytes), align: 0
  Segment part 96.            Intra module refs:   Segment part 125
                                                   Segment part 95
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001634D - 00016356 (0xa bytes), align: 0
  Segment part 97.            Intra module refs:   nwk_beacon_notify_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016357 - 0001636C (0x16 bytes), align: 0
  Segment part 98.            Intra module refs:   nwk_ScanJoiningOrphan
                                                   nwk_beacon_notify_ind_processing
                                                   nwk_data_cnf_processing
                                                   nwk_data_ind_processing
                                                   nwk_event_loop
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001636D - 00016370 (0x4 bytes), align: 0
  Segment part 99.            Intra module refs:   nwk_beacon_notify_ind_processing
                                                   nwk_data_cnf_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016371 - 00016378 (0x8 bytes), align: 0
  Segment part 100.           Intra module refs:   Segment part 101
                                                   Segment part 89
                                                   Segment part 99
                                                   nwk_beacon_notify_ind_processing
                                                   nwk_comm_status_ind_processing
                                                   nwk_data_cnf_processing
                                                   nwk_scan_cnf_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016379 - 0001637E (0x6 bytes), align: 0
  Segment part 101.           Intra module refs:   NwkCommandPktProcessing
                                                   nwk_beacon_notify_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001637F - 00016384 (0x6 bytes), align: 0
  Segment part 102.           Intra module refs:   nwk_beacon_notify_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016385 - 0001638C (0x8 bytes), align: 0
  Segment part 103.           Intra module refs:   NwkCommandPktProcessing
                                                   nwk_ScanJoiningOrphan
                                                   nwk_associate_cnf_processing
                                                   nwk_associate_ind_processing
                                                   nwk_beacon_notify_ind_processing
                                                   nwk_data_ind_processing
                                                   nwk_orphan_ind_processing
                                                   nwk_start_coord
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001638D - 00016569 (0x1dd bytes), align: 0
  Segment part 104.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_start_coord         0001638D        NLME_StartRouterRequest (NLMEDE)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000021 ( 0000003F )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001656A - 00016574 (0xb bytes), align: 0
  Segment part 105.           Intra module refs:   nwk_start_coord
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016575 - 000165E0 (0x6c bytes), align: 0
  Segment part 106.           Intra module refs:   nwk_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_start_cnf_processing
                                   00016575 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000E ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000165E1 - 000165E8 (0x8 bytes), align: 0
  Segment part 107.           Intra module refs:   nwk_event_loop
                                                   nwk_scan_cnf_processing
                                                   nwk_start_cnf_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000165E9 - 000165F9 (0x11 bytes), align: 0
  Segment part 108.           Intra module refs:   nwk_beacon_notify_ind_processing
                                                   nwk_data_cnf_processing
                                                   nwk_data_ind_processing
                                                   nwk_start_cnf_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000165FA - 000166B0 (0xb7 bytes), align: 0
  Segment part 109.           Intra module refs:   nwk_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_orphan_ind_processing
                                   000165FA 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000E ( 00000022 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000166B1 - 000166B8 (0x8 bytes), align: 0
  Segment part 110.           Intra module refs:   nwk_ScanJoiningOrphan
                                                   nwk_comm_status_ind_processing
                                                   nwk_data_cnf_processing
                                                   nwk_data_req_send
                                                   nwk_orphan_ind_processing
                                                   nwk_start_coord
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000166B9 - 000166CB (0x13 bytes), align: 0
  Segment part 111.           Intra module refs:   nwk_associate_ind_processing
                                                   nwk_orphan_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000166CC - 00016759 (0x8e bytes), align: 0
  Segment part 112.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_getNetworkDesc      000166CC        NLME_JoinRequest (NLMEDE)
                                                   NLME_ReJoinRequest (NLMEDE)
                                                   ZDApp_NodeProfileSync (ZDApp)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000016 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001675A - 00016761 (0x8 bytes), align: 0
  Segment part 113.           Intra module refs:   NwkCommandPktProcessing
                                                   nwk_beacon_notify_ind_processing
                                                   nwk_event_loop
                                                   nwk_getNetworkDesc
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016762 - 0001676A (0x9 bytes), align: 0
  Segment part 114.           Intra module refs:   nwk_beacon_notify_ind_processing
                                                   nwk_getNetworkDesc
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001676B - 00016774 (0xa bytes), align: 0
  Segment part 115.           Intra module refs:   nwk_beacon_notify_ind_processing
                                                   nwk_desc_list_free
                                                   nwk_getNetworkDesc
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016775 - 000167A5 (0x31 bytes), align: 0
  Segment part 116.           Intra module refs:   nwk_associate_cnf_processing
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_desc_list_free      00016775 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000012 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000167A6 - 00016857 (0xb2 bytes), align: 0
  Segment part 117.           Intra module refs:   nwk_event_loop
           LOCAL                   ADDRESS         
           =====                   =======         
           nwk_comm_status_ind_processing
                                   000167A6 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000E ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016858 - 00016860 (0x9 bytes), align: 0
  Segment part 118.           Intra module refs:   nwk_associate_ind_processing
                                                   nwk_comm_status_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016861 - 00016916 (0xb6 bytes), align: 0
  Segment part 119.           Intra module refs:   nwk_start_coord
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_BeaconToNative      00016861        NLME_SetAssocFlags (nwk_util)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000003F ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016917 - 0001691B (0x5 bytes), align: 0
  Segment part 120.           Intra module refs:   nwk_BeaconFromNative
                                                   nwk_BeaconToNative
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001691C - 0001691F (0x4 bytes), align: 0
  Segment part 121.           Intra module refs:   nwk_BeaconToNative
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016920 - 00016924 (0x5 bytes), align: 0
  Segment part 122.           Intra module refs:   Segment part 102
                                                   Segment part 121
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016925 - 00016928 (0x4 bytes), align: 0
  Segment part 123.           Intra module refs:   Segment part 122
                                                   nwk_BeaconToNative
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016929 - 000169C2 (0x9a bytes), align: 0
  Segment part 124.           Intra module refs:   nwk_beacon_notify_ind_processing
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_BeaconFromNative    00016929        NLME_SetAssocFlags (nwk_util)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000001D ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000169C3 - 000169C7 (0x5 bytes), align: 0
  Segment part 125.           Intra module refs:   nwk_BeaconFromNative
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000169C8 - 000169D2 (0xb bytes), align: 0
  Segment part 126.           Intra module refs:   nwk_BeaconFromNative
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000164C - 00001653 (0x8 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 6
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001654 - 00001654 (0x1 bytes), align: 0
  Segment part 13.            Intra module refs:   nwk_beaconPayloadSize

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : nwk_bufs

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E3B5 - 0000E3B5 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   nwkDB_ReturnIndirectHoldingCnt
                                                   nwk_MacDataBuffersDealloc
                                                   nwkbufs_hold
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cntIndirectHolding      0000E3B5 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3B6 - 0000E3B7 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   nwkDB_Add
                                                   nwkDB_CountTypes
                                                   nwkDB_FindDstAddr
                                                   nwkDB_FindHandle
                                                   nwkDB_FindMatch
                                                   nwkDB_FindNextType
                                                   nwkDB_RemoveFromList
                                                   nwkbufs_hold
                                                   nwkbufs_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDataBufQueue         0000E3B6 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000298FE - 0002990B (0xe bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkbufs_init            000298FE        nwk_init (nwk)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002990C - 00029939 (0x2e bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_SendNextDataBuf     0002990C        nwk_data_cnf_processing (nwk)
                                                   nwk_event_loop (nwk)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002993A - 0002993E (0x5 bytes), align: 0
  Segment part 10.            Intra module refs:   nwk_MacDataBuffersDealloc
                                                   nwk_SendNextDataBuf
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002993F - 00029975 (0x37 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_MacDataBuffersFull
                                   0002993F        NLDE_DataReqSend (nwk_util)
                                                   nwk_data_ind_processing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029976 - 00029C0E (0x299 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_MacDataBuffersAdd   00029976        NLDE_SendMsg (nwk_util)
                                                   nwk_data_cnf_processing (nwk)
                                                   nwk_data_req_send (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029C0F - 00029C5E (0x50 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_MacDataBuffersDealloc
                                   00029C0F        nwk_data_cnf_processing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029C5F - 00029CCA (0x6c bytes), align: 0
  Segment part 14.            Intra module refs:   nwk_MacDataBuffersAdd
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_CreateHdr         00029C5F 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000F ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029CCB - 00029CD1 (0x7 bytes), align: 0
  Segment part 15.            Intra module refs:   nwkDB_CreateHdr
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029CD2 - 00029DA9 (0xd8 bytes), align: 0
  Segment part 16.            Intra module refs:   nwk_MacDataBuffersAdd
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_Add               00029CD2 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000011 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029DAA - 00029DB9 (0x10 bytes), align: 0
  Segment part 17.            Intra module refs:   nwkDB_Add
                                                   nwk_MacDataBuffersAdd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029DBA - 00029DEE (0x35 bytes), align: 0
  Segment part 18.            Intra module refs:   nwkDB_Add
                                                   nwk_MacDataBuffersFull
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_CountTypes        00029DBA 
               stack 1 = 00000002 ( 00000002 )
               stack 2 = 0000000B ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029DEF - 00029E45 (0x57 bytes), align: 0
  Segment part 19.            Intra module refs:   nwk_SendNextDataBuf
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_FindNextType      00029DEF        RTG_IndirectTimeout (rtg)
                                                   nwk_event_loop (nwk)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000A ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029E46 - 00029E74 (0x2f bytes), align: 0
  Segment part 20.            Intra module refs:   nwk_MacDataBuffersAdd
                                                   nwk_MacDataBuffersDealloc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_FindHandle        00029E46        NLDE_GetHandle (nwk_util)
                                                   NLDE_SendMsg (nwk_util)
                                                   RTG_BcastTimeout (rtg)
                                                   RTG_DataReq (rtg)
                                                   nwk_data_cnf_processing (nwk)
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 0000000F ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029E75 - 00029E79 (0x5 bytes), align: 0
  Segment part 21.            Intra module refs:   nwkDB_CountTypes
                                                   nwkDB_FindHandle
                                                   nwkDB_FindNextType
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029E7A - 00029EB0 (0x37 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_FindDstAddr       00029E7A        RTG_DataReq (rtg)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029EB1 - 00029EB7 (0x7 bytes), align: 0
  Segment part 23.            Intra module refs:   nwkDB_CountTypes
                                                   nwkDB_FindDstAddr
                                                   nwkDB_FindHandle
                                                   nwkDB_ReturnIndirectHoldingCnt
                                                   nwk_MacDataBuffersFull
                                                   nwkbufs_init
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029EB8 - 00029EC3 (0xc bytes), align: 0
  Segment part 25.            Intra module refs:   nwkDB_Add
                                                   nwkDB_FindDstAddr
                                                   nwkDB_RemoveFromList
                                                   nwk_MacDataBuffersAdd
                                                   nwkbufs_hold
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029EC4 - 00029F1C (0x59 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_FindMatch         00029EC4        apsProcessAck (aps_util)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029F1D - 00029F28 (0xc bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_ReturnIndirectHoldingCnt
                                   00029F1D        MAC_CbackCheckPending (zmac_cb)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029F29 - 00029F7A (0x52 bytes), align: 0
  Segment part 29.            Intra module refs:   nwkDB_DeleteRecAll
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_RemoveFromList    00029F29 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029F7B - 00029F80 (0x6 bytes), align: 0
  Segment part 30.            Intra module refs:   Segment part 21
                                                   Segment part 41
                                                   nwkDB_RemoveFromList
                                                   nwk_MacDataBuffersAdd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029F81 - 00029FC5 (0x45 bytes), align: 0
  Segment part 31.            Intra module refs:   nwk_MacDataBuffersDealloc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_DeleteRecAll      00029F81 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000A ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029FC6 - 00029FCA (0x5 bytes), align: 0
  Segment part 32.            Intra module refs:   nwkDB_DeleteRecAll
                                                   nwkDB_FindNextType
                                                   nwkDB_RemoveFromList
                                                   nwkbufs_hold
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029FCB - 00029FCF (0x5 bytes), align: 0
  Segment part 33.            Intra module refs:   nwkDB_DeleteRecAll
                                                   nwk_MacDataBuffersAdd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029FD0 - 00029FDA (0xb bytes), align: 0
  Segment part 34.            Intra module refs:   Segment part 33
                                                   Segment part 41
                                                   nwk_MacDataBuffersAdd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029FDB - 00029FEC (0x12 bytes), align: 0
  Segment part 35.            Intra module refs:   nwkDB_DeleteRecAll
                                                   nwk_MacDataBuffersAdd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029FED - 0002A09D (0xb1 bytes), align: 0
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkbufs_hold            00029FED        NLDE_SendMsg (nwk_util)
                                                   RTG_BcastHold (rtg)
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A09E - 0002A0A1 (0x4 bytes), align: 0
  Segment part 37.            Intra module refs:   nwkDB_CreateHdr
                                                   nwkbufs_hold
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A0A2 - 0002A0A7 (0x6 bytes), align: 0
  Segment part 38.            Intra module refs:   Segment part 15
                                                   Segment part 37
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A0A8 - 0002A0B1 (0xa bytes), align: 0
  Segment part 39.            Intra module refs:   Segment part 38
                                                   nwkDB_CreateHdr
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A0B2 - 0002A0BD (0xc bytes), align: 0
  Segment part 41.            Intra module refs:   nwkDB_DeleteRecAll
                                                   nwk_MacDataBuffersAdd

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : nwk_util

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E3B8 - 0000E3B8 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   NLME_IsAddressBroadcast
                                                   NLME_SetBroadcastFilter
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F737 - 0000F738 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   NLME_RejoinReqCmdProcess
                                                   NLME_RejoinRspSend
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _savedRejoinRspAddr     0000F737 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3B9 - 0000E3C0 (0x8 bytes), align: 0
  Segment part 9.             Intra module refs:   NLME_GetExtAddr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           saveExtAddr             0000E3B9        zdpProcessAddrReq (ZDProfile)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3C1 - 0000E3C1 (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   NLDE_GetHandle
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nsduHandleCounter       0000E3C1 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F739 - 0000F739 (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   NLME_GetEnergyThreshold
                                                   NLME_SetEnergyThreshold
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           baseEDMaxEnergy         0000F739 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000169D3 - 00016A4B (0x79 bytes), align: 0
  Segment part 15.            Intra module refs:   NLDE_DataReqSend
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_RTG_BcastAdd       000169D3 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000010 ( 0000001F )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016A4C - 00016C27 (0x1dc bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_DataReqSend        00016A4C        NLDE_DataReq (NLMEDE)
               calls direct, is recursive
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000015 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016C28 - 00016C32 (0xb bytes), align: 0
  Segment part 17.            Intra module refs:   NLDE_DataReqSend
                                                   NLME_CmdCnf
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016C33 - 00016C3D (0xb bytes), align: 0
  Segment part 18.            Intra module refs:   NLDE_BuildFrameControl
                                                   NLDE_BuildMsg
                                                   NLDE_DataIndSend
                                                   NLDE_DataReqSend
                                                   NLME_LeaveCmdProcess
                                                   NLME_RTG_BcastAdd
                                                   NLME_RejoinReqCmdProcess
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016C3E - 00016CB8 (0x7b bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_DataIndSend        00016C3E        NLDE_DataReq (NLMEDE)
               calls direct, is recursive
               stack 1 = 00000000 ( 00000003 )
               stack 2 = 00000000 ( 0000001A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016CB9 - 00016CC0 (0x8 bytes), align: 0
  Segment part 20.            Intra module refs:   NLDE_DataIndSend
                                                   NLME_RTG_BcastAdd
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016CC1 - 00016CC6 (0x6 bytes), align: 0
  Segment part 21.            Intra module refs:   NLDE_DataIndSend
                                                   NLME_RTG_BcastAdd
                                                   Segment part 20
                                                   Segment part 74
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016CC7 - 00016E49 (0x183 bytes), align: 0
  Segment part 22.            Intra module refs:   NLDE_DataReqSend
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_SendMsg            00016CC7        nwk_data_ind_processing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000015 ( 00000022 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016E4A - 00016E4E (0x5 bytes), align: 0
  Segment part 23.            Intra module refs:   NLDE_BuildMsg
                                                   NLDE_SendMsg
                                                   RTG_UpdateNeighborEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016E4F - 00016E52 (0x4 bytes), align: 0
  Segment part 24.            Intra module refs:   NLDE_SendMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016E53 - 00016E56 (0x4 bytes), align: 0
  Segment part 25.            Intra module refs:   Segment part 17
                                                   Segment part 24
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016E57 - 00016E5F (0x9 bytes), align: 0
  Segment part 26.            Intra module refs:   Segment part 130
                                                   Segment part 25
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016E60 - 00016E64 (0x5 bytes), align: 0
  Segment part 27.            Intra module refs:   NLDE_SendMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016E65 - 00016E6B (0x7 bytes), align: 0
  Segment part 28.            Intra module refs:   Segment part 20
                                                   Segment part 27
                                                   Segment part 45
                                                   Segment part 51
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016E6C - 00016E76 (0xb bytes), align: 0
  Segment part 29.            Intra module refs:   NLDE_SendMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016E77 - 00017037 (0x1c1 bytes), align: 0
  Segment part 30.            Intra module refs:   NLDE_DataReqSend
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_BuildMsg           00016E77 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000010 ( 00000013 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017038 - 0001703F (0x8 bytes), align: 0
  Segment part 31.            Intra module refs:   NLDE_BuildMsg
                                                   NLDE_ParseMsg2
                                                   NLME_RejoinRspCmdProcess
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017040 - 00017050 (0x11 bytes), align: 0
  Segment part 32.            Intra module refs:   NLDE_BuildMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017051 - 00017056 (0x6 bytes), align: 0
  Segment part 33.            Intra module refs:   NLDE_BuildMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017057 - 00017062 (0xc bytes), align: 0
  Segment part 34.            Intra module refs:   NLDE_BuildMsg
                                                   NLME_RejoinReqCmdProcess
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017063 - 0001706F (0xd bytes), align: 0
  Segment part 35.            Intra module refs:   NLDE_BuildMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017070 - 00017074 (0x5 bytes), align: 0
  Segment part 36.            Intra module refs:   NLDE_BuildMsg
                                                   NLDE_DataReqSend
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017075 - 000170F7 (0x83 bytes), align: 0
  Segment part 37.            Intra module refs:   NLDE_BuildMsg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_BuildFrameControl
                                   00017075 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000010 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000170F8 - 00017101 (0xa bytes), align: 0
  Segment part 38.            Intra module refs:   NLDE_BuildFrameControl
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017102 - 000171E5 (0xe4 bytes), align: 0
  Segment part 39.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_ParseMsg           00017102        Segment part 46 (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000171E6 - 000171F0 (0xb bytes), align: 0
  Segment part 40.            Intra module refs:   NLDE_BuildMsg
                                                   NLDE_ParseMsg
                                                   NLDE_ParseMsg2
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000171F1 - 0001724F (0x5f bytes), align: 0
  Segment part 41.            Intra module refs:   Segment part 53
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_ParseFrameControl
                                   000171F1 
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000D ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017250 - 00017257 (0x8 bytes), align: 0
  Segment part 42.            Intra module refs:   NLDE_BuildFrameControl
                                                   NLDE_DataReqSend
                                                   NLDE_ParseFrameControl
                                                   NLDE_ParseMsg
                                                   NLME_GetNeighborLinkInfo
                                                   NLME_LeaveCmdSend
                                                   NLME_RejoinReqCmdProcess
                                                   NLME_RejoinRspCmdProcess
                                                   NLME_RemoveChild
                                                   NLME_SetAssocFlags
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017258 - 00017260 (0x9 bytes), align: 0
  Segment part 43.            Intra module refs:   NLDE_ParseFrameControl
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017261 - 00017264 (0x4 bytes), align: 0
  Segment part 44.            Intra module refs:   NLDE_ParseFrameControl
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017265 - 0001726D (0x9 bytes), align: 0
  Segment part 45.            Intra module refs:   Segment part 44
                                                   Segment part 46
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001726E - 00017273 (0x6 bytes), align: 0
  Segment part 46.            Intra module refs:   NLDE_ParseFrameControl
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017274 - 000172C4 (0x51 bytes), align: 0
  Segment part 47.            Intra module refs:   NLDE_ParseMsg2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_CheckFrameSecurity
                                   00017274 
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 0000000D ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000172C5 - 000173AF (0xeb bytes), align: 0
  Segment part 48.            Intra module refs:   NLME_CmdCnf
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_ParseMsg2          000172C5 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000001F ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000173B0 - 000173B6 (0x7 bytes), align: 0
  Segment part 49.            Intra module refs:   NLDE_ParseMsg
                                                   NLDE_ParseMsg2
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000173B7 - 000173C4 (0xe bytes), align: 0
  Segment part 50.            Intra module refs:   NLDE_ParseMsg
                                                   NLDE_ParseMsg2
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000173C5 - 000173CC (0x8 bytes), align: 0
  Segment part 51.            Intra module refs:   NLDE_ParseMsg
                                                   Segment part 50
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000173CD - 000173DE (0x12 bytes), align: 0
  Segment part 52.            Intra module refs:   NLDE_ParseMsg2
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000173DF - 000173F3 (0x15 bytes), align: 0
  Segment part 53.            Intra module refs:   NLDE_ParseMsg
                                                   NLDE_ParseMsg2
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000173F4 - 000173FA (0x7 bytes), align: 0
  Segment part 54.            Intra module refs:   NLDE_DataReqSend
                                                   NLDE_ParseMsg
                                                   NLDE_ParseMsg2
                                                   NLME_RejoinRspSend
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000173FB - 000173FD (0x3 bytes), align: 0
  Segment part 55.            Intra module refs:   Segment part 112
                                                   Segment part 38
                                                   Segment part 54
                                                   Segment part 57
                                                   Segment part 60
                                                   Segment part 98
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000173FE - 00017402 (0x5 bytes), align: 0
  Segment part 56.            Intra module refs:   Segment part 103
                                                   Segment part 18
                                                   Segment part 55
                                                   Segment part 66
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017403 - 00017406 (0x4 bytes), align: 0
  Segment part 57.            Intra module refs:   NLDE_ParseMsg
                                                   NLDE_ParseMsg2
                                                   NLME_RejoinRspSend
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017407 - 0001740B (0x5 bytes), align: 0
  Segment part 58.            Intra module refs:   NLDE_BuildMsg
                                                   Segment part 57
                                                   Segment part 83
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001740C - 00017425 (0x1a bytes), align: 0
  Segment part 59.            Intra module refs:   NLDE_ParseMsg
                                                   NLDE_ParseMsg2
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017426 - 00017458 (0x33 bytes), align: 0
  Segment part 60.            Intra module refs:   NLDE_ParseMsg
                                                   NLDE_ParseMsg2
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017459 - 00017462 (0xa bytes), align: 0
  Segment part 61.            Intra module refs:   Segment part 60
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017463 - 0001746E (0xc bytes), align: 0
  Segment part 62.            Intra module refs:   Segment part 60
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001746F - 00017476 (0x8 bytes), align: 0
  Segment part 63.            Intra module refs:   Segment part 60
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017477 - 0001747C (0x6 bytes), align: 0
  Segment part 64.            Intra module refs:   Segment part 109
                                                   Segment part 63
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001747D - 00017480 (0x4 bytes), align: 0
  Segment part 65.            Intra module refs:   NLDE_ParseMsg
                                                   NLDE_ParseMsg2
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017481 - 00017489 (0x9 bytes), align: 0
  Segment part 66.            Intra module refs:   Segment part 117
                                                   Segment part 36
                                                   Segment part 65
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001748A - 00017499 (0x10 bytes), align: 0
  Segment part 67.            Intra module refs:   NLME_LeaveCmdProcess
                                                   NLME_RejoinRspCmdProcess
                                                   NLME_RejoinRspSend
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_GetExtAddr         0001748A        APSME_LookupNwkAddr (APSMEDE)
                                                   SampleApp_ProcessEvent (SampleApp)
                                                   Segment part 51 (NLMEDE)
                                                   ZDApp_Init (ZDApp)
                                                   ZDO_LeaveCnf (ZDApp)
                                                   ZDO_UpdateNwkStatus (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000017 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001749A - 000174A6 (0xd bytes), align: 0
  Segment part 68.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_GetShortAddr       0001749A        AF_DataRequest (AF)
                                                   MT_ProcessGetDeviceInfo (MTEL)
                                                   NLDE_DataReqAlloc (NLMEDE)
                                                   SampleApp_ProcessEvent (SampleApp)
                                                   ZDApp_ProcessNetworkJoin (ZDApp)
                                                   ZDO_UpdateNwkStatus (ZDObject)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000174A7 - 000174C1 (0x1b bytes), align: 0
  Segment part 69.            Intra module refs:   NLME_LeaveCmdProcess
                                                   RTG_UpdateNeighborEntry
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_GetCoordShortAddr
                                   000174A7        APSME_LookupNwkAddr (APSMEDE)
                                                   ZDO_LeaveInd (ZDApp)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000017 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000174C2 - 000174CA (0x9 bytes), align: 0
  Segment part 70.            Intra module refs:   NLDE_SendMsg
                                                   NLME_GetCoordShortAddr
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000174CB - 000174D2 (0x8 bytes), align: 0
  Segment part 71.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_GetCoordExtAddr    000174CB        APSME_LookupNwkAddr (APSMEDE)
               calls direct
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000174D3 - 000174F5 (0x23 bytes), align: 0
  Segment part 72.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_GetHandle          000174D3        NLDE_DataReqAlloc (NLMEDE)
                                                   RTG_ProcessRreq (rtg)
                                                   nwk_data_ind_processing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000174F6 - 000176E4 (0x1ef bytes), align: 0
  Segment part 73.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_UpdateNeighborEntry
                                   000174F6        Segment part 98 (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000001 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000176E5 - 000176EA (0x6 bytes), align: 0
  Segment part 74.            Intra module refs:   RTG_UpdateNeighborEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000176EB - 00017779 (0x8f bytes), align: 0
  Segment part 75.            Intra module refs:   RTG_UpdateNeighborEntry
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_GetNeighborLinkInfo
                                   000176EB        RTG_CheckRtStatus (rtg)
                                                   RTG_GetLinkCost (rtg)
                                                   nwk_data_ind_processing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000010 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001777A - 000177C0 (0x47 bytes), align: 0
  Segment part 76.            Intra module refs:   NLME_RemoveFromNeighborTable
                                                   RTG_UpdateNeighborEntry
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_GetNeighborIndex   0001777A 
               stack 1 = 00000002 ( 00000001 )
               stack 2 = 00000010 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000177C1 - 000177CA (0xa bytes), align: 0
  Segment part 77.            Intra module refs:   NLME_CmdCnf
                                                   NLME_GetNeighborIndex
                                                   NLME_RTG_BcastAdd
                                                   NLME_SetBroadcastFilter
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000177CB - 000177F9 (0x2f bytes), align: 0
  Segment part 78.            Intra module refs:   RTG_UpdateNeighborEntry
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_RemoveFromNeighborTable
                                   000177CB        AssocAddNew (AssocList)
               calls direct
               stack 1 = 00000000 ( 00000003 )
               stack 2 = 00000010 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000177FA - 00017803 (0xa bytes), align: 0
  Segment part 79.            Intra module refs:   NLDE_CheckFrameSecurity
                                                   NLDE_DataIndSend
                                                   NLME_GetCoordShortAddr
                                                   NLME_GetEnergyThreshold
                                                   NLME_GetProtocolVersion
                                                   NLME_GetShortAddr
                                                   NLME_RemoveFromNeighborTable
                                                   NLME_SetEnergyThreshold
                                                   NLME_SetPollRate
                                                   Segment part 85
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017804 - 00017810 (0xd bytes), align: 0
  Segment part 80.            Intra module refs:   NLME_RemoveFromNeighborTable
                                                   RTG_UpdateNeighborEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017811 - 00017818 (0x8 bytes), align: 0
  Segment part 81.            Intra module refs:   NLME_RejoinRspSend
                                                   NLME_RemoveFromNeighborTable
                                                   RTG_UpdateNeighborEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017819 - 00017867 (0x4f bytes), align: 0
  Segment part 82.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_SetPollRate        00017819        ZDApp_ProcessNetworkJoin (ZDApp)
                                                   ZDApp_ProcessOSALMsg (ZDApp)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017868 - 0001786C (0x5 bytes), align: 0
  Segment part 83.            Intra module refs:   NLDE_ParseMsg
                                                   NLDE_SendMsg
                                                   NLME_RejoinRspCmdProcess
                                                   NLME_SetPollRate
                                                   Segment part 85
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001786D - 00017873 (0x7 bytes), align: 0
  Segment part 84.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_SetQueuedPollRate
                                   0001786D        ZDApp_ProcessNetworkJoin (ZDApp)
                                                   ZDApp_ProcessOSALMsg (ZDApp)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017874 - 00017878 (0x5 bytes), align: 0
  Segment part 85.            Intra module refs:   NLME_SetQueuedPollRate
                                                   NLME_SetResponseRate
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017879 - 00017881 (0x9 bytes), align: 0
  Segment part 86.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_SetResponseRate    00017879        NLME_ReJoinRequest (NLMEDE)
                                                   ZDApp_ProcessNetworkJoin (ZDApp)
                                                   ZDApp_ProcessOSALMsg (ZDApp)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017882 - 0001788B (0xa bytes), align: 0
  Segment part 89.            Intra module refs:   NLDE_GetHandle
                                                   NLME_CmdDataReqAlloc
                                                   NLME_IsAddressBroadcast
                                                   NLME_LeaveCmdCnf
                                                   NLME_LeaveCmdProcess
                                                   nwkDB_UserDataLoad
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001788C - 0001788D (0x2 bytes), align: 0
  Segment part 92.            Intra module refs:   NLDE_DataReqSend
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001788E - 00017893 (0x6 bytes), align: 0
  Segment part 93.            Intra module refs:   NLME_RTG_BcastAdd
                                                   Segment part 127
                                                   Segment part 92
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017894 - 00017962 (0xcf bytes), align: 0
  Segment part 96.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_SetAssocFlags      00017894        AssocRemove (AssocList)
                                                   RTG_AllocNewAddress (rtg)
                                                   RTG_DeAllocAddress (rtg)
                                                   nwk_start_coord (nwk)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 0000001C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017963 - 00017A01 (0x9f bytes), align: 0
  Segment part 97.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_RejoinReqCmdProcess
                                   00017963        NwkCommandPktProcessing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017A02 - 00017A0A (0x9 bytes), align: 0
  Segment part 98.            Intra module refs:   NLDE_DataReqSend
                                                   NLME_RejoinReqCmdProcess
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017A0B - 00017AF4 (0xea bytes), align: 0
  Segment part 99.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_RejoinRspSend      00017A0B        nwk_associate_ind_processing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017AF5 - 00017BAC (0xb8 bytes), align: 0
  Segment part 100.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_RejoinRspCmdProcess
                                   00017AF5        nwk_data_ind_processing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017BAD - 00017BB2 (0x6 bytes), align: 0
  Segment part 101.           Intra module refs:   NLME_LeaveCmdCnf
                                                   NLME_LeaveCmdProcess
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017BB3 - 00017BB8 (0x6 bytes), align: 0
  Segment part 102.           Intra module refs:   NLDE_DataIndSend
                                                   NLME_RTG_BcastAdd
                                                   NLME_RejoinReqCmdProcess
                                                   NLME_RejoinRspCmdProcess
                                                   Segment part 101
                                                   Segment part 116
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017BB9 - 00017BC3 (0xb bytes), align: 0
  Segment part 103.           Intra module refs:   NLME_RejoinRspCmdProcess
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017BC4 - 00017BC7 (0x4 bytes), align: 0
  Segment part 104.           Intra module refs:   NLDE_ParseMsg
                                                   NLME_CmdCnf
                                                   NLME_RejoinRspCmdProcess
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017BC8 - 00017BD0 (0x9 bytes), align: 0
  Segment part 105.           Intra module refs:   Segment part 104
                                                   Segment part 35
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017BD1 - 00017CE1 (0x111 bytes), align: 0
  Segment part 106.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_LeaveCmdSend       00017BD1        NLME_LeaveRsp (NLMEDE)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017CE2 - 00017CF7 (0x16 bytes), align: 0
  Segment part 107.           Intra module refs:   NLDE_DataReqSend
                                                   NLME_CmdCnf
                                                   NLME_LeaveCmdSend
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017CF8 - 00017CFB (0x4 bytes), align: 0
  Segment part 108.           Intra module refs:   NLME_LeaveCmdSend
                                                   NLME_RejoinRspSend
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017CFC - 00017D00 (0x5 bytes), align: 0
  Segment part 109.           Intra module refs:   Segment part 108
                                                   Segment part 49
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017D01 - 00017D09 (0x9 bytes), align: 0
  Segment part 110.           Intra module refs:   NLME_LeaveCmdSend
                                                   NLME_RejoinRspSend
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017D0A - 00017D23 (0x1a bytes), align: 0
  Segment part 111.           Intra module refs:   NLME_LeaveCmdSend
                                                   NLME_RejoinRspSend
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017D24 - 00017D32 (0xf bytes), align: 0
  Segment part 112.           Intra module refs:   NLME_LeaveCmdSend
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017D33 - 00017D36 (0x4 bytes), align: 0
  Segment part 113.           Intra module refs:   NLME_LeaveCmdSend
                                                   Segment part 112
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017D37 - 00017D40 (0xa bytes), align: 0
  Segment part 114.           Intra module refs:   Segment part 113
                                                   Segment part 64
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017D41 - 00017D48 (0x8 bytes), align: 0
  Segment part 115.           Intra module refs:   NLDE_ParseMsg
                                                   NLDE_ParseMsg2
                                                   NLME_LeaveCmdSend
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017D49 - 00017D52 (0xa bytes), align: 0
  Segment part 116.           Intra module refs:   Segment part 115
                                                   Segment part 59
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017D53 - 00017D58 (0x6 bytes), align: 0
  Segment part 117.           Intra module refs:   NLME_LeaveCmdSend
                                                   NLME_RejoinRspSend
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017D59 - 00017E5B (0x103 bytes), align: 0
  Segment part 118.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_LeaveCmdProcess    00017D59        NwkCommandPktProcessing (nwk)
                                                   nwk_data_ind_processing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000017 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017E5C - 00017E6A (0xf bytes), align: 0
  Segment part 119.           Intra module refs:   NLDE_DataReqSend
                                                   NLME_LeaveCmdProcess
                                                   NLME_LeaveCmdSend
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017E6B - 00017E6F (0x5 bytes), align: 0
  Segment part 120.           Intra module refs:   NLME_LeaveCmdProcess
                                                   NLME_RejoinReqCmdProcess
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017E70 - 00017E7F (0x10 bytes), align: 0
  Segment part 121.           Intra module refs:   NLME_LeaveCmdCnf
                                                   NLME_LeaveCmdProcess
                                                   NLME_RejoinReqCmdProcess
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017E80 - 00017E88 (0x9 bytes), align: 0
  Segment part 122.           Intra module refs:   Segment part 120
                                                   Segment part 121
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017E89 - 00017F1A (0x92 bytes), align: 0
  Segment part 123.           Intra module refs:   NLME_CmdCnf
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_LeaveCmdCnf        00017E89 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000001F ( 00000017 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017F1B - 00017F26 (0xc bytes), align: 0
  Segment part 124.           Intra module refs:   NLME_LeaveCmdCnf
                                                   Segment part 110
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017F27 - 00017F36 (0x10 bytes), align: 0
  Segment part 125.           Intra module refs:   NLDE_DataIndSend
                                                   NLME_LeaveCmdCnf
                                                   NLME_LeaveCmdSend
                                                   NLME_RTG_BcastAdd
                                                   NLME_RejoinRspCmdProcess
                                                   NLME_RejoinRspSend
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017F37 - 00017F3C (0x6 bytes), align: 0
  Segment part 126.           Intra module refs:   NLME_LeaveCmdCnf
                                                   NLME_LeaveCmdProcess
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017F3D - 00017F46 (0xa bytes), align: 0
  Segment part 127.           Intra module refs:   Segment part 126
                                                   Segment part 33
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017F47 - 00017FD7 (0x91 bytes), align: 0
  Segment part 128.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_CmdCnf             00017F47        nwk_data_cnf_processing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000001F )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017FD8 - 00017FDB (0x4 bytes), align: 0
  Segment part 129.           Intra module refs:   NLME_CmdCnf
                                                   NLME_RejoinRspCmdProcess
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017FDC - 00017FE2 (0x7 bytes), align: 0
  Segment part 130.           Intra module refs:   Segment part 129
                                                   Segment part 27
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017FE3 - 00017FEB (0x9 bytes), align: 0
  Segment part 131.           Intra module refs:   NLME_CmdCnf
                                                   NLME_RejoinRspSend
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017FEC - 00017FF9 (0xe bytes), align: 0
  Segment part 132.           Intra module refs:   NLDE_DataReqSend
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_CmdBcast           00017FEC        Segment part 54 (nwk)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000010 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017FFA - 00018022 (0x29 bytes), align: 0
  Segment part 133.           Intra module refs:   Segment part 110
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_CmdDataReqAlloc    00017FFA        NLME_ReJoinRequest (NLMEDE)
                                                   RTG_SendRrep (rtg)
                                                   Segment part 36 (rtg)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000011 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018023 - 00018050 (0x2e bytes), align: 0
  Segment part 134.           Intra module refs:   NLDE_BuildFrameControl
                                                   NLME_IsAddressBroadcast
                                                   NLME_LeaveCmdProcess
                                                   NLME_LeaveCmdSend
                                                   NLME_SetBroadcastFilter
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_GetProtocolVersion
                                   00018023        ?Subroutine47 (ZDProfile)
                                                   APSDE_DataReq (APSMEDE)
                                                   APSDE_DataReqMTU (APSMEDE)
                                                   APSDE_FrameHdrInit (APSMEDE)
                                                   APSDE_FrameHdrSet (APSMEDE)
                                                   APSDE_ParseMsg (aps_util)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   ZDAppSetupProtoVersion (ZDApp)
                                                   ZDO_CreateAlignedUINT16List (ZDObject)
                                                   ZDO_NetworkDiscoveryConfirmCB (ZDApp)
                                                   ZDP_GenericRsp (ZDProfile)
                                                   ZDP_IncomingData (ZDProfile)
                                                   afDataReqMTU (AF)
                                                   afIncomingData (AF)
                                                   nwk_data_ind_processing (nwk)
                                                   nwk_start_coord (nwk)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000017 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018051 - 0001805C (0xc bytes), align: 0
  Segment part 135.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_GetEnergyThreshold
                                   00018051        ZDApp_NetworkStartEvt (ZDApp)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001805D - 00018068 (0xc bytes), align: 0
  Segment part 136.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_SetEnergyThreshold
                                   0001805D        ZDApp_NetworkStartEvt (ZDApp)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018069 - 0001809D (0x35 bytes), align: 0
  Segment part 137.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_SetBroadcastFilter
                                   00018069        ZDApp_Init (ZDApp)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001809E - 00018100 (0x63 bytes), align: 0
  Segment part 138.           Intra module refs:   Segment part 119
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_IsAddressBroadcast
                                   0001809E        AF_DataRequest (AF)
                                                   RTG_GetNextHop (rtg)
                                                   RTG_RouteMaintanence (rtg)
                                                   Segment part 38 (nwk)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   nwk_data_req_send (nwk)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000017 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018101 - 0001816F (0x6f bytes), align: 0
  Segment part 139.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_RemoveChild        00018101        ?Subroutine9 (ZDApp)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018170 - 0001819B (0x2c bytes), align: 0
  Segment part 140.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_UserDataLoad      00018170        nwk_MacDataBuffersAdd (nwk_bufs)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001819C - 000181A5 (0xa bytes), align: 0
  Segment part 141.           Intra module refs:   NLDE_CheckFrameSecurity
                                                   NLDE_DataReqSend
                                                   NLDE_SendMsg
                                                   NLME_GetShortAddr
                                                   NLME_RemoveChild
                                                   nwkDB_UserDataLoad
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000181A6 - 000181AB (0x6 bytes), align: 0
  Segment part 142.           Intra module refs:   Segment part 103
                                                   Segment part 119
                                                   Segment part 141
                                                   Segment part 70
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001655 - 00001656 (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   _savedRejoinRspAddr
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001657 - 00001657 (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   baseEDMaxEnergy

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : rtg

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E3C2 - 0000E3C2 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   NLME_RouteDiscoveryRequest
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           rreqCounter             0000E3C2 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3C3 - 0000E3C3 (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   RTG_GetRoutingAddress
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gRTG_TBL_COMPRESSION    0000E3C3 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3C4 - 0000E3C4 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   RTG_Init
                                                   RTG_TimerEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013000 - 0001307D (0x7e bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_Init                00013000        nwk_init (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001307E - 00013174 (0xf7 bytes), align: 0
  Segment part 14.            Intra module refs:   RTG_ProcessRtDiscBits
                                                   RTG_RouteMaintanence
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_RouteDiscoveryRequest
                                   0001307E        NLME_RouteDiscoveryIndication (NLMEDE_CB)
               calls direct, is recursive
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000E ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013175 - 00013179 (0x5 bytes), align: 0
  Segment part 15.            Intra module refs:   NLME_RouteDiscoveryRequest
                                                   RTG_Init
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001317A - 00013239 (0xc0 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_GetNextHop          0001317A        nwk_data_req_send (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001323A - 00013245 (0xc bytes), align: 0
  Segment part 17.            Intra module refs:   RTG_CheckRtDiscEntry
                                                   RTG_CheckRtStatus
                                                   RTG_GetNextHop
                                                   RTG_GetPrevHop
                                                   RTG_RouteMaintanence
                                                   RTG_UpdateRtDiscEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013246 - 0001324A (0x5 bytes), align: 0
  Segment part 18.            Intra module refs:   NLME_RouteDiscoveryRequest
                                                   RTG_AddRtgEntry
                                                   RTG_GetNextHop
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001324B - 00013251 (0x7 bytes), align: 0
  Segment part 19.            Intra module refs:   Segment part 18
                                                   Segment part 34
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013252 - 00013333 (0xe2 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_RouteMaintanence    00013252        NLDE_DataReqSend (nwk_util)
                                                   Segment part 45 (nwk)
               calls direct, is recursive
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013334 - 00013338 (0x5 bytes), align: 0
  Segment part 21.            Intra module refs:   RTG_AddRtgEntry
                                                   RTG_RouteMaintanence
                                                   RTG_SendRErr
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013339 - 000134F1 (0x1b9 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_ProcessRreq         00013339        NwkCommandPktProcessing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000002 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000134F2 - 000134F8 (0x7 bytes), align: 0
  Segment part 23.            Intra module refs:   RTG_ProcessRreq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000134F9 - 00013503 (0xb bytes), align: 0
  Segment part 24.            Intra module refs:   RTG_ProcessRreq
                                                   Segment part 23
                                                   Segment part 71
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013504 - 00013513 (0x10 bytes), align: 0
  Segment part 25.            Intra module refs:   RTG_ProcessRreq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013514 - 0001351F (0xc bytes), align: 0
  Segment part 26.            Intra module refs:   RTG_BcastAdd
                                                   RTG_GetAncestors
                                                   RTG_GetTreeRoute
                                                   RTG_ProcessRreq
                                                   RTG_SendRrep
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013520 - 000135F8 (0xd9 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_ProcessRrep         00013520        NwkCommandPktProcessing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000135F9 - 0001360A (0x12 bytes), align: 0
  Segment part 28.            Intra module refs:   RTG_ProcessRrep
                                                   RTG_ProcessRreq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001360B - 00013625 (0x1b bytes), align: 0
  Segment part 29.            Intra module refs:   RTG_ProcessRrep
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013626 - 00013722 (0xfd bytes), align: 0
  Segment part 30.            Intra module refs:   RTG_ProcessRrep
                                                   RTG_ProcessRreq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_SendRrep            00013626 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000014 ( 00000016 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013723 - 0001372A (0x8 bytes), align: 0
  Segment part 31.            Intra module refs:   NLME_RouteDiscoveryRequest
                                                   RTG_GetAncestors
                                                   RTG_SendRrep
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001372B - 00013734 (0xa bytes), align: 0
  Segment part 32.            Intra module refs:   RTG_SendRrep
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013735 - 000137C8 (0x94 bytes), align: 0
  Segment part 33.            Intra module refs:   RTG_RouteMaintanence
                                                   RTG_TimerEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_SendRErr            00013735 
               calls direct, is recursive
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000E ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000137C9 - 000137CD (0x5 bytes), align: 0
  Segment part 34.            Intra module refs:   NLME_RouteDiscoveryRequest
                                                   RTG_SendRErr
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000137CE - 000137D5 (0x8 bytes), align: 0
  Segment part 35.            Intra module refs:   NLME_RouteDiscoveryRequest
                                                   RTG_BcastTimeout
                                                   RTG_SendRErr
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000137D6 - 000137E6 (0x11 bytes), align: 0
  Segment part 36.            Intra module refs:   NLME_RouteDiscoveryRequest
                                                   RTG_SendRErr
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000137E7 - 00013817 (0x31 bytes), align: 0
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_ProcessRErr         000137E7        NwkCommandPktProcessing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013818 - 0001390C (0xf5 bytes), align: 0
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_TimerEvent          00013818        nwk_event_loop (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001390D - 00013914 (0x8 bytes), align: 0
  Segment part 39.            Intra module refs:   RTG_Init
                                                   RTG_TimerEvent
                                                   Segment part 51
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013915 - 00013972 (0x5e bytes), align: 0
  Segment part 40.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_AllocNewAddress     00013915        nwk_associate_ind_processing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013973 - 00013A13 (0xa1 bytes), align: 0
  Segment part 41.            Intra module refs:   RTG_AllocNewAddress
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_CalcAddress         00013973 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 0000000A ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013A14 - 00013AD1 (0xbe bytes), align: 0
  Segment part 42.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_DeAllocAddress      00013A14        NLME_RemoveChild (nwk_util)
                                                   Segment part 118 (nwk)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013AD2 - 00013AFD (0x2c bytes), align: 0
  Segment part 43.            Intra module refs:   RTG_GetNextHop
                                                   RTG_GetPrevHop
                                                   RTG_ProcessRreq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_GetNextTreeHop      00013AD2 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000012 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013AFE - 00013BE4 (0xe7 bytes), align: 0
  Segment part 44.            Intra module refs:   RTG_GetNextTreeHop
                                                   RTG_RouteMaintanence
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_GetTreeRoute        00013AFE 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 0000000E ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013BE5 - 00013CAF (0xcb bytes), align: 0
  Segment part 45.            Intra module refs:   NLME_RouteDiscoveryRequest
                                                   RTG_ProcessRreq
                                                   Segment part 29
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_AddRtgEntry         00013BE5 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000013 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013CB0 - 00013CB9 (0xa bytes), align: 0
  Segment part 46.            Intra module refs:   RTG_AddRtgEntry
                                                   RTG_GetNextHop
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013CBA - 00013CC6 (0xd bytes), align: 0
  Segment part 47.            Intra module refs:   RTG_AddRtgEntry
                                                   RTG_GetNextHop
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013CC7 - 00013CD3 (0xd bytes), align: 0
  Segment part 48.            Intra module refs:   RTG_AddRtgEntry
                                                   RTG_GetNextHop
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013CD4 - 00013CF9 (0x26 bytes), align: 0
  Segment part 49.            Intra module refs:   RTG_GetRtgEntry
                                                   RTG_RouteMaintanence
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_RemoveRtgEntry      00013CD4        NLME_RouteDiscoveryIndication (NLMEDE_CB)
               calls direct, is recursive
               stack 1 = 00000000 ( 00000003 )
               stack 2 = 0000000E ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013CFA - 00013D00 (0x7 bytes), align: 0
  Segment part 50.            Intra module refs:   RTG_DivideCskip
                                                   RTG_RemoveRtgEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013D01 - 00013D2A (0x2a bytes), align: 0
  Segment part 51.            Intra module refs:   RTG_Init
                                                   RTG_RemoveRtgEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013D2B - 00013D30 (0x6 bytes), align: 0
  Segment part 52.            Intra module refs:   Segment part 15
                                                   Segment part 51
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013D31 - 00013D35 (0x5 bytes), align: 0
  Segment part 53.            Intra module refs:   Segment part 52
                                                   Segment part 84
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013D36 - 00013D8B (0x56 bytes), align: 0
  Segment part 54.            Intra module refs:   RTG_ProcessRreq
                                                   RTG_SendRrep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_GetLinkCost         00013D36 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000016 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013D8C - 00013E65 (0xda bytes), align: 0
  Segment part 55.            Intra module refs:   NLME_RouteDiscoveryRequest
                                                   Segment part 25
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_UpdateRtDiscEntry   00013D8C 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000014 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013E66 - 00013E6A (0x5 bytes), align: 0
  Segment part 56.            Intra module refs:   RTG_AddRtgEntry
                                                   RTG_UpdateRtDiscEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013E6B - 00013E6B (0x1 bytes), align: 0
  Segment part 57.            Intra module refs:   Segment part 18
                                                   Segment part 56
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013E6C - 00013E73 (0x8 bytes), align: 0
  Segment part 58.            Intra module refs:   Segment part 57
                                                   Segment part 61
                                                   Segment part 63
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013E74 - 00013E83 (0x10 bytes), align: 0
  Segment part 59.            Intra module refs:   RTG_Init
                                                   RTG_UpdateRtDiscEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013E84 - 00013E88 (0x5 bytes), align: 0
  Segment part 60.            Intra module refs:   NLME_RouteDiscoveryRequest
                                                   RTG_UpdateRtDiscEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013E89 - 00013E8C (0x4 bytes), align: 0
  Segment part 61.            Intra module refs:   RTG_SendRErr
                                                   Segment part 60
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013E8D - 00013E96 (0xa bytes), align: 0
  Segment part 62.            Intra module refs:   RTG_UpdateRtDiscEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013E97 - 00013E99 (0x3 bytes), align: 0
  Segment part 63.            Intra module refs:   Segment part 51
                                                   Segment part 62
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013E9A - 00013EDB (0x42 bytes), align: 0
  Segment part 64.            Intra module refs:   RTG_ProcessRrep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_CheckRtDiscEntry    00013E9A 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000010 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013EDC - 00013EE0 (0x5 bytes), align: 0
  Segment part 65.            Intra module refs:   NLME_RouteDiscoveryRequest
                                                   RTG_BcastDel
                                                   RTG_BcastTimeout
                                                   RTG_CalcAddress
                                                   RTG_CheckRtDiscEntry
                                                   RTG_DeAllocAddress
                                                   RTG_TimerEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013EE1 - 00013F25 (0x45 bytes), align: 0
  Segment part 66.            Intra module refs:   RTG_SendRrep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_GetPrevHop          00013EE1 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000016 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013F26 - 00013F2F (0xa bytes), align: 0
  Segment part 67.            Intra module refs:   RTG_AllocNewAddress
                                                   RTG_BcastHold
                                                   RTG_BcastTimerHandler
                                                   RTG_CheckRtStatus
                                                   RTG_GetLinkCost
                                                   RTG_GetNextTreeHop
                                                   RTG_GetPrevHop
                                                   RTG_GetRoutingAddress
                                                   RTG_GetRtDiscEntry
                                                   RTG_IndirectTimeout
                                                   RTG_Init
                                                   RTG_MultiplyCskip
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013F30 - 00013F92 (0x63 bytes), align: 0
  Segment part 68.            Intra module refs:   RTG_BcastTimeout
           LOCAL                   ADDRESS         
           =====                   =======         
           RTG_BcastHold           00013F30 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000C ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013F93 - 000140E3 (0x151 bytes), align: 0
  Segment part 69.            Intra module refs:   RTG_BcastTimerHandler
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_BcastTimeout        00013F93 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000A ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000140E4 - 000140ED (0xa bytes), align: 0
  Segment part 70.            Intra module refs:   RTG_BcastTimeout
                                                   RTG_TimerEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000140EE - 00014101 (0x14 bytes), align: 0
  Segment part 71.            Intra module refs:   RTG_BcastHold
                                                   RTG_BcastTimeout
                                                   RTG_IndirectTimeout
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014102 - 0001415B (0x5a bytes), align: 0
  Segment part 72.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_BcastTimerHandler   00014102        nwk_event_loop (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001415C - 00014165 (0xa bytes), align: 0
  Segment part 73.            Intra module refs:   RTG_BcastTimerHandler
                                                   RTG_GetRtgEntry
                                                   RTG_TimerEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014166 - 000142C3 (0x15e bytes), align: 0
  Segment part 74.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_BcastChk            00014166        nwk_data_ind_processing (nwk)
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000142C4 - 000142CC (0x9 bytes), align: 0
  Segment part 75.            Intra module refs:   RTG_BcastChk
                                                   RTG_FillCSkipTable
                                                   Segment part 29
                                                   Segment part 70
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000142CD - 0001451F (0x253 bytes), align: 0
  Segment part 76.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_BcastAdd            000142CD        NLME_RTG_BcastAdd (nwk_util)
                                                   nwk_data_ind_processing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000018 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014520 - 00014523 (0x4 bytes), align: 0
  Segment part 77.            Intra module refs:   RTG_BcastAdd
                                                   RTG_GetAncestors
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014524 - 0001452D (0xa bytes), align: 0
  Segment part 78.            Intra module refs:   RTG_DataReq
                                                   RTG_FillCSkipTable
                                                   RTG_GetTreeRoute
                                                   RTG_ProcessRrep
                                                   RTG_ProcessRreq
                                                   RTG_SendRrep
                                                   RTG_UpdateRtDiscEntry
                                                   Segment part 77
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001452E - 0001453A (0xd bytes), align: 0
  Segment part 79.            Intra module refs:   RTG_BcastAdd
                                                   RTG_BcastDel
                                                   RTG_BcastHold
                                                   RTG_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001453B - 0001453E (0x4 bytes), align: 0
  Segment part 80.            Intra module refs:   RTG_BcastAdd
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001453F - 00014543 (0x5 bytes), align: 0
  Segment part 81.            Intra module refs:   Segment part 25
                                                   Segment part 80
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014544 - 00014555 (0x12 bytes), align: 0
  Segment part 82.            Intra module refs:   RTG_BcastAdd
                                                   RTG_BcastChk
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014556 - 00014562 (0xd bytes), align: 0
  Segment part 83.            Intra module refs:   RTG_BcastAdd
                                                   RTG_BcastTimeout
                                                   RTG_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014563 - 00014569 (0x7 bytes), align: 0
  Segment part 84.            Intra module refs:   RTG_BcastAdd
                                                   RTG_ProcessRreq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001456A - 00014573 (0xa bytes), align: 0
  Segment part 85.            Intra module refs:   RTG_BcastAdd
                                                   RTG_Init
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014574 - 0001457F (0xc bytes), align: 0
  Segment part 86.            Intra module refs:   RTG_BcastAdd
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014580 - 000145A7 (0x28 bytes), align: 0
  Segment part 87.            Intra module refs:   RTG_IndirectTimeout
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_BcastDel            00014580 
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000A ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000145A8 - 000147D5 (0x22e bytes), align: 0
  Segment part 88.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_DataReq             000145A8        nwk_event_loop (nwk)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000147D6 - 000147E2 (0xd bytes), align: 0
  Segment part 89.            Intra module refs:   RTG_BcastAdd
                                                   RTG_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000147E3 - 000147F2 (0x10 bytes), align: 0
  Segment part 90.            Intra module refs:   NLME_RouteDiscoveryRequest
                                                   RTG_DataReq
                                                   RTG_DeAllocAddress
                                                   RTG_GetAncestors
                                                   RTG_GetTreeRoute
                                                   RTG_ProcessRErr
                                                   RTG_ProcessRrep
                                                   RTG_ProcessRreq
                                                   RTG_SendRErr
                                                   RTG_SendRrep
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000147F3 - 00014804 (0x12 bytes), align: 0
  Segment part 91.            Intra module refs:   RTG_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014805 - 0001485B (0x57 bytes), align: 0
  Segment part 92.            Intra module refs:   RTG_CheckRtDiscEntry
                                                   RTG_GetPrevHop
                                                   RTG_UpdateRtDiscEntry
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_GetRtDiscEntry      00014805 
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000010 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001485C - 000148C9 (0x6e bytes), align: 0
  Segment part 93.            Intra module refs:   RTG_AddRtgEntry
                                                   RTG_CheckRtStatus
                                                   RTG_GetNextHop
                                                   RTG_RemoveRtgEntry
                                                   RTG_RouteMaintanence
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_GetRtgEntry         0001485C 
               calls direct, is recursive
               stack 1 = 00000002 ( 00000001 )
               stack 2 = 0000000E ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000148CA - 000148CE (0x5 bytes), align: 0
  Segment part 94.            Intra module refs:   RTG_GetNextHop
                                                   RTG_GetRtgEntry
                                                   RTG_ProcessRErr
                                                   RTG_ProcessRtDiscBits
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000148CF - 000148DA (0xc bytes), align: 0
  Segment part 95.            Intra module refs:   RTG_BcastAdd
                                                   RTG_BcastChk
                                                   RTG_DataReq
                                                   RTG_DivideCskip
                                                   RTG_GetAncestors
                                                   RTG_GetPrevHop
                                                   RTG_GetRtgEntry
                                                   RTG_MultiplyCskip
                                                   RTG_ProcessRreq
                                                   RTG_SendRrep
                                                   RTG_TimerEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000148DB - 000148E5 (0xb bytes), align: 0
  Segment part 96.            Intra module refs:   Segment part 81
                                                   Segment part 95
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000148E6 - 000148EF (0xa bytes), align: 0
  Segment part 97.            Intra module refs:   RTG_AddRtgEntry
                                                   RTG_GetRtgEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000148F0 - 00014946 (0x57 bytes), align: 0
  Segment part 98.            Intra module refs:   NLME_RouteDiscoveryRequest
                                                   RTG_ProcessRtDiscBits
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_CheckRtStatus       000148F0 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000F ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014947 - 00014957 (0x11 bytes), align: 0
  Segment part 99.            Intra module refs:   RTG_CheckRtStatus
                                                   RTG_RouteMaintanence
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014958 - 0001498A (0x33 bytes), align: 0
  Segment part 100.           Intra module refs:   RTG_CalcAddress
                                                   RTG_DeAllocAddress
                                                   RTG_GetTreeRoute
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_MultiplyCskip       00014958 
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000012 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001498B - 000149B4 (0x2a bytes), align: 0
  Segment part 101.           Intra module refs:   RTG_DeAllocAddress
                                                   RTG_GetTreeRoute
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_DivideCskip         0001498B 
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000012 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000149B5 - 00014A9D (0xe9 bytes), align: 0
  Segment part 103.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_FillCSkipTable      000149B5        nwk_globals_init (nwk_globals)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000002 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014A9E - 00014AA6 (0x9 bytes), align: 0
  Segment part 104.           Intra module refs:   RTG_CheckRtStatus
                                                   RTG_DataReq
                                                   RTG_FillCSkipTable
                                                   RTG_GetLinkCost
                                                   RTG_TimerEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014AA7 - 00014B24 (0x7e bytes), align: 0
  Segment part 105.           Intra module refs:   NLME_RouteDiscoveryRequest
                                                   RTG_AddRtgEntry
                                                   RTG_CheckRtStatus
                                                   RTG_GetNextHop
                                                   RTG_ProcessRreq
                                                   RTG_RemoveRtgEntry
                                                   RTG_RouteMaintanence
                                                   RTG_SendRErr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_GetRoutingAddress   00014AA7 
               calls direct
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000012 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014B25 - 00014C6D (0x149 bytes), align: 0
  Segment part 107.           Intra module refs:   RTG_GetRoutingAddress
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_GetAncestors        00014B25 
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000E ( 00000018 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014C6E - 00014C78 (0xb bytes), align: 0
  Segment part 108.           Intra module refs:   RTG_GetAncestors
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014C79 - 00014C81 (0x9 bytes), align: 0
  Segment part 109.           Intra module refs:   RTG_GetAncestors
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014C82 - 00014C85 (0x4 bytes), align: 0
  Segment part 110.           Intra module refs:   RTG_GetAncestors
                                                   RTG_ProcessRreq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014C86 - 00014C8E (0x9 bytes), align: 0
  Segment part 111.           Intra module refs:   Segment part 110
                                                   Segment part 84
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014C8F - 00014CC8 (0x3a bytes), align: 0
  Segment part 112.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_ProcessRtDiscBits   00014C8F        NLDE_DataReqSend (nwk_util)
                                                   nwk_data_ind_processing (nwk)
               calls direct, is recursive
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014CC9 - 00014D65 (0x9d bytes), align: 0
  Segment part 113.           Intra module refs:   RTG_TimerEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_IndirectTimeout     00014CC9 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000C ( 0000000A )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ssp

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E3C5 - 0000E3C7 (0x3 bytes), align: 0
  Segment part 10.            Intra module refs:   SSP_NwkSecurity
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SSP_NwkSecurityHook     0000E3C5 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3C8 - 0000E3CA (0x3 bytes), align: 0
  Segment part 11.            Intra module refs:   SSP_GetMicLen
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SSP_GetMicLenHook       0000E3C8 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A63E - 0003A645 (0x8 bytes), align: 0
  Segment part 20.            Intra module refs:   SSP_NwkSecurity
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A646 - 0003A64D (0x8 bytes), align: 0
  Segment part 32.            Intra module refs:   SSP_NwkSecurity
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A64E - 0003A67D (0x30 bytes), align: 0
  Segment part 66.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SSP_NwkSecurity         0003A64E        NLDE_BuildMsg (nwk_util)
                                                   NLDE_ParseMsg2 (nwk_util)
                                                   nwk_data_ind_processing (nwk)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A67E - 0003A69B (0x1e bytes), align: 0
  Segment part 67.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SSP_GetMicLen           0003A67E        Segment part 40 (nwk_util)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000024 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A69C - 0003A6A9 (0xe bytes), align: 0
  Segment part 68.            Intra module refs:   SSP_GetMicLen
                                                   SSP_NwkSecurity

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Libraries\TI2430DB\bin\Security.lib
  LIBRARY MODULE, NAME : hal_aes

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000B3 - 000000B3 (0x1 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ENCCS                   000000B3 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A6AA - 0003A6ED (0x44 bytes), align: 0
  Segment part 14.            Intra module refs:   HalAesInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aesDmaInit              0003A6AA 
               stack 1 = 00000002 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A6EE - 0003A6F7 (0xa bytes), align: 0
  Segment part 15.            Intra module refs:   HalAesInit
                                                   aesDmaInit
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A6F8 - 0003A703 (0xc bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAesInit              0003A6F8        HalDriverInit (hal_drivers)
               calls direct
               stack 1 = 00000000 ( 00000002 )

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Libraries\TIMAC\bin\TIMAC-CC2430.lib
  LIBRARY MODULE, NAME : mac_coord

  SEGMENTS IN THE MODULE
  ======================
CODE_C
  Relative segment, address: CODE 00001799 - 0000179E (0x6 bytes), align: 0
  Segment part 7.             Intra module refs:   MAC_InitCoord
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 0000179F - 000017B0 (0x12 bytes), align: 0
  Segment part 8.             Intra module refs:   MAC_InitCoord
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000017B1 - 000017BC (0xc bytes), align: 0
  Segment part 9.             Intra module refs:   MAC_InitCoord
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3CB - 0000E3D7 (0xd bytes), align: 0
  Segment part 10.            Intra module refs:   Segment part 68
                                                   macCoordReset
                                                   macIndirectExpire
                                                   macIndirectTxFrame
                                                   macRxBeaconReq
                                                   macStartBegin
                                                   macStartComplete
                                                   macStartContinue
                                                   macStartSetParams
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCoord                0000E3CB 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A8F1 - 0001A929 (0x39 bytes), align: 0
  Segment part 13.            Intra module refs:   MAC_InitCoord
           LOCAL                   ADDRESS         
           =====                   =======         
           macCoordReset           0001A8F1 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A92A - 0001A938 (0xf bytes), align: 0
  Segment part 14.            Intra module refs:   MAC_InitCoord
                                                   MAC_MlmeAssociateRsp
                                                   MAC_MlmeOrphanRsp
                                                   MAC_MlmeStartReq
                                                   macApiAssociateRsp
                                                   macCoordReset
                                                   macRxPanConflict
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A939 - 0001A9F1 (0xb9 bytes), align: 0
  Segment part 15.            Intra module refs:   macApiAssociateRsp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBuildAssociateRsp    0001A939 
               calls direct
               stack 1 = 00000002 ( 00000001 )
               stack 2 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A9F2 - 0001A9F9 (0x8 bytes), align: 0
  Segment part 16.            Intra module refs:   macBuildAssociateRsp
                                                   macBuildPendAddr
                                                   macRxAssociateReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A9FA - 0001AA10 (0x17 bytes), align: 0
  Segment part 17.            Intra module refs:   macBuildAssociateRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AA11 - 0001AAD9 (0xc9 bytes), align: 0
  Segment part 18.            Intra module refs:   macApiOrphanRsp
                                                   macApiStartReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBuildRealign         0001AA11 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000019 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AADA - 0001AADC (0x3 bytes), align: 0
  Segment part 19.            Intra module refs:   macApiStartReq
                                                   macBuildAssociateRsp
                                                   macBuildRealign
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AADD - 0001AAE4 (0x8 bytes), align: 0
  Segment part 20.            Intra module refs:   Segment part 19
                                                   Segment part 22
                                                   Segment part 71
                                                   macBuildBeacon
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AAE5 - 0001AAE8 (0x4 bytes), align: 0
  Segment part 21.            Intra module refs:   macBuildRealign
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AAE9 - 0001AAEE (0x6 bytes), align: 0
  Segment part 22.            Intra module refs:   macBuildAssociateRsp
                                                   macBuildRealign
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AAEF - 0001AAF6 (0x8 bytes), align: 0
  Segment part 23.            Intra module refs:   macBuildRealign
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AAF7 - 0001AAFA (0x4 bytes), align: 0
  Segment part 24.            Intra module refs:   macBuildAssociateRsp
                                                   macBuildRealign
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AAFB - 0001AB04 (0xa bytes), align: 0
  Segment part 25.            Intra module refs:   Segment part 17
                                                   Segment part 24
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AB05 - 0001AB0D (0x9 bytes), align: 0
  Segment part 26.            Intra module refs:   macBuildRealign
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AB0E - 0001AB17 (0xa bytes), align: 0
  Segment part 27.            Intra module refs:   Segment part 21
                                                   Segment part 23
                                                   Segment part 26
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AB18 - 0001AC01 (0xea bytes), align: 0
  Segment part 28.            Intra module refs:   macBuildBeacon
           LOCAL                   ADDRESS         
           =====                   =======         
           macBuildPendAddr        0001AB18 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000001B ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AC02 - 0001AC11 (0x10 bytes), align: 0
  Segment part 29.            Intra module refs:   macBuildPendAddr
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AC12 - 0001AC1C (0xb bytes), align: 0
  Segment part 30.            Intra module refs:   Segment part 16
                                                   Segment part 29
                                                   Segment part 42
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AC1D - 0001AC2D (0x11 bytes), align: 0
  Segment part 31.            Intra module refs:   macBuildPendAddr
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AC2E - 0001AC3A (0xd bytes), align: 0
  Segment part 32.            Intra module refs:   Segment part 31
                                                   macBuildPendAddr
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AC3B - 0001ADDA (0x1a0 bytes), align: 0
  Segment part 33.            Intra module refs:   macRxBeaconReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBuildBeacon          0001AC3B 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 0000000A ( 0000001E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001ADDB - 0001ADDF (0x5 bytes), align: 0
  Segment part 34.            Intra module refs:   macBuildBeacon
                                                   macBuildPendAddr
                                                   macBuildRealign
                                                   macIndirectSend
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001ADE0 - 0001ADE5 (0x6 bytes), align: 0
  Segment part 35.            Intra module refs:   macBuildAssociateRsp
                                                   macBuildBeacon
                                                   macBuildRealign
                                                   macIndirectTxFrame
                                                   macRxDataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001ADE6 - 0001ADF3 (0xe bytes), align: 0
  Segment part 36.            Intra module refs:   macBuildBeacon
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001ADF4 - 0001AE67 (0x74 bytes), align: 0
  Segment part 37.            Intra module refs:   macApiPurgeReq
                                                   macIndirectExpire
                                                   macIndirectRequeueFrame
                                                   macIndirectTxFrame
           LOCAL                   ADDRESS         
           =====                   =======         
           macIndirectMark         0001ADF4 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000010 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AE68 - 0001AE6C (0x5 bytes), align: 0
  Segment part 38.            Intra module refs:   macApiPurgeReq
                                                   macIndirectExpire
                                                   macIndirectMark
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AE6D - 0001AE73 (0x7 bytes), align: 0
  Segment part 39.            Intra module refs:   macApiPurgeReq
                                                   macBuildPendAddr
                                                   macIndirectMark
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AE74 - 0001AF1D (0xaa bytes), align: 0
  Segment part 40.            Intra module refs:   macRxDataReq
           LOCAL                   ADDRESS         
           =====                   =======         
           macIndirectSend         0001AE74 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000F ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AF1E - 0001AF25 (0x8 bytes), align: 0
  Segment part 41.            Intra module refs:   macBuildRealign
                                                   macIndirectExpire
                                                   macIndirectSend
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AF26 - 0001AF2D (0x8 bytes), align: 0
  Segment part 42.            Intra module refs:   macBuildBeacon
                                                   macIndirectSend
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AF2E - 0001B04E (0x121 bytes), align: 0
  Segment part 43.            Intra module refs:   Segment part 8
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macIndirectExpire       0001AF2E 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B04F - 0001B059 (0xb bytes), align: 0
  Segment part 44.            Intra module refs:   macApiPurgeReq
                                                   macBuildPendAddr
                                                   macIndirectExpire
                                                   macIndirectMark
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B05A - 0001B065 (0xc bytes), align: 0
  Segment part 45.            Intra module refs:   macApiPurgeReq
                                                   macIndirectExpire
                                                   macIndirectMark
                                                   macIndirectSend
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B066 - 0001B0E9 (0x84 bytes), align: 0
  Segment part 46.            Intra module refs:   MAC_InitCoord
           LOCAL                   ADDRESS         
           =====                   =======         
           macIndirectTxFrame      0001B066 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B0EA - 0001B0F3 (0xa bytes), align: 0
  Segment part 47.            Intra module refs:   Segment part 65
                                                   macApiOrphanRsp
                                                   macBuildAssociateRsp
                                                   macIndirectRequeueFrame
                                                   macIndirectTxFrame
                                                   macRxAssociateReq
                                                   macRxDataReq
                                                   macRxOrphan
                                                   macStartSetParams
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B0F4 - 0001B141 (0x4e bytes), align: 0
  Segment part 48.            Intra module refs:   MAC_InitCoord
           LOCAL                   ADDRESS         
           =====                   =======         
           macIndirectRequeueFrame
                                   0001B0F4 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B142 - 0001B1B8 (0x77 bytes), align: 0
  Segment part 49.            Intra module refs:   Segment part 8
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxAssociateReq       0001B142 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000001F )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B1B9 - 0001B1C4 (0xc bytes), align: 0
  Segment part 50.            Intra module refs:   Segment part 8
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiAssociateRsp      0001B1B9 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B1C5 - 0001B21C (0x58 bytes), align: 0
  Segment part 51.            Intra module refs:   Segment part 9
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxOrphan             0001B1C5 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000001E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B21D - 0001B228 (0xc bytes), align: 0
  Segment part 52.            Intra module refs:   macRxAssociateReq
                                                   macRxOrphan
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B229 - 0001B27A (0x52 bytes), align: 0
  Segment part 53.            Intra module refs:   Segment part 9
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiOrphanRsp         0001B229 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000016 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B27B - 0001B284 (0xa bytes), align: 0
  Segment part 54.            Intra module refs:   macApiOrphanRsp
                                                   macBuildPendAddr
                                                   macIndirectMark
                                                   macIndirectRequeueFrame
                                                   macIndirectSend
                                                   macRxDataReq
                                                   macStartSetParams
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B285 - 0001B29C (0x18 bytes), align: 0
  Segment part 55.            Intra module refs:   macApiOrphanRsp
                                                   macBuildAssociateRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B29D - 0001B33D (0xa1 bytes), align: 0
  Segment part 56.            Intra module refs:   Segment part 9
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiPurgeReq          0001B29D 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B33E - 0001B346 (0x9 bytes), align: 0
  Segment part 57.            Intra module refs:   macApiPurgeReq
                                                   macIndirectSend
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B347 - 0001B3DE (0x98 bytes), align: 0
  Segment part 58.            Intra module refs:   Segment part 7
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiStartReq          0001B347 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000019 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B3DF - 0001B4D8 (0xfa bytes), align: 0
  Segment part 59.            Intra module refs:   macApiStartReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macStartBegin           0001B3DF 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000015 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B4D9 - 0001B4DE (0x6 bytes), align: 0
  Segment part 60.            Intra module refs:   macBuildRealign
                                                   macIndirectMark
                                                   macStartBegin
                                                   macStartContinue
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B4DF - 0001B55D (0x7f bytes), align: 0
  Segment part 61.            Intra module refs:   macStartContinue
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macStartSetParams       0001B4DF 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B55E - 0001B564 (0x7 bytes), align: 0
  Segment part 62.            Intra module refs:   macStartSetParams
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B565 - 0001B570 (0xc bytes), align: 0
  Segment part 63.            Intra module refs:   Segment part 62
                                                   macApiStartReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B571 - 0001B599 (0x29 bytes), align: 0
  Segment part 64.            Intra module refs:   Segment part 7
                                                   macApiStartReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macStartContinue        0001B571 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000015 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B59A - 0001B59F (0x6 bytes), align: 0
  Segment part 65.            Intra module refs:   macStartComplete
                                                   macStartContinue
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B5A0 - 0001B5A9 (0xa bytes), align: 0
  Segment part 66.            Intra module refs:   macApiStartReq
                                                   macIndirectExpire
                                                   macStartComplete
                                                   macStartContinue
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B5AA - 0001B5D5 (0x2c bytes), align: 0
  Segment part 67.            Intra module refs:   Segment part 8
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macStartComplete        0001B5AA 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B5D6 - 0001B5E3 (0xe bytes), align: 0
  Segment part 68.            Intra module refs:   macCoordReset
                                                   macStartComplete
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B5E4 - 0001B61E (0x3b bytes), align: 0
  Segment part 69.            Intra module refs:   Segment part 8
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxBeaconReq          0001B5E4 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B61F - 0001B6E5 (0xc7 bytes), align: 0
  Segment part 70.            Intra module refs:   Segment part 8
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxDataReq            0001B61F 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B6E6 - 0001B6EE (0x9 bytes), align: 0
  Segment part 71.            Intra module refs:   macApiOrphanRsp
                                                   macBuildAssociateRsp
                                                   macIndirectTxFrame
                                                   macRxDataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B6EF - 0001B6F6 (0x8 bytes), align: 0
  Segment part 72.            Intra module refs:   macRxDataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B6F7 - 0001B70B (0x15 bytes), align: 0
  Segment part 73.            Intra module refs:   Segment part 9
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxPanConflict        0001B6F7 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B70C - 0001B76E (0x63 bytes), align: 0
  Segment part 74.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_InitCoord           0001B70C        ZMacInit (zmac)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B76F - 0001B77A (0xc bytes), align: 0
  Segment part 75.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_MlmeAssociateRsp    0001B76F        ZMacAssociateRsp (zmac)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B77B - 0001B789 (0xf bytes), align: 0
  Segment part 76.            Intra module refs:   MAC_MlmeAssociateRsp
                                                   MAC_MlmeOrphanRsp
                                                   macApiPurgeReq
                                                   macStartBegin
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B78A - 0001B792 (0x9 bytes), align: 0
  Segment part 77.            Intra module refs:   Segment part 45
                                                   Segment part 54
                                                   Segment part 57
                                                   Segment part 72
                                                   Segment part 76
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B793 - 0001B79E (0xc bytes), align: 0
  Segment part 78.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_MlmeOrphanRsp       0001B793        ZMacOrphanRsp (zmac)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B79F - 0001B7AC (0xe bytes), align: 0
  Segment part 80.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_MlmeStartReq        0001B79F        ZMacStartReq (zmac)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F73A - 0000F73D (0x4 bytes), align: 0
  Segment part 11.            Intra module refs:   macIndirectExpire
                                                   macIndirectTxFrame
                                                   macScanStartTimer (mac_scan)
                                                   macStartResponseTimer (mac_device)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_30           0000F73A 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001658 - 0000165B (0x4 bytes), align: 0
  Segment part 12.            Intra module refs:   __Constant_30

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : mac_data

  SEGMENTS IN THE MODULE
  ======================
CODE_C
  Relative segment, address: CODE 000017BD - 000017C4 (0x8 bytes), align: 0
  Segment part 7.             Intra module refs:   MAC_McpsDataAlloc
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000017C5 - 000017CF (0xb bytes), align: 0
  Segment part 8.             Intra module refs:   macAllocTxBuffer
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000017D0 - 000017DA (0xb bytes), align: 0
  Segment part 9.             Intra module refs:   macDataTxComplete
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxFrameSuccess       000017D0 
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000017DB - 000017E5 (0xb bytes), align: 0
  Segment part 10.            Intra module refs:   macAllocTxBuffer
                                                   macDataTxComplete
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxFrameFailed        000017DB 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3D8 - 0000E3E0 (0x9 bytes), align: 0
  Segment part 11.            Intra module refs:   MAC_McpsDataReq
                                                   macDataReset
                                                   macDataRxMemAlloc
                                                   macDataTxEnqueue
                                                   macDataTxSend
                                                   macRxCheckPendingCallback
                                                   macRxCompleteCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macData                 0000E3D8        macApiPurgeReq (mac_coord)
                                                   macBuildBeacon (mac_coord)
                                                   macBuildPendAddr (mac_coord)
                                                   macEventLoop (mac_main)
                                                   macIndirectExpire (mac_coord)
                                                   macIndirectMark (mac_coord)
                                                   macIndirectRequeueFrame (mac_coord)
                                                   macIndirectSend (mac_coord)
                                                   macIndirectTxFrame (mac_coord)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3E1 - 0000E3E2 (0x2 bytes), align: 0
  Segment part 12.            Intra module refs:   Segment part 51
                                                   Segment part 53
                                                   Segment part 55
                                                   macDataTxSend
                                                   macRxCheckPendingCallback
                                                   macTxCompleteCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pMacDataTx              0000E3E1        ?Subroutine0 (mac_tx)
                                                   macTxFrame (mac_tx)
                                                   macTxTimestampCallback (mac_tx)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F73E - 0000F740 (0x3 bytes), align: 0
  Segment part 13.            Intra module refs:   macDataTxEnqueue
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataTxIndirect       0000F73E        MAC_InitCoord (mac_coord)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F741 - 0000F743 (0x3 bytes), align: 0
  Segment part 15.            Intra module refs:   macTxCompleteCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataRequeueIndirect
                                   0000F741        MAC_InitCoord (mac_coord)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F744 - 0000F746 (0x3 bytes), align: 0
  Segment part 17.            Intra module refs:   macRxCompleteCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataRxBeaconCritical
                                   0000F744 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F747 - 0000F749 (0x3 bytes), align: 0
  Segment part 19.            Intra module refs:   macDataTxComplete
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataTxBeaconComplete
                                   0000F747 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F74A - 0000F74C (0x3 bytes), align: 0
  Segment part 21.            Intra module refs:   macDataTxEnqueue
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataSetSched         0000F74A 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F74D - 0000F74F (0x3 bytes), align: 0
  Segment part 23.            Intra module refs:   macDataTxSend
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataCheckSched       0000F74D        macIndirectTxFrame (mac_coord)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3E3 - 0000E3E5 (0x3 bytes), align: 0
  Segment part 25.            Intra module refs:   macDataTxTimeAvailable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataCheckTxTime      0000E3E3 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F750 - 0000F752 (0x3 bytes), align: 0
  Segment part 26.            Intra module refs:   macTxCompleteCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataBeaconRequeue    0000F750 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028000 - 00028059 (0x5a bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataReset            00028000        MAC_MlmeResetReq (mac_mgmt)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002805A - 000280BB (0x62 bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macAllocTxBuffer        0002805A        macApiStartReq (mac_coord)
                                                   macBuildCommonReq (mac_mgmt)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000280BC - 000280C0 (0x5 bytes), align: 0
  Segment part 30.            Intra module refs:   MAC_McpsDataAlloc
                                                   macAllocTxBuffer
                                                   macDataTxSend
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000280C1 - 000280CC (0xc bytes), align: 0
  Segment part 31.            Intra module refs:   MAC_McpsDataReq
                                                   macAllocTxBuffer
                                                   macDataTxComplete
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000280CD - 0002811D (0x51 bytes), align: 0
  Segment part 32.            Intra module refs:   macDataTxSend
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macFrameDuration        000280CD 
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 0000000C ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002811E - 0002815A (0x3d bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxCheckPendingCallback
                                   0002811E        rxStartIsr (mac_rx)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002815B - 00028164 (0xa bytes), align: 0
  Segment part 34.            Intra module refs:   MAC_McpsDataReq
                                                   macApiDataReq
                                                   macCheckSched
                                                   macDataReset
                                                   macDataRxInd
                                                   macDataRxMemAlloc
                                                   macDataRxMemFree
                                                   macDataSend
                                                   macRxCheckPendingCallback
                                                   macSetSched
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028165 - 00028189 (0x25 bytes), align: 0
  Segment part 35.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataRxMemAlloc       00028165        rxStartIsr (mac_rx)
               calls direct
               stack 1 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002818A - 00028194 (0xb bytes), align: 0
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataRxMemFree        0002818A        rxFcsIsr (mac_rx)
                                                   rxHaltCleanupFinalStep (mac_rx)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028195 - 000282B3 (0x11f bytes), align: 0
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxCompleteCallback   00028195        rxFcsIsr (mac_rx)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000282B4 - 000282C0 (0xd bytes), align: 0
  Segment part 38.            Intra module refs:   macRxCompleteCallback
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000282C1 - 000282E0 (0x20 bytes), align: 0
  Segment part 39.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataTxTimeAvailable
                                   000282C1        txCsmaGo (mac_tx)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000282E1 - 000282E5 (0x5 bytes), align: 0
  Segment part 40.            Intra module refs:   macBuildDataFrame
                                                   macDataTxComplete
                                                   macDataTxTimeAvailable
                                                   macTxCompleteCallback
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000282E6 - 00028369 (0x84 bytes), align: 0
  Segment part 41.            Intra module refs:   macApiDataReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBuildDataFrame       000282E6 
               calls direct
               stack 1 = 00000002 ( 00000001 )
               stack 2 = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002836A - 00028371 (0x8 bytes), align: 0
  Segment part 42.            Intra module refs:   Segment part 46
                                                   macBuildDataFrame
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028372 - 00028389 (0x18 bytes), align: 0
  Segment part 43.            Intra module refs:   Segment part 24
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCheckSched           00028372 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002838A - 00028399 (0x10 bytes), align: 0
  Segment part 44.            Intra module refs:   Segment part 22
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSetSched             0002838A 
               is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002839A - 000283A3 (0xa bytes), align: 0
  Segment part 45.            Intra module refs:   macApiDataReq
                                                   macBuildDataFrame
                                                   macDataTxComplete
                                                   macDataTxSend
                                                   macSetSched
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000283A4 - 000283A8 (0x5 bytes), align: 0
  Segment part 46.            Intra module refs:   Segment part 45
                                                   Segment part 48
                                                   Segment part 49
                                                   Segment part 59
                                                   Segment part 66
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000283A9 - 00028429 (0x81 bytes), align: 0
  Segment part 47.            Intra module refs:   macDataTxEnqueue
                                                   macTxCompleteCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataTxComplete       000283A9        macIndirectExpire (mac_coord)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000B ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002842A - 00028435 (0xc bytes), align: 0
  Segment part 48.            Intra module refs:   macDataTxComplete
                                                   macDataTxEnqueue
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028436 - 00028441 (0xc bytes), align: 0
  Segment part 49.            Intra module refs:   macDataTxComplete
                                                   macDataTxEnqueue
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028442 - 0002850E (0xcd bytes), align: 0
  Segment part 50.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxCompleteCallback   00028442        txComplete (mac_tx)
               calls direct, is recursive
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002850F - 00028518 (0xa bytes), align: 0
  Segment part 51.            Intra module refs:   macTxCompleteCallback
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028519 - 00028524 (0xc bytes), align: 0
  Segment part 52.            Intra module refs:   macTxCompleteCallback
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028525 - 00028531 (0xd bytes), align: 0
  Segment part 53.            Intra module refs:   macTxCompleteCallback
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028532 - 00028536 (0x5 bytes), align: 0
  Segment part 54.            Intra module refs:   macRxCheckPendingCallback
                                                   macTxCompleteCallback
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028537 - 00028541 (0xb bytes), align: 0
  Segment part 55.            Intra module refs:   macTxCompleteCallback
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028542 - 0002854C (0xb bytes), align: 0
  Segment part 56.            Intra module refs:   Segment part 54
                                                   Segment part 55
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002854D - 00028558 (0xc bytes), align: 0
  Segment part 57.            Intra module refs:   macDataTxComplete
                                                   macDataTxEnqueue
                                                   macTxCompleteCallback
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028559 - 00028678 (0x120 bytes), align: 0
  Segment part 58.            Intra module refs:   macDataSend
                                                   macDataTxEnqueue
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataTxSend           00028559        macIndirectSend (mac_coord)
               calls direct
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 0000000B ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028679 - 00028680 (0x8 bytes), align: 0
  Segment part 59.            Intra module refs:   macBuildDataFrame
                                                   macDataTxSend
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028681 - 0002868C (0xc bytes), align: 0
  Segment part 60.            Intra module refs:   macDataTxSend
                                                   macDataTxTimeAvailable
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002868D - 0002871B (0x8f bytes), align: 0
  Segment part 61.            Intra module refs:   macBuildDataFrame
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataTxEnqueue        0002868D        macApiAssociateReq (mac_device)
                                                   macBuildAssociateRsp (mac_coord)
                                                   macBuildCommonReq (mac_mgmt)
                                                   macBuildDisassociateReq (mac_mgmt)
                                                   macBuildRealign (mac_coord)
                                                   macRxBeaconReq (mac_coord)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000009 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002871C - 00028723 (0x8 bytes), align: 0
  Segment part 62.            Intra module refs:   macDataTxEnqueue
                                                   macRxCompleteCallback
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028724 - 00028733 (0x10 bytes), align: 0
  Segment part 63.            Intra module refs:   macDataTxEnqueue
                                                   macRxCompleteCallback
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028734 - 0002873F (0xc bytes), align: 0
  Segment part 64.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataSend             00028734        macMgmtAction1 (mac_mgmt)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028740 - 000287A4 (0x65 bytes), align: 0
  Segment part 65.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiDataReq           00028740        macMgmtAction1 (mac_mgmt)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000287A5 - 000287B0 (0xc bytes), align: 0
  Segment part 66.            Intra module refs:   MAC_McpsDataReq
                                                   macApiDataReq
                                                   macDataTxEnqueue
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000287B1 - 000287C3 (0x13 bytes), align: 0
  Segment part 67.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataRxInd            000287B1        Segment part 28 (mac_device)
                                                   macMgmtAction1 (mac_mgmt)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000287C4 - 00028805 (0x42 bytes), align: 0
  Segment part 68.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_McpsDataReq         000287C4        ZMacDataReq (zmac)
                                                   ZMacSendNoData (zmac)
               calls direct
               stack 1 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028806 - 00028848 (0x43 bytes), align: 0
  Segment part 69.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_McpsDataAlloc       00028806        ZMacDataReq (zmac)
                                                   ZMacSendNoData (zmac)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028849 - 0002885E (0x16 bytes), align: 0
  Segment part 70.            Intra module refs:   MAC_McpsDataAlloc
                                                   macAllocTxBuffer
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000165C - 0000165E (0x3 bytes), align: 0
  Segment part 14.            Intra module refs:   macDataTxIndirect
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000165F - 00001661 (0x3 bytes), align: 0
  Segment part 16.            Intra module refs:   macDataRequeueIndirect
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001662 - 00001664 (0x3 bytes), align: 0
  Segment part 18.            Intra module refs:   macDataRxBeaconCritical
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001665 - 00001667 (0x3 bytes), align: 0
  Segment part 20.            Intra module refs:   macDataTxBeaconComplete
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001668 - 0000166A (0x3 bytes), align: 0
  Segment part 22.            Intra module refs:   macDataSetSched
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000166B - 0000166D (0x3 bytes), align: 0
  Segment part 24.            Intra module refs:   macDataCheckSched
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000166E - 00001670 (0x3 bytes), align: 0
  Segment part 27.            Intra module refs:   macDataBeaconRequeue

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : mac_device

  SEGMENTS IN THE MODULE
  ======================
CODE_C
  Relative segment, address: CODE 000017E6 - 0000180F (0x2a bytes), align: 0
  Segment part 6.             Intra module refs:   MAC_InitDevice
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00001810 - 0000181E (0xf bytes), align: 0
  Segment part 7.             Intra module refs:   MAC_InitDevice
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3E6 - 0000E3FB (0x16 bytes), align: 0
  Segment part 8.             Intra module refs:   macApiAssociateReq
                                                   macApiPollReq
                                                   macAssocDataReq
                                                   macAssocDataReqComplete
                                                   macAssocDataRxInd
                                                   macAssocFailed
                                                   macAssocFrameResponseTimeout
                                                   macDeviceReset
                                                   macPollDataReqComplete
                                                   macPollDataRxInd
                                                   macPollFrameResponseTimeout
                                                   macPollRxAssocRsp
                                                   macPollRxDisassoc
                                                   macRxAssocRsp
                                                   macStartFrameResponseTimer
                                                   macStartResponseTimer
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDevice               0000E3E6 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A875 - 0002A89C (0x28 bytes), align: 0
  Segment part 11.            Intra module refs:   MAC_InitDevice
           LOCAL                   ADDRESS         
           =====                   =======         
           macDeviceReset          0002A875 
               is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A89D - 0002A8A8 (0xc bytes), align: 0
  Segment part 12.            Intra module refs:   macDeviceReset
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A8A9 - 0002A8DB (0x33 bytes), align: 0
  Segment part 13.            Intra module refs:   macAssocFailed
                                                   macRxAssocRsp
           LOCAL                   ADDRESS         
           =====                   =======         
           macAssociateCnf         0002A8A9 
               calls direct
               stack 1 = 00000000 ( 00000003 )
               stack 2 = 0000000B ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A8DC - 0002A8FE (0x23 bytes), align: 0
  Segment part 14.            Intra module refs:   Segment part 32
                                                   macAssocFrameResponseTimeout
                                                   macPollFrameResponseTimeout
                                                   macRxAssocRsp
           LOCAL                   ADDRESS         
           =====                   =======         
           macPollCnf              0002A8DC 
               calls direct
               stack 1 = 00000000 ( 00000003 )
               stack 2 = 0000000B ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A8FF - 0002A90F (0x11 bytes), align: 0
  Segment part 15.            Intra module refs:   macAssociateCnf
                                                   macPollCnf
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A910 - 0002A94D (0x3e bytes), align: 0
  Segment part 16.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macStartResponseTimer   0002A910 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A94E - 0002A9BB (0x6e bytes), align: 0
  Segment part 17.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macStartFrameResponseTimer
                                   0002A94E 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000042 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A9BC - 0002AAE4 (0x129 bytes), align: 0
  Segment part 18.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiAssociateReq      0002A9BC 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002AAE5 - 0002AAF0 (0xc bytes), align: 0
  Segment part 19.            Intra module refs:   MAC_MlmeAssociateReq
                                                   macApiAssociateReq
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002AAF1 - 0002AB49 (0x59 bytes), align: 0
  Segment part 20.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macAssocDataReq         0002AAF1 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002AB4A - 0002AB8A (0x41 bytes), align: 0
  Segment part 21.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macAssocDataReqComplete
                                   0002AB4A 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002AB8B - 0002AC23 (0x99 bytes), align: 0
  Segment part 22.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxAssocRsp           0002AB8B 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002AC24 - 0002AC2B (0x8 bytes), align: 0
  Segment part 23.            Intra module refs:   macApiPollReq
                                                   macRxAssocRsp
                                                   macRxCoordRealign
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002AC2C - 0002AC5A (0x2f bytes), align: 0
  Segment part 24.            Intra module refs:   Segment part 6
                                                   macAssocRxDisassoc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macAssocFrameResponseTimeout
                                   0002AC2C 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002AC5B - 0002AC9E (0x44 bytes), align: 0
  Segment part 25.            Intra module refs:   Segment part 6
                                                   macAssocFrameResponseTimeout
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macAssocFailed          0002AC5B 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002AC9F - 0002ACAF (0x11 bytes), align: 0
  Segment part 26.            Intra module refs:   Segment part 7
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macAssocRxDisassoc      0002AC9F 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002ACB0 - 0002AD03 (0x54 bytes), align: 0
  Segment part 27.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macAssocDataRxInd       0002ACB0 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002AD04 - 0002AD0F (0xc bytes), align: 0
  Segment part 28.            Intra module refs:   macAssocDataRxInd
                                                   macPollDataRxInd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002AD10 - 0002AD1A (0xb bytes), align: 0
  Segment part 29.            Intra module refs:   macAssocDataReqComplete
                                                   macAssocDataRxInd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002AD1B - 0002AD6C (0x52 bytes), align: 0
  Segment part 30.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiPollReq           0002AD1B 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002AD6D - 0002ADA4 (0x38 bytes), align: 0
  Segment part 31.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPollDataReqComplete
                                   0002AD6D 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002ADA5 - 0002ADB4 (0x10 bytes), align: 0
  Segment part 32.            Intra module refs:   macAssocDataReqComplete
                                                   macAssocDataRxInd
                                                   macPollDataReqComplete
                                                   macPollDataRxInd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002ADB5 - 0002AE04 (0x50 bytes), align: 0
  Segment part 33.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPollDataRxInd        0002ADB5 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002AE05 - 0002AE18 (0x14 bytes), align: 0
  Segment part 34.            Intra module refs:   Segment part 23
                                                   Segment part 28
                                                   macApiAssociateReq
                                                   macAssocDataReqComplete
                                                   macAssocFailed
                                                   macAssocFrameResponseTimeout
                                                   macAssocRxDisassoc
                                                   macPollDataReqComplete
                                                   macPollFrameResponseTimeout
                                                   macPollRxAssocRsp
                                                   macPollRxDisassoc
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002AE19 - 0002AE52 (0x3a bytes), align: 0
  Segment part 35.            Intra module refs:   Segment part 6
                                                   macPollRxAssocRsp
                                                   macPollRxDisassoc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPollFrameResponseTimeout
                                   0002AE19 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002AE53 - 0002AE72 (0x20 bytes), align: 0
  Segment part 36.            Intra module refs:   Segment part 7
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPollRxDisassoc       0002AE53 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002AE73 - 0002AE93 (0x21 bytes), align: 0
  Segment part 37.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPollRxAssocRsp       0002AE73 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002AE94 - 0002AF44 (0xb1 bytes), align: 0
  Segment part 38.            Intra module refs:   Segment part 7
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxCoordRealign       0002AE94 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000001A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002AF45 - 0002AF59 (0x15 bytes), align: 0
  Segment part 39.            Intra module refs:   macRxAssocRsp
                                                   macRxCoordRealign
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002AF5A - 0002AF5E (0x5 bytes), align: 0
  Segment part 40.            Intra module refs:   macApiAssociateReq
                                                   macRxCoordRealign
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002AF5F - 0002AF70 (0x12 bytes), align: 0
  Segment part 41.            Intra module refs:   Segment part 40
                                                   macRxAssocRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002AF71 - 0002AF7D (0xd bytes), align: 0
  Segment part 42.            Intra module refs:   macRxAssocRsp
                                                   macRxCoordRealign
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002AF7E - 0002AF88 (0xb bytes), align: 0
  Segment part 43.            Intra module refs:   Segment part 42
                                                   macRxCoordRealign
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002AF89 - 0002AF91 (0x9 bytes), align: 0
  Segment part 44.            Intra module refs:   Segment part 7
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPanConflictComplete
                                   0002AF89 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002AF92 - 0002AF96 (0x5 bytes), align: 0
  Segment part 45.            Intra module refs:   MAC_MlmeAssociateReq
                                                   macPanConflictComplete
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002AF97 - 0002AFA0 (0xa bytes), align: 0
  Segment part 46.            Intra module refs:   MAC_InitDevice
                                                   Segment part 45
                                                   macAssocDataReq
                                                   macAssociateCnf
                                                   macDeviceReset
                                                   macPollCnf
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002AFA1 - 0002AFE6 (0x46 bytes), align: 0
  Segment part 47.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_InitDevice          0002AFA1        ZMacInit (zmac)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002AFE7 - 0002B001 (0x1b bytes), align: 0
  Segment part 48.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_MlmeAssociateReq    0002AFE7        ZMacAssociateReq (zmac)
               calls direct
               stack 1 = 00000000 ( 00000002 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : mac_main

  SEGMENTS IN THE MODULE
  ======================
CODE_C
  Relative segment, address: CODE 0000181F - 00001880 (0x62 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 18
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macIdleSt               0000181F 
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00001881 - 000018E2 (0x62 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macAssociatingSt        00001881        MAC_InitDevice (mac_device)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000018E3 - 00001944 (0x62 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPollingSt            000018E3        MAC_InitDevice (mac_device)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00001945 - 000019A6 (0x62 bytes), align: 0
  Segment part 10.            Intra module refs:   Segment part 18
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macScanningSt           00001945 
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000019A7 - 00001A08 (0x62 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macStartingSt           000019A7        MAC_InitCoord (mac_coord)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00001A09 - 00001A13 (0xb bytes), align: 0
  Segment part 12.            Intra module refs:   Segment part 37
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSendMsgBufSize       00001A09 
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00001A14 - 00001A1E (0xb bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 35
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSendMsgDataSize      00001A14 
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00001A1F - 00001A29 (0xb bytes), align: 0
  Segment part 14.            Intra module refs:   macCbackForEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCbackEventTbl        00001A1F 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3FC - 0000E3FC (0x1 bytes), align: 0
  Segment part 15.            Intra module refs:   macEventLoop
                                                   macMainReset
                                                   macSendDataMsg
                                                   macSendMsg
                                                   macSetEvent
                                                   macTaskInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTaskId               0000E3FC        Segment part 31 (mac_data)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3FD - 0000E401 (0x5 bytes), align: 0
  Segment part 16.            Intra module refs:   macEventLoop
                                                   macExecute
                                                   macMainReset
                                                   macStateIdle
                                                   macStateScanning
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMain                 0000E3FD        MAC_Init (mac_mgmt)
                                                   MAC_InitCoord (mac_coord)
                                                   MAC_InitDevice (mac_device)
                                                   Segment part 69 (mac_mgmt)
                                                   macApiDataReq (mac_data)
                                                   macApiPending (mac_mgmt)
                                                   macApiScanReq (mac_scan)
                                                   macRxCheckPendingCallback (mac_data)
                                                   macStartBegin (mac_coord)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F753 - 0000F75C (0xa bytes), align: 0
  Segment part 17.            Intra module refs:   macExecute
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macStateTbl             0000F753        MAC_InitCoord (mac_coord)
                                                   MAC_InitDevice (mac_device)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E402 - 0000E416 (0x15 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macReset                0000E402        MAC_InitCoord (mac_coord)
                                                   MAC_InitDevice (mac_device)
                                                   Segment part 68 (mac_mgmt)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F75D - 0000F76E (0x12 bytes), align: 0
  Segment part 20.            Intra module refs:   macExecute
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macActionSet            0000F75D        MAC_InitCoord (mac_coord)
                                                   MAC_InitDevice (mac_device)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DABA - 0002DB00 (0x47 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMainReset            0002DABA        MAC_MlmeResetReq (mac_mgmt)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DB01 - 0002DB05 (0x5 bytes), align: 0
  Segment part 23.            Intra module refs:   macExecute
                                                   macMainReset
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DB06 - 0002DB20 (0x1b bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSetEvent             0002DB06        Segment part 12 (mac_device)
                                                   macApiScanReq (mac_scan)
                                                   macCoordReset (mac_coord)
                                                   macIndirectRequeueFrame (mac_coord)
                                                   macRxCompleteCallback (mac_data)
                                                   macTxCompleteCallback (mac_data)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DB21 - 0002DBC8 (0xa8 bytes), align: 0
  Segment part 25.            Intra module refs:   Segment part 38
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCbackForEvent        0002DB21        MAC_McpsDataReq (mac_data)
                                                   Segment part 73 (mac_mgmt)
                                                   macApiDataReq (mac_data)
                                                   macApiPurgeReq (mac_coord)
                                                   macDataTxComplete (mac_data)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000012 ( 00000017 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DBC9 - 0002DBD0 (0x8 bytes), align: 0
  Segment part 26.            Intra module refs:   macCbackForEvent
                                                   macEventLoop
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DBD1 - 0002DBDB (0xb bytes), align: 0
  Segment part 27.            Intra module refs:   macCbackForEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DBDC - 0002DBEB (0x10 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macStateIdle            0002DBDC        macRxCompleteCallback (mac_data)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DBEC - 0002DBF2 (0x7 bytes), align: 0
  Segment part 29.            Intra module refs:   macStateIdle
                                                   macStateScanning
                                                   macTaskInit
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DBF3 - 0002DC06 (0x14 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macStateScanning        0002DBF3        macCheckSched (mac_data)
                                                   macRxCompleteCallback (mac_data)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DC07 - 0002DCA2 (0x9c bytes), align: 0
  Segment part 31.            Intra module refs:   Segment part 41
                                                   macEventLoop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macExecute              0002DC07        Segment part 29 (mac_device)
                                                   macApiAssociateReq (mac_device)
                                                   macApiDisassociateReq (mac_mgmt)
                                                   macApiScanReq (mac_scan)
                                                   macRxBeacon (mac_mgmt)
                                                   macScanNextChan (mac_scan)
                                                   macScanRxBeacon (mac_scan)
                                                   macScanRxCoordRealign (mac_scan)
                                                   macStartContinue (mac_coord)
                                                   macStartFrameResponseTimer (mac_device)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000E ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DCA3 - 0002DCAF (0xd bytes), align: 0
  Segment part 32.            Intra module refs:   macExecute
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DCB0 - 0002DD1E (0x6f bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSendMsg              0002DCB0        MAC_MlmeScanReq (mac_scan)
                                                   MAC_MlmeStartReq (mac_coord)
                                                   MAC_MlmeSyncReq (mac_mgmt)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000013 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DD1F - 0002DDB5 (0x97 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSendDataMsg          0002DD1F        MAC_MlmeAssociateReq (mac_device)
                                                   Segment part 14 (mac_coord)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000015 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DDB6 - 0002DDC7 (0x12 bytes), align: 0
  Segment part 35.            Intra module refs:   macSendDataMsg
                                                   macSendMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DDC8 - 0002DDD1 (0xa bytes), align: 0
  Segment part 36.            Intra module refs:   macSendDataMsg
                                                   macSendMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DDD2 - 0002DDDE (0xd bytes), align: 0
  Segment part 37.            Intra module refs:   macSendDataMsg
                                                   macSendMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DDDF - 0002DDF3 (0x15 bytes), align: 0
  Segment part 38.            Intra module refs:   macSendDataMsg
                                                   macSendMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DDF4 - 0002DDFF (0xc bytes), align: 0
  Segment part 39.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTaskInit             0002DDF4        osalAddTasks (OSAL_SampleApp)
               is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DE00 - 0002DF56 (0x157 bytes), align: 0
  Segment part 40.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macEventLoop            0002DE00        osalAddTasks (OSAL_SampleApp)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DF57 - 0002DF67 (0x11 bytes), align: 0
  Segment part 41.            Intra module refs:   macEventLoop
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001671 - 0000167A (0xa bytes), align: 0
  Segment part 18.            Intra module refs:   macStateTbl
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000167B - 0000168C (0x12 bytes), align: 0
  Segment part 21.            Intra module refs:   macActionSet

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : mac_mgmt

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E417 - 0000E417 (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   macApiDisassociateReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMgmt                 0000E417        macCoordReset (mac_coord)
                                                   macIndirectExpire (mac_coord)
                                                   macRxBeaconReq (mac_coord)
                                                   macStartSetParams (mac_coord)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E418 - 0000E418 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   MAC_MlmeResetReq
                                                   macRxBeacon
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPanCoordinator       0000E418        macBuildBeacon (mac_coord)
                                                   macRxPanConflict (mac_coord)
                                                   macStartSetParams (mac_coord)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00001A2A - 00001A3E (0x15 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMgmtAction1          00001A2A        Segment part 21 (mac_main)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00001A3F - 00001A4D (0xf bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMgmtAction2          00001A3F        Segment part 21 (mac_main)
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C57A - 0001C5B3 (0x3a bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macGetCoordAddress      0001C57A        macAssocDataReq (mac_device)
               calls direct
               stack 1 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C5B4 - 0001C5CD (0x1a bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macGetMyAddrMode        0001C5B4        macApiPollReq (mac_device)
                                                   macBuildBeacon (mac_coord)
                                                   macRxDataReq (mac_coord)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C5CE - 0001C63F (0x72 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDestAddrCmp          0001C5CE        macIndirectMark (mac_coord)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C640 - 0001C6DE (0x9f bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDestSAddrCmp         0001C640        macIndirectSend (mac_coord)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000002 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C6DF - 0001C6E3 (0x5 bytes), align: 0
  Segment part 15.            Intra module refs:   macDestSAddrCmp
                                                   macRxDisassoc
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C6E4 - 0001C6F0 (0xd bytes), align: 0
  Segment part 16.            Intra module refs:   macDestAddrCmp
                                                   macDestSAddrCmp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C6F1 - 0001C72C (0x3c bytes), align: 0
  Segment part 17.            Intra module refs:   Segment part 62
                                                   macDisassocComplete
                                                   macRxDisassoc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCoordAddrCmp         0001C6F1 
               calls direct
               stack 1 = 00000002 ( 00000002 )
               stack 2 = 00000035 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C72D - 0001C739 (0xd bytes), align: 0
  Segment part 18.            Intra module refs:   macCoordAddrCmp
                                                   macGetCoordAddress
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C73A - 0001C95C (0x223 bytes), align: 0
  Segment part 20.            Intra module refs:   macBuildCommonReq
                                                   macBuildDisassociateReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBuildHeader          0001C73A        macApiAssociateReq (mac_device)
                                                   macBuildAssociateRsp (mac_coord)
                                                   macBuildBeacon (mac_coord)
                                                   macBuildDataFrame (mac_data)
                                                   macBuildRealign (mac_coord)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000012 ( 00000013 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C95D - 0001C961 (0x5 bytes), align: 0
  Segment part 21.            Intra module refs:   macBuildBeaconNotifyInd
                                                   macBuildCommonReq
                                                   macBuildHeader
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C962 - 0001C965 (0x4 bytes), align: 0
  Segment part 22.            Intra module refs:   macBuildHeader
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C966 - 0001C966 (0x1 bytes), align: 0
  Segment part 23.            Intra module refs:   Segment part 22
                                                   Segment part 25
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C967 - 0001C96F (0x9 bytes), align: 0
  Segment part 24.            Intra module refs:   Segment part 23
                                                   Segment part 29
                                                   macBuildHeader
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C970 - 0001C972 (0x3 bytes), align: 0
  Segment part 25.            Intra module refs:   macBuildHeader
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C973 - 0001C977 (0x5 bytes), align: 0
  Segment part 26.            Intra module refs:   Segment part 25
                                                   Segment part 41
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C978 - 0001C97E (0x7 bytes), align: 0
  Segment part 27.            Intra module refs:   macBuildHeader
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C97F - 0001C984 (0x6 bytes), align: 0
  Segment part 28.            Intra module refs:   Segment part 27
                                                   Segment part 35
                                                   macBuildCommonReq
                                                   macBuildHeader
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C985 - 0001C98C (0x8 bytes), align: 0
  Segment part 29.            Intra module refs:   macBuildHeader
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C98D - 0001C993 (0x7 bytes), align: 0
  Segment part 30.            Intra module refs:   Segment part 29
                                                   macBuildHeader
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C994 - 0001CA25 (0x92 bytes), align: 0
  Segment part 31.            Intra module refs:   macRxBeacon
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBuildCommonReq       0001C994        macApiPollReq (mac_device)
                                                   macAssocDataReq (mac_device)
                                                   macRxDataReq (mac_coord)
                                                   macScanNextChan (mac_scan)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000037 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CA26 - 0001CABE (0x99 bytes), align: 0
  Segment part 32.            Intra module refs:   macApiDisassociateReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBuildDisassociateReq
                                   0001CA26 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000009 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CABF - 0001CAC6 (0x8 bytes), align: 0
  Segment part 33.            Intra module refs:   MAC_MlmeResetReq
                                                   macApiDisassociateReq
                                                   macApiPending
                                                   macBuildDisassociateReq
                                                   macCommStatusInd
                                                   macDestAddrCmp
                                                   macRxBeacon
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CAC7 - 0001CAC9 (0x3 bytes), align: 0
  Segment part 34.            Intra module refs:   macApiDisassociateReq
                                                   macBuildDisassociateReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CACA - 0001CACF (0x6 bytes), align: 0
  Segment part 35.            Intra module refs:   Segment part 34
                                                   Segment part 63
                                                   macBuildBeaconNotifyInd
                                                   macBuildDisassociateReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CAD0 - 0001CCE7 (0x218 bytes), align: 0
  Segment part 36.            Intra module refs:   macRxBeacon
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBuildBeaconNotifyInd
                                   0001CAD0        macScanRxBeacon (mac_scan)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000035 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CCE8 - 0001CCF3 (0xc bytes), align: 0
  Segment part 37.            Intra module refs:   macBuildBeaconNotifyInd
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CCF4 - 0001CCFE (0xb bytes), align: 0
  Segment part 38.            Intra module refs:   macApiDisassociateReq
                                                   macBuildBeaconNotifyInd
                                                   macBuildCommonReq
                                                   macBuildDisassociateReq
                                                   macBuildHeader
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CCFF - 0001CD05 (0x7 bytes), align: 0
  Segment part 39.            Intra module refs:   macBuildBeaconNotifyInd
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CD06 - 0001CD0C (0x7 bytes), align: 0
  Segment part 40.            Intra module refs:   Segment part 39
                                                   macBuildBeaconNotifyInd
                                                   macDisassocComplete
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CD0D - 0001CD10 (0x4 bytes), align: 0
  Segment part 41.            Intra module refs:   macBuildBeaconNotifyInd
                                                   macBuildHeader
                                                   macCommStatusInd
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CD11 - 0001CD14 (0x4 bytes), align: 0
  Segment part 42.            Intra module refs:   macBuildBeaconNotifyInd
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CD15 - 0001CD1F (0xb bytes), align: 0
  Segment part 43.            Intra module refs:   Segment part 42
                                                   Segment part 45
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CD20 - 0001CD2C (0xd bytes), align: 0
  Segment part 44.            Intra module refs:   macBuildBeaconNotifyInd
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CD2D - 0001CD32 (0x6 bytes), align: 0
  Segment part 45.            Intra module refs:   macBuildBeaconNotifyInd
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CD33 - 0001CD44 (0x12 bytes), align: 0
  Segment part 46.            Intra module refs:   macBuildBeaconNotifyInd
                                                   macCommStatusInd
                                                   macRxDisassoc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSecCpy               0001CD33        macRxAssociateReq (mac_coord)
                                                   macRxCoordRealign (mac_device)
                                                   macRxOrphan (mac_coord)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 0000002B ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CD45 - 0001CD47 (0x3 bytes), align: 0
  Segment part 47.            Intra module refs:   macMgmtAction1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macNoAction             0001CD45        Segment part 14 (mac_data)
                                                   Segment part 16 (mac_data)
                                                   Segment part 18 (mac_data)
                                                   Segment part 20 (mac_data)
                                                   Segment part 27 (mac_data)
               is indirectly called
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CD48 - 0001CD50 (0x9 bytes), align: 0
  Segment part 48.            Intra module refs:   macDefaultAction
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiUnsupported       0001CD48 
               calls direct
               stack 1 = 00000002 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CD51 - 0001CD69 (0x19 bytes), align: 0
  Segment part 49.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDefaultAction        0001CD51        macExecute (mac_main)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CD6A - 0001CD7C (0x13 bytes), align: 0
  Segment part 50.            Intra module refs:   macApiPending
                                                   macMgmtAction1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiBadState          0001CD6A 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000003 )
               stack 2 = 00000009 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CD7D - 0001CDB8 (0x3c bytes), align: 0
  Segment part 51.            Intra module refs:   macMgmtAction1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiPending           0001CD7D 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CDB9 - 0001CE82 (0xca bytes), align: 0
  Segment part 52.            Intra module refs:   macMgmtAction1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCommStatusInd        0001CDB9        macCbackForEvent (mac_main)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000002B )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CE83 - 0001CE8C (0xa bytes), align: 0
  Segment part 53.            Intra module refs:   macApiDisassociateReq
                                                   macBuildBeaconNotifyInd
                                                   macCommStatusInd
                                                   macDestSAddrCmp
                                                   macDisassocComplete
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CE8D - 0001CF02 (0x76 bytes), align: 0
  Segment part 54.            Intra module refs:   macMgmtAction2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiDisassociateReq   0001CE8D 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CF03 - 0001CF81 (0x7f bytes), align: 0
  Segment part 55.            Intra module refs:   macMgmtAction2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDisassocComplete     0001CF03 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000003 )
               stack 2 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CF82 - 0001CF87 (0x6 bytes), align: 0
  Segment part 56.            Intra module refs:   macConflictSyncLossInd
                                                   macDisassocComplete
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CF88 - 0001D012 (0x8b bytes), align: 0
  Segment part 57.            Intra module refs:   macMgmtAction2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxDisassoc           0001CF88        Segment part 34 (mac_device)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000022 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D013 - 0001D01C (0xa bytes), align: 0
  Segment part 58.            Intra module refs:   macCommStatusInd
                                                   macRxDisassoc
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D01D - 0001D031 (0x15 bytes), align: 0
  Segment part 59.            Intra module refs:   macDisassocComplete
                                                   macRxDisassoc
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D032 - 0001D040 (0xf bytes), align: 0
  Segment part 60.            Intra module refs:   macBuildHeader
                                                   macRxBeacon
                                                   macRxDisassoc
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D041 - 0001D10A (0xca bytes), align: 0
  Segment part 61.            Intra module refs:   macMgmtAction2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxBeacon             0001D041 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000037 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D10B - 0001D115 (0xb bytes), align: 0
  Segment part 62.            Intra module refs:   macApiDisassociateReq
                                                   macRxBeacon
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D116 - 0001D120 (0xb bytes), align: 0
  Segment part 63.            Intra module refs:   macBuildBeaconNotifyInd
                                                   macRxBeacon
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D121 - 0001D149 (0x29 bytes), align: 0
  Segment part 64.            Intra module refs:   macRxBeacon
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macConflictSyncLossInd
                                   0001D121        macPanConflictComplete (mac_device)
                                                   macRxPanConflict (mac_coord)
               calls direct
               stack 1 = 00000000 ( 00000003 )
               stack 2 = 00000035 ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D14A - 0001D155 (0xc bytes), align: 0
  Segment part 65.            Intra module refs:   Segment part 59
                                                   macConflictSyncLossInd
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D156 - 0001D22F (0xda bytes), align: 0
  Segment part 67.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_MlmeResetReq        0001D156        ZMacReset (zmac)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D230 - 0001D23A (0xb bytes), align: 0
  Segment part 68.            Intra module refs:   MAC_MlmeResetReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D23B - 0001D243 (0x9 bytes), align: 0
  Segment part 69.            Intra module refs:   MAC_MlmeResetReq
                                                   macApiPending
                                                   macBuildBeaconNotifyInd
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D244 - 0001D250 (0xd bytes), align: 0
  Segment part 70.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_MlmeSyncReq         0001D244        ZMacSyncReq (zmac)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D251 - 0001D262 (0x12 bytes), align: 0
  Segment part 71.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_Init                0001D251        ZMacInit (zmac)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D263 - 0001D271 (0xf bytes), align: 0
  Segment part 73.            Intra module refs:   MAC_Init
                                                   MAC_MlmeSyncReq
                                                   Segment part 56
                                                   macApiBadState
                                                   macApiUnsupported
                                                   macCoordAddrCmp
                                                   macDefaultAction
                                                   macGetCoordAddress
                                                   macGetMyAddrMode
                                                   macSecCpy

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : mac_pib

  SEGMENTS IN THE MODULE
  ======================
CODE_C
  Relative segment, address: CODE 00001A4E - 00001A88 (0x3b bytes), align: 0
  Segment part 7.             Intra module refs:   macPibReset
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00001A89 - 00001B10 (0x88 bytes), align: 0
  Segment part 8.             Intra module refs:   MAC_MlmeGetReq
                                                   MAC_MlmeSetReq
                                                   Segment part 14
                                                   Segment part 16
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E419 - 0000E453 (0x3b bytes), align: 0
  Segment part 9.             Intra module refs:   MAC_MlmeGetReq
                                                   MAC_MlmeSetReq
                                                   macPibReset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPib                  0000E419        MAC_MlmeResetReq (mac_mgmt)
                                                   Segment part 18 (mac_mgmt)
                                                   macApiAssociateReq (mac_device)
                                                   macApiDisassociateReq (mac_mgmt)
                                                   macApiOrphanRsp (mac_coord)
                                                   macApiScanReq (mac_scan)
                                                   macAssocDataReq (mac_device)
                                                   macBuildAssociateRsp (mac_coord)
                                                   macBuildBeacon (mac_coord)
                                                   macBuildHeader (mac_mgmt)
                                                   macBuildRealign (mac_coord)
                                                   macCommStatusInd (mac_mgmt)
                                                   macCoordAddrCmp (mac_mgmt)
                                                   macCspTxRequestAckTimeoutCallback (mac_csp_tx)
                                                   macDisassocComplete (mac_mgmt)
                                                   macGetCoordAddress (mac_mgmt)
                                                   macGetMyAddrMode (mac_mgmt)
                                                   macIndirectExpire (mac_coord)
                                                   macIndirectRequeueFrame (mac_coord)
                                                   macIndirectTxFrame (mac_coord)
                                                   macRadioStopScan (mac_radio)
                                                   macRxAssociateReq (mac_coord)
                                                   macRxBeacon (mac_mgmt)
                                                   macRxBeaconReq (mac_coord)
                                                   macRxCompleteCallback (mac_data)
                                                   macRxCoordRealign (mac_device)
                                                   macRxDisassoc (mac_mgmt)
                                                   macScanRxBeacon (mac_scan)
                                                   macScanStartTimer (mac_scan)
                                                   macStartBegin (mac_coord)
                                                   macStartFrameResponseTimer (mac_device)
                                                   macStartResponseTimer (mac_device)
                                                   macStartSetParams (mac_coord)
                                                   macTxChannelBusyCallback (mac_tx)
                                                   macTxCompleteCallback (mac_data)
                                                   macTxFrame (mac_tx)
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003863C - 0003868B (0x50 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPibReset             0003863C        MAC_MlmeResetReq (mac_mgmt)
               calls direct
               stack 1 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003868C - 000386B2 (0x27 bytes), align: 0
  Segment part 11.            Intra module refs:   MAC_MlmeGetReq
                                                   MAC_MlmeSetReq
           LOCAL                   ADDRESS         
           =====                   =======         
           macPibIndex             0003868C 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000F ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000386B3 - 0003872C (0x7a bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_MlmeGetReq          000386B3        MAC_CbackEvent (zmac_cb)
                                                   ZMacGetReq (zmac)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003872D - 000388E1 (0x1b5 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_MlmeSetReq          0003872D        MAC_MlmeResetReq (mac_mgmt)
                                                   Segment part 59 (mac_mgmt)
                                                   ZMacReset (zmac)
                                                   ZMacSetReq (zmac)
                                                   ZMacStartReq (zmac)
                                                   macApiAssociateReq (mac_device)
                                                   macRxAssocRsp (mac_device)
                                                   macScanComplete (mac_scan)
                                                   macScanNextChan (mac_scan)
                                                   macScanRxCoordRealign (mac_scan)
                                                   macStartSetParams (mac_coord)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000388E2 - 000388EB (0xa bytes), align: 0
  Segment part 14.            Intra module refs:   MAC_MlmeSetReq
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000388EC - 000388F0 (0x5 bytes), align: 0
  Segment part 15.            Intra module refs:   Segment part 14
                                                   Segment part 16
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000388F1 - 000388FC (0xc bytes), align: 0
  Segment part 16.            Intra module refs:   MAC_MlmeSetReq

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : mac_pwr

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E454 - 0000E454 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   macPwrReset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPwr                  0000E454 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A7D8 - 0003A7E0 (0x9 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPwrReset             0003A7D8        MAC_MlmeResetReq (mac_mgmt)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A7E1 - 0003A7E7 (0x7 bytes), align: 0
  Segment part 8.             Intra module refs:   macPwrReset
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A7E8 - 0003A7EA (0x3 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiPwrOnReq          0003A7E8        macMgmtAction2 (mac_mgmt)
               is indirectly called

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : mac_scan

  SEGMENTS IN THE MODULE
  ======================
CODE_C
  Relative segment, address: CODE 00001B11 - 00001B22 (0x12 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macScanAction           00001B11        Segment part 21 (mac_main)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E455 - 0000E471 (0x1d bytes), align: 0
  Segment part 7.             Intra module refs:   macApiScanReq
                                                   macScanComplete
                                                   macScanNextChan
                                                   macScanRxBeacon
                                                   macScanRxCoordRealign
                                                   macScanStartTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C495 - 0002C508 (0x74 bytes), align: 0
  Segment part 12.            Intra module refs:   macApiScanReq
                                                   macScanFailedInProgress
           LOCAL                   ADDRESS         
           =====                   =======         
           macScanCnfInit          0002C495 
               stack 1 = 00000002 ( 00000001 )
               stack 2 = 0000000C ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C509 - 0002C50D (0x5 bytes), align: 0
  Segment part 13.            Intra module refs:   macScanCnfInit
                                                   macScanRxBeacon
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C50E - 0002C512 (0x5 bytes), align: 0
  Segment part 14.            Intra module refs:   macScanCnfInit
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C513 - 0002C519 (0x7 bytes), align: 0
  Segment part 15.            Intra module refs:   Segment part 14
                                                   Segment part 18
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C51A - 0002C623 (0x10a bytes), align: 0
  Segment part 16.            Intra module refs:   macScanAction
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiScanReq           0002C51A 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C624 - 0002C628 (0x5 bytes), align: 0
  Segment part 17.            Intra module refs:   macApiScanReq
                                                   macScanNextChan
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C629 - 0002C630 (0x8 bytes), align: 0
  Segment part 18.            Intra module refs:   macApiScanReq
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C631 - 0002C730 (0x100 bytes), align: 0
  Segment part 19.            Intra module refs:   macScanAction
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macScanNextChan         0002C631 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000017 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C731 - 0002C7D4 (0xa4 bytes), align: 0
  Segment part 20.            Intra module refs:   macScanAction
                                                   macScanNextChan
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macScanStartTimer       0002C731 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000015 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C7D5 - 0002C92A (0x156 bytes), align: 0
  Segment part 21.            Intra module refs:   macScanAction
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macScanRxBeacon         0002C7D5 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000003D )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C92B - 0002C9D6 (0xac bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macScanRxCoordRealign   0002C92B        Segment part 7 (mac_device)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C9D7 - 0002C9E7 (0x11 bytes), align: 0
  Segment part 23.            Intra module refs:   macScanRxCoordRealign
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C9E8 - 0002C9F2 (0xb bytes), align: 0
  Segment part 24.            Intra module refs:   Segment part 23
                                                   Segment part 29
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C9F3 - 0002CA09 (0x17 bytes), align: 0
  Segment part 25.            Intra module refs:   Segment part 23
                                                   macScanRxCoordRealign
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CA0A - 0002CA58 (0x4f bytes), align: 0
  Segment part 26.            Intra module refs:   macScanAction
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macScanComplete         0002CA0A 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CA59 - 0002CA62 (0xa bytes), align: 0
  Segment part 27.            Intra module refs:   MAC_MlmeScanReq
                                                   macScanComplete
                                                   macScanFailedInProgress
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CA63 - 0002CA9A (0x38 bytes), align: 0
  Segment part 28.            Intra module refs:   macScanAction
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macScanFailedInProgress
                                   0002CA63 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000003 )
               stack 2 = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CA9B - 0002CA9E (0x4 bytes), align: 0
  Segment part 29.            Intra module refs:   macScanFailedInProgress
                                                   macScanRxCoordRealign
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CA9F - 0002CAAB (0xd bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_MlmeScanReq         0002CA9F        ZMacScanReq (zmac)
               calls direct
               stack 1 = 00000000 ( 00000002 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : mac_timer

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E472 - 0000E473 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   macBackoffTimerRolloverCallback
                                                   macTimer
                                                   macTimerCancel
                                                   macTimerUpdateBackoffTimer
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timerUnalignedQ         0000E472 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E474 - 0000E475 (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   macBackoffTimerRolloverCallback
                                                   macTimerCancel
                                                   macTimerUpdateBackoffTimer
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timerAlignedQ           0000E474 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F76F - 0000F772 (0x4 bytes), align: 0
  Segment part 9.             Intra module refs:   macBackoffTimerRolloverCallback
                                                   macBackoffTimerTriggerCallback
                                                   macTimerUpdateBackoffTimer
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F773 - 0000F776 (0x4 bytes), align: 0
  Segment part 11.            Intra module refs:   macBackoffTimerRolloverCallback
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E476 - 0000E477 (0x2 bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 23
                                                   Segment part 27
                                                   Segment part 30
                                                   macBackoffTimerTriggerCallback
                                                   macTimerUpdateBackoffTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EC53 - 0002ED28 (0xd6 bytes), align: 0
  Segment part 21.            Intra module refs:   macBackoffTimerRolloverCallback
                                                   macTimerAddTimer
                                                   macTimerCancel
           LOCAL                   ADDRESS         
           =====                   =======         
           macTimerUpdateBackoffTimer
                                   0002EC53 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000011 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002ED29 - 0002ED2D (0x5 bytes), align: 0
  Segment part 22.            Intra module refs:   macBackoffTimerTriggerCallback
                                                   macTimerUpdateBackoffTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002ED2E - 0002ED39 (0xc bytes), align: 0
  Segment part 23.            Intra module refs:   macTimerUpdateBackoffTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002ED3A - 0002ED3D (0x4 bytes), align: 0
  Segment part 24.            Intra module refs:   macTimerUpdateBackoffTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002ED3E - 0002ED48 (0xb bytes), align: 0
  Segment part 25.            Intra module refs:   Segment part 24
                                                   Segment part 27
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002ED49 - 0002EDAD (0x65 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerTriggerCallback
                                   0002ED49        macBackoffTimerCompareIsr (mac_backoff_timer)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EDAE - 0002EDB6 (0x9 bytes), align: 0
  Segment part 27.            Intra module refs:   macBackoffTimerTriggerCallback
                                                   macTimerUpdateBackoffTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EDB7 - 0002EE3D (0x87 bytes), align: 0
  Segment part 28.            Intra module refs:   macBackoffTimerRolloverCallback
           LOCAL                   ADDRESS         
           =====                   =======         
           macTimerRecalcUnaligned
                                   0002EDB7 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000013 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EE3E - 0002EE4E (0x11 bytes), align: 0
  Segment part 29.            Intra module refs:   macTimer
                                                   macTimerRecalcUnaligned
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EE4F - 0002EE57 (0x9 bytes), align: 0
  Segment part 30.            Intra module refs:   Segment part 23
                                                   macTimerAddTimer
                                                   macTimerCancel
                                                   macTimerRecalcUnaligned
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EE58 - 0002EE5E (0x7 bytes), align: 0
  Segment part 31.            Intra module refs:   macBackoffTimerTriggerCallback
                                                   macTimerAddTimer
                                                   macTimerRecalcUnaligned
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EE5F - 0002EF15 (0xb7 bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerRolloverCallback
                                   0002EE5F        macBackoffTimerCompareIsr (mac_backoff_timer)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EF16 - 0002EF93 (0x7e bytes), align: 0
  Segment part 33.            Intra module refs:   Segment part 29
           LOCAL                   ADDRESS         
           =====                   =======         
           macTimerAddTimer        0002EF16 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000010 ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EF94 - 0002EFCF (0x3c bytes), align: 0
  Segment part 35.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTimer                0002EF94        macIndirectExpire (mac_coord)
                                                   macIndirectTxFrame (mac_coord)
                                                   macScanStartTimer (mac_scan)
                                                   macStartFrameResponseTimer (mac_device)
                                                   macStartResponseTimer (mac_device)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000004 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EFD0 - 0002F00F (0x40 bytes), align: 0
  Segment part 36.            Intra module refs:   macTimerCancel
           LOCAL                   ADDRESS         
           =====                   =======         
           macTimerRemoveTimer     0002EFD0 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F010 - 0002F014 (0x5 bytes), align: 0
  Segment part 37.            Intra module refs:   macTimerCancel
                                                   macTimerRemoveTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F015 - 0002F05D (0x49 bytes), align: 0
  Segment part 38.            Intra module refs:   macBackoffTimerTriggerCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTimerCancel          0002F015        macAssocFailed (mac_device)
                                                   macIndirectExpire (mac_coord)
                                                   macIndirectTxFrame (mac_coord)
                                                   macPollDataRxInd (mac_device)
                                                   macPollRxAssocRsp (mac_device)
                                                   macPollRxDisassoc (mac_device)
                                                   macRxAssocRsp (mac_device)
                                                   macScanComplete (mac_scan)
                                                   macStartFrameResponseTimer (mac_device)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000C ( 00000009 )
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000168D - 00001690 (0x4 bytes), align: 0
  Segment part 10.            Intra module refs:   Segment part 9
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001691 - 00001694 (0x4 bytes), align: 0
  Segment part 12.            Intra module refs:   Segment part 11

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\AF.r51
  PROGRAM MODULE, NAME : AF

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E478 - 0000E479 (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   AF_DataRequest
                                                   afEndPoints
                                                   afFindEndPointDescList
                                                   afIncomingData
                                                   afInit
                                                   afNumEndPoints
                                                   afRegisterExtended
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epList                  0000E478        ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_UpdateNwkStatus (ZDObject)
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DF59 - 0001DF66 (0xe bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afInit                  0001DF59        main (ZMain)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DF67 - 0001DFF1 (0x8b bytes), align: 0
  Segment part 8.             Intra module refs:   afRegister
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afRegisterExtended      0001DF67 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000E ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DFF2 - 0001DFF6 (0x5 bytes), align: 0
  Segment part 9.             Intra module refs:   afFindSimpleDesc
                                                   afRegisterExtended
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine31           0001DFF2 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DFF7 - 0001DFFE (0x8 bytes), align: 0
  Segment part 10.            Intra module refs:   afRegisterExtended
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0001DFF7 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DFFF - 0001E02F (0x31 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afRegister              0001DFFF        SampleApp_Init (SampleApp)
                                                   ZDApp_Init (ZDApp)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E030 - 0001E07F (0x50 bytes), align: 0
  Segment part 12.            Intra module refs:   AF_DataRequest
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afDataConfirm           0001E030        APSDE_DataConfirm (APSMEDE_CB)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000002B ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E080 - 0001E087 (0x8 bytes), align: 0
  Segment part 13.            Intra module refs:   AF_DataRequest
                                                   afDataConfirm
                                                   afRegisterExtended
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0001E080 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E088 - 0001E2A5 (0x21e bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afIncomingData          0001E088        APS_event_loop (APS)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000005 ( 00000020 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E2A6 - 0001E2AD (0x8 bytes), align: 0
  Segment part 15.            Intra module refs:   afBuildMSGIncoming
                                                   afIncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine33           0001E2A6 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E2AE - 0001E2B1 (0x4 bytes), align: 0
  Segment part 16.            Intra module refs:   afIncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine14           0001E2AE 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E2B2 - 0001E2B7 (0x6 bytes), align: 0
  Segment part 17.            Intra module refs:   ?Subroutine14
                                                   ?Subroutine5
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine24           0001E2B2 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E2B8 - 0001E2C6 (0xf bytes), align: 0
  Segment part 18.            Intra module refs:   afIncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           0001E2B8 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E2C7 - 0001E2D4 (0xe bytes), align: 0
  Segment part 19.            Intra module refs:   afIncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           0001E2C7 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E2D5 - 0001E2EF (0x1b bytes), align: 0
  Segment part 20.            Intra module refs:   afIncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            0001E2D5 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E2F0 - 0001E2F8 (0x9 bytes), align: 0
  Segment part 21.            Intra module refs:   afIncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0001E2F0 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E2F9 - 0001E472 (0x17a bytes), align: 0
  Segment part 22.            Intra module refs:   afIncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           afBuildMSGIncoming      0001E2F9 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000020 ( 00000018 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E473 - 0001E47D (0xb bytes), align: 0
  Segment part 23.            Intra module refs:   afBuildMSGIncoming
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine21           0001E473 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E47E - 0001E487 (0xa bytes), align: 0
  Segment part 24.            Intra module refs:   afBuildMSGIncoming
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine17           0001E47E 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E488 - 0001E490 (0x9 bytes), align: 0
  Segment part 25.            Intra module refs:   afBuildMSGIncoming
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           0001E488 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E491 - 0001E496 (0x6 bytes), align: 0
  Segment part 26.            Intra module refs:   ?Subroutine1
                                                   ?Subroutine10
                                                   ?Subroutine22
                                                   ?Subroutine24
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine32           0001E491 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E497 - 0001E4A1 (0xb bytes), align: 0
  Segment part 27.            Intra module refs:   afBuildMSGIncoming
                                                   afDataConfirm
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            0001E497 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E4A2 - 0001E4A7 (0x6 bytes), align: 0
  Segment part 28.            Intra module refs:   afBuildMSGIncoming
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001E4A2 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E4A8 - 0001E4B0 (0x9 bytes), align: 0
  Segment part 29.            Intra module refs:   ?Subroutine0
                                                   afBuildMSGIncoming
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine22           0001E4A8 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E4B1 - 0001E79A (0x2ea bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AF_DataRequest          0001E4B1        SampleApp_SendFlashMessage (SampleApp)
                                                   SampleApp_SendPeriodicMessage (SampleApp)
                                                   SendData (SampleApp)
                                                   fillAndSend (ZDProfile)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000009 ( 0000002B )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E79B - 0001E7A0 (0x6 bytes), align: 0
  Segment part 31.            Intra module refs:   ?Subroutine27
                                                   AF_DataRequest
                                                   afBuildMSGIncoming
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine29           0001E79B 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E7A1 - 0001E7A8 (0x8 bytes), align: 0
  Segment part 32.            Intra module refs:   AF_DataRequest
                                                   afBuildMSGIncoming
                                                   afEndPoints
                                                   afFindSimpleDesc
                                                   afIncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine20           0001E7A1 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E7A9 - 0001E7AF (0x7 bytes), align: 0
  Segment part 33.            Intra module refs:   AF_DataRequest
                                                   afIncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine18           0001E7A9 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E7B0 - 0001E7B3 (0x4 bytes), align: 0
  Segment part 34.            Intra module refs:   AF_DataRequest
                                                   afFindEndPointDescList
                                                   afIncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine12           0001E7B0 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E7B4 - 0001E7B8 (0x5 bytes), align: 0
  Segment part 35.            Intra module refs:   ?Subroutine11
                                                   ?Subroutine12
                                                   ?Subroutine8
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine23           0001E7B4 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E7B9 - 0001E7C2 (0xa bytes), align: 0
  Segment part 36.            Intra module refs:   AF_DataRequest
                                                   afIncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            0001E7B9 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E7C3 - 0001E7C9 (0x7 bytes), align: 0
  Segment part 37.            Intra module refs:   ?Subroutine17
                                                   ?Subroutine19
                                                   ?Subroutine20
                                                   ?Subroutine5
                                                   ?Subroutine9
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine25           0001E7C3 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E7CA - 0001E7D4 (0xb bytes), align: 0
  Segment part 38.            Intra module refs:   AF_DataRequest
                                                   afBuildMSGIncoming
                                                   afCopyAddress
                                                   afIncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0001E7CA 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E7D5 - 0001E7DF (0xb bytes), align: 0
  Segment part 39.            Intra module refs:   AF_DataRequest
                                                   afIncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0001E7D5 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E7E0 - 0001E810 (0x31 bytes), align: 0
  Segment part 40.            Intra module refs:   afFindEndPointDesc
                                                   afFindSimpleDesc
                                                   afGetReflector
                                                   afIncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           afFindEndPointDescList
                                   0001E7E0 
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000019 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E811 - 0001E835 (0x25 bytes), align: 0
  Segment part 41.            Intra module refs:   afDataConfirm
                                                   afIncomingData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afFindEndPointDesc      0001E811        MTProcessAppMsg (MTEL)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000019 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E836 - 0001E83F (0xa bytes), align: 0
  Segment part 42.            Intra module refs:   AF_DataRequest
                                                   afBuildMSGIncoming
                                                   afFindEndPointDesc
                                                   afFindEndPointDescList
                                                   afGetReflector
                                                   afIncomingData
                                                   afNumEndPoints
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            0001E836 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E840 - 0001E8BA (0x7b bytes), align: 0
  Segment part 43.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afFindSimpleDesc        0001E840        ZDO_ProcessSimpleDescReq (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E8BB - 0001E8C3 (0x9 bytes), align: 0
  Segment part 44.            Intra module refs:   AF_DataRequest
                                                   afFindSimpleDesc
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine16           0001E8BB 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E8C4 - 0001E8CA (0x7 bytes), align: 0
  Segment part 45.            Intra module refs:   ?Subroutine16
                                                   ?Subroutine18
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine27           0001E8C4 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E8CB - 0001E8CE (0x4 bytes), align: 0
  Segment part 46.            Intra module refs:   afBuildMSGIncoming
                                                   afFindSimpleDesc
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine15           0001E8CB 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E8CF - 0001E8D2 (0x4 bytes), align: 0
  Segment part 47.            Intra module refs:   ?Subroutine13
                                                   ?Subroutine15
                                                   ?Subroutine9
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine26           0001E8CF 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E8D3 - 0001E8DB (0x9 bytes), align: 0
  Segment part 48.            Intra module refs:   ?Subroutine23
                                                   ?Subroutine24
                                                   ?Subroutine26
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine28           0001E8D3 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E8DC - 0001E901 (0x26 bytes), align: 0
  Segment part 49.            Intra module refs:   AF_DataRequest
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afGetReflector          0001E8DC 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000002B ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E902 - 0001E906 (0x5 bytes), align: 0
  Segment part 51.            Intra module refs:   afFindEndPointDesc
                                                   afGetReflector
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine34           0001E902 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E907 - 0001E948 (0x42 bytes), align: 0
  Segment part 52.            Intra module refs:   AF_DataRequest
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afDataReqMTU            0001E907 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000002B ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E949 - 0001E94D (0x5 bytes), align: 0
  Segment part 53.            Intra module refs:   afCopyAddress
                                                   afDataReqMTU
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine35           0001E949 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E94E - 0001E973 (0x26 bytes), align: 0
  Segment part 56.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afNumEndPoints          0001E94E        ZDO_ProcessActiveEPReq (ZDObject)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E974 - 0001E97A (0x7 bytes), align: 0
  Segment part 57.            Intra module refs:   afEndPoints
                                                   afFindEndPointDescList
                                                   afInit
                                                   afNumEndPoints
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine30           0001E974 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E97B - 0001E982 (0x8 bytes), align: 0
  Segment part 58.            Intra module refs:   afNumEndPoints
                                                   afRegisterExtended
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine19           0001E97B 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E983 - 0001E9C3 (0x41 bytes), align: 0
  Segment part 59.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afEndPoints             0001E983        ZDO_ProcessActiveEPReq (ZDObject)
               stack 1 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E9C4 - 0001E9EA (0x27 bytes), align: 0
  Segment part 60.            Intra module refs:   afBuildMSGIncoming
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afCopyAddress           0001E9C4 
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000015 ( 00000009 )

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\AccessCodeSpace.r51
  PROGRAM MODULE, NAME : CC2430_READ_ANY_CODE_BYTE

  SEGMENTS IN THE MODULE
  ======================
NEAR_CODE
  Relative segment, address: CODE 00000E97 - 00000EBE (0x28 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GetCodeByte             00000E97        ?Subroutine48 (OSAL_Nv)
                                                   ?Subroutine49 (OSAL_Nv)
                                                   calcChkF (OSAL_Nv)
                                                   osal_nv_write (OSAL_Nv)
           LOCAL                   ADDRESS         
           =====                   =======         
           _notBank2               00000EAC 

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\DebugTrace.r51
    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\Font.r51
  PROGRAM MODULE, NAME : Font

  SEGMENTS IN THE MODULE
  ======================
CODE_C
  Relative segment, address: CODE 00001B23 - 00002112 (0x5f0 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Font8X8                 00001B23        ?Subroutine8 (hal_lcd)

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\MTEL.r51
  PROGRAM MODULE, NAME : MTEL

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000C9 - 000000C9 (0x1 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WDCTL                   000000C9 
    -------------------------------------------------------------------------
XDATA_AN
  Relative segment, address: XDATA 0000E000 - 0000E007 (0x8 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mboxMsg                 0000E000 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F777 - 0000F786 (0x10 bytes), align: 0
  Segment part 9.             Intra module refs:   Segment part 14
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F787 - 0000F796 (0x10 bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 14
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F797 - 0000F79A (0x4 bytes), align: 0
  Segment part 13.            Intra module refs:   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MTVersionString         0000F797 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F79B - 0000F79E (0x4 bytes), align: 0
  Segment part 22.            Intra module refs:   MT_ProcessSerialCommand
                                                   osalTimerInit (OSAL_Timers)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_3e8          0000F79B 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F79F - 0000F7A2 (0x4 bytes), align: 0
  Segment part 24.            Intra module refs:   MT_Reset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_53544159     0000F79F 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E47A - 0000E47A (0x1 bytes), align: 0
  Segment part 15.            Intra module refs:   MT_ProcessEvent
                                                   MT_TaskInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_TaskID               0000E47A        SPIMgr_ProcessZToolData (SPIMgr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E47B - 0000E47B (0x1 bytes), align: 0
  Segment part 16.            Intra module refs:   MT_ProcessSerialCommand
                                                   MT_TaskInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           debugThreshold          0000E47B 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E47C - 0000E47C (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   MT_ProcessSerialCommand
                                                   MT_TaskInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           debugCompId             0000E47C 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E47D - 0000E47E (0x2 bytes), align: 0
  Segment part 18.            Intra module refs:   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           save_cmd                0000E47D 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001991C - 00019938 (0x1d bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_TaskInit             0001991C        osalAddTasks (OSAL_SampleApp)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019939 - 00019950 (0x18 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_IndReset             00019939        InitBoard (OnBoard)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019951 - 000199A3 (0x53 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ProcessEvent         00019951        osalAddTasks (OSAL_SampleApp)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000199A4 - 00019A2A (0x87 bytes), align: 0
  Segment part 29.            Intra module refs:   MT_BuildAndSendZToolResponse
                                                   MT_ProcessDebugMsg
                                                   MT_ProcessDebugStr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_BuildSPIMsg          000199A4 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000001B ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019A2B - 00019A99 (0x6f bytes), align: 0
  Segment part 30.            Intra module refs:   ?Subroutine17
                                                   MTProcessAppRspMsg
                                                   MT_ProcessGetDeviceInfo
                                                   MT_ProcessGetNV
                                                   MT_ProcessGetNvInfo
                                                   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_BuildAndSendZToolResponse
                                   00019A2B 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000025 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019A9A - 00019AA1 (0x8 bytes), align: 0
  Segment part 31.            Intra module refs:   MTProcessAppMsg
                                                   MT_BuildAndSendZToolResponse
                                                   MT_ProcessGetNV
                                                   MT_ProcessGetNvInfo
                                                   MT_ProcessSerialCommand
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine19           00019A9A 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019AA2 - 00019B62 (0xc1 bytes), align: 0
  Segment part 33.            Intra module refs:   MT_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ProcessCommand       00019AA2 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000A ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019B63 - 00019C94 (0x132 bytes), align: 0
  Segment part 34.            Intra module refs:   MT_ProcessCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ProcessDebugMsg      00019B63 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000E ( 0000001B )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019C95 - 00019C9E (0xa bytes), align: 0
  Segment part 35.            Intra module refs:   MT_BuildSPIMsg
                                                   MT_ProcessCommand
                                                   MT_ProcessDebugMsg
                                                   MT_ProcessGetDeviceInfo
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine18           00019C95 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019C9F - 00019CA9 (0xb bytes), align: 0
  Segment part 36.            Intra module refs:   MT_ProcessDebugMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           00019C9F 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019CAA - 00019CBD (0x14 bytes), align: 0
  Segment part 37.            Intra module refs:   MT_ProcessDebugMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            00019CAA 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019CBE - 00019CCA (0xd bytes), align: 0
  Segment part 38.            Intra module refs:   ?Subroutine1
                                                   MT_ProcessDebugMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           00019CBE 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019CCB - 00019CD1 (0x7 bytes), align: 0
  Segment part 39.            Intra module refs:   ?Subroutine1
                                                   ?Subroutine13
                                                   MT_ReverseBytes
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine15           00019CCB 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019CD2 - 00019D4E (0x7d bytes), align: 0
  Segment part 40.            Intra module refs:   MT_ProcessCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ProcessDebugStr      00019CD2 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000E ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019D4F - 00019D53 (0x5 bytes), align: 0
  Segment part 41.            Intra module refs:   MT_ProcessDebugStr
                                                   MT_ReverseBytes
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine20           00019D4F 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019D54 - 00019D64 (0x11 bytes), align: 0
  Segment part 42.            Intra module refs:   MT_ProcessDebugMsg
                                                   MT_ProcessDebugStr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           00019D54 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019D65 - 00019DA4 (0x40 bytes), align: 0
  Segment part 43.            Intra module refs:   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ProcessSetNV         00019D65 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000023 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019DA5 - 00019DBF (0x1b bytes), align: 0
  Segment part 44.            Intra module refs:   MTProcessAppRspMsg
                                                   MT_IndReset
                                                   MT_ProcessEvent
                                                   MT_ProcessSetNV
                                                   MT_SendErrorNotification
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine17           00019DA5 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019DC0 - 00019E67 (0xa8 bytes), align: 0
  Segment part 45.            Intra module refs:   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ProcessGetNV         00019DC0 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000023 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019E68 - 0001A07A (0x213 bytes), align: 0
  Segment part 46.            Intra module refs:   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ProcessGetNvInfo     00019E68 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000023 ( 0000001A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A07B - 0001A198 (0x11e bytes), align: 0
  Segment part 47.            Intra module refs:   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ProcessGetDeviceInfo
                                   0001A07B 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000023 ( 00000013 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A199 - 0001A1A5 (0xd bytes), align: 0
  Segment part 48.            Intra module refs:   MT_ProcessGetDeviceInfo
                                                   MT_ProcessGetNvInfo
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine12           0001A199 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A1A6 - 0001A1B5 (0x10 bytes), align: 0
  Segment part 49.            Intra module refs:   MT_ProcessGetDeviceInfo
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001A1A6 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A1B6 - 0001A63B (0x486 bytes), align: 0
  Segment part 50.            Intra module refs:   MT_ProcessCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ProcessSerialCommand
                                   0001A1B6 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000E ( 00000027 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A63C - 0001A640 (0x5 bytes), align: 0
  Segment part 51.            Intra module refs:   MT_ProcessSerialCommand
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            0001A63C 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A641 - 0001A650 (0x10 bytes), align: 0
  Segment part 52.            Intra module refs:   ?Subroutine5
                                                   ?Subroutine6
                                                   ?Subroutine9
                                                   MT_ProcessSerialCommand
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine14           0001A641 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A651 - 0001A65C (0xc bytes), align: 0
  Segment part 53.            Intra module refs:   MTProcessAppMsg
                                                   MT_ProcessCommand
                                                   MT_ProcessSerialCommand
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            0001A651 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A65D - 0001A672 (0x16 bytes), align: 0
  Segment part 54.            Intra module refs:   MT_ProcessSerialCommand
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0001A65D 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A673 - 0001A6EB (0x79 bytes), align: 0
  Segment part 55.            Intra module refs:   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MTProcessLedControl     0001A673 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000023 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A6EC - 0001A7BD (0xd2 bytes), align: 0
  Segment part 56.            Intra module refs:   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MTProcessAppMsg         0001A6EC 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000023 ( 00000015 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A7BE - 0001A7CD (0x10 bytes), align: 0
  Segment part 57.            Intra module refs:   MTProcessAppMsg
                                                   MT_ProcessSerialCommand
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            0001A7BE 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A7CE - 0001A7D8 (0xb bytes), align: 0
  Segment part 58.            Intra module refs:   MTProcessAppMsg
                                                   MT_ProcessSerialCommand
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            0001A7CE 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A7D9 - 0001A7E1 (0x9 bytes), align: 0
  Segment part 59.            Intra module refs:   MTProcessAppMsg
                                                   MT_ProcessGetNvInfo
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0001A7D9 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A7E2 - 0001A7EA (0x9 bytes), align: 0
  Segment part 60.            Intra module refs:   MTProcessAppMsg
                                                   MT_ProcessDebugMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0001A7E2 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A7EB - 0001A80F (0x25 bytes), align: 0
  Segment part 61.            Intra module refs:   MT_ProcessCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MTProcessAppRspMsg      0001A7EB 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000E ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A810 - 0001A832 (0x23 bytes), align: 0
  Segment part 62.            Intra module refs:   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_RAMRead              0001A810 
               stack 1 = 00000000 ( 00000003 )
               stack 2 = 00000023 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A833 - 0001A839 (0x7 bytes), align: 0
  Segment part 63.            Intra module refs:   MTProcessLedControl
                                                   MT_RAMRead
                                                   MT_RAMWrite
                                                   MT_TaskInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine16           0001A833 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A83A - 0001A854 (0x1b bytes), align: 0
  Segment part 64.            Intra module refs:   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_RAMWrite             0001A83A 
               stack 1 = 00000000 ( 00000003 )
               stack 2 = 00000023 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A855 - 0001A880 (0x2c bytes), align: 0
  Segment part 66.            Intra module refs:   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_Reset                0001A855 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000023 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A881 - 0001A898 (0x18 bytes), align: 0
  Segment part 67.            Intra module refs:   MT_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_SendErrorNotification
                                   0001A881 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000A ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A899 - 0001A8A8 (0x10 bytes), align: 0
  Segment part 68.            Intra module refs:   MT_IndReset
                                                   MT_SendErrorNotification
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0001A899 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A8A9 - 0001A8F0 (0x48 bytes), align: 0
  Segment part 69.            Intra module refs:   MT_ProcessGetDeviceInfo
                                                   MT_ProcessGetNvInfo
                                                   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ReverseBytes         0001A8A9 
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000023 ( 0000000C )
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001695 - 000016A4 (0x10 bytes), align: 0
  Segment part 10.            Intra module refs:   Segment part 9
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000016A5 - 000016B4 (0x10 bytes), align: 0
  Segment part 12.            Intra module refs:   Segment part 11
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000016B5 - 000016B8 (0x4 bytes), align: 0
  Segment part 14.            Intra module refs:   MTVersionString
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000016B9 - 000016BC (0x4 bytes), align: 0
  Segment part 23.            Intra module refs:   __Constant_3e8
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000016BD - 000016C0 (0x4 bytes), align: 0
  Segment part 25.            Intra module refs:   __Constant_53544159
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A8 - 000000A8 (0x1 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN0                 000000A8 

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\MT_AF.r51
    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\MT_NWK.r51
    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\MT_ZDO.r51
    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\OSAL.r51
  PROGRAM MODULE, NAME : OSAL

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E47F - 0000E480 (0x2 bytes), align: 0
  Segment part 12.            Intra module refs:   osal_init_system
                                                   osal_msg_receive
                                                   osal_msg_send
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_qHead              0000E47F 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BE18 - 0002BE23 (0xc bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_strlen             0002BE18        MT_ProcessSerialCommand (MTEL)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BE24 - 0002BE64 (0x41 bytes), align: 0
  Segment part 18.            Intra module refs:   osal_cpyExtAddr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_memcpy             0002BE24        ?Subroutine18 (ZDApp)
                                                   ?Subroutine6 (zmac_cb)
                                                   APSDE_DataIndication (APSMEDE_CB)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MAC_MlmeGetReq (mac_pib)
                                                   MAC_MlmeSetReq (mac_pib)
                                                   MTProcessAppMsg (MTEL)
                                                   MT_BuildSPIMsg (MTEL)
                                                   NLDE_BuildMsg (nwk_util)
                                                   NLME_GetRequest (NLMEDE)
                                                   SampleApp_Init (SampleApp)
                                                   Segment part 120 (APSMEDE)
                                                   Segment part 29 (APS)
                                                   Segment part 31 (APSMEDE_CB)
                                                   Segment part 36 (mac_main)
                                                   ZDApp_SendMsg (ZDApp)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDP_EPRsp (ZDProfile)
                                                   ZMacDataReq (zmac)
                                                   afBuildMSGIncoming (AF)
                                                   aps_AddGroup (aps_groups)
                                                   aps_GroupsWriteNV (aps_groups)
                                                   macBuildBeacon (mac_coord)
                                                   macScanRxBeacon (mac_scan)
                                                   macStartBegin (mac_coord)
                                                   nwk_BeaconFromNative (nwk)
                                                   nwk_BeaconToNative (nwk)
                                                   nwk_data_ind_processing (nwk)
                                                   sAddrExtCpy (saddr)
                                                   zgInit (ZGlobals)
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000E ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BE65 - 0002BE69 (0x5 bytes), align: 0
  Segment part 19.            Intra module refs:   osal_cpyExtAddr
                                                   osal_memcpy
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine20           0002BE65 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BE6A - 0002BE8D (0x24 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_cpyExtAddr         0002BE6A        AddrMgrExtAddrSet (AddrMgr)
                                                   NIB_init (nwk_globals)
                                                   NLME_JoinRequest (NLMEDE)
                                                   NLME_LeaveCmdCnf (nwk_util)
                                                   NLME_LeaveCmdProcess (nwk_util)
                                                   Segment part 111 (nwk)
                                                   Segment part 34 (nwk_util)
                                                   ZDO_NetworkDiscoveryConfirmCB (ZDApp)
                                                   ZMacGetReq (zmac)
                                                   ZMacSetReq (zmac)
                                                   nwk_associate_cnf_processing (nwk)
                                                   nwk_beacon_notify_ind_processing (nwk)
                                                   nwk_start_coord (nwk)
                                                   zdpProcessAddrReq (ZDProfile)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BE8E - 0002BEAF (0x22 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_memset             0002BE8E        AddrMgrExtAddrSet (AddrMgr)
                                                   AddrMgrInit (AddrMgr)
                                                   AssocInit (AssocList)
                                                   AssocRemove (AssocList)
                                                   HalUARTOpen (hal_uart)
                                                   MT_ProcessGetDeviceInfo (MTEL)
                                                   MT_ProcessGetNV (MTEL)
                                                   MT_ProcessGetNvInfo (MTEL)
                                                   NIB_init (nwk_globals)
                                                   NLDE_DataReqAlloc (NLMEDE)
                                                   NLME_LeaveCmdCnf (nwk_util)
                                                   NLME_LeaveCmdProcess (nwk_util)
                                                   ZDAppSetupProtoVersion (ZDApp)
                                                   ZMacScanReq (zmac)
                                                   macSecCpy (mac_mgmt)
                                                   nwk_beacon_notify_ind_processing (nwk)
                                                   pollDMA (hal_uart)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BEB0 - 0002BEB4 (0x5 bytes), align: 0
  Segment part 23.            Intra module refs:   osal_msg_extract
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine23           0002BEB0 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BEB5 - 0002BF34 (0x80 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_build_uint32       0002BEB5        nwk_data_ind_processing (nwk)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BF35 - 0002BF39 (0x5 bytes), align: 0
  Segment part 25.            Intra module refs:   osal_build_uint32
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine24           0002BF35 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BF3A - 0002BF48 (0xf bytes), align: 0
  Segment part 26.            Intra module refs:   osal_build_uint32
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            0002BF3A 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BF49 - 0002BF4E (0x6 bytes), align: 0
  Segment part 27.            Intra module refs:   osal_build_uint32
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0002BF49 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BF4F - 0002BF6A (0x1c bytes), align: 0
  Segment part 28.            Intra module refs:   ?Subroutine1
                                                   osal_build_uint32
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine15           0002BF4F 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BF6B - 0002BF70 (0x6 bytes), align: 0
  Segment part 34.            Intra module refs:   osal_msg_dequeue
                                                   osal_msg_extract
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine16           0002BF6B 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BF71 - 0002BFAF (0x3f bytes), align: 0
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_ExtAddrEqual       0002BF71        APSME_LookupNwkAddr (APSMEDE)
                                                   AddrMgrEntryLookupExt (AddrMgr)
                                                   AssocGetWithAddress (AssocList)
                                                   NLME_LeaveCmdProcess (nwk_util)
                                                   NLME_RejoinRspCmdProcess (nwk_util)
                                                   ZDO_LeaveCnf (ZDApp)
                                                   nwk_getNetworkDesc (nwk)
                                                   zdpProcessAddrReq (ZDProfile)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000009 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BFB0 - 0002BFBB (0xc bytes), align: 0
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_rand               0002BFB0        RTG_BcastTimeout (rtg)
                                                   SampleApp_ProcessEvent (SampleApp)
                                                   ZDApp_ProcessNetworkJoin (ZDApp)
                                                   ZDApp_ProcessOSALMsg (ZDApp)
                                                   ZDOInitDevice (ZDApp)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BFBC - 0002C016 (0x5b bytes), align: 0
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_allocate       0002BFBC        ?Subroutine11 (MTEL)
                                                   APSDE_DataIndication (APSMEDE_CB)
                                                   APS_CmdInd (APS)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MAC_McpsDataAlloc (mac_data)
                                                   MTProcessAppMsg (MTEL)
                                                   NLME_RejoinReqCmdProcess (nwk_util)
                                                   NLME_RejoinRspCmdProcess (nwk_util)
                                                   OnBoard_SendKeys (OnBoard)
                                                   SPIMgr_ProcessZToolData (SPIMgr)
                                                   ZDApp_MatchDescRspCB (ZDApp)
                                                   ZDApp_SendMsg (ZDApp)
                                                   ZDApp_SendNewDstAddr (ZDApp)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_UpdateNwkStatus (ZDObject)
                                                   afBuildMSGIncoming (AF)
                                                   afDataConfirm (AF)
                                                   macAllocTxBuffer (mac_data)
                                                   macBuildBeacon (mac_coord)
                                                   macDataRxMemAlloc (mac_data)
                                                   macSendDataMsg (mac_main)
                                                   macSendMsg (mac_main)
                                                   nwkBuildDataCnf (nwk)
                                                   nwk_ScanJoiningOrphan (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C017 - 0002C044 (0x2e bytes), align: 0
  Segment part 39.            Intra module refs:   osal_msg_send
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_deallocate     0002C017        APSDE_DataIndication (APSMEDE_CB)
                                                   APS_event_loop (APS)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MT_ProcessCommand (MTEL)
                                                   MT_ProcessDebugMsg (MTEL)
                                                   SPIMgr_ProcessZToolData (SPIMgr)
                                                   SampleApp_ProcessEvent (SampleApp)
                                                   ZDApp_event_loop (ZDApp)
                                                   macApiPending (mac_mgmt)
                                                   macDataReset (mac_data)
                                                   macDataRxMemFree (mac_data)
                                                   macEventLoop (mac_main)
                                                   macMainReset (mac_main)
                                                   macRxCompleteCallback (mac_data)
                                                   nwk_event_loop (nwk)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 0000000C ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C045 - 0002C04E (0xa bytes), align: 0
  Segment part 40.            Intra module refs:   osal_init_system
                                                   osal_msg_deallocate
                                                   osal_rand
                                                   osal_self
                                                   osal_strlen
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine19           0002C045 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C04F - 0002C0CE (0x80 bytes), align: 0
  Segment part 41.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_send           0002C04F        ?Subroutine5 (ZDObject)
                                                   ?Subroutine8 (AF)
                                                   APS_CmdInd (APS)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MTProcessAppMsg (MTEL)
                                                   NLME_RejoinReqCmdProcess (nwk_util)
                                                   NLME_RejoinRspCmdProcess (nwk_util)
                                                   OnBoard_SendKeys (OnBoard)
                                                   SPIMgr_ProcessZToolData (SPIMgr)
                                                   Segment part 14 (APSMEDE_CB)
                                                   Segment part 31 (mac_data)
                                                   ZDApp_MatchDescRspCB (ZDApp)
                                                   ZDApp_SendMsg (ZDApp)
                                                   ZDApp_SendNewDstAddr (ZDApp)
                                                   macSendDataMsg (mac_main)
                                                   macSendMsg (mac_main)
                                                   nwkBuildDataCnf (nwk)
                                                   nwk_ScanJoiningOrphan (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C0CF - 0002C0D3 (0x5 bytes), align: 0
  Segment part 42.            Intra module refs:   osal_msg_receive
                                                   osal_msg_send
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine25           0002C0CF 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C0D4 - 0002C145 (0x72 bytes), align: 0
  Segment part 43.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_receive        0002C0D4        APS_event_loop (APS)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   MT_ProcessEvent (MTEL)
                                                   SampleApp_ProcessEvent (SampleApp)
                                                   ZDApp_event_loop (ZDApp)
                                                   macEventLoop (mac_main)
                                                   macMainReset (mac_main)
                                                   nwk_event_loop (nwk)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C146 - 0002C14D (0x8 bytes), align: 0
  Segment part 44.            Intra module refs:   osal_memcpy
                                                   osal_msg_receive
                                                   osal_start_system
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0002C146 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C14E - 0002C17D (0x30 bytes), align: 0
  Segment part 45.            Intra module refs:   osal_msg_send
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_enqueue        0002C14E        macIndirectExpire (mac_coord)
                                                   macRxCompleteCallback (mac_data)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000C ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C17E - 0002C183 (0x6 bytes), align: 0
  Segment part 46.            Intra module refs:   osal_msg_enqueue
                                                   osal_msg_push
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine22           0002C17E 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C184 - 0002C18E (0xb bytes), align: 0
  Segment part 47.            Intra module refs:   osal_msg_enqueue
                                                   osal_msg_enqueue_max
                                                   osal_msg_receive
                                                   osal_msg_send
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           0002C184 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C18F - 0002C1E8 (0x5a bytes), align: 0
  Segment part 48.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_dequeue        0002C18F        macDataReset (mac_data)
                                                   macEventLoop (mac_main)
                                                   macIndirectExpire (mac_coord)
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C1E9 - 0002C1ED (0x5 bytes), align: 0
  Segment part 49.            Intra module refs:   osal_ExtAddrEqual
                                                   osal_memset
                                                   osal_msg_allocate
                                                   osal_msg_dequeue
                                                   osal_msg_enqueue_max
                                                   osal_set_event
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine21           0002C1E9 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C1EE - 0002C1F7 (0xa bytes), align: 0
  Segment part 50.            Intra module refs:   osal_msg_deallocate
                                                   osal_msg_dequeue
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           0002C1EE 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C1F8 - 0002C227 (0x30 bytes), align: 0
  Segment part 51.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_push           0002C1F8        macIndirectRequeueFrame (mac_coord)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C228 - 0002C234 (0xd bytes), align: 0
  Segment part 52.            Intra module refs:   ?Subroutine22
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           0002C228 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C235 - 0002C23A (0x6 bytes), align: 0
  Segment part 53.            Intra module refs:   osal_msg_enqueue
                                                   osal_msg_enqueue_max
                                                   osal_msg_extract
                                                   osal_msg_push
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0002C235 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C23B - 0002C298 (0x5e bytes), align: 0
  Segment part 54.            Intra module refs:   osal_msg_receive
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_extract        0002C23B        macApiPurgeReq (mac_coord)
                                                   macDataTxSend (mac_data)
                                                   macIndirectExpire (mac_coord)
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000E ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C299 - 0002C2A2 (0xa bytes), align: 0
  Segment part 55.            Intra module refs:   osal_msg_enqueue
                                                   osal_msg_enqueue_max
                                                   osal_msg_extract
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine14           0002C299 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C2A3 - 0002C2A9 (0x7 bytes), align: 0
  Segment part 56.            Intra module refs:   osal_msg_extract
                                                   osal_msg_push
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine12           0002C2A3 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C2AA - 0002C2B1 (0x8 bytes), align: 0
  Segment part 57.            Intra module refs:   ?Subroutine11
                                                   ?Subroutine12
                                                   ?Subroutine13
                                                   ?Subroutine14
                                                   osal_msg_extract
                                                   osal_msg_receive
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine18           0002C2AA 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C2B2 - 0002C2FF (0x4e bytes), align: 0
  Segment part 58.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_enqueue_max    0002C2B2        macDataTxEnqueue (mac_data)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C300 - 0002C33F (0x40 bytes), align: 0
  Segment part 59.            Intra module refs:   osal_msg_send
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_set_event          0002C300        ?Subroutine28 (ZDApp)
                                                   HalLedBlink (hal_led)
                                                   NLDE_DataCnf (NLMEDE_CB)
                                                   NLME_SetPollRate (nwk_util)
                                                   RTG_BcastTimeout (rtg)
                                                   RTG_DataReq (rtg)
                                                   macSetEvent (mac_main)
                                                   nwkDB_Add (nwk_bufs)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
                                                   osalTimerUpdate (OSAL_Timers)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000C ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C340 - 0002C34F (0x10 bytes), align: 0
  Segment part 61.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_int_enable         0002C340        main (ZMain)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C350 - 0002C35F (0x10 bytes), align: 0
  Segment part 62.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_int_disable        0002C350        InitBoard (OnBoard)
                                                   ZMacInit (zmac)
                                                   main (ZMain)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C360 - 0002C3A7 (0x48 bytes), align: 0
  Segment part 63.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_init_system        0002C360        main (ZMain)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C3A8 - 0002C45E (0xb7 bytes), align: 0
  Segment part 64.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_start_system       0002C3A8        main (ZMain)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C45F - 0002C462 (0x4 bytes), align: 0
  Segment part 65.            Intra module refs:   osal_start_system
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            0002C45F 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C463 - 0002C46D (0xb bytes), align: 0
  Segment part 66.            Intra module refs:   ?Subroutine3
                                                   ?Subroutine7
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine17           0002C463 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C46E - 0002C48B (0x1e bytes), align: 0
  Segment part 67.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_self               0002C46E        osal_start_timer (OSAL_Timers)
                                                   osal_stop_timer (OSAL_Timers)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C48C - 0002C494 (0x9 bytes), align: 0
  Segment part 68.            Intra module refs:   osal_self
                                                   osal_start_system
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0002C48C 

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\OSAL_Memory.r51
  PROGRAM MODULE, NAME : OSAL_Memory

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E481 - 0000E481 (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   osal_mem_alloc
                                                   osal_mem_free
                                                   osal_mem_init
           LOCAL                   ADDRESS         
           =====                   =======         
           ready                   0000E481 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E482 - 0000E483 (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   ?Subroutine0
                                                   osal_mem_alloc
                                                   osal_mem_free
                                                   osal_mem_init
           LOCAL                   ADDRESS         
           =====                   =======         
           ff1                     0000E482 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E484 - 0000E485 (0x2 bytes), align: 0
  Segment part 9.             Intra module refs:   osal_mem_alloc
                                                   osal_mem_init
                                                   osal_mem_kick
           LOCAL                   ADDRESS         
           =====                   =======         
           ff2                     0000E484 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E486 - 0000F085 (0xc00 bytes), align: 0
  Segment part 10.            Intra module refs:   Segment part 12
           LOCAL                   ADDRESS         
           =====                   =======         
           _theHeap                0000E486 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F7A3 - 0000F7A4 (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   osal_mem_init
           LOCAL                   ADDRESS         
           =====                   =======         
           theHeap                 0000F7A3 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003978A - 000397F1 (0x68 bytes), align: 0
  Segment part 13.            Intra module refs:   osal_mem_alloc
                                                   osal_mem_free
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_init           0003978A        osal_init_system (OSAL)
               calls direct, is recursive
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 0000000E ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000397F2 - 000397F8 (0x7 bytes), align: 0
  Segment part 14.            Intra module refs:   osal_mem_init
                                                   osal_mem_kick
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            000397F2 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000397F9 - 0003980D (0x15 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_kick           000397F9        osal_init_system (OSAL)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003980E - 00039819 (0xc bytes), align: 0
  Segment part 16.            Intra module refs:   osal_mem_init
                                                   osal_mem_kick
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0003980E 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003981A - 00039924 (0x10b bytes), align: 0
  Segment part 17.            Intra module refs:   osal_mem_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_alloc          0003981A        AddrMgrInit (AddrMgr)
                                                   AssocMakeList (AssocList)
                                                   HalUARTOpen (hal_uart)
                                                   MT_BuildAndSendZToolResponse (MTEL)
                                                   MT_ProcessDebugStr (MTEL)
                                                   MT_ProcessGetDeviceInfo (MTEL)
                                                   MT_ProcessGetNV (MTEL)
                                                   MT_ProcessGetNvInfo (MTEL)
                                                   NLDE_BuildMsg (nwk_util)
                                                   NLDE_DataReqAlloc (NLMEDE)
                                                   NLDE_FrameDataLoad (APSMEDE)
                                                   NLDE_SendMsg (nwk_util)
                                                   ZDO_CreateAlignedUINT16List (ZDObject)
                                                   ZMacScanReq (zmac)
                                                   afRegisterExtended (AF)
                                                   aps_AddGroup (aps_groups)
                                                   macStartBegin (mac_coord)
                                                   nwkDB_CreateHdr (nwk_bufs)
                                                   nwk_beacon_notify_ind_processing (nwk)
                                                   nwk_data_ind_processing (nwk)
                                                   nwk_globals_init (nwk_globals)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalTaskAdd (OSAL_Tasks)
                                                   osal_msg_allocate (OSAL)
               calls direct, is recursive
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039925 - 0003992F (0xb bytes), align: 0
  Segment part 18.            Intra module refs:   ?Subroutine0
                                                   osal_mem_alloc
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            00039925 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039930 - 00039984 (0x55 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_free           00039930        ?Subroutine3 (AF)
                                                   ?Subroutine6 (ZDObject)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MT_BuildAndSendZToolResponse (MTEL)
                                                   MT_ProcessDebugStr (MTEL)
                                                   MT_ProcessGetDeviceInfo (MTEL)
                                                   MT_ProcessGetNV (MTEL)
                                                   MT_ProcessGetNvInfo (MTEL)
                                                   NLDE_BuildMsg (nwk_util)
                                                   NLDE_DataReq (NLMEDE)
                                                   NLDE_DataReqSend (nwk_util)
                                                   NLDE_SendMsg (nwk_util)
                                                   Segment part 108 (APSMEDE)
                                                   Segment part 41 (nwk_bufs)
                                                   Segment part 68 (mac_coord)
                                                   ZMacReset (zmac)
                                                   aps_RemoveGroup (aps_groups)
                                                   nwkDB_DeleteRecAll (nwk_bufs)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
                                                   nwk_data_ind_processing (nwk)
                                                   nwk_desc_list_free (nwk)
                                                   osalDeleteTimer (OSAL_Timers)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_msg_deallocate (OSAL)
                                                   zdpProcessAddrReq (ZDProfile)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000016C1 - 000016C2 (0x2 bytes), align: 0
  Segment part 12.            Intra module refs:   theHeap

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\OSAL_Nv.r51
  PROGRAM MODULE, NAME : OSAL_Nv

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000AB - 000000AB (0x1 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FWT                     000000AB 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000AC - 000000AC (0x1 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FADDRL                  000000AC 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000AD - 000000AD (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FADDRH                  000000AD 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000AE - 000000AE (0x1 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FCTL                    000000AE 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D1 - 000000D1 (0x1 bytes), align: 0
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMAIRQ                  000000D1 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D6 - 000000D6 (0x1 bytes), align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMAARM                  000000D6 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F086 - 0000F089 (0x4 bytes), align: 0
  Segment part 12.            Intra module refs:   osal_nv_init
                                                   writeWord
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FBuff                   0000F086 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F08A - 0000F08D (0x4 bytes), align: 0
  Segment part 13.            Intra module refs:   ?Subroutine62
                                                   ?Subroutine64
                                                   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           pgOff                   0000F08A 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F08E - 0000F091 (0x4 bytes), align: 0
  Segment part 14.            Intra module refs:   ?Subroutine4
                                                   ?Subroutine63
           LOCAL                   ADDRESS         
           =====                   =======         
           pgLost                  0000F08E 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F092 - 0000F092 (0x1 bytes), align: 0
  Segment part 15.            Intra module refs:   ?Subroutine7
                                                   compactPage
                                                   initItem
                                                   initItem2
                                                   initNV
                                                   osal_nv_write
                                                   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
           pgRes                   0000F092 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F093 - 0000F093 (0x1 bytes), align: 0
  Segment part 16.            Intra module refs:   findItem
                                                   initPage
                                                   osal_nv_item_len
                                                   osal_nv_read
                                                   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           findPg                  0000F093 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F094 - 0000F094 (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   compactPage
                                                   osal_nv_item_init
                                                   osal_nv_write
                                                   writeWord
           LOCAL                   ADDRESS         
           =====                   =======         
           failF                   0000F094 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000181AC - 0001839E (0x1f3 bytes), align: 0
  Segment part 20.            Intra module refs:   osal_nv_init
                                                   osal_nv_item_init
                                                   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           initNV                  000181AC 
               calls direct
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000022 ( 0000001A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001839F - 000183A6 (0x8 bytes), align: 0
  Segment part 21.            Intra module refs:   initNV
                                                   osal_nv_item_len
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine66           0001839F 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000183A7 - 000183DF (0x39 bytes), align: 0
  Segment part 22.            Intra module refs:   compactPage
                                                   initNV
                                                   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
           setPageUse              000183A7 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000020 ( 00000008 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000183E0 - 000183E6 (0x7 bytes), align: 0
  Segment part 23.            Intra module refs:   osal_nv_init
                                                   setPageUse
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine67           000183E0 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000183E7 - 000185A5 (0x1bf bytes), align: 0
  Segment part 24.            Intra module refs:   findItem
                                                   initNV
           LOCAL                   ADDRESS         
           =====                   =======         
           initPage                000183E7 
               calls direct, is recursive
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000001A ( 00000019 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000185A6 - 000187A9 (0x204 bytes), align: 0
  Segment part 25.            Intra module refs:   initItem
                                                   initNV
                                                   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           compactPage             000185A6 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000022 ( 00000024 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000187AA - 000187AE (0x5 bytes), align: 0
  Segment part 26.            Intra module refs:   compactPage
                                                   initItem
                                                   osal_nv_item_init
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine68           000187AA 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000187AF - 000187B3 (0x5 bytes), align: 0
  Segment part 27.            Intra module refs:   compactPage
                                                   initPage
                                                   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine45           000187AF 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000187B4 - 000187B8 (0x5 bytes), align: 0
  Segment part 28.            Intra module refs:   compactPage
                                                   initPage
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine32           000187B4 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000187B9 - 000187C3 (0xb bytes), align: 0
  Segment part 29.            Intra module refs:   ?Subroutine32
                                                   setItem
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine63           000187B9 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000187C4 - 000187D8 (0x15 bytes), align: 0
  Segment part 30.            Intra module refs:   compactPage
                                                   setItem
                                                   setPageUse
                                                   writeWordH
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine29           000187C4 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000187D9 - 000187E4 (0xc bytes), align: 0
  Segment part 31.            Intra module refs:   compactPage
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine15           000187D9 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000187E5 - 000187EF (0xb bytes), align: 0
  Segment part 32.            Intra module refs:   compactPage
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           000187E5 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000187F0 - 000187F5 (0x6 bytes), align: 0
  Segment part 33.            Intra module refs:   ?Subroutine11
                                                   ?Subroutine12
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine72           000187F0 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000187F6 - 000187F9 (0x4 bytes), align: 0
  Segment part 34.            Intra module refs:   compactPage
                                                   initPage
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           000187F6 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000187FA - 00018806 (0xd bytes), align: 0
  Segment part 35.            Intra module refs:   ?Subroutine10
                                                   ?Subroutine9
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine56           000187FA 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018807 - 0001880E (0x8 bytes), align: 0
  Segment part 36.            Intra module refs:   compactPage
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            00018807 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001880F - 0001881F (0x11 bytes), align: 0
  Segment part 37.            Intra module refs:   ?Subroutine45
                                                   ?Subroutine7
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine62           0001880F 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018820 - 00018879 (0x5a bytes), align: 0
  Segment part 38.            Intra module refs:   initPage
                                                   osal_nv_item_init
                                                   osal_nv_item_len
                                                   osal_nv_read
                                                   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           findItem                00018820 
               calls direct, is recursive
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000022 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001887A - 0001890E (0x95 bytes), align: 0
  Segment part 39.            Intra module refs:   osal_nv_item_init
           LOCAL                   ADDRESS         
           =====                   =======         
           initItem                0001887A 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000010 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001890F - 000189A5 (0x97 bytes), align: 0
  Segment part 40.            Intra module refs:   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           initItem2               0001890F 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000024 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000189A6 - 000189A9 (0x4 bytes), align: 0
  Segment part 41.            Intra module refs:   initItem
                                                   initItem2
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine52           000189A6 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000189AA - 000189BA (0x11 bytes), align: 0
  Segment part 42.            Intra module refs:   ?Subroutine51
                                                   ?Subroutine52
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine64           000189AA 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000189BB - 000189BF (0x5 bytes), align: 0
  Segment part 43.            Intra module refs:   initItem
                                                   initItem2
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine51           000189BB 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000189C0 - 000189C5 (0x6 bytes), align: 0
  Segment part 44.            Intra module refs:   initItem2
                                                   initPage
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine47           000189C0 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000189C6 - 000189D4 (0xf bytes), align: 0
  Segment part 45.            Intra module refs:   initItem
                                                   initItem2
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine46           000189C6 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000189D5 - 000189D9 (0x5 bytes), align: 0
  Segment part 46.            Intra module refs:   initItem
                                                   initItem2
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine44           000189D5 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000189DA - 000189E2 (0x9 bytes), align: 0
  Segment part 47.            Intra module refs:   ?Subroutine44
                                                   ?Subroutine47
                                                   compactPage
                                                   initItem
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine61           000189DA 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000189E3 - 000189EB (0x9 bytes), align: 0
  Segment part 48.            Intra module refs:   initItem
                                                   initItem2
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine25           000189E3 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000189EC - 00018A79 (0x8e bytes), align: 0
  Segment part 49.            Intra module refs:   ?Subroutine72
                                                   initPage
           LOCAL                   ADDRESS         
           =====                   =======         
           setItem                 000189EC 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000022 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018A7A - 00018A7E (0x5 bytes), align: 0
  Segment part 50.            Intra module refs:   findItem
                                                   initItem2
                                                   setItem
                                                   writeWord
                                                   writeWordD
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine74           00018A7A 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018A7F - 00018B05 (0x87 bytes), align: 0
  Segment part 51.            Intra module refs:   compactPage
                                                   initPage
                                                   osal_nv_write
                                                   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
           calcChkF                00018A7F 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000022 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018B06 - 00018B0C (0x7 bytes), align: 0
  Segment part 52.            Intra module refs:   ?Subroutine5
                                                   calcChkF
                                                   compactPage
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine70           00018B06 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018B0D - 00018B54 (0x48 bytes), align: 0
  Segment part 53.            Intra module refs:   compactPage
                                                   initNV
                                                   initPage
                                                   osal_nv_item_len
                                                   osal_nv_write
                                                   setItem
                                                   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
           readHdr                 00018B0D 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000022 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018B55 - 00018BEE (0x9a bytes), align: 0
  Segment part 54.            Intra module refs:   ?Subroutine6
                                                   setItem
                                                   setPageUse
                                                   writeItem
                                                   writeWordD
                                                   writeWordH
           LOCAL                   ADDRESS         
           =====                   =======         
           writeWord               00018B55 
               calls direct
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 0000001C ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018BEF - 00018BF7 (0x9 bytes), align: 0
  Segment part 55.            Intra module refs:   compactPage
                                                   writeWord
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine37           00018BEF 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018BF8 - 00018C29 (0x32 bytes), align: 0
  Segment part 56.            Intra module refs:   compactPage
                                                   initNV
                                                   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           writeWordD              00018BF8 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000022 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018C2A - 00018C70 (0x47 bytes), align: 0
  Segment part 57.            Intra module refs:   compactPage
                                                   osal_nv_write
                                                   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
           writeWordH              00018C2A 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000022 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018C71 - 00018C77 (0x7 bytes), align: 0
  Segment part 58.            Intra module refs:   writeWord
                                                   writeWordH
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine31           00018C71 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018C78 - 00018DFF (0x188 bytes), align: 0
  Segment part 59.            Intra module refs:   compactPage
                                                   osal_nv_write
                                                   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
           writeBuf                00018C78 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000024 ( 00000018 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018E00 - 00018E08 (0x9 bytes), align: 0
  Segment part 60.            Intra module refs:   writeBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine53           00018E00 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018E09 - 00018E0C (0x4 bytes), align: 0
  Segment part 61.            Intra module refs:   writeBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine39           00018E09 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018E0D - 00018E10 (0x4 bytes), align: 0
  Segment part 62.            Intra module refs:   ?Subroutine38
                                                   ?Subroutine39
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine59           00018E0D 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018E11 - 00018E19 (0x9 bytes), align: 0
  Segment part 63.            Intra module refs:   ?Subroutine59
                                                   ?Subroutine60
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine69           00018E11 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018E1A - 00018E22 (0x9 bytes), align: 0
  Segment part 64.            Intra module refs:   writeBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine38           00018E1A 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018E23 - 00018E33 (0x11 bytes), align: 0
  Segment part 65.            Intra module refs:   writeBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine30           00018E23 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018E34 - 00018E38 (0x5 bytes), align: 0
  Segment part 66.            Intra module refs:   writeBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine24           00018E34 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018E39 - 00018E3E (0x6 bytes), align: 0
  Segment part 67.            Intra module refs:   writeBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine22           00018E39 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018E3F - 00018E44 (0x6 bytes), align: 0
  Segment part 68.            Intra module refs:   writeBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine16           00018E3F 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018E45 - 00018E4A (0x6 bytes), align: 0
  Segment part 69.            Intra module refs:   compactPage
                                                   initPage
                                                   osal_nv_write
                                                   writeBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine14           00018E45 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018E4B - 00019078 (0x22e bytes), align: 0
  Segment part 70.            Intra module refs:   compactPage
                                                   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           xferBuf                 00018E4B 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000026 ( 0000001C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019079 - 00019082 (0xa bytes), align: 0
  Segment part 71.            Intra module refs:   calcChkF
                                                   osal_nv_read
                                                   osal_nv_write
                                                   readHdr
                                                   writeBuf
                                                   writeItem
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine75           00019079 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019083 - 0001908C (0xa bytes), align: 0
  Segment part 72.            Intra module refs:   ?Subroutine1
                                                   ?Subroutine22
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine54           00019083 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001908D - 00019095 (0x9 bytes), align: 0
  Segment part 73.            Intra module refs:   osal_nv_write
                                                   writeBuf
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine50           0001908D 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019096 - 000190A6 (0x11 bytes), align: 0
  Segment part 74.            Intra module refs:   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine49           00019096 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000190A7 - 000190B7 (0x11 bytes), align: 0
  Segment part 75.            Intra module refs:   osal_nv_read
                                                   readHdr
                                                   writeBuf
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine48           000190A7 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000190B8 - 000190BD (0x6 bytes), align: 0
  Segment part 76.            Intra module refs:   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine41           000190B8 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000190BE - 000190CB (0xe bytes), align: 0
  Segment part 77.            Intra module refs:   calcChkF
                                                   osal_nv_read
                                                   writeBuf
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine40           000190BE 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000190CC - 000190D1 (0x6 bytes), align: 0
  Segment part 78.            Intra module refs:   initPage
                                                   osal_nv_write
                                                   writeBuf
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine35           000190CC 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000190D2 - 000190DB (0xa bytes), align: 0
  Segment part 79.            Intra module refs:   writeBuf
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine34           000190D2 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000190DC - 000190EA (0xf bytes), align: 0
  Segment part 80.            Intra module refs:   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine28           000190DC 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000190EB - 000190F0 (0x6 bytes), align: 0
  Segment part 81.            Intra module refs:   ?Subroutine28
                                                   ?Subroutine41
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine60           000190EB 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000190F1 - 000190FA (0xa bytes), align: 0
  Segment part 82.            Intra module refs:   writeBuf
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine26           000190F1 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000190FB - 00019100 (0x6 bytes), align: 0
  Segment part 83.            Intra module refs:   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine17           000190FB 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019101 - 00019112 (0x12 bytes), align: 0
  Segment part 84.            Intra module refs:   writeBuf
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            00019101 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019113 - 0001911A (0x8 bytes), align: 0
  Segment part 85.            Intra module refs:   writeBuf
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            00019113 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001911B - 00019120 (0x6 bytes), align: 0
  Segment part 86.            Intra module refs:   writeBuf
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0001911B 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019121 - 00019131 (0x11 bytes), align: 0
  Segment part 87.            Intra module refs:   osal_nv_read
                                                   writeBuf
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            00019121 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019132 - 000192C8 (0x197 bytes), align: 0
  Segment part 88.            Intra module refs:   initItem
                                                   initItem2
           LOCAL                   ADDRESS         
           =====                   =======         
           writeItem               00019132 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000010 ( 0000001C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000192C9 - 000192D5 (0xd bytes), align: 0
  Segment part 89.            Intra module refs:   compactPage
                                                   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine43           000192C9 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000192D6 - 000192E0 (0xb bytes), align: 0
  Segment part 90.            Intra module refs:   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine42           000192D6 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000192E1 - 000192E8 (0x8 bytes), align: 0
  Segment part 91.            Intra module refs:   initItem
                                                   osal_nv_item_init
                                                   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine21           000192E1 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000192E9 - 000192F0 (0x8 bytes), align: 0
  Segment part 92.            Intra module refs:   compactPage
                                                   osal_nv_read
                                                   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine19           000192E9 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000192F1 - 0001933A (0x4a bytes), align: 0
  Segment part 93.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_nv_init            000192F1        main (ZMain)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001933B - 000193A2 (0x68 bytes), align: 0
  Segment part 94.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_nv_item_init       0001933B        ZDApp_LeaveCtrlInit (ZDApp)
                                                   zgInit (ZGlobals)
                                                   zgReadStartupOptions (ZGlobals)
                                                   zmain_ext_addr (ZMain)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000002 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000193A3 - 00019400 (0x5e bytes), align: 0
  Segment part 95.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_nv_item_len        000193A3        MT_ProcessGetNV (MTEL)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   MT_ProcessSetNV (MTEL)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019401 - 00019404 (0x4 bytes), align: 0
  Segment part 96.            Intra module refs:   calcChkF
                                                   osal_nv_item_len
                                                   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine18           00019401 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019405 - 0001940A (0x6 bytes), align: 0
  Segment part 97.            Intra module refs:   ?Subroutine11
                                                   ?Subroutine12
                                                   ?Subroutine15
                                                   ?Subroutine16
                                                   ?Subroutine17
                                                   ?Subroutine18
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine55           00019405 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001940B - 000197EF (0x3e5 bytes), align: 0
  Segment part 98.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_nv_write           0001940B        MT_ProcessSerialCommand (MTEL)
                                                   MT_ProcessSetNV (MTEL)
                                                   Segment part 19 (AssocList)
                                                   ZDApp_LeaveCtrlSet (ZDApp)
                                                   ZDApp_LeaveCtrlStartup (ZDApp)
                                                   aps_GroupsWriteNV (aps_groups)
                                                   zgInit (ZGlobals)
                                                   zgWriteStartupOptions (ZGlobals)
               calls direct
               stack 1 = 00000000 ( 00000004 )
               stack 2 = 00000004 ( 00000026 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000197F0 - 000197F5 (0x6 bytes), align: 0
  Segment part 99.            Intra module refs:   ?Subroutine1
                                                   osal_nv_read
                                                   osal_nv_write
                                                   writeBuf
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine71           000197F0 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000197F6 - 000197FE (0x9 bytes), align: 0
  Segment part 100.           Intra module refs:   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine27           000197F6 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000197FF - 00019801 (0x3 bytes), align: 0
  Segment part 101.           Intra module refs:   osal_nv_write
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine23           000197FF 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019802 - 00019806 (0x5 bytes), align: 0
  Segment part 102.           Intra module refs:   ?Subroutine2
                                                   ?Subroutine23
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine73           00019802 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019807 - 0001980E (0x8 bytes), align: 0
  Segment part 103.           Intra module refs:   ?Subroutine2
                                                   ?Subroutine23
                                                   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine57           00019807 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001980F - 00019816 (0x8 bytes), align: 0
  Segment part 104.           Intra module refs:   compactPage
                                                   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine20           0001980F 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019817 - 00019822 (0xc bytes), align: 0
  Segment part 105.           Intra module refs:   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           00019817 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019823 - 0001982A (0x8 bytes), align: 0
  Segment part 106.           Intra module refs:   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine12           00019823 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001982B - 0001982F (0x5 bytes), align: 0
  Segment part 107.           Intra module refs:   osal_nv_write
                                                   setItem
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            0001982B 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019830 - 0001983F (0x10 bytes), align: 0
  Segment part 108.           Intra module refs:   compactPage
                                                   initItem
                                                   initItem2
                                                   osal_nv_read
                                                   osal_nv_write
                                                   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            00019830 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019840 - 0001984A (0xb bytes), align: 0
  Segment part 109.           Intra module refs:   osal_nv_write
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            00019840 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001984B - 0001985B (0x11 bytes), align: 0
  Segment part 110.           Intra module refs:   osal_nv_write
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001984B 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001985C - 000198F1 (0x96 bytes), align: 0
  Segment part 111.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_nv_read            0001985C        MT_ProcessGetDeviceInfo (MTEL)
                                                   MT_ProcessGetNV (MTEL)
                                                   MT_ProcessGetNvInfo (MTEL)
                                                   ZDApp_LeaveCtrlInit (ZDApp)
                                                   zgInit (ZGlobals)
                                                   zgReadStartupOptions (ZGlobals)
                                                   zgWriteStartupOptions (ZGlobals)
                                                   zmain_ext_addr (ZMain)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000004 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000198F2 - 0001990C (0x1b bytes), align: 0
  Segment part 112.           Intra module refs:   osal_nv_read
                                                   readHdr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            000198F2 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001990D - 00019912 (0x6 bytes), align: 0
  Segment part 113.           Intra module refs:   ?Subroutine1
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine58           0001990D 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019913 - 0001991B (0x9 bytes), align: 0
  Segment part 114.           Intra module refs:   ?Subroutine24
                                                   ?Subroutine58
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine65           00019913 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F7A5 - 0000F7A8 (0x4 bytes), align: 0
  Segment part 18.            Intra module refs:   ?Subroutine48
                                                   ?Subroutine49
                                                   RTG_DataReq (rtg)
                                                   calcChkF
                                                   halAssertHazardLights (hal_assert)
                                                   macScanStartTimer (mac_scan)
                                                   nwk_data_ind_processing (nwk)
                                                   osal_nv_write
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_1            0000F7A5 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000016C3 - 000016C6 (0x4 bytes), align: 0
  Segment part 19.            Intra module refs:   __Constant_1

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\OSAL_PwrMgr.r51
  PROGRAM MODULE, NAME : OSAL_PwrMgr

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000F095 - 0000F09B (0x7 bytes), align: 0
  Segment part 6.             Intra module refs:   osal_pwrmgr_device
                                                   osal_pwrmgr_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pwrmgr_attribute        0000F095 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A79A - 0003A7A7 (0xe bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_pwrmgr_init        0003A79A        osal_init_system (OSAL)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A7A8 - 0003A7AF (0x8 bytes), align: 0
  Segment part 8.             Intra module refs:   osal_pwrmgr_device
                                                   osal_pwrmgr_init
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0003A7A8 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A7B0 - 0003A7B9 (0xa bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_pwrmgr_device      0003A7B0        ZDApp_NetworkStartEvt (ZDApp)
                                                   ZDApp_event_loop (ZDApp)
               stack 1 = 00000000 ( 00000002 )

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\OSAL_SampleApp.r51
  PROGRAM MODULE, NAME : OSAL_SampleApp

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A304 - 0003A402 (0xff bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalAddTasks            0003A304        osal_init_system (OSAL)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000E )

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\OSAL_Tasks.r51
  PROGRAM MODULE, NAME : OSAL_Tasks

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000F09C - 0000F09D (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   osalFindTask
                                                   osalInitTasks
                                                   osalNextActiveTask
                                                   osalTaskAdd
                                                   osalTaskInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tasksHead               0000F09C 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F09E - 0000F09F (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   ?Subroutine1
                                                   ?Subroutine2
                                                   osalInitTasks
                                                   osalTaskInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           activeTask              0000F09E        osal_self (OSAL)
                                                   osal_start_system (OSAL)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F0A0 - 0000F0A0 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   osalTaskAdd
                                                   osalTaskInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           taskIDs                 0000F0A0 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FE13 - 0001FE27 (0x15 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalTaskInit            0001FE13        osal_init_system (OSAL)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FE28 - 0001FE2E (0x7 bytes), align: 0
  Segment part 10.            Intra module refs:   osalFindTask
                                                   osalNextActiveTask
                                                   osalTaskInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0001FE28 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FE2F - 0001FF22 (0xf4 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalTaskAdd             0001FE2F        osalAddTasks (OSAL_SampleApp)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000003 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FF23 - 0001FF28 (0x6 bytes), align: 0
  Segment part 12.            Intra module refs:   osalTaskAdd
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001FF23 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FF29 - 0001FF2D (0x5 bytes), align: 0
  Segment part 13.            Intra module refs:   ?Subroutine0
                                                   ?Subroutine1
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0001FF29 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FF2E - 0001FF7C (0x4f bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalInitTasks           0001FF2E        osal_init_system (OSAL)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FF7D - 0001FF88 (0xc bytes), align: 0
  Segment part 15.            Intra module refs:   osalInitTasks
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0001FF7D 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FF89 - 0001FF92 (0xa bytes), align: 0
  Segment part 16.            Intra module refs:   osalInitTasks
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0001FF89 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FF93 - 0001FFC8 (0x36 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalNextActiveTask      0001FF93        osal_start_system (OSAL)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FFC9 - 0001FFF9 (0x31 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalFindTask            0001FFC9        osal_msg_send (OSAL)
                                                   osal_set_event (OSAL)
               stack 1 = 00000000 ( 00000002 )

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\OSAL_Timers.r51
  PROGRAM MODULE, NAME : OSAL_Timers

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000F0A1 - 0000F0A2 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   ?Subroutine1
                                                   osalAddTimer
                                                   osalDeleteTimer
                                                   osalFindTimer
                                                   osalTimerUpdate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timerHead               0000F0A1 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F0A3 - 0000F0A6 (0x4 bytes), align: 0
  Segment part 8.             Intra module refs:   osalTimerInit
                                                   osal_timer_hw_setup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tmr_count               0000F0A3 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F0A7 - 0000F0A8 (0x2 bytes), align: 0
  Segment part 9.             Intra module refs:   osalTimerInit
                                                   osal_update_timers
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tmr_decr_time           0000F0A7 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F0A9 - 0000F0A9 (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   osalTimerInit
                                                   osal_start_timerEx
                                                   osal_timer_activate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timerActive             0000F0A9 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F0AA - 0000F0AD (0x4 bytes), align: 0
  Segment part 11.            Intra module refs:   osalTimerInit
                                                   osalTimerUpdate
                                                   osal_GetSystemClock
           LOCAL                   ADDRESS         
           =====                   =======         
           osal_systemClock        0000F0AA 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E810 - 0002E84E (0x3f bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalTimerInit           0002E810        osal_init_system (OSAL)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E84F - 0002E8E7 (0x99 bytes), align: 0
  Segment part 17.            Intra module refs:   osal_start_timerEx
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalAddTimer            0002E84F 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000C ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E8E8 - 0002E923 (0x3c bytes), align: 0
  Segment part 18.            Intra module refs:   osalAddTimer
                                                   osal_get_timeoutEx
                                                   osal_stop_timerEx
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalFindTimer           0002E8E8 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000E ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E924 - 0002E92B (0x8 bytes), align: 0
  Segment part 19.            Intra module refs:   osalDeleteTimer
                                                   osalFindTimer
                                                   osal_start_timer
                                                   osal_stop_timer
                                                   osal_timer_activate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0002E924 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E92C - 0002E99D (0x72 bytes), align: 0
  Segment part 20.            Intra module refs:   osal_stop_timerEx
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalDeleteTimer         0002E92C 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000C ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E99E - 0002E9A3 (0x6 bytes), align: 0
  Segment part 21.            Intra module refs:   osalAddTimer
                                                   osalDeleteTimer
                                                   osalTimerUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0002E99E 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E9A4 - 0002E9AD (0xa bytes), align: 0
  Segment part 22.            Intra module refs:   osalDeleteTimer
                                                   osalFindTimer
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0002E9A4 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E9AE - 0002E9D6 (0x29 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_start_timer        0002E9AE        HalLedUpdate (hal_led)
                                                   RTG_Init (rtg)
                                                   RTG_TimerEvent (rtg)
                                                   ZDO_StartDevice (ZDObject)
                                                   nwk_event_loop (nwk)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E9D7 - 0002EA1F (0x49 bytes), align: 0
  Segment part 24.            Intra module refs:   osal_start_timer
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_start_timerEx      0002E9D7        ?Subroutine5 (ZDApp)
                                                   HalKeyConfig (hal_key)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   NLME_PermitJoiningSet (NLMEDE)
                                                   NLME_SetPollRate (nwk_util)
                                                   RTG_BcastAdd (rtg)
                                                   RTG_BcastTimerHandler (rtg)
                                                   SampleApp_ProcessEvent (SampleApp)
                                                   halProcessKeyInterrupt (hal_key)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000009 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EA20 - 0002EA3C (0x1d bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_stop_timer         0002EA20        nwk_event_loop (nwk)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EA3D - 0002EA7C (0x40 bytes), align: 0
  Segment part 26.            Intra module refs:   osal_stop_timer
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_stop_timerEx       0002EA3D        HalKeyConfig (hal_key)
                                                   NLME_SetPollRate (nwk_util)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000009 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EA7D - 0002EAB3 (0x37 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_get_timeoutEx      0002EA7D        AddrMgrWriteNVRequest (ZDApp)
                                                   NLDE_DataCnf (NLMEDE_CB)
                                                   Segment part 17 (nwk_bufs)
                                                   Segment part 83 (rtg)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EAB4 - 0002EAB8 (0x5 bytes), align: 0
  Segment part 28.            Intra module refs:   osalTimerInit
                                                   osal_GetSystemClock
                                                   osal_get_timeoutEx
                                                   osal_start_timerEx
                                                   osal_stop_timerEx
                                                   osal_timer_hw_setup
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0002EAB4 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EAB9 - 0002EACF (0x17 bytes), align: 0
  Segment part 29.            Intra module refs:   osalTimerInit
                                                   osal_start_timerEx
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_timer_activate     0002EAB9 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000C ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EAD0 - 0002EAFC (0x2d bytes), align: 0
  Segment part 31.            Intra module refs:   osal_timer_activate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_timer_hw_setup     0002EAD0 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000009 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EAFD - 0002EB06 (0xa bytes), align: 0
  Segment part 33.            Intra module refs:   osal_update_timers
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0002EAFD 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EB07 - 0002EC1D (0x117 bytes), align: 0
  Segment part 34.            Intra module refs:   osal_update_timers
           LOCAL                   ADDRESS         
           =====                   =======         
           osalTimerUpdate         0002EB07 
               calls direct
               stack 1 = 00000002 ( 00000001 )
               stack 2 = 00000000 ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EC1E - 0002EC26 (0x9 bytes), align: 0
  Segment part 35.            Intra module refs:   osalDeleteTimer
                                                   osalTimerUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0002EC1E 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EC27 - 0002EC3A (0x14 bytes), align: 0
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_update_timers      0002EC27        Onboard_TimerCallBack (OnBoard)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EC3B - 0002EC52 (0x18 bytes), align: 0
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_GetSystemClock     0002EC3B        HalLedBlink (hal_led)
                                                   HalLedUpdate (hal_led)
                                                   MT_ProcessSerialCommand (MTEL)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F7A9 - 0000F7AC (0x4 bytes), align: 0
  Segment part 14.            Intra module refs:   AssocAddNew (AssocList)
                                                   NLDE_DataIndSend (nwk_util)
                                                   NLME_SetAssocFlags (nwk_util)
                                                   RTG_BcastAdd (rtg)
                                                   RTG_CalcAddress (rtg)
                                                   RTG_DataReq (rtg)
                                                   RTG_GetTreeRoute (rtg)
                                                   RTG_UpdateNeighborEntry (nwk_util)
                                                   ZDO_StartDevice (ZDObject)
                                                   halAssertHazardLights (hal_assert)
                                                   macBackoffTimerCompareIsr (mac_backoff_timer)
                                                   macBackoffTimerInit (mac_backoff_timer)
                                                   macBackoffTimerSetTrigger (mac_backoff_timer)
                                                   macTimerRecalcUnaligned (mac_timer)
                                                   nwk_data_ind_processing (nwk)
                                                   osalTimerInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_0            0000F7A9 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000016C7 - 000016CA (0x4 bytes), align: 0
  Segment part 15.            Intra module refs:   __Constant_0

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\OnBoard.r51
  PROGRAM MODULE, NAME : OnBoard

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 0000008F - 0000008F (0x1 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0INP                   0000008F 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BE - 000000BE (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SLEEP                   000000BE 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000FE - 000000FE (0x1 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1DIR                   000000FE 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F0AE - 0000F0AE (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   InitBoard
                                                   OnBoard_KeyCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OnboardKeyIntEnable     0000F0AE 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F0AF - 0000F0AF (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   InitBoard
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OnboardTimerIntEnable   0000F0AF 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F0B0 - 0000F0B7 (0x8 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aExtendedAddress        0000F0B0        ZMacGetReq (zmac)
                                                   ZMacReset (zmac)
                                                   ZMacSetReq (zmac)
                                                   zmain_ext_addr (ZMain)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F7AD - 0000F7AD (0x1 bytes), align: 0
  Segment part 13.            Intra module refs:   OnBoard_SendKeys
                                                   RegisterForKeys
           LOCAL                   ADDRESS         
           =====                   =======         
           registeredKeysTaskID    0000F7AD 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039985 - 00039A62 (0xde bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InitBoard               00039985        main (ZMain)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039A63 - 00039A79 (0x17 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RegisterForKeys         00039A63        SampleApp_Init (SampleApp)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039A7A - 00039AC8 (0x4f bytes), align: 0
  Segment part 17.            Intra module refs:   OnBoard_KeyCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OnBoard_SendKeys        00039A7A        MT_ProcessSerialCommand (MTEL)
               calls direct
               stack 1 = 00000002 ( 00000001 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039AC9 - 00039AF3 (0x2b bytes), align: 0
  Segment part 18.            Intra module refs:   InitBoard
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OnBoard_KeyCallback     00039AC9 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039AF4 - 00039AFA (0x7 bytes), align: 0
  Segment part 20.            Intra module refs:   OnBoard_KeyCallback
                                                   Onboard_TimerCallBack
                                                   RegisterForKeys
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00039AF4 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039AFB - 00039B1D (0x23 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Onboard_rand            00039AFB        osal_rand (OSAL)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039B1E - 00039B37 (0x1a bytes), align: 0
  Segment part 23.            Intra module refs:   InitBoard
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Onboard_wait            00039B1E        zmain_ext_addr (ZMain)
                                                   zmain_vdd_check (ZMain)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000B ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039B38 - 00039B50 (0x19 bytes), align: 0
  Segment part 24.            Intra module refs:   InitBoard
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Onboard_TimerCallBack   00039B38 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000016CB - 000016CB (0x1 bytes), align: 0
  Segment part 14.            Intra module refs:   registeredKeysTaskID

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\SPIMgr.r51
  PROGRAM MODULE, NAME : SPIMgr

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000F0B8 - 0000F0B8 (0x1 bytes), align: 0
  Segment part 14.            Intra module refs:   SPIMgr_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           App_TaskID              0000F0B8 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F0B9 - 0000F0B9 (0x1 bytes), align: 0
  Segment part 15.            Intra module refs:   SPIMgr_ProcessZToolData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           state                   0000F0B9 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F0BA - 0000F0BB (0x2 bytes), align: 0
  Segment part 16.            Intra module refs:   SPIMgr_ProcessZToolData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CMD_Token               0000F0BA 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F0BC - 0000F0BC (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   SPIMgr_ProcessZToolData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LEN_Token               0000F0BC 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F0BD - 0000F0BD (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   SPIMgr_ProcessZToolData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FSC_Token               0000F0BD 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F0BE - 0000F0BF (0x2 bytes), align: 0
  Segment part 19.            Intra module refs:   ?Subroutine4
                                                   ?Subroutine7
                                                   SPIMgr_ProcessZToolData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SPI_Msg                 0000F0BE 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F0C0 - 0000F0C0 (0x1 bytes), align: 0
  Segment part 20.            Intra module refs:   SPIMgr_ProcessZToolData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tempDataLen             0000F0C0 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FBE7 - 0002FC64 (0x7e bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SPIMgr_Init             0002FBE7        MT_TaskInit (MTEL)
               calls direct
               stack 1 = 00000000 ( 00000003 )
               stack 2 = 00000000 ( 0000001E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FC65 - 0002FC6B (0x7 bytes), align: 0
  Segment part 23.            Intra module refs:   SPIMgr_Init
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            0002FC65 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FC6C - 0002FC90 (0x25 bytes), align: 0
  Segment part 25.            Intra module refs:   SPIMgr_ProcessZToolData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SPIMgr_CalcFCS          0002FC6C        MT_BuildSPIMsg (MTEL)
                                                   MT_ProcessCommand (MTEL)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000004D ( 00000009 )
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F0C1 - 0000F0C2 (0x2 bytes), align: 0
  Segment part 21.            Intra module refs:   ?Subroutine5
                                                   SPIMgr_ProcessZToolData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           a                       0000F0C1 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FC91 - 0002FEEF (0x25f bytes), align: 0
  Segment part 26.            Intra module refs:   SPIMgr_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SPIMgr_ProcessZToolData
                                   0002FC91 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 0000004F )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FEF0 - 0002FEFD (0xe bytes), align: 0
  Segment part 27.            Intra module refs:   SPIMgr_ProcessZToolData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0002FEF0 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FEFE - 0002FF01 (0x4 bytes), align: 0
  Segment part 28.            Intra module refs:   SPIMgr_ProcessZToolData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0002FEFE 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FF02 - 0002FF08 (0x7 bytes), align: 0
  Segment part 29.            Intra module refs:   ?Subroutine1
                                                   ?Subroutine3
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            0002FF02 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FF09 - 0002FF0C (0x4 bytes), align: 0
  Segment part 30.            Intra module refs:   SPIMgr_ProcessZToolData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0002FF09 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FF0D - 0002FF1E (0x12 bytes), align: 0
  Segment part 31.            Intra module refs:   ?Subroutine0
                                                   ?Subroutine2
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0002FF0D 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FF1F - 0002FF26 (0x8 bytes), align: 0
  Segment part 32.            Intra module refs:   SPIMgr_ProcessZToolData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0002FF1F 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FF27 - 0002FF32 (0xc bytes), align: 0
  Segment part 33.            Intra module refs:   ?Subroutine1
                                                   ?Subroutine6
                                                   SPIMgr_ProcessZToolData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            0002FF27 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FF33 - 0002FF3E (0xc bytes), align: 0
  Segment part 34.            Intra module refs:   SPIMgr_ProcessZToolData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0002FF33 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000016CC - 000016DC (0x11 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 6
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000016DD - 000016E9 (0xd bytes), align: 0
  Segment part 9.             Intra module refs:   Segment part 8
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000016EA - 000016F9 (0x10 bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 10
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000016FA - 00001713 (0x1a bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 12
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F7AE - 0000F7BE (0x11 bytes), align: 0
  Segment part 6.             Intra module refs:   SPIMgr_ProcessZToolData
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F7BF - 0000F7CB (0xd bytes), align: 0
  Segment part 8.             Intra module refs:   SPIMgr_ProcessZToolData
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F7CC - 0000F7DB (0x10 bytes), align: 0
  Segment part 10.            Intra module refs:   SPIMgr_ProcessZToolData
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F7DC - 0000F7F5 (0x1a bytes), align: 0
  Segment part 12.            Intra module refs:   SPIMgr_ProcessZToolData

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\SampleApp.r51
  PROGRAM MODULE, NAME : SampleApp

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000F0C3 - 0000F254 (0x192 bytes), align: 0
  Segment part 10.            Intra module refs:   SampleApp_MessageMSGCB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           JoinNode                0000F0C3 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F255 - 0000F296 (0x42 bytes), align: 0
  Segment part 11.            Intra module refs:   SampleApp_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RfTx                    0000F255 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F7F6 - 0000F7FD (0x8 bytes), align: 0
  Segment part 6.             Intra module refs:   SampleApp_Init
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F7FE - 0000F815 (0x18 bytes), align: 0
  Segment part 8.             Intra module refs:   SampleApp_ProcessEvent
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F816 - 0000F819 (0x4 bytes), align: 0
  Segment part 12.            Intra module refs:   Segment part 15
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SampleApp_ClusterList   0000F816 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F81A - 0000F825 (0xc bytes), align: 0
  Segment part 14.            Intra module refs:   SampleApp_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SampleApp_SimpleDesc    0000F81A 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F297 - 0000F29C (0x6 bytes), align: 0
  Segment part 16.            Intra module refs:   SampleApp_Init
                                                   SampleApp_SendFlashMessage
                                                   SampleApp_SendPeriodicMessage
                                                   SendData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SampleApp_epDesc        0000F297 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F29D - 0000F29D (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   SampleApp_Init
                                                   SampleApp_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SampleApp_TaskID        0000F29D 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F29E - 0000F29E (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   SampleApp_Init
                                                   SampleApp_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SampleApp_NwkState      0000F29E 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F29F - 0000F29F (0x1 bytes), align: 0
  Segment part 19.            Intra module refs:   SampleApp_Init
                                                   SampleApp_SendFlashMessage
                                                   SampleApp_SendPeriodicMessage
                                                   SendData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SampleApp_TransID       0000F29F 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F2A0 - 0000F2A3 (0x4 bytes), align: 0
  Segment part 20.            Intra module refs:   SampleApp_Init
                                                   SampleApp_SendPeriodicMessage
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SampleApp_Periodic_DstAddr
                                   0000F2A0 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F2A4 - 0000F2A7 (0x4 bytes), align: 0
  Segment part 21.            Intra module refs:   SampleApp_Init
                                                   SampleApp_SendFlashMessage
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SampleApp_Flash_DstAddr
                                   0000F2A4 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F2A8 - 0000F2B9 (0x12 bytes), align: 0
  Segment part 22.            Intra module refs:   SampleApp_HandleKeys
                                                   SampleApp_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SampleApp_Group         0000F2A8 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F2BA - 0000F2BA (0x1 bytes), align: 0
  Segment part 23.            Intra module refs:   SampleApp_SendPeriodicMessage
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SampleAppPeriodicCounter
                                   0000F2BA 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F2BB - 0000F2BB (0x1 bytes), align: 0
  Segment part 24.            Intra module refs:   SampleApp_SendFlashMessage
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SampleAppFlashCounter   0000F2BB 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DF68 - 0002E01B (0xb4 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SampleApp_Init          0002DF68        osalAddTasks (OSAL_SampleApp)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F2BC - 0000F2ED (0x32 bytes), align: 0
  Segment part 25.            Intra module refs:   ?Subroutine0
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RxBuf                   0000F2BC 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F2EE - 0000F2EF (0x2 bytes), align: 0
  Segment part 27.            Intra module refs:   SampleApp_MessageMSGCB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           clear                   0000F2EE 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E01C - 0002E1A4 (0x189 bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SampleApp_ProcessEvent
                                   0002E01C        osalAddTasks (OSAL_SampleApp)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E1A5 - 0002E1F2 (0x4e bytes), align: 0
  Segment part 30.            Intra module refs:   SampleApp_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SampleApp_HandleKeys    0002E1A5 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000C ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E1F3 - 0002E27B (0x89 bytes), align: 0
  Segment part 31.            Intra module refs:   SampleApp_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SampleApp_MessageMSGCB
                                   0002E1F3 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000C ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E27C - 0002E285 (0xa bytes), align: 0
  Segment part 32.            Intra module refs:   SampleApp_MessageMSGCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0002E27C 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E286 - 0002E2CF (0x4a bytes), align: 0
  Segment part 33.            Intra module refs:   SampleApp_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SampleApp_SendPeriodicMessage
                                   0002E286 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000C ( 00000013 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E2D0 - 0002E349 (0x7a bytes), align: 0
  Segment part 34.            Intra module refs:   SampleApp_HandleKeys
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SampleApp_SendFlashMessage
                                   0002E2D0 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000A ( 00000016 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E34A - 0002E3C3 (0x7a bytes), align: 0
  Segment part 35.            Intra module refs:   SampleApp_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SendData                0002E34A 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000C ( 00000017 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E3C4 - 0002E3CB (0x8 bytes), align: 0
  Segment part 36.            Intra module refs:   SampleApp_HandleKeys
                                                   SampleApp_MessageMSGCB
                                                   SampleApp_SendFlashMessage
                                                   SampleApp_SendPeriodicMessage
                                                   SendData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0002E3C4 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001714 - 0000171B (0x8 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 6
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000171C - 00001733 (0x18 bytes), align: 0
  Segment part 9.             Intra module refs:   Segment part 8
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001734 - 00001737 (0x4 bytes), align: 0
  Segment part 13.            Intra module refs:   SampleApp_ClusterList
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001738 - 00001743 (0xc bytes), align: 0
  Segment part 15.            Intra module refs:   SampleApp_SimpleDesc

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\SampleAppHw.r51
  PROGRAM MODULE, NAME : SampleAppHw

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000F3 - 000000F3 (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0SEL                   000000F3 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000FD - 000000FD (0x1 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0DIR                   000000FD 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000080 - 00000080 (0x1 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P0                   00000080 

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\ZDApp.r51
  PROGRAM MODULE, NAME : ZDApp

  SEGMENTS IN THE MODULE
  ======================
XDATA_I
  Relative segment, address: XDATA 0000F826 - 0000F826 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   ZDApp_ProcessNetworkJoin
                                                   ZDApp_ProcessOSALMsg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zdoDiscCounter          0000F826 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F2F0 - 0000F2F8 (0x9 bytes), align: 0
  Segment part 10.            Intra module refs:   ZDApp_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDAppNwkAddr            0000F2F0        ?Subroutine4 (ZDObject)
                                                   ZDO_ProcessActiveEPReq (ZDObject)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_ProcessSimpleDescReq (ZDObject)
                                                   ZDO_UpdateNwkStatus (ZDObject)
                                                   ZDP_SimpleDescMsg (ZDProfile)
                                                   zdpProcessAddrReq (ZDProfile)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F827 - 0000F827 (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   ZDApp_ProcessOSALMsg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           continueJoining         0000F827 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F2F9 - 0000F2F9 (0x1 bytes), align: 0
  Segment part 13.            Intra module refs:   ZDApp_ProcessNetworkJoin
                                                   ZDApp_ProcessOSALMsg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _tmpRejoinState         0000F2F9        NLME_ReJoinRequest (NLMEDE)
                                                   nwk_beacon_notify_ind_processing (nwk)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F2FA - 0000F2FA (0x1 bytes), align: 0
  Segment part 14.            Intra module refs:   ?Subroutine28
                                                   ?Subroutine5
                                                   ?Subroutine8
                                                   AddrMgrWriteNVRequest
                                                   Segment part 27
                                                   ZDApp_Init
                                                   ZDApp_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDAppTaskID             0000F2FA        Segment part 14 (APSMEDE_CB)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F2FB - 0000F2FB (0x1 bytes), align: 0
  Segment part 15.            Intra module refs:   ZDApp_NetworkStartEvt
                                                   ZDApp_ProcessNetworkJoin
                                                   ZDApp_event_loop
                                                   ZDO_JoinConfirmCB
                                                   ZDO_StartRouterConfirmCB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkStatus               0000F2FB 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F2FC - 0000F2FD (0x2 bytes), align: 0
  Segment part 16.            Intra module refs:   ?Subroutine11
                                                   ZDApp_MatchDescRspCB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_AutoFindMode_epDesc
                                   0000F2FC 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F2FE - 0000F2FE (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   ?Subroutine3
                                                   ZDApp_LeaveCtrlSet
                                                   ZDApp_LeaveCtrlStartup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_LeaveCtrl         0000F2FE 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F828 - 0000F828 (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   ?Subroutine0
                                                   ZDAppCheckForHoldKey
                                                   ZDApp_Init
                                                   ZDApp_NetworkStartEvt
                                                   ZDApp_ProcessNetworkJoin
                                                   ZDApp_ProcessOSALMsg
                                                   ZDApp_event_loop
                                                   ZDOInitDevice
                                                   ZDO_JoinConfirmCB
                                                   ZDO_StartRouterConfirmCB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devState                0000F828        ?Subroutine1 (ZDObject)
                                                   MT_ProcessGetDeviceInfo (MTEL)
                                                   ZDO_StartDevice (ZDObject)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F2FF - 0000F2FF (0x1 bytes), align: 0
  Segment part 20.            Intra module refs:   ZDApp_ProcessNetworkJoin
                                                   ZDApp_ProcessOSALMsg
                                                   ZDApp_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devStartMode            0000F2FF 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F300 - 0000F300 (0x1 bytes), align: 0
  Segment part 21.            Intra module refs:   ZDApp_MatchDescRspCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ZDApp_MatchDescRsp_TaskID
                                   0000F300 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F301 - 0000F301 (0x1 bytes), align: 0
  Segment part 23.            Intra module refs:   ZDApp_ProcessNetworkJoin
                                                   ZDApp_ProcessOSALMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           retryCnt                0000F301 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F829 - 0000F82A (0x2 bytes), align: 0
  Segment part 24.            Intra module refs:   ?Subroutine23
                                                   ZDAppSetupProtoVersion
                                                   ZDO_NetworkDiscoveryConfirmCB
           LOCAL                   ADDRESS         
           =====                   =======         
           sPVerList               0000F829 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F82B - 0000F830 (0x6 bytes), align: 0
  Segment part 26.            Intra module refs:   ZDApp_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_epDesc            0000F82B        fillAndSend (ZDProfile)
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B7AD - 0001B841 (0x95 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_Init              0001B7AD        osalAddTasks (OSAL_SampleApp)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B842 - 0001B932 (0xf1 bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_event_loop        0001B842        osalAddTasks (OSAL_SampleApp)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B933 - 0001B9A7 (0x75 bytes), align: 0
  Segment part 30.            Intra module refs:   ZDApp_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDOInitDevice           0001B933 
               calls direct
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000001 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B9A8 - 0001B9AF (0x8 bytes), align: 0
  Segment part 32.            Intra module refs:   ZDO_LeaveCnf
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine27           0001B9A8 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B9B0 - 0001BA0E (0x5f bytes), align: 0
  Segment part 34.            Intra module refs:   ZDApp_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_NetworkStartEvt   0001B9B0 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 0000000A ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BA0F - 0001BA54 (0x46 bytes), align: 0
  Segment part 37.            Intra module refs:   ZDApp_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDAppSetupProtoVersion
                                   0001BA0F 
               calls direct
               stack 1 = 00000002 ( 00000003 )
               stack 2 = 00000001 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BA55 - 0001BA6D (0x19 bytes), align: 0
  Segment part 39.            Intra module refs:   ZDApp_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDAppCheckForHoldKey    0001BA55 
               calls direct
               stack 1 = 00000002 ( 00000002 )
               stack 2 = 00000001 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BA6E - 0001BBAC (0x13f bytes), align: 0
  Segment part 40.            Intra module refs:   ZDApp_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_ProcessOSALMsg    0001BA6E 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000A ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BBAD - 0001BBB6 (0xa bytes), align: 0
  Segment part 41.            Intra module refs:   AddrMgrWriteNVRequest
                                                   ZDApp_InMsgCB
                                                   ZDApp_LeaveCtrlInit
                                                   ZDApp_LeaveCtrlSet
                                                   ZDApp_LeaveCtrlStartup
                                                   ZDApp_NodeProfileSync
                                                   ZDApp_ProcessNetworkJoin
                                                   ZDApp_ProcessOSALMsg
                                                   ZDApp_event_loop
                                                   ZDOInitDevice
                                                   ZDO_LeaveInd
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine26           0001BBAD 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BBB7 - 0001BD3F (0x189 bytes), align: 0
  Segment part 42.            Intra module refs:   ZDApp_ProcessOSALMsg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_ProcessNetworkJoin
                                   0001BBB7 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000A ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BD40 - 0001BD4A (0xb bytes), align: 0
  Segment part 43.            Intra module refs:   ZDApp_ProcessNetworkJoin
                                                   ZDApp_ProcessOSALMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine14           0001BD40 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BD4B - 0001BD52 (0x8 bytes), align: 0
  Segment part 44.            Intra module refs:   ?Subroutine14
                                                   ?Subroutine2
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine29           0001BD4B 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BD53 - 0001BD58 (0x6 bytes), align: 0
  Segment part 45.            Intra module refs:   ZDApp_ProcessNetworkJoin
                                                   ZDApp_ProcessOSALMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001BD53 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BD59 - 0001BD65 (0xd bytes), align: 0
  Segment part 46.            Intra module refs:   ?Subroutine0
                                                   ?Subroutine31
                                                   ?Subroutine6
                                                   ZDApp_NetworkInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine28           0001BD59 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BD66 - 0001BD6E (0x9 bytes), align: 0
  Segment part 52.            Intra module refs:   ZDApp_MatchDescRspCB
                                                   ZDApp_ProcessOSALMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine12           0001BD66 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BD6F - 0001BD76 (0x8 bytes), align: 0
  Segment part 53.            Intra module refs:   ZDApp_MatchDescRspCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           0001BD6F 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BD77 - 0001BD7A (0x4 bytes), align: 0
  Segment part 54.            Intra module refs:   ?Subroutine11
                                                   ?Subroutine12
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine21           0001BD77 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BD7B - 0001BD83 (0x9 bytes), align: 0
  Segment part 55.            Intra module refs:   ?Subroutine21
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine24           0001BD7B 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BD84 - 0001BD95 (0x12 bytes), align: 0
  Segment part 56.            Intra module refs:   ZDApp_LeaveReset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_ResetTimerStart   0001BD84 
               calls direct
               stack 1 = 00000002 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BD96 - 0001BDE0 (0x4b bytes), align: 0
  Segment part 58.            Intra module refs:   ZDOInitDevice
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_LeaveCtrlInit     0001BD96 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000C ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BDE1 - 0001BE1C (0x3c bytes), align: 0
  Segment part 59.            Intra module refs:   ZDApp_LeaveReset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_LeaveCtrlSet      0001BDE1 
               calls direct
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BE1D - 0001BE70 (0x54 bytes), align: 0
  Segment part 61.            Intra module refs:   ZDOInitDevice
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_LeaveCtrlStartup
                                   0001BE1D 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000C ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BE71 - 0001BE7E (0xe bytes), align: 0
  Segment part 62.            Intra module refs:   ZDApp_LeaveCtrlInit
                                                   ZDApp_LeaveCtrlStartup
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0001BE71 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BE7F - 0001BE95 (0x17 bytes), align: 0
  Segment part 63.            Intra module refs:   ?Subroutine15
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_LeaveReset        0001BE7F 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 0000000C ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BE96 - 0001BE9E (0x9 bytes), align: 0
  Segment part 65.            Intra module refs:   ?Subroutine32
                                                   ZDApp_EndDeviceBindRsp
                                                   ZDApp_LeaveReset
                                                   ZDApp_NetworkInit
                                                   ZDApp_NetworkStartEvt
                                                   ZDApp_ResetTimerStart
                                                   ZDO_StartRouterConfirmCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine31           0001BE96 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BE9F - 0001BF53 (0xb5 bytes), align: 0
  Segment part 66.            Intra module refs:   ZDApp_MatchDescRspCB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_SendNewDstAddr    0001BE9F 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000013 ( 00000015 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BF54 - 0001BF58 (0x5 bytes), align: 0
  Segment part 67.            Intra module refs:   ZDApp_MatchDescRspCB
                                                   ZDApp_SendMsg
                                                   ZDApp_SendNewDstAddr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine30           0001BF54 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BF59 - 0001BF60 (0x8 bytes), align: 0
  Segment part 68.            Intra module refs:   ZDApp_ProcessNetworkJoin
                                                   ZDApp_SendNewDstAddr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0001BF59 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BF61 - 0001BF66 (0x6 bytes), align: 0
  Segment part 70.            Intra module refs:   ZDO_JoinConfirmCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine32           0001BF61 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BF67 - 0001BFCE (0x68 bytes), align: 0
  Segment part 71.            Intra module refs:   ?Subroutine8
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_SendMsg           0001BF67 
               calls direct
               stack 1 = 00000002 ( 00000001 )
               stack 2 = 0000001B ( 00000013 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BFCF - 0001C0B3 (0xe5 bytes), align: 0
  Segment part 72.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_MatchDescRspCB    0001BFCF        ZDO_ProcessEPListRsp (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000002 ( 00000013 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C0B4 - 0001C0BC (0x9 bytes), align: 0
  Segment part 73.            Intra module refs:   ZDApp_MatchDescRspCB
                                                   ZDApp_SendNewDstAddr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine18           0001C0B4 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C0BD - 0001C0C6 (0xa bytes), align: 0
  Segment part 74.            Intra module refs:   ZDApp_MatchDescRspCB
                                                   ZDApp_ProcessOSALMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           0001C0BD 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C0C7 - 0001C0DD (0x17 bytes), align: 0
  Segment part 75.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_EndDeviceBindRsp
                                   0001C0C7        ZDO_ProcessBindUnbindRsp (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C0DE - 0001C0EC (0xf bytes), align: 0
  Segment part 76.            Intra module refs:   ?Subroutine31
                                                   ZDAppCheckForHoldKey
                                                   ZDAppSetupProtoVersion
                                                   ZDApp_Init
                                                   ZDO_JoinIndicationCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine25           0001C0DE 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C0ED - 0001C275 (0x189 bytes), align: 0
  Segment part 77.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_NetworkDiscoveryConfirmCB
                                   0001C0ED        NLME_NetworkDiscoveryConfirm (NLMEDE_CB)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 0000001B )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C276 - 0001C27A (0x5 bytes), align: 0
  Segment part 78.            Intra module refs:   ZDO_NetworkDiscoveryConfirmCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine16           0001C276 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C27B - 0001C289 (0xf bytes), align: 0
  Segment part 79.            Intra module refs:   ?Subroutine16
                                                   ZDO_NetworkDiscoveryConfirmCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine23           0001C27B 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C28A - 0001C294 (0xb bytes), align: 0
  Segment part 80.            Intra module refs:   ?Subroutine32
                                                   ZDO_NetworkDiscoveryConfirmCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            0001C28A 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C295 - 0001C29B (0x7 bytes), align: 0
  Segment part 81.            Intra module refs:   ZDApp_MatchDescRspCB
                                                   ZDO_NetworkDiscoveryConfirmCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0001C295 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C29C - 0001C2A2 (0x7 bytes), align: 0
  Segment part 82.            Intra module refs:   ?Subroutine4
                                                   ZDO_NetworkDiscoveryConfirmCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine19           0001C29C 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C2A3 - 0001C2DE (0x3c bytes), align: 0
  Segment part 84.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_StartRouterConfirmCB
                                   0001C2A3        NLME_StartRouterConfirm (NLMEDE_CB)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C2DF - 0001C327 (0x49 bytes), align: 0
  Segment part 85.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_JoinConfirmCB       0001C2DF        NLME_JoinConfirm (NLMEDE_CB)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C328 - 0001C336 (0xf bytes), align: 0
  Segment part 86.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_JoinIndicationCB    0001C328        NLME_JoinIndication (NLMEDE_CB)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C337 - 0001C37F (0x49 bytes), align: 0
  Segment part 87.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_LeaveCnf            0001C337        NLME_LeaveCnf (NLMEDE_CB)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C380 - 0001C416 (0x97 bytes), align: 0
  Segment part 88.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_LeaveInd            0001C380        NLME_LeaveInd (NLMEDE_CB)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C417 - 0001C421 (0xb bytes), align: 0
  Segment part 89.            Intra module refs:   ZDO_LeaveInd
                                                   ZDO_NetworkDiscoveryConfirmCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine17           0001C417 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C422 - 0001C42F (0xe bytes), align: 0
  Segment part 90.            Intra module refs:   ZDO_LeaveCnf
                                                   ZDO_LeaveInd
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine15           0001C422 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C430 - 0001C438 (0x9 bytes), align: 0
  Segment part 91.            Intra module refs:   ?Subroutine15
                                                   ?Subroutine17
                                                   ZDApp_SendNewDstAddr
                                                   ZDO_LeaveInd
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine22           0001C430 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C439 - 0001C448 (0x10 bytes), align: 0
  Segment part 92.            Intra module refs:   ZDO_LeaveCnf
                                                   ZDO_LeaveInd
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            0001C439 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C449 - 0001C44B (0x3 bytes), align: 0
  Segment part 93.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_SyncIndicationCB    0001C449        NLME_SyncIndication (NLMEDE_CB)
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C44C - 0001C44E (0x3 bytes), align: 0
  Segment part 94.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_PollConfirmCB       0001C44C        NLME_PollConfirm (NLMEDE_CB)
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C44F - 0001C477 (0x29 bytes), align: 0
  Segment part 95.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrWriteNVRequest   0001C44F        AddrMgrEntryDataSave (AddrMgr)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C478 - 0001C48A (0x13 bytes), align: 0
  Segment part 96.            Intra module refs:   AddrMgrWriteNVRequest
                                                   ZDApp_NetworkInit
                                                   ZDApp_ResetTimerStart
                                                   ZDO_JoinConfirmCB
                                                   ZDO_JoinIndicationCB
                                                   ZDO_NetworkDiscoveryConfirmCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0001C478 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C48B - 0001C4E1 (0x57 bytes), align: 0
  Segment part 97.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_InMsgCB           0001C48B        ZDP_IncomingData (ZDProfile)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000005 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C4E2 - 0001C500 (0x1f bytes), align: 0
  Segment part 100.           Intra module refs:   ?Subroutine29
                                                   ZDApp_ProcessOSALMsg
                                                   ZDOInitDevice
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_NetworkInit       0001C4E2 
               calls direct
               stack 1 = 00000002 ( 00000002 )
               stack 2 = 0000000C ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C501 - 0001C505 (0x5 bytes), align: 0
  Segment part 101.           Intra module refs:   ZDApp_ProcessNetworkJoin
                                                   ZDApp_event_loop
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            0001C501 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C506 - 0001C50B (0x6 bytes), align: 0
  Segment part 107.           Intra module refs:   ZDApp_ProcessOSALMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0001C506 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C50C - 0001C579 (0x6e bytes), align: 0
  Segment part 109.           Intra module refs:   ZDApp_ProcessOSALMsg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_NodeProfileSync   0001C50C 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000A ( 0000000A )
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001744 - 00001744 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   zdoDiscCounter
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001745 - 00001745 (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   continueJoining
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001746 - 00001746 (0x1 bytes), align: 0
  Segment part 19.            Intra module refs:   devState
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001747 - 00001748 (0x2 bytes), align: 0
  Segment part 25.            Intra module refs:   sPVerList
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001749 - 0000174E (0x6 bytes), align: 0
  Segment part 27.            Intra module refs:   ZDApp_epDesc

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\ZDCache.r51
    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\ZDConfig.r51
  PROGRAM MODULE, NAME : ZDConfig

  SEGMENTS IN THE MODULE
  ======================
XDATA_I
  Relative segment, address: XDATA 0000F831 - 0000F83A (0xa bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_Config_Node_Descriptor
                                   0000F831        NIB_init (nwk_globals)
                                                   ZDApp_NodeProfileSync (ZDApp)
                                                   ZDApp_ProcessNetworkJoin (ZDApp)
                                                   ZDApp_ProcessOSALMsg (ZDApp)
                                                   ZDApp_event_loop (ZDApp)
                                                   ZDO_LeaveInd (ZDApp)
                                                   ZDO_ProcessNodeDescReq (ZDObject)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F83B - 0000F83C (0x2 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_Config_Power_Descriptor
                                   0000F83B        ZDO_ProcessPowerDescReq (ZDObject)
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000174F - 00001758 (0xa bytes), align: 0
  Segment part 7.             Intra module refs:   ZDO_Config_Node_Descriptor
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001759 - 0000175A (0x2 bytes), align: 0
  Segment part 9.             Intra module refs:   ZDO_Config_Power_Descriptor

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\ZDObject.r51
  PROGRAM MODULE, NAME : ZDObject

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000F302 - 0000F335 (0x34 bytes), align: 0
  Segment part 6.             Intra module refs:   ZDO_ProcessActiveEPReq
                                                   ZDO_ProcessMatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ZDOBuildBuf             0000F302 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E9EB - 0001E9FE (0x14 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_Init                0001E9EB        ZDApp_Init (ZDApp)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E9FF - 0001EA05 (0x7 bytes), align: 0
  Segment part 10.            Intra module refs:   ZDO_Init
                                                   ZDO_ProcessBindUnbindRsp
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine21           0001E9FF 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EA06 - 0001EAC8 (0xc3 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_StartDevice         0001EA06        ZDApp_event_loop (ZDApp)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000017 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EAC9 - 0001EAD7 (0xf bytes), align: 0
  Segment part 12.            Intra module refs:   ZDO_StartDevice
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0001EAC9 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EAD8 - 0001EB4A (0x73 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_UpdateNwkStatus     0001EAD8        ZDApp_event_loop (ZDApp)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EB4B - 0001EBCF (0x85 bytes), align: 0
  Segment part 14.            Intra module refs:   ZDO_ProcessMatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ZDO_CreateAlignedUINT16List
                                   0001EB4B 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000001E ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EBD0 - 0001EBD4 (0x5 bytes), align: 0
  Segment part 15.            Intra module refs:   ZDO_CreateAlignedUINT16List
                                                   ZDO_ProcessSimpleDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine24           0001EBD0 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EBD5 - 0001EC37 (0x63 bytes), align: 0
  Segment part 16.            Intra module refs:   ZDO_ProcessMatchDescReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_AnyClusterMatches   0001EBD5 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000020 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EC38 - 0001EC95 (0x5e bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ProcessNodeDescReq
                                   0001EC38        ZDP_IncomingData (ZDProfile)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000001 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EC96 - 0001EC9A (0x5 bytes), align: 0
  Segment part 18.            Intra module refs:   ZDO_AnyClusterMatches
                                                   ZDO_ProcessEPListRsp
                                                   ZDO_ProcessNodeDescReq
                                                   ZDO_ProcessPowerDescReq
                                                   ZDO_StartDevice
                                                   ZDO_UpdateNwkStatus
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine22           0001EC96 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EC9B - 0001ECFA (0x60 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ProcessPowerDescReq
                                   0001EC9B        ZDP_IncomingData (ZDProfile)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000001 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001ECFB - 0001ED15 (0x1b bytes), align: 0
  Segment part 20.            Intra module refs:   ZDO_ProcessNodeDescReq
                                                   ZDO_ProcessPowerDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0001ECFB 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001ED16 - 0001EDD2 (0xbd bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ProcessSimpleDescReq
                                   0001ED16        ZDP_IncomingData (ZDProfile)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000001 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EDD3 - 0001EE8F (0xbd bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ProcessActiveEPReq
                                   0001EDD3        ZDP_IncomingData (ZDProfile)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000001 ( 00000017 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EE90 - 0001EE94 (0x5 bytes), align: 0
  Segment part 23.            Intra module refs:   ZDO_ProcessActiveEPReq
                                                   ZDO_ProcessMatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine25           0001EE90 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EE95 - 0001F316 (0x482 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ProcessMatchDescReq
                                   0001EE95        ZDP_IncomingData (ZDProfile)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000001 ( 00000025 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F317 - 0001F31B (0x5 bytes), align: 0
  Segment part 25.            Intra module refs:   ZDO_ProcessMatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine14           0001F317 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F31C - 0001F324 (0x9 bytes), align: 0
  Segment part 26.            Intra module refs:   ?Subroutine14
                                                   ?Subroutine5
                                                   ?Subroutine9
                                                   ZDO_ProcessMatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine18           0001F31C 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F325 - 0001F32A (0x6 bytes), align: 0
  Segment part 27.            Intra module refs:   ZDO_AnyClusterMatches
                                                   ZDO_ProcessEPListRsp
                                                   ZDO_ProcessMatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           0001F325 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F32B - 0001F337 (0xd bytes), align: 0
  Segment part 28.            Intra module refs:   ZDO_ProcessMatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine12           0001F32B 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F338 - 0001F33B (0x4 bytes), align: 0
  Segment part 29.            Intra module refs:   ZDO_ProcessMatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           0001F338 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F33C - 0001F341 (0x6 bytes), align: 0
  Segment part 30.            Intra module refs:   ?Subroutine11
                                                   ?Subroutine7
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine16           0001F33C 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F342 - 0001F347 (0x6 bytes), align: 0
  Segment part 31.            Intra module refs:   ?Subroutine16
                                                   ?Subroutine17
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine20           0001F342 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F348 - 0001F34C (0x5 bytes), align: 0
  Segment part 32.            Intra module refs:   ?Subroutine20
                                                   ?Subroutine7
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine23           0001F348 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F34D - 0001F350 (0x4 bytes), align: 0
  Segment part 33.            Intra module refs:   ZDO_ProcessMatchDescReq
                                                   ZDO_UpdateNwkStatus
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           0001F34D 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F351 - 0001F357 (0x7 bytes), align: 0
  Segment part 34.            Intra module refs:   ZDO_ProcessMatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            0001F351 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F358 - 0001F361 (0xa bytes), align: 0
  Segment part 35.            Intra module refs:   ?Subroutine10
                                                   ?Subroutine5
                                                   ?Subroutine9
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine15           0001F358 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F362 - 0001F369 (0x8 bytes), align: 0
  Segment part 36.            Intra module refs:   ZDO_ProcessMatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            0001F362 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F36A - 0001F36E (0x5 bytes), align: 0
  Segment part 37.            Intra module refs:   ?Subroutine8
                                                   ZDO_ProcessMatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine17           0001F36A 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F36F - 0001F374 (0x6 bytes), align: 0
  Segment part 38.            Intra module refs:   ZDO_ProcessMatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            0001F36F 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F375 - 0001F37D (0x9 bytes), align: 0
  Segment part 39.            Intra module refs:   ZDO_ProcessMatchDescReq
                                                   ZDO_ProcessSimpleDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            0001F375 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F37E - 0001F383 (0x6 bytes), align: 0
  Segment part 40.            Intra module refs:   ?Subroutine6
                                                   ZDO_ProcessMatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine19           0001F37E 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F384 - 0001F391 (0xe bytes), align: 0
  Segment part 41.            Intra module refs:   ZDO_ProcessMatchDescReq
                                                   ZDO_UpdateNwkStatus
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0001F384 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F392 - 0001F397 (0x6 bytes), align: 0
  Segment part 42.            Intra module refs:   ZDO_ProcessMatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0001F392 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F398 - 0001F3A0 (0x9 bytes), align: 0
  Segment part 43.            Intra module refs:   ZDO_ProcessMatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0001F398 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F3A1 - 0001F3AD (0xd bytes), align: 0
  Segment part 44.            Intra module refs:   ZDO_ProcessMatchDescReq
                                                   ZDO_ProcessSimpleDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001F3A1 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F3AE - 0001F413 (0x66 bytes), align: 0
  Segment part 45.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ProcessEPListRsp    0001F3AE        ZDP_IncomingData (ZDProfile)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000002 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F414 - 0001F42C (0x19 bytes), align: 0
  Segment part 46.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ProcessBindUnbindRsp
                                   0001F414        ZDP_IncomingData (ZDProfile)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000001 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F42D - 0001F42F (0x3 bytes), align: 0
  Segment part 48.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_PermitJoiningTimeout
                                   0001F42D        NLME_PermitJoiningEvent (NLMEDE)

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\ZDProfile.r51
  PROGRAM MODULE, NAME : ZDProfile

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000F336 - 0000F385 (0x50 bytes), align: 0
  Segment part 8.             Intra module refs:   Segment part 10
           LOCAL                   ADDRESS         
           =====                   =======         
           ZDP_Buf                 0000F336 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F83D - 0000F83E (0x2 bytes), align: 0
  Segment part 9.             Intra module refs:   ?Subroutine12
                                                   ?Subroutine18
                                                   ?Subroutine9
                                                   ZDP_GenericRsp
                                                   ZDP_SimpleDescMsg
                                                   fillAndSend
                                                   zdpProcessAddrReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ZDP_TmpBuf              0000F83D 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F386 - 0000F386 (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   ZDP_EPRsp
                                                   fillAndSend
                                                   zdpProcessAddrReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ZDP_TxOptions           0000F386 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F430 - 0001F4DD (0xae bytes), align: 0
  Segment part 12.            Intra module refs:   ?Subroutine49
                                                   ZDP_EPRsp
                                                   ZDP_NodeDescMsg
                                                   ZDP_SimpleDescMsg
                                                   zdpProcessAddrReq
           LOCAL                   ADDRESS         
           =====                   =======         
           fillAndSend             0001F430 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000018 ( 0000001C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F4DE - 0001F4E5 (0x8 bytes), align: 0
  Segment part 13.            Intra module refs:   ZDP_SimpleDescMsg
                                                   fillAndSend
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine44           0001F4DE 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F4E6 - 0001F4EE (0x9 bytes), align: 0
  Segment part 17.            Intra module refs:   ?Subroutine33
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine43           0001F4E6 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F4EF - 0001F70F (0x221 bytes), align: 0
  Segment part 20.            Intra module refs:   ZDP_IncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           zdpProcessAddrReq       0001F4EF 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000019 ( 00000018 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F710 - 0001F713 (0x4 bytes), align: 0
  Segment part 21.            Intra module refs:   zdpProcessAddrReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine24           0001F710 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F714 - 0001F71B (0x8 bytes), align: 0
  Segment part 22.            Intra module refs:   ZDP_SimpleDescMsg
                                                   zdpProcessAddrReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           0001F714 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F71C - 0001F726 (0xb bytes), align: 0
  Segment part 23.            Intra module refs:   zdpProcessAddrReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0001F71C 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F727 - 0001F72F (0x9 bytes), align: 0
  Segment part 24.            Intra module refs:   ?Subroutine1
                                                   ?Subroutine24
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine38           0001F727 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F730 - 0001F7EF (0xc0 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_NodeDescMsg         0001F730        ZDO_ProcessNodeDescReq (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000003 ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F7F0 - 0001F7FA (0xb bytes), align: 0
  Segment part 26.            Intra module refs:   ZDP_NodeDescMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine21           0001F7F0 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F7FB - 0001F800 (0x6 bytes), align: 0
  Segment part 27.            Intra module refs:   ZDP_NodeDescMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           0001F7FB 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F801 - 0001F804 (0x4 bytes), align: 0
  Segment part 28.            Intra module refs:   ?Subroutine10
                                                   ZDP_NodeDescMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine37           0001F801 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F805 - 0001F80D (0x9 bytes), align: 0
  Segment part 29.            Intra module refs:   ?Subroutine27
                                                   ?Subroutine37
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine41           0001F805 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F80E - 0001F813 (0x6 bytes), align: 0
  Segment part 30.            Intra module refs:   ?Subroutine16
                                                   ?Subroutine41
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine46           0001F80E 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F814 - 0001F817 (0x4 bytes), align: 0
  Segment part 31.            Intra module refs:   ZDP_NodeDescMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            0001F814 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F818 - 0001F81F (0x8 bytes), align: 0
  Segment part 32.            Intra module refs:   ?Subroutine6
                                                   ?Subroutine7
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine27           0001F818 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F820 - 0001F825 (0x6 bytes), align: 0
  Segment part 33.            Intra module refs:   ZDP_NodeDescMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            0001F820 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F826 - 0001F86F (0x4a bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_PowerDescMsg        0001F826        ZDO_ProcessPowerDescReq (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000003 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F870 - 0001F890 (0x21 bytes), align: 0
  Segment part 35.            Intra module refs:   ZDP_GenericRsp
                                                   ZDP_PowerDescMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine49           0001F870 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F891 - 0001F892 (0x2 bytes), align: 0
  Segment part 36.            Intra module refs:   ZDP_NodeDescMsg
                                                   ZDP_PowerDescMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine19           0001F891 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F893 - 0001F897 (0x5 bytes), align: 0
  Segment part 37.            Intra module refs:   ?Subroutine19
                                                   ?Subroutine25
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine48           0001F893 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F898 - 0001F8A4 (0xd bytes), align: 0
  Segment part 38.            Intra module refs:   ZDP_PowerDescMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine16           0001F898 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F8A5 - 0001FA55 (0x1b1 bytes), align: 0
  Segment part 39.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_SimpleDescMsg       0001F8A5        ZDO_ProcessSimpleDescReq (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000004 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FA56 - 0001FA5D (0x8 bytes), align: 0
  Segment part 40.            Intra module refs:   ZDP_SimpleDescMsg
                                                   fillAndSend
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine31           0001FA56 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FA5E - 0001FA66 (0x9 bytes), align: 0
  Segment part 41.            Intra module refs:   ZDP_SimpleDescMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine25           0001FA5E 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FA67 - 0001FA69 (0x3 bytes), align: 0
  Segment part 42.            Intra module refs:   ZDP_NodeDescMsg
                                                   ZDP_SimpleDescMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine17           0001FA67 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FA6A - 0001FA6F (0x6 bytes), align: 0
  Segment part 43.            Intra module refs:   ?Subroutine17
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine47           0001FA6A 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FA70 - 0001FA75 (0x6 bytes), align: 0
  Segment part 44.            Intra module refs:   ?Subroutine17
                                                   zdpProcessAddrReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine34           0001FA70 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FA76 - 0001FA7F (0xa bytes), align: 0
  Segment part 45.            Intra module refs:   ZDP_SimpleDescMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0001FA76 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FA80 - 0001FA87 (0x8 bytes), align: 0
  Segment part 46.            Intra module refs:   ?Subroutine5
                                                   ZDP_SimpleDescMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine32           0001FA80 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FA88 - 0001FA8F (0x8 bytes), align: 0
  Segment part 47.            Intra module refs:   ?Subroutine29
                                                   ?Subroutine32
                                                   ZDP_SimpleDescMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine42           0001FA88 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FA90 - 0001FA97 (0x8 bytes), align: 0
  Segment part 48.            Intra module refs:   ZDP_SimpleDescMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0001FA90 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FA98 - 0001FAA4 (0xd bytes), align: 0
  Segment part 49.            Intra module refs:   ?Subroutine4
                                                   ?Subroutine5
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine33           0001FA98 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FAA5 - 0001FAB0 (0xc bytes), align: 0
  Segment part 50.            Intra module refs:   ZDP_SimpleDescMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0001FAA5 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FAB1 - 0001FAB7 (0x7 bytes), align: 0
  Segment part 51.            Intra module refs:   ?Subroutine3
                                                   ?Subroutine4
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine29           0001FAB1 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FAB8 - 0001FB70 (0xb9 bytes), align: 0
  Segment part 52.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_EPRsp               0001FAB8        ZDO_ProcessActiveEPReq (ZDObject)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000007 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FB71 - 0001FB78 (0x8 bytes), align: 0
  Segment part 53.            Intra module refs:   ZDP_EPRsp
                                                   zdpProcessAddrReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine45           0001FB71 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FB79 - 0001FBDB (0x63 bytes), align: 0
  Segment part 54.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_GenericRsp          0001FB79        ZDApp_InMsgCB (ZDApp)
                                                   ZDO_ProcessActiveEPReq (ZDObject)
                                                   ZDO_ProcessNodeDescReq (ZDObject)
                                                   ZDO_ProcessPowerDescReq (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000004 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FBDC - 0001FBE4 (0x9 bytes), align: 0
  Segment part 55.            Intra module refs:   ZDP_GenericRsp
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine18           0001FBDC 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FBE5 - 0001FBED (0x9 bytes), align: 0
  Segment part 56.            Intra module refs:   ?Subroutine18
                                                   zdpProcessAddrReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine36           0001FBE5 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FBEE - 0001FBFC (0xf bytes), align: 0
  Segment part 57.            Intra module refs:   ZDP_EPRsp
                                                   ZDP_GenericRsp
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine12           0001FBEE 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FBFD - 0001FDFD (0x201 bytes), align: 0
  Segment part 70.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_IncomingData        0001FBFD        ZDApp_ProcessOSALMsg (ZDApp)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000001B )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FDFE - 0001FE09 (0xc bytes), align: 0
  Segment part 71.            Intra module refs:   ZDP_IncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine26           0001FDFE 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FE0A - 0001FE12 (0x9 bytes), align: 0
  Segment part 72.            Intra module refs:   ZDP_EPRsp
                                                   ZDP_GenericRsp
                                                   ZDP_IncomingData
                                                   ZDP_NodeDescMsg
                                                   ZDP_PowerDescMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            0001FE0A 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000175B - 0000175C (0x2 bytes), align: 0
  Segment part 10.            Intra module refs:   ZDP_TmpBuf

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\ZDSecMgr.r51
  PROGRAM MODULE, NAME : ZDSecMgr

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FFEA, align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDSecMgrInit            0002FFEA        ZDO_Init (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FFEA - 0002FFFC (0x13 bytes), align: 0
  Segment part 7.             Intra module refs:   ZDSecMgrConfig
                                                   ZDSecMgrInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0002FFEA 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FFFD - 0002FFFE (0x2 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDSecMgrConfig          0002FFFD        ZDO_StartDevice (ZDObject)
               calls direct
               stack 1 = 00000000 ( 00000002 )

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\ZGlobals.r51
  PROGRAM MODULE, NAME : ZGlobals

  SEGMENTS IN THE MODULE
  ======================
XDATA_I
  Relative segment, address: XDATA 0000F83F - 0000F840 (0x2 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgPollRate              0000F83F        NLME_SetPollRate (nwk_util)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F841 - 0000F842 (0x2 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgQueuedPollRate        0000F841        NLME_SetQueuedPollRate (nwk_util)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F843 - 0000F844 (0x2 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgResponsePollRate      0000F843        NLME_ReJoinRequest (NLMEDE)
                                                   NLME_RejoinRspCmdProcess (nwk_util)
                                                   NLME_SetResponseRate (nwk_util)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F845 - 0000F846 (0x2 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgRejoinPollRate        0000F845        NLME_ReJoinRequest (NLMEDE)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F847 - 0000F847 (0x1 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgMaxDataRetries        0000F847        nwk_MacDataBuffersAdd (nwk_bufs)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F848 - 0000F84B (0x4 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgDefaultChannelList    0000F848        ?Subroutine1 (ZDObject)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F84C - 0000F84C (0x1 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgDefaultStartingScanDuration
                                   0000F84C        ?Subroutine1 (ZDObject)
                                                   ZDApp_ProcessOSALMsg (ZDApp)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F84D - 0000F84D (0x1 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgStackProfile          0000F84D        ZDApp_NodeProfileSync (ZDApp)
                                                   ZDO_NetworkDiscoveryConfirmCB (ZDApp)
                                                   nwk_start_coord (nwk)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F84E - 0000F84E (0x1 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgIndirectMsgTimeout    0000F84E        NIB_init (nwk_globals)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F387 - 0000F387 (0x1 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgSecurityLevel         0000F387        NIB_init (nwk_globals)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F84F - 0000F84F (0x1 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgRouteExpiryTime       0000F84F        NIB_init (nwk_globals)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F388 - 0000F38F (0x8 bytes), align: 0
  Segment part 29.            Intra module refs:   zgInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgExtendedPANID         0000F388        NIB_init (nwk_globals)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F850 - 0000F850 (0x1 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgMaxBcastRetires       0000F850        NIB_init (nwk_globals)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F851 - 0000F851 (0x1 bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgPassiveAckTimeout     0000F851        NIB_init (nwk_globals)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F852 - 0000F852 (0x1 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgBcastDeliveryTime     0000F852        NIB_init (nwk_globals)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F853 - 0000F853 (0x1 bytes), align: 0
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgNwkMode               0000F853        RTG_GetNextHop (rtg)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F854 - 0000F854 (0x1 bytes), align: 0
  Segment part 44.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgApscMaxFrameRetries   0000F854        NLDE_DataCnf (NLMEDE_CB)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F855 - 0000F856 (0x2 bytes), align: 0
  Segment part 46.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgApscAckWaitDurationPolled
                                   0000F855        NLDE_DataCnf (NLMEDE_CB)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F857 - 0000F858 (0x2 bytes), align: 0
  Segment part 50.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgApsDefaultMaxBindingTime
                                   0000F857        APS_Init (APS)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F390 - 0000F39F (0x10 bytes), align: 0
  Segment part 52.            Intra module refs:   zgInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgPreConfigKey          0000F390 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F859 - 0000F85A (0x2 bytes), align: 0
  Segment part 54.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgConfigPANID           0000F859        ZDO_NetworkDiscoveryConfirmCB (ZDApp)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00002113 - 00002118 (0x6 bytes), align: 0
  Segment part 62.            Intra module refs:   zgInit
           LOCAL                   ADDRESS         
           =====                   =======         
           zgItemTable             00002113 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039573 - 0003969F (0x12d bytes), align: 0
  Segment part 63.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgInit                  00039573        main (ZMain)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000013 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000396A0 - 000396F4 (0x55 bytes), align: 0
  Segment part 64.            Intra module refs:   zgInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgReadStartupOptions    000396A0 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000F ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000396F5 - 000396FE (0xa bytes), align: 0
  Segment part 65.            Intra module refs:   zgReadStartupOptions
                                                   zgWriteStartupOptions
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            000396F5 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000396FF - 0003970F (0x11 bytes), align: 0
  Segment part 66.            Intra module refs:   zgReadStartupOptions
                                                   zgWriteStartupOptions
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            000396FF 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039710 - 00039789 (0x7a bytes), align: 0
  Segment part 67.            Intra module refs:   zgInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgWriteStartupOptions   00039710 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000F ( 0000000F )
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000175D - 0000175E (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   zgPollRate
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000175F - 00001760 (0x2 bytes), align: 0
  Segment part 9.             Intra module refs:   zgQueuedPollRate
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001761 - 00001762 (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   zgResponsePollRate
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001763 - 00001764 (0x2 bytes), align: 0
  Segment part 13.            Intra module refs:   zgRejoinPollRate
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001765 - 00001765 (0x1 bytes), align: 0
  Segment part 15.            Intra module refs:   zgMaxDataRetries
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001766 - 00001769 (0x4 bytes), align: 0
  Segment part 19.            Intra module refs:   zgDefaultChannelList
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000176A - 0000176A (0x1 bytes), align: 0
  Segment part 21.            Intra module refs:   zgDefaultStartingScanDuration
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000176B - 0000176B (0x1 bytes), align: 0
  Segment part 23.            Intra module refs:   zgStackProfile
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000176C - 0000176C (0x1 bytes), align: 0
  Segment part 25.            Intra module refs:   zgIndirectMsgTimeout
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000176D - 0000176D (0x1 bytes), align: 0
  Segment part 28.            Intra module refs:   zgRouteExpiryTime
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000176E - 0000176E (0x1 bytes), align: 0
  Segment part 31.            Intra module refs:   zgMaxBcastRetires
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000176F - 0000176F (0x1 bytes), align: 0
  Segment part 33.            Intra module refs:   zgPassiveAckTimeout
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001770 - 00001770 (0x1 bytes), align: 0
  Segment part 35.            Intra module refs:   zgBcastDeliveryTime
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001771 - 00001771 (0x1 bytes), align: 0
  Segment part 37.            Intra module refs:   zgNwkMode
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001772 - 00001772 (0x1 bytes), align: 0
  Segment part 45.            Intra module refs:   zgApscMaxFrameRetries
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001773 - 00001774 (0x2 bytes), align: 0
  Segment part 47.            Intra module refs:   zgApscAckWaitDurationPolled
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001775 - 00001776 (0x2 bytes), align: 0
  Segment part 51.            Intra module refs:   zgApsDefaultMaxBindingTime
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001777 - 00001778 (0x2 bytes), align: 0
  Segment part 55.            Intra module refs:   zgConfigPANID

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\ZMain.r51
  PROGRAM MODULE, NAME : ZMain

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000081 - 00000081 (0x1 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SP                      00000081 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000EBF - 00000F76 (0xb8 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    00000EBF        ?call_main (?cmain)
               calls direct
               stack 1 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000F77 - 00000F83 (0xd bytes), align: 0
  Segment part 11.            Intra module refs:   main
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00000F77 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000F84 - 00000FF8 (0x75 bytes), align: 0
  Segment part 12.            Intra module refs:   main
           LOCAL                   ADDRESS         
           =====                   =======         
           zmain_vdd_check         00000F84 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000FF9 - 000010E3 (0xeb bytes), align: 0
  Segment part 13.            Intra module refs:   main
           LOCAL                   ADDRESS         
           =====                   =======         
           zmain_ext_addr          00000FF9 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000D )
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000090 - 00000090 (0x1 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P1                   00000090 

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\chipcon_banked_code_support.r51
  LIBRARY MODULE, NAME : ?BANKED_CODE_SUPPORT

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 00000086 - 000000A7 (0x22 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?BCALL                  00000086        ?Subroutine0 (ZDSecMgr)
                                                   ?Subroutine0 (hal_drivers)
                                                   ?Subroutine0 (mac_low_level)
                                                   ?Subroutine0 (mac_radio)
                                                   ?Subroutine1 (mac_csp_tx)
                                                   ?Subroutine10 (hal_lcd)
                                                   ?Subroutine10 (hal_led)
                                                   ?Subroutine15 (hal_timer)
                                                   ?Subroutine17 (MTEL)
                                                   ?Subroutine19 (OSAL)
                                                   ?Subroutine2 (mac_backoff_timer)
                                                   ?Subroutine2 (mac_csp_tx)
                                                   ?Subroutine20 (mac_rx)
                                                   ?Subroutine25 (ZDApp)
                                                   ?Subroutine31 (ZDApp)
                                                   ?Subroutine4 (OSAL_Timers)
                                                   ?Subroutine49 (ZDProfile)
                                                   ?Subroutine5 (OSAL_Timers)
                                                   ?Subroutine5 (mac_tx)
                                                   ?Subroutine7 (zmac)
                                                   ?Subroutine9 (hal_lcd)
                                                   ?call_main (?cmain)
                                                   AF_DataRequest (AF)
                                                   APSDE_DataConfirm (APSMEDE_CB)
                                                   APSDE_DataIndication (APSMEDE_CB)
                                                   APSDE_DataReq (APSMEDE)
                                                   APSDE_DataReqMTU (APSMEDE)
                                                   APSDE_FrameAlloc (APSMEDE)
                                                   APSDE_FrameBlkFree (APSMEDE)
                                                   APSDE_FrameBlkInit (APSMEDE)
                                                   APSDE_FrameHdrInit (APSMEDE)
                                                   APSDE_FrameHdrSet (APSMEDE)
                                                   APSDE_FrameSend (APSMEDE)
                                                   APSDE_ParseMsg (aps_util)
                                                   APSME_FrameSecInit (APSMEDE)
                                                   APSME_LookupNwkAddr (APSMEDE)
                                                   APSME_SecurityNM (APSMEDE)
                                                   APS_CmdInd (APS)
                                                   APS_event_loop (APS)
                                                   AddrMgrEntryAdd (AddrMgr)
                                                   AddrMgrEntryAddRef (AddrMgr)
                                                   AddrMgrEntryGet (AddrMgr)
                                                   AddrMgrEntryLookupExt (AddrMgr)
                                                   AddrMgrEntryLookupNwk (AddrMgr)
                                                   AddrMgrEntryRelease (AddrMgr)
                                                   AddrMgrEntrySet (AddrMgr)
                                                   AddrMgrEntryUpdate (AddrMgr)
                                                   AddrMgrEntryUpdateEx (AddrMgr)
                                                   AddrMgrInit (AddrMgr)
                                                   AddrMgrNwkAddrLookup (AddrMgr)
                                                   AddrMgrWriteNVRequest (ZDApp)
                                                   AssocAddNew (AssocList)
                                                   AssocGetWithAddress (AssocList)
                                                   AssocIsChild (AssocList)
                                                   AssocMakeList (AssocList)
                                                   AssocRemove (AssocList)
                                                   HalDriverInit (hal_drivers)
                                                   HalKeyConfig (hal_key)
                                                   HalKeyPoll (hal_key)
                                                   HalLcdInit (hal_lcd)
                                                   HalLedBlink (hal_led)
                                                   HalLedSet (hal_led)
                                                   HalLedUpdate (hal_led)
                                                   HalTimerConfig (hal_timer)
                                                   HalTimerStart (hal_timer)
                                                   HalTimerStop (hal_timer)
                                                   HalTimerTick (hal_timer)
                                                   HalUARTOpen (hal_uart)
                                                   HalUARTPoll (hal_uart)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   Hal_ProcessPoll (hal_drivers)
                                                   InitBoard (OnBoard)
                                                   MAC_CbackCheckPending (zmac_cb)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MAC_McpsDataAlloc (mac_data)
                                                   MAC_MlmeGetReq (mac_pib)
                                                   MAC_MlmeResetReq (mac_mgmt)
                                                   MAC_MlmeSetReq (mac_pib)
                                                   MTProcessAppMsg (MTEL)
                                                   MTProcessAppRspMsg (MTEL)
                                                   MTProcessLedControl (MTEL)
                                                   MT_BuildAndSendZToolResponse (MTEL)
                                                   MT_BuildSPIMsg (MTEL)
                                                   MT_ProcessCommand (MTEL)
                                                   MT_ProcessDebugMsg (MTEL)
                                                   MT_ProcessDebugStr (MTEL)
                                                   MT_ProcessEvent (MTEL)
                                                   MT_ProcessGetDeviceInfo (MTEL)
                                                   MT_ProcessGetNV (MTEL)
                                                   MT_ProcessGetNvInfo (MTEL)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   MT_ProcessSetNV (MTEL)
                                                   MT_TaskInit (MTEL)
                                                   NIB_init (nwk_globals)
                                                   NLDE_BuildFrameControl (nwk_util)
                                                   NLDE_BuildMsg (nwk_util)
                                                   NLDE_DataCnf (NLMEDE_CB)
                                                   NLDE_DataIndSend (nwk_util)
                                                   NLDE_DataIndication (NLMEDE_CB)
                                                   NLDE_DataReq (NLMEDE)
                                                   NLDE_DataReqAlloc (NLMEDE)
                                                   NLDE_DataReqSend (nwk_util)
                                                   NLDE_FrameDataLoad (APSMEDE)
                                                   NLDE_GetHandle (nwk_util)
                                                   NLDE_ParseMsg (nwk_util)
                                                   NLDE_ParseMsg2 (nwk_util)
                                                   NLDE_SendMsg (nwk_util)
                                                   NLME_CmdCnf (nwk_util)
                                                   NLME_CmdDataReqAlloc (nwk_util)
                                                   NLME_GetNeighborLinkInfo (nwk_util)
                                                   NLME_GetProtocolVersion (nwk_util)
                                                   NLME_GetRequest (NLMEDE)
                                                   NLME_IsAddressBroadcast (nwk_util)
                                                   NLME_JoinRequest (NLMEDE)
                                                   NLME_LeaveCmdCnf (nwk_util)
                                                   NLME_LeaveCmdProcess (nwk_util)
                                                   NLME_LeaveCmdSend (nwk_util)
                                                   NLME_LeaveRsp (NLMEDE)
                                                   NLME_PermitJoiningEvent (NLMEDE)
                                                   NLME_PermitJoiningSet (NLMEDE)
                                                   NLME_RTG_BcastAdd (nwk_util)
                                                   NLME_ReJoinRequest (NLMEDE)
                                                   NLME_RejoinReqCmdProcess (nwk_util)
                                                   NLME_RejoinRspCmdProcess (nwk_util)
                                                   NLME_RejoinRspSend (nwk_util)
                                                   NLME_RemoveChild (nwk_util)
                                                   NLME_RemoveFromNeighborTable (nwk_util)
                                                   NLME_RouteDiscoveryIndication (NLMEDE_CB)
                                                   NLME_RouteDiscoveryRequest (rtg)
                                                   NLME_SetAssocFlags (nwk_util)
                                                   NLME_SetBroadcastFilter (nwk_util)
                                                   NLME_SetPollRate (nwk_util)
                                                   NwkCommandPktProcessing (nwk)
                                                   OnBoard_KeyCallback (OnBoard)
                                                   OnBoard_SendKeys (OnBoard)
                                                   Onboard_TimerCallBack (OnBoard)
                                                   Onboard_rand (OnBoard)
                                                   Print (hal_lcd)
                                                   Print8 (hal_lcd)
                                                   RTG_AddRtgEntry (rtg)
                                                   RTG_AllocNewAddress (rtg)
                                                   RTG_BcastAdd (rtg)
                                                   RTG_BcastHold (rtg)
                                                   RTG_BcastTimeout (rtg)
                                                   RTG_BcastTimerHandler (rtg)
                                                   RTG_CalcAddress (rtg)
                                                   RTG_CheckRtDiscEntry (rtg)
                                                   RTG_CheckRtStatus (rtg)
                                                   RTG_DataReq (rtg)
                                                   RTG_DeAllocAddress (rtg)
                                                   RTG_GetLinkCost (rtg)
                                                   RTG_GetNextHop (rtg)
                                                   RTG_GetNextTreeHop (rtg)
                                                   RTG_GetPrevHop (rtg)
                                                   RTG_GetRoutingAddress (rtg)
                                                   RTG_GetRtgEntry (rtg)
                                                   RTG_GetTreeRoute (rtg)
                                                   RTG_IndirectTimeout (rtg)
                                                   RTG_Init (rtg)
                                                   RTG_ProcessRErr (rtg)
                                                   RTG_ProcessRrep (rtg)
                                                   RTG_ProcessRreq (rtg)
                                                   RTG_ProcessRtDiscBits (rtg)
                                                   RTG_RemoveRtgEntry (rtg)
                                                   RTG_RouteMaintanence (rtg)
                                                   RTG_SendRErr (rtg)
                                                   RTG_SendRrep (rtg)
                                                   RTG_TimerEvent (rtg)
                                                   RTG_UpdateNeighborEntry (nwk_util)
                                                   RTG_UpdateRtDiscEntry (rtg)
                                                   SPIMgr_Init (SPIMgr)
                                                   SPIMgr_ProcessZToolData (SPIMgr)
                                                   SSP_GetMicLen (ssp)
                                                   SSP_NwkSecurity (ssp)
                                                   SampleApp_HandleKeys (SampleApp)
                                                   SampleApp_Init (SampleApp)
                                                   SampleApp_MessageMSGCB (SampleApp)
                                                   SampleApp_ProcessEvent (SampleApp)
                                                   SampleApp_SendFlashMessage (SampleApp)
                                                   SampleApp_SendPeriodicMessage (SampleApp)
                                                   Segment part 110 (APSMEDE)
                                                   Segment part 14 (mac_coord)
                                                   Segment part 15 (hal_aes)
                                                   Segment part 16 (AddrMgr)
                                                   Segment part 17 (NLMEDE_CB)
                                                   Segment part 19 (AssocList)
                                                   Segment part 19 (NLMEDE)
                                                   Segment part 27 (mac_scan)
                                                   Segment part 29 (mac_timer)
                                                   Segment part 32 (APSMEDE)
                                                   Segment part 34 (mac_data)
                                                   Segment part 34 (mac_device)
                                                   Segment part 38 (AssocList)
                                                   Segment part 45 (mac_device)
                                                   Segment part 62 (mac_data)
                                                   Segment part 65 (mac_coord)
                                                   Segment part 73 (mac_mgmt)
                                                   Segment part 9 (AddrMgr)
                                                   SendData (SampleApp)
                                                   SetContrast (hal_lcd)
                                                   SetRamAddr (hal_lcd)
                                                   WriteLCD (hal_lcd)
                                                   ZDAppCheckForHoldKey (ZDApp)
                                                   ZDAppSetupProtoVersion (ZDApp)
                                                   ZDApp_InMsgCB (ZDApp)
                                                   ZDApp_Init (ZDApp)
                                                   ZDApp_LeaveCtrlInit (ZDApp)
                                                   ZDApp_LeaveCtrlSet (ZDApp)
                                                   ZDApp_LeaveCtrlStartup (ZDApp)
                                                   ZDApp_LeaveReset (ZDApp)
                                                   ZDApp_MatchDescRspCB (ZDApp)
                                                   ZDApp_NetworkStartEvt (ZDApp)
                                                   ZDApp_NodeProfileSync (ZDApp)
                                                   ZDApp_ProcessNetworkJoin (ZDApp)
                                                   ZDApp_ProcessOSALMsg (ZDApp)
                                                   ZDApp_SendMsg (ZDApp)
                                                   ZDApp_SendNewDstAddr (ZDApp)
                                                   ZDApp_event_loop (ZDApp)
                                                   ZDOInitDevice (ZDApp)
                                                   ZDO_CreateAlignedUINT16List (ZDObject)
                                                   ZDO_Init (ZDObject)
                                                   ZDO_JoinConfirmCB (ZDApp)
                                                   ZDO_JoinIndicationCB (ZDApp)
                                                   ZDO_LeaveCnf (ZDApp)
                                                   ZDO_LeaveInd (ZDApp)
                                                   ZDO_NetworkDiscoveryConfirmCB (ZDApp)
                                                   ZDO_ProcessActiveEPReq (ZDObject)
                                                   ZDO_ProcessBindUnbindRsp (ZDObject)
                                                   ZDO_ProcessEPListRsp (ZDObject)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_ProcessNodeDescReq (ZDObject)
                                                   ZDO_ProcessPowerDescReq (ZDObject)
                                                   ZDO_ProcessSimpleDescReq (ZDObject)
                                                   ZDO_StartDevice (ZDObject)
                                                   ZDO_StartRouterConfirmCB (ZDApp)
                                                   ZDO_UpdateNwkStatus (ZDObject)
                                                   ZDP_EPRsp (ZDProfile)
                                                   ZDP_GenericRsp (ZDProfile)
                                                   ZDP_IncomingData (ZDProfile)
                                                   ZDP_NodeDescMsg (ZDProfile)
                                                   ZDP_SimpleDescMsg (ZDProfile)
                                                   ZMacDataReq (zmac)
                                                   ZMacGetReq (zmac)
                                                   ZMacInit (zmac)
                                                   ZMacReset (zmac)
                                                   ZMacScanReq (zmac)
                                                   ZMacSendNoData (zmac)
                                                   ZMacSetReq (zmac)
                                                   ZMacStartReq (zmac)
                                                   afBuildMSGIncoming (AF)
                                                   afDataConfirm (AF)
                                                   afDataReqMTU (AF)
                                                   afFindEndPointDesc (AF)
                                                   afFindSimpleDesc (AF)
                                                   afGetReflector (AF)
                                                   afIncomingData (AF)
                                                   afRegister (AF)
                                                   afRegisterExtended (AF)
                                                   apsGenerateAck (aps_util)
                                                   apsProcessAck (aps_util)
                                                   aps_AddGroup (aps_groups)
                                                   aps_GroupsWriteNV (aps_groups)
                                                   aps_RemoveGroup (aps_groups)
                                                   compactPage (OSAL_Nv)
                                                   cspPrepForTxProgram (mac_csp_tx)
                                                   fillAndSend (ZDProfile)
                                                   findItem (OSAL_Nv)
                                                   halAssertHandler (hal_assert)
                                                   halKeyPort0Isr (hal_key)
                                                   halKeyPort1Isr (hal_key)
                                                   halKeyPort2Isr (hal_key)
                                                   halProcessKeyInterrupt (hal_key)
                                                   halProcessTimer1 (hal_timer)
                                                   halProcessTimer3 (hal_timer)
                                                   halProcessTimer4 (hal_timer)
                                                   halTimerSendCallBack (hal_timer)
                                                   initItem (OSAL_Nv)
                                                   initItem2 (OSAL_Nv)
                                                   initNV (OSAL_Nv)
                                                   initPage (OSAL_Nv)
                                                   macAllocTxBuffer (mac_data)
                                                   macApiAssociateReq (mac_device)
                                                   macApiDisassociateReq (mac_mgmt)
                                                   macApiOrphanRsp (mac_coord)
                                                   macApiPending (mac_mgmt)
                                                   macApiPollReq (mac_device)
                                                   macApiPurgeReq (mac_coord)
                                                   macApiScanReq (mac_scan)
                                                   macApiStartReq (mac_coord)
                                                   macAssocDataReq (mac_device)
                                                   macAssocDataReqComplete (mac_device)
                                                   macAssocDataRxInd (mac_device)
                                                   macAssocFailed (mac_device)
                                                   macAssocFrameResponseTimeout (mac_device)
                                                   macAssociateCnf (mac_device)
                                                   macBackoffTimerCancelTrigger (mac_backoff_timer)
                                                   macBackoffTimerCapture (mac_backoff_timer)
                                                   macBackoffTimerCompareIsr (mac_backoff_timer)
                                                   macBackoffTimerCount (mac_backoff_timer)
                                                   macBackoffTimerInit (mac_backoff_timer)
                                                   macBackoffTimerReset (mac_backoff_timer)
                                                   macBackoffTimerRolloverCallback (mac_timer)
                                                   macBackoffTimerSetRollover (mac_backoff_timer)
                                                   macBackoffTimerSetTrigger (mac_backoff_timer)
                                                   macBackoffTimerTriggerCallback (mac_timer)
                                                   macBuildAssociateRsp (mac_coord)
                                                   macBuildBeacon (mac_coord)
                                                   macBuildBeaconNotifyInd (mac_mgmt)
                                                   macBuildCommonReq (mac_mgmt)
                                                   macBuildDataFrame (mac_data)
                                                   macBuildDisassociateReq (mac_mgmt)
                                                   macBuildHeader (mac_mgmt)
                                                   macBuildPendAddr (mac_coord)
                                                   macBuildRealign (mac_coord)
                                                   macCbackForEvent (mac_main)
                                                   macCheckSched (mac_data)
                                                   macCommStatusInd (mac_mgmt)
                                                   macConflictSyncLossInd (mac_mgmt)
                                                   macCoordAddrCmp (mac_mgmt)
                                                   macCoordReset (mac_coord)
                                                   macCspForceTxDoneIfPending (mac_csp_tx)
                                                   macCspTxGoCsma (mac_csp_tx)
                                                   macCspTxGoSlotted (mac_csp_tx)
                                                   macCspTxIntIsr (mac_csp_tx)
                                                   macCspTxPrepCsmaSlotted (mac_csp_tx)
                                                   macCspTxPrepCsmaUnslotted (mac_csp_tx)
                                                   macCspTxPrepSlotted (mac_csp_tx)
                                                   macCspTxRequestAckTimeoutCallback (mac_csp_tx)
                                                   macCspTxStopIsr (mac_csp_tx)
                                                   macDataReset (mac_data)
                                                   macDataRxMemAlloc (mac_data)
                                                   macDataTxComplete (mac_data)
                                                   macDataTxEnqueue (mac_data)
                                                   macDataTxSend (mac_data)
                                                   macDataTxTimeAvailable (mac_data)
                                                   macDefaultAction (mac_mgmt)
                                                   macDestAddrCmp (mac_mgmt)
                                                   macDestSAddrCmp (mac_mgmt)
                                                   macDisassocComplete (mac_mgmt)
                                                   macEventLoop (mac_main)
                                                   macExecute (mac_main)
                                                   macGetCoordAddress (mac_mgmt)
                                                   macIndirectExpire (mac_coord)
                                                   macIndirectMark (mac_coord)
                                                   macIndirectRequeueFrame (mac_coord)
                                                   macIndirectSend (mac_coord)
                                                   macIndirectTxFrame (mac_coord)
                                                   macLowLevelInit (mac_low_level)
                                                   macLowLevelReset (mac_low_level)
                                                   macMainReset (mac_main)
                                                   macMcuAndT2PEROF2 (mac_mcu)
                                                   macMcuInit (mac_mcu)
                                                   macMcuOrT2PEROF2 (mac_mcu)
                                                   macMcuOverflowSetCompare (mac_mcu)
                                                   macMcuOverflowSetCount (mac_mcu)
                                                   macMcuRecordMaxRssiStart (mac_mcu)
                                                   macMcuRecordMaxRssiStop (mac_mcu)
                                                   macMcuRfIsr (mac_mcu)
                                                   macMcuTimer2Isr (mac_mcu)
                                                   macMemReadRxFifo (mac_mem)
                                                   macMemWriteTxFifo (mac_mem)
                                                   macPibReset (mac_pib)
                                                   macPollCnf (mac_device)
                                                   macPollDataReqComplete (mac_device)
                                                   macPollDataRxInd (mac_device)
                                                   macPollFrameResponseTimeout (mac_device)
                                                   macPollRxAssocRsp (mac_device)
                                                   macPollRxDisassoc (mac_device)
                                                   macRadioEnergyDetectStop (mac_radio)
                                                   macRadioReset (mac_radio)
                                                   macRadioSetChannel (mac_radio)
                                                   macRadioSetTxPower (mac_radio)
                                                   macRadioStartScan (mac_radio)
                                                   macRadioUpdateChannel (mac_radio)
                                                   macRxAckTxDoneCallback (mac_rx)
                                                   macRxAssocRsp (mac_device)
                                                   macRxAssociateReq (mac_coord)
                                                   macRxBeacon (mac_mgmt)
                                                   macRxBeaconReq (mac_coord)
                                                   macRxCheckPendingCallback (mac_data)
                                                   macRxCompleteCallback (mac_data)
                                                   macRxCoordRealign (mac_device)
                                                   macRxDataReq (mac_coord)
                                                   macRxDisable (mac_rx_onoff)
                                                   macRxDisassoc (mac_mgmt)
                                                   macRxEnable (mac_rx_onoff)
                                                   macRxHaltCleanup (mac_rx)
                                                   macRxHardDisable (mac_rx_onoff)
                                                   macRxOffRequest (mac_rx_onoff)
                                                   macRxOnRequest (mac_rx_onoff)
                                                   macRxOrphan (mac_coord)
                                                   macRxPanConflict (mac_coord)
                                                   macRxPromiscuousMode (mac_rx)
                                                   macRxSoftEnable (mac_rx_onoff)
                                                   macRxThresholdIsr (mac_rx)
                                                   macRxTxReset (mac_rx)
                                                   macScanComplete (mac_scan)
                                                   macScanFailedInProgress (mac_scan)
                                                   macScanNextChan (mac_scan)
                                                   macScanRxBeacon (mac_scan)
                                                   macScanRxCoordRealign (mac_scan)
                                                   macScanStartTimer (mac_scan)
                                                   macSendDataMsg (mac_main)
                                                   macSendMsg (mac_main)
                                                   macSetEvent (mac_main)
                                                   macSleepWakeUp (mac_sleep)
                                                   macStartBegin (mac_coord)
                                                   macStartComplete (mac_coord)
                                                   macStartContinue (mac_coord)
                                                   macStartFrameResponseTimer (mac_device)
                                                   macStartResponseTimer (mac_device)
                                                   macStartSetParams (mac_coord)
                                                   macTimer (mac_timer)
                                                   macTimerAddTimer (mac_timer)
                                                   macTimerCancel (mac_timer)
                                                   macTimerRecalcUnaligned (mac_timer)
                                                   macTimerUpdateBackoffTimer (mac_timer)
                                                   macTxAckNotReceivedCallback (mac_tx)
                                                   macTxAckReceivedCallback (mac_tx)
                                                   macTxChannelBusyCallback (mac_tx)
                                                   macTxCompleteCallback (mac_data)
                                                   macTxDoneCallback (mac_tx)
                                                   macTxFrame (mac_tx)
                                                   macTxStartQueuedFrame (mac_tx)
                                                   macTxTimestampCallback (mac_tx)
                                                   main (ZMain)
                                                   nwkBuildDataCnf (nwk)
                                                   nwkDB_Add (nwk_bufs)
                                                   nwkDB_CreateHdr (nwk_bufs)
                                                   nwkDB_DeleteRecAll (nwk_bufs)
                                                   nwkDB_FindMatch (nwk_bufs)
                                                   nwkDB_UserDataLoad (nwk_util)
                                                   nwkSimulateDataCnf (nwk)
                                                   nwk_BeaconFromNative (nwk)
                                                   nwk_BeaconToNative (nwk)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
                                                   nwk_MacDataBuffersDealloc (nwk_bufs)
                                                   nwk_MacDataBuffersFull (nwk_bufs)
                                                   nwk_ScanJoiningOrphan (nwk)
                                                   nwk_SendNextDataBuf (nwk_bufs)
                                                   nwk_associate_cnf_processing (nwk)
                                                   nwk_associate_ind_processing (nwk)
                                                   nwk_beacon_notify_ind_processing (nwk)
                                                   nwk_comm_status_ind_processing (nwk)
                                                   nwk_data_cnf_processing (nwk)
                                                   nwk_data_ind_processing (nwk)
                                                   nwk_data_req_send (nwk)
                                                   nwk_desc_list_free (nwk)
                                                   nwk_event_loop (nwk)
                                                   nwk_getNetworkDesc (nwk)
                                                   nwk_globals_init (nwk_globals)
                                                   nwk_init (nwk)
                                                   nwk_orphan_ind_processing (nwk)
                                                   nwk_scan_cnf_processing (nwk)
                                                   nwk_start_cnf_processing (nwk)
                                                   nwk_start_coord (nwk)
                                                   osalAddTasks (OSAL_SampleApp)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalDeleteTimer (OSAL_Timers)
                                                   osalInitTasks (OSAL_Tasks)
                                                   osalTaskAdd (OSAL_Tasks)
                                                   osalTimerInit (OSAL_Timers)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_cpyExtAddr (OSAL)
                                                   osal_get_timeoutEx (OSAL_Timers)
                                                   osal_init_system (OSAL)
                                                   osal_mem_alloc (OSAL_Memory)
                                                   osal_mem_free (OSAL_Memory)
                                                   osal_mem_init (OSAL_Memory)
                                                   osal_memset (OSAL)
                                                   osal_msg_allocate (OSAL)
                                                   osal_msg_deallocate (OSAL)
                                                   osal_msg_receive (OSAL)
                                                   osal_msg_send (OSAL)
                                                   osal_nv_init (OSAL_Nv)
                                                   osal_nv_item_init (OSAL_Nv)
                                                   osal_nv_item_len (OSAL_Nv)
                                                   osal_nv_read (OSAL_Nv)
                                                   osal_nv_write (OSAL_Nv)
                                                   osal_set_event (OSAL)
                                                   osal_start_system (OSAL)
                                                   osal_start_timer (OSAL_Timers)
                                                   osal_start_timerEx (OSAL_Timers)
                                                   osal_stop_timer (OSAL_Timers)
                                                   osal_stop_timerEx (OSAL_Timers)
                                                   osal_timer_activate (OSAL_Timers)
                                                   osal_timer_hw_setup (OSAL_Timers)
                                                   pollDMA (hal_uart)
                                                   rxAddrIsr (mac_rx)
                                                   rxDiscardFrame (mac_rx)
                                                   rxDiscardIsr (mac_rx)
                                                   rxDone (mac_rx)
                                                   rxFcsIsr (mac_rx)
                                                   rxHaltCleanupFinalStep (mac_rx)
                                                   rxPayloadIsr (mac_rx)
                                                   rxPostRxUpdates (mac_rx)
                                                   rxStartIsr (mac_rx)
                                                   sAddrCmp (saddr)
                                                   sAddrCpy (saddr)
                                                   sAddrExtCpy (saddr)
                                                   setItem (OSAL_Nv)
                                                   setPageUse (OSAL_Nv)
                                                   txComplete (mac_tx)
                                                   txCsmaGo (mac_tx)
                                                   txCsmaPrep (mac_tx)
                                                   txGo (mac_tx)
                                                   writeBuf (OSAL_Nv)
                                                   writeItem (OSAL_Nv)
                                                   writeWord (OSAL_Nv)
                                                   writeWordD (OSAL_Nv)
                                                   writeWordH (OSAL_Nv)
                                                   xferBuf (OSAL_Nv)
                                                   zdpProcessAddrReq (ZDProfile)
                                                   zgInit (ZGlobals)
                                                   zgReadStartupOptions (ZGlobals)
                                                   zgWriteStartupOptions (ZGlobals)
                                                   zmain_ext_addr (ZMain)
                                                   zmain_vdd_check (ZMain)
           ?BRET                   0000009A        ?BANKED_LEAVE_XDATA (?BANKED_LEAVE_XDATA)
                                                   ?Subroutine0 (OSAL_PwrMgr)
                                                   ?Subroutine0 (OnBoard)
                                                   ?Subroutine0 (ZDSecMgr)
                                                   ?Subroutine0 (hal_adc)
                                                   ?Subroutine0 (hal_drivers)
                                                   ?Subroutine0 (mac_csp_tx)
                                                   ?Subroutine0 (mac_low_level)
                                                   ?Subroutine0 (mac_radio)
                                                   ?Subroutine0 (nwk_globals)
                                                   ?Subroutine0 (wxl_uart)
                                                   ?Subroutine1 (hal_key)
                                                   ?Subroutine1 (mac_rx_onoff)
                                                   ?Subroutine10 (hal_led)
                                                   ?Subroutine13 (hal_timer)
                                                   ?Subroutine16 (MTEL)
                                                   ?Subroutine19 (OSAL)
                                                   ?Subroutine2 (OSAL_Memory)
                                                   ?Subroutine2 (hal_key)
                                                   ?Subroutine20 (mac_rx)
                                                   ?Subroutine21 (ZDObject)
                                                   ?Subroutine21 (hal_uart)
                                                   ?Subroutine25 (ZDApp)
                                                   ?Subroutine3 (OSAL_Tasks)
                                                   ?Subroutine3 (mac_mcu)
                                                   ?Subroutine3 (mac_tx)
                                                   ?Subroutine30 (AF)
                                                   ?Subroutine4 (mac_mcu)
                                                   ?Subroutine5 (OSAL_Timers)
                                                   ?Subroutine67 (OSAL_Nv)
                                                   ?Subroutine8 (SPIMgr)
                                                   ?Subroutine8 (zmac_cb)
                                                   ?Subroutine9 (hal_lcd)
                                                   APSME_CmdPktNM (APSMEDE)
                                                   HalDmaInit (hal_dma)
                                                   NLME_CmdBcast (nwk_util)
                                                   NLME_GetCoordExtAddr (nwk_util)
                                                   NLME_GetExtAddr (nwk_util)
                                                   NLME_PermitJoiningTimeout (ZDObject)
                                                   Onboard_wait (OnBoard)
                                                   Segment part 14 (mac_coord)
                                                   Segment part 15 (hal_aes)
                                                   Segment part 16 (AddrMgr)
                                                   Segment part 17 (NLMEDE_CB)
                                                   Segment part 18 (aps_groups)
                                                   Segment part 19 (NLMEDE)
                                                   Segment part 19 (nwk)
                                                   Segment part 22 (APS)
                                                   Segment part 23 (nwk_bufs)
                                                   Segment part 27 (mac_scan)
                                                   Segment part 29 (mac_main)
                                                   Segment part 34 (mac_data)
                                                   Segment part 38 (AssocList)
                                                   Segment part 40 (APSMEDE)
                                                   Segment part 46 (mac_device)
                                                   Segment part 50 (rtg)
                                                   Segment part 68 (APSMEDE)
                                                   Segment part 7 (APSMEDE_CB)
                                                   Segment part 73 (mac_mgmt)
                                                   Segment part 79 (nwk_util)
                                                   Segment part 8 (mac_pwr)
                                                   Write595 (hal_lcd)
                                                   ZDO_PollConfirmCB (ZDApp)
                                                   ZDO_SyncIndicationCB (ZDApp)
                                                   delay1 (hal_lcd)
                                                   delay_us (hal_lcd)
                                                   halAssertHandler (hal_assert)
                                                   macApiPwrOnReq (mac_pwr)
                                                   macBackoffTimerReset (mac_backoff_timer)
                                                   macFrameDuration (mac_data)
                                                   macMcuRandomByte (mac_mcu)
                                                   macMcuTimerCapture (mac_mcu)
                                                   macNoAction (mac_mgmt)
                                                   macPibIndex (mac_pib)
                                                   macPibReset (mac_pib)
                                                   macSleepWakeUp (mac_sleep)
                                                   nwk_Status (nwk_globals)
                                                   osal_int_disable (OSAL)
                                                   osal_int_enable (OSAL)
                                                   radioComputeED (mac_radio)
                                                   strlen (?strlen)

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\chipcon_cexit.r51
  LIBRARY MODULE, NAME : ?cexit

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 000000A8 - 000000AC (0x5 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           exit                    000000A8        ?call_main (?cmain)
           ?ROM_MONITOR_NOPS       000000A8 

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\chipcon_cstartup.r51
  PROGRAM MODULE, NAME : CSTARTUP

  SEGMENTS IN THE MODULE
  ======================
REGISTERS
  Relative segment, address: DATA 00000000, align: 0
  Segment part 0.             Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?REGISTERS              00000000 
    -------------------------------------------------------------------------
ISTACK
  Relative segment, address: IDATA 00000040, align: 0
  Segment part 1.             Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ISTACK_START           00000040 
    -------------------------------------------------------------------------
XSTACK
  Relative segment, address: XDATA 0000E008, align: 0
  Segment part 3.             Intra module refs:   ?RESET_XSP
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSTACK_START           0000E008 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000002 (0x3 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   Segment part 6
           LOCAL                   ADDRESS         
           =====                   =======         
           ?reset_vector           00000000 
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000AD - 000000B2 (0x6 bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   ?reset_vector
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __program_start         000000AD        Absolute parts (?ABS_ENTRY_MOD)
           ?RESET_SP               000000B0 
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000B3 - 000000B8 (0x6 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?RESET_XSP              000000B3        ?XSP (VIRTUAL_REGISTERS)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000B9 - 000000B9 (0x1 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?RESET_CODE_BANK        000000B9        Absolute parts (?BANKED_CODE_SUPPORT)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000BA - 000000BC (0x3 bytes), align: 0
  Segment part 11.            Intra module refs:   Absolute parts
           LOCAL                   ADDRESS         
           =====                   =======         
           __call_main             000000BA 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : VIRTUAL_REGISTERS

  SEGMENTS IN THE MODULE
  ======================
BREG
  Relative segment, address: BIT 00000020.0 - 00000020.7 (0x8 bits), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?B0                     00000020.0      Absolute parts (CSTARTUP)
    -------------------------------------------------------------------------
VREG
  Relative segment, address: DATA 00000008, align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V0                     00000008        ?BANKED_ENTER_XDATA (?BANKED_ENTER_XDATA)
                                                   ?BANKED_LEAVE_XDATA (?BANKED_LEAVE_XDATA)
                                                   ?FUNC_ENTER_XDATA (?FUNC_ENTER_XDATA)
                                                   ?FUNC_LEAVE_XDATA (?FUNC_LEAVE_XDATA)
                                                   ?INTERRUPT_ENTER_XSP (?INTERRUPT_ENTER_XSP)
                                                   ?INTERRUPT_LEAVE_XSP (?INTERRUPT_LEAVE_XSP)
                                                   ?Subroutine0 (MTEL)
                                                   ?Subroutine0 (OSAL_Nv)
                                                   ?Subroutine0 (ZGlobals)
                                                   ?Subroutine0 (hal_lcd)
                                                   ?Subroutine0 (mac_backoff_timer)
                                                   ?Subroutine0 (mac_mcu)
                                                   ?Subroutine0 (zmac_cb)
                                                   ?Subroutine1 (OSAL)
                                                   ?Subroutine1 (ZDObject)
                                                   ?Subroutine1 (ZDProfile)
                                                   ?Subroutine1 (mac_mcu)
                                                   ?Subroutine1 (zmac_cb)
                                                   ?Subroutine10 (hal_uart)
                                                   ?Subroutine11 (MTEL)
                                                   ?Subroutine12 (MTEL)
                                                   ?Subroutine12 (OSAL_Nv)
                                                   ?Subroutine12 (ZDApp)
                                                   ?Subroutine12 (ZDObject)
                                                   ?Subroutine12 (ZDProfile)
                                                   ?Subroutine12 (mac_rx)
                                                   ?Subroutine13 (OSAL_Nv)
                                                   ?Subroutine13 (ZDProfile)
                                                   ?Subroutine14 (ZDApp)
                                                   ?Subroutine14 (hal_uart)
                                                   ?Subroutine15 (OSAL)
                                                   ?Subroutine15 (mac_rx)
                                                   ?Subroutine19 (OSAL_Nv)
                                                   ?Subroutine2 (MTEL)
                                                   ?Subroutine2 (OSAL_Nv)
                                                   ?Subroutine2 (hal_lcd)
                                                   ?Subroutine2 (hal_led)
                                                   ?Subroutine2 (mac_backoff_timer)
                                                   ?Subroutine21 (OSAL_Nv)
                                                   ?Subroutine21 (ZDProfile)
                                                   ?Subroutine22 (AF)
                                                   ?Subroutine22 (ZDApp)
                                                   ?Subroutine23 (ZDApp)
                                                   ?Subroutine25 (ZDProfile)
                                                   ?Subroutine3 (OSAL_Nv)
                                                   ?Subroutine3 (ZDApp)
                                                   ?Subroutine3 (zmac_cb)
                                                   ?Subroutine30 (OSAL_Nv)
                                                   ?Subroutine31 (ZDProfile)
                                                   ?Subroutine34 (OSAL_Nv)
                                                   ?Subroutine38 (OSAL_Nv)
                                                   ?Subroutine38 (ZDProfile)
                                                   ?Subroutine4 (ZDObject)
                                                   ?Subroutine4 (zmac_cb)
                                                   ?Subroutine42 (OSAL_Nv)
                                                   ?Subroutine43 (OSAL_Nv)
                                                   ?Subroutine47 (OSAL_Nv)
                                                   ?Subroutine48 (OSAL_Nv)
                                                   ?Subroutine49 (OSAL_Nv)
                                                   ?Subroutine5 (OSAL)
                                                   ?Subroutine5 (mac_mcu)
                                                   ?Subroutine5 (zmac_cb)
                                                   ?Subroutine57 (OSAL_Nv)
                                                   ?Subroutine59 (OSAL_Nv)
                                                   ?Subroutine6 (hal_led)
                                                   ?Subroutine7 (hal_lcd)
                                                   ?Subroutine7 (zmac_cb)
                                                   ?Subroutine73 (OSAL_Nv)
                                                   ?Subroutine8 (OSAL)
                                                   ?Subroutine8 (OSAL_Nv)
                                                   ?Subroutine8 (hal_lcd)
                                                   AF_DataRequest (AF)
                                                   APSDE_DataIndication (APSMEDE_CB)
                                                   APSDE_DataReq (APSMEDE)
                                                   APSDE_FrameAlloc (APSMEDE)
                                                   APSDE_FrameHdrInit (APSMEDE)
                                                   APSDE_FrameHdrSet (APSMEDE)
                                                   APSDE_ParseMsg (aps_util)
                                                   APSME_LookupNwkAddr (APSMEDE)
                                                   APS_CmdInd (APS)
                                                   APS_event_loop (APS)
                                                   AddrMgrEntryAdd (AddrMgr)
                                                   AddrMgrEntryAddRef (AddrMgr)
                                                   AddrMgrEntryGet (AddrMgr)
                                                   AddrMgrEntryLookupExt (AddrMgr)
                                                   AddrMgrEntryLookupNwk (AddrMgr)
                                                   AddrMgrEntryRelease (AddrMgr)
                                                   AddrMgrEntryUpdate (AddrMgr)
                                                   AddrMgrEntryUpdateEx (AddrMgr)
                                                   AddrMgrExtAddrValid (AddrMgr)
                                                   AssocAddNew (AssocList)
                                                   AssocCount (AssocList)
                                                   AssocGetWithAddress (AssocList)
                                                   AssocIsChild (AssocList)
                                                   AssocMakeList (AssocList)
                                                   AssocRemove (AssocList)
                                                   HalAdcRead (hal_adc)
                                                   HalKeyPoll (hal_key)
                                                   HalLedBlink (hal_led)
                                                   HalLedSet (hal_led)
                                                   HalLedUpdate (hal_led)
                                                   HalTimerConfig (hal_timer)
                                                   HalTimerStart (hal_timer)
                                                   HalUARTOpen (hal_uart)
                                                   HalUARTPoll (hal_uart)
                                                   HalUARTRead (hal_uart)
                                                   HalUARTWrite (hal_uart)
                                                   InitBoard (OnBoard)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MAC_McpsDataAlloc (mac_data)
                                                   MAC_MlmeGetReq (mac_pib)
                                                   MAC_MlmeResetReq (mac_mgmt)
                                                   MAC_MlmeSetReq (mac_pib)
                                                   MTProcessAppMsg (MTEL)
                                                   MTProcessAppRspMsg (MTEL)
                                                   MT_BuildAndSendZToolResponse (MTEL)
                                                   MT_BuildSPIMsg (MTEL)
                                                   MT_ProcessCommand (MTEL)
                                                   MT_ProcessDebugMsg (MTEL)
                                                   MT_ProcessDebugStr (MTEL)
                                                   MT_ProcessGetDeviceInfo (MTEL)
                                                   MT_ProcessGetNV (MTEL)
                                                   MT_ProcessGetNvInfo (MTEL)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   MT_ProcessSetNV (MTEL)
                                                   MT_Reset (MTEL)
                                                   MT_ReverseBytes (MTEL)
                                                   NLDE_BuildFrameControl (nwk_util)
                                                   NLDE_BuildMsg (nwk_util)
                                                   NLDE_DataCnf (NLMEDE_CB)
                                                   NLDE_DataIndication (NLMEDE_CB)
                                                   NLDE_DataReq (NLMEDE)
                                                   NLDE_DataReqAlloc (NLMEDE)
                                                   NLDE_DataReqSend (nwk_util)
                                                   NLDE_ParseFrameControl (nwk_util)
                                                   NLDE_ParseMsg (nwk_util)
                                                   NLDE_ParseMsg2 (nwk_util)
                                                   NLDE_SendMsg (nwk_util)
                                                   NLME_GetNeighborLinkInfo (nwk_util)
                                                   NLME_GetRequest (NLMEDE)
                                                   NLME_IsAddressBroadcast (nwk_util)
                                                   NLME_JoinRequest (NLMEDE)
                                                   NLME_LeaveCmdCnf (nwk_util)
                                                   NLME_LeaveCmdProcess (nwk_util)
                                                   NLME_LeaveCmdSend (nwk_util)
                                                   NLME_NetworkDiscoveryRequest (NLMEDE)
                                                   NLME_OrphanJoinRequest (NLMEDE)
                                                   NLME_ReJoinRequest (NLMEDE)
                                                   NLME_RejoinReqCmdProcess (nwk_util)
                                                   NLME_RejoinRspCmdProcess (nwk_util)
                                                   NLME_RejoinRspSend (nwk_util)
                                                   NLME_RemoveChild (nwk_util)
                                                   NLME_RouteDiscoveryRequest (rtg)
                                                   NLME_SetAssocFlags (nwk_util)
                                                   NLME_SetRequest (NLMEDE)
                                                   NwkCommandPktProcessing (nwk)
                                                   Print (hal_lcd)
                                                   Print8 (hal_lcd)
                                                   RTG_AddRtgEntry (rtg)
                                                   RTG_AllocNewAddress (rtg)
                                                   RTG_BcastAdd (rtg)
                                                   RTG_BcastChk (rtg)
                                                   RTG_BcastDel (rtg)
                                                   RTG_BcastHold (rtg)
                                                   RTG_BcastTimeout (rtg)
                                                   RTG_BcastTimerHandler (rtg)
                                                   RTG_CalcAddress (rtg)
                                                   RTG_CheckRtDiscEntry (rtg)
                                                   RTG_CheckRtStatus (rtg)
                                                   RTG_DataReq (rtg)
                                                   RTG_DeAllocAddress (rtg)
                                                   RTG_FillCSkipTable (rtg)
                                                   RTG_GetAncestors (rtg)
                                                   RTG_GetLinkCost (rtg)
                                                   RTG_GetNextTreeHop (rtg)
                                                   RTG_GetPrevHop (rtg)
                                                   RTG_GetRoutingAddress (rtg)
                                                   RTG_GetRtDiscEntry (rtg)
                                                   RTG_GetTreeRoute (rtg)
                                                   RTG_IndirectTimeout (rtg)
                                                   RTG_Init (rtg)
                                                   RTG_MultiplyCskip (rtg)
                                                   RTG_ProcessRrep (rtg)
                                                   RTG_ProcessRreq (rtg)
                                                   RTG_RouteMaintanence (rtg)
                                                   RTG_SendRErr (rtg)
                                                   RTG_SendRrep (rtg)
                                                   RTG_TimerEvent (rtg)
                                                   RTG_UpdateNeighborEntry (nwk_util)
                                                   RTG_UpdateRtDiscEntry (rtg)
                                                   SPIMgr_ProcessZToolData (SPIMgr)
                                                   SSP_NwkSecurity (ssp)
                                                   SampleApp_Init (SampleApp)
                                                   SampleApp_MessageMSGCB (SampleApp)
                                                   SampleApp_ProcessEvent (SampleApp)
                                                   SampleApp_SendFlashMessage (SampleApp)
                                                   SampleApp_SendPeriodicMessage (SampleApp)
                                                   Segment part 10 (APSMEDE_CB)
                                                   Segment part 10 (aps_util)
                                                   Segment part 103 (nwk_util)
                                                   Segment part 11 (NLMEDE_CB)
                                                   Segment part 114 (nwk_util)
                                                   Segment part 116 (APSMEDE)
                                                   Segment part 117 (APSMEDE)
                                                   Segment part 14 (mac_pib)
                                                   Segment part 16 (mac_pib)
                                                   Segment part 19 (AssocList)
                                                   Segment part 22 (aps_util)
                                                   Segment part 27 (AddrMgr)
                                                   Segment part 27 (mac_timer)
                                                   Segment part 28 (rtg)
                                                   Segment part 29 (rtg)
                                                   Segment part 31 (mac_coord)
                                                   Segment part 31 (rtg)
                                                   Segment part 32 (mac_coord)
                                                   Segment part 32 (nwk_util)
                                                   Segment part 32 (rtg)
                                                   Segment part 32 (ssp)
                                                   Segment part 33 (nwk_util)
                                                   Segment part 34 (NLMEDE)
                                                   Segment part 34 (nwk_util)
                                                   Segment part 35 (mac_main)
                                                   Segment part 35 (nwk_util)
                                                   Segment part 37 (mac_mgmt)
                                                   Segment part 38 (mac_main)
                                                   Segment part 38 (nwk_util)
                                                   Segment part 39 (APS)
                                                   Segment part 41 (mac_coord)
                                                   Segment part 42 (NLMEDE)
                                                   Segment part 44 (AddrMgr)
                                                   Segment part 48 (AddrMgr)
                                                   Segment part 50 (APS)
                                                   Segment part 52 (nwk)
                                                   Segment part 52 (nwk_util)
                                                   Segment part 54 (AddrMgr)
                                                   Segment part 58 (AddrMgr)
                                                   Segment part 59 (nwk_util)
                                                   Segment part 59 (rtg)
                                                   Segment part 60 (AddrMgr)
                                                   Segment part 60 (nwk_util)
                                                   Segment part 61 (NLMEDE)
                                                   Segment part 62 (NLMEDE)
                                                   Segment part 62 (nwk_util)
                                                   Segment part 62 (rtg)
                                                   Segment part 63 (NLMEDE)
                                                   Segment part 63 (mac_data)
                                                   Segment part 65 (NLMEDE)
                                                   Segment part 65 (nwk)
                                                   Segment part 66 (nwk)
                                                   Segment part 68 (APS)
                                                   Segment part 7 (aps_util)
                                                   Segment part 70 (mac_data)
                                                   Segment part 70 (rtg)
                                                   Segment part 79 (rtg)
                                                   Segment part 84 (APSMEDE)
                                                   Segment part 89 (rtg)
                                                   Segment part 91 (rtg)
                                                   Segment part 92 (APSMEDE)
                                                   Segment part 97 (nwk)
                                                   SendData (SampleApp)
                                                   Uart_Baud_rate (wxl_uart)
                                                   ZDApp_InMsgCB (ZDApp)
                                                   ZDApp_LeaveCtrlInit (ZDApp)
                                                   ZDApp_LeaveCtrlSet (ZDApp)
                                                   ZDApp_LeaveCtrlStartup (ZDApp)
                                                   ZDApp_MatchDescRspCB (ZDApp)
                                                   ZDApp_ProcessNetworkJoin (ZDApp)
                                                   ZDApp_ProcessOSALMsg (ZDApp)
                                                   ZDApp_SendMsg (ZDApp)
                                                   ZDApp_SendNewDstAddr (ZDApp)
                                                   ZDApp_event_loop (ZDApp)
                                                   ZDOInitDevice (ZDApp)
                                                   ZDO_AnyClusterMatches (ZDObject)
                                                   ZDO_CreateAlignedUINT16List (ZDObject)
                                                   ZDO_LeaveInd (ZDApp)
                                                   ZDO_NetworkDiscoveryConfirmCB (ZDApp)
                                                   ZDO_ProcessActiveEPReq (ZDObject)
                                                   ZDO_ProcessEPListRsp (ZDObject)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_ProcessNodeDescReq (ZDObject)
                                                   ZDO_ProcessPowerDescReq (ZDObject)
                                                   ZDO_ProcessSimpleDescReq (ZDObject)
                                                   ZDO_StartDevice (ZDObject)
                                                   ZDO_UpdateNwkStatus (ZDObject)
                                                   ZDP_EPRsp (ZDProfile)
                                                   ZDP_GenericRsp (ZDProfile)
                                                   ZDP_IncomingData (ZDProfile)
                                                   ZDP_NodeDescMsg (ZDProfile)
                                                   ZDP_PowerDescMsg (ZDProfile)
                                                   ZDP_SimpleDescMsg (ZDProfile)
                                                   ZMacDataReq (zmac)
                                                   ZMacScanReq (zmac)
                                                   ZMacSendNoData (zmac)
                                                   ZMacSetReq (zmac)
                                                   afBuildMSGIncoming (AF)
                                                   afDataConfirm (AF)
                                                   afDataReqMTU (AF)
                                                   afFindSimpleDesc (AF)
                                                   afIncomingData (AF)
                                                   afRegister (AF)
                                                   afRegisterExtended (AF)
                                                   apsProcessAck (aps_util)
                                                   aps_AddGroup (aps_groups)
                                                   aps_GroupsWriteNV (aps_groups)
                                                   calcChkF (OSAL_Nv)
                                                   compactPage (OSAL_Nv)
                                                   fillAndSend (ZDProfile)
                                                   findItem (OSAL_Nv)
                                                   halAssertHazardLights (hal_assert)
                                                   halTimerSendCallBack (hal_timer)
                                                   halTimerSetCount (hal_timer)
                                                   initItem (OSAL_Nv)
                                                   initItem2 (OSAL_Nv)
                                                   initNV (OSAL_Nv)
                                                   initPage (OSAL_Nv)
                                                   macAllocTxBuffer (mac_data)
                                                   macApiDisassociateReq (mac_mgmt)
                                                   macApiPurgeReq (mac_coord)
                                                   macApiScanReq (mac_scan)
                                                   macApiStartReq (mac_coord)
                                                   macBackoffTimerCancelTrigger (mac_backoff_timer)
                                                   macBackoffTimerCapture (mac_backoff_timer)
                                                   macBackoffTimerCompareIsr (mac_backoff_timer)
                                                   macBackoffTimerCount (mac_backoff_timer)
                                                   macBackoffTimerInit (mac_backoff_timer)
                                                   macBackoffTimerRolloverCallback (mac_timer)
                                                   macBackoffTimerSetRollover (mac_backoff_timer)
                                                   macBackoffTimerSetTrigger (mac_backoff_timer)
                                                   macBackoffTimerTriggerCallback (mac_timer)
                                                   macBuildBeacon (mac_coord)
                                                   macBuildBeaconNotifyInd (mac_mgmt)
                                                   macBuildCommonReq (mac_mgmt)
                                                   macBuildHeader (mac_mgmt)
                                                   macBuildPendAddr (mac_coord)
                                                   macBuildRealign (mac_coord)
                                                   macCbackForEvent (mac_main)
                                                   macCspTxRequestAckTimeoutCallback (mac_csp_tx)
                                                   macDataTxSend (mac_data)
                                                   macDestSAddrCmp (mac_mgmt)
                                                   macEventLoop (mac_main)
                                                   macExecute (mac_main)
                                                   macFrameDuration (mac_data)
                                                   macIndirectExpire (mac_coord)
                                                   macIndirectMark (mac_coord)
                                                   macIndirectSend (mac_coord)
                                                   macMcuOverflowSetCompare (mac_mcu)
                                                   macMcuOverflowSetCount (mac_mcu)
                                                   macMemReadRxFifo (mac_mem)
                                                   macMemWriteTxFifo (mac_mem)
                                                   macRadioSetTxPower (mac_radio)
                                                   macRxAssocRsp (mac_device)
                                                   macRxCompleteCallback (mac_data)
                                                   macRxDisassoc (mac_mgmt)
                                                   macScanCnfInit (mac_scan)
                                                   macScanNextChan (mac_scan)
                                                   macScanRxBeacon (mac_scan)
                                                   macScanRxCoordRealign (mac_scan)
                                                   macScanStartTimer (mac_scan)
                                                   macSendDataMsg (mac_main)
                                                   macSendMsg (mac_main)
                                                   macStartBegin (mac_coord)
                                                   macStartFrameResponseTimer (mac_device)
                                                   macStartResponseTimer (mac_device)
                                                   macTimer (mac_timer)
                                                   macTimerAddTimer (mac_timer)
                                                   macTimerCancel (mac_timer)
                                                   macTimerRecalcUnaligned (mac_timer)
                                                   macTimerUpdateBackoffTimer (mac_timer)
                                                   macTxAckReceivedCallback (mac_tx)
                                                   macTxTimestampCallback (mac_tx)
                                                   main (ZMain)
                                                   memcpy (?memcpy)
                                                   nwkDB_Add (nwk_bufs)
                                                   nwkDB_CreateHdr (nwk_bufs)
                                                   nwkDB_FindMatch (nwk_bufs)
                                                   nwk_BeaconFromNative (nwk)
                                                   nwk_BeaconToNative (nwk)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
                                                   nwk_ScanJoiningOrphan (nwk)
                                                   nwk_associate_ind_processing (nwk)
                                                   nwk_beacon_notify_ind_processing (nwk)
                                                   nwk_comm_status_ind_processing (nwk)
                                                   nwk_data_cnf_processing (nwk)
                                                   nwk_data_ind_processing (nwk)
                                                   nwk_data_req_send (nwk)
                                                   nwk_event_loop (nwk)
                                                   nwk_getNetworkDesc (nwk)
                                                   nwk_orphan_ind_processing (nwk)
                                                   nwk_start_coord (nwk)
                                                   nwkbufs_hold (nwk_bufs)
                                                   osalAddTasks (OSAL_SampleApp)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalTaskAdd (OSAL_Tasks)
                                                   osalTimerInit (OSAL_Timers)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_ExtAddrEqual (OSAL)
                                                   osal_GetSystemClock (OSAL_Timers)
                                                   osal_build_uint32 (OSAL)
                                                   osal_cpyExtAddr (OSAL)
                                                   osal_get_timeoutEx (OSAL_Timers)
                                                   osal_mem_alloc (OSAL_Memory)
                                                   osal_memcpy (OSAL)
                                                   osal_memset (OSAL)
                                                   osal_msg_allocate (OSAL)
                                                   osal_msg_dequeue (OSAL)
                                                   osal_msg_enqueue_max (OSAL)
                                                   osal_msg_extract (OSAL)
                                                   osal_msg_receive (OSAL)
                                                   osal_msg_send (OSAL)
                                                   osal_nv_item_init (OSAL_Nv)
                                                   osal_nv_item_len (OSAL_Nv)
                                                   osal_nv_read (OSAL_Nv)
                                                   osal_nv_write (OSAL_Nv)
                                                   osal_start_system (OSAL)
                                                   osal_start_timerEx (OSAL_Timers)
                                                   osal_stop_timerEx (OSAL_Timers)
                                                   osal_timer_hw_setup (OSAL_Timers)
                                                   pollDMA (hal_uart)
                                                   readHdr (OSAL_Nv)
                                                   rxFcsIsr (mac_rx)
                                                   rxStartIsr (mac_rx)
                                                   sAddrExtCmp (saddr)
                                                   sAddrExtCpy (saddr)
                                                   setItem (OSAL_Nv)
                                                   txCsmaPrep (mac_tx)
                                                   writeBuf (OSAL_Nv)
                                                   writeItem (OSAL_Nv)
                                                   writeWord (OSAL_Nv)
                                                   writeWordD (OSAL_Nv)
                                                   xferBuf (OSAL_Nv)
                                                   zdpProcessAddrReq (ZDProfile)
                                                   zgInit (ZGlobals)
                                                   zgReadStartupOptions (ZGlobals)
                                                   zgWriteStartupOptions (ZGlobals)
                                                   zmain_ext_addr (ZMain)
    -------------------------------------------------------------------------
XSP
  Relative segment, address: DATA 00000010 - 00000011 (0x2 bytes), align: 0
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSP                    00000010        ?ADD_XSTACK_DISP0_8 (?ADD_XSTACK_DISP8)
                                                   ?ALLOC_XSTACK8 (?ALLOC_XSTACK8)
                                                   ?BANKED_ENTER_XDATA (?BANKED_ENTER_XDATA)
                                                   ?BANKED_LEAVE_XDATA (?BANKED_LEAVE_XDATA)
                                                   ?DEALLOC_XSTACK8 (?DEALLOC_XSTACK8)
                                                   ?FUNC_ENTER_XDATA (?FUNC_ENTER_XDATA)
                                                   ?FUNC_LEAVE_XDATA (?FUNC_LEAVE_XDATA)
                                                   ?INTERRUPT_ENTER_XSP (?INTERRUPT_ENTER_XSP)
                                                   ?INTERRUPT_LEAVE_XSP (?INTERRUPT_LEAVE_XSP)
                                                   ?PUSH_XSTACK8_C (?PUSH_XSTACK8_C)
                                                   ?PUSH_XSTACK8_X (?PUSH_XSTACK8_X)
                                                   ?RESET_XSP (CSTARTUP)
                                                   ?Subroutine0 (ZGlobals)
                                                   ?Subroutine0 (mac_mcu)
                                                   ?Subroutine1 (OSAL_Nv)
                                                   ?Subroutine1 (ZDApp)
                                                   ?Subroutine11 (AF)
                                                   ?Subroutine11 (OSAL_Nv)
                                                   ?Subroutine13 (AF)
                                                   ?Subroutine14 (MTEL)
                                                   ?Subroutine15 (OSAL_Nv)
                                                   ?Subroutine2 (MTEL)
                                                   ?Subroutine2 (ZDObject)
                                                   ?Subroutine28 (OSAL_Nv)
                                                   ?Subroutine29 (OSAL_Nv)
                                                   ?Subroutine3 (hal_led)
                                                   ?Subroutine30 (OSAL_Nv)
                                                   ?Subroutine4 (MTEL)
                                                   ?Subroutine4 (hal_lcd)
                                                   ?Subroutine5 (MTEL)
                                                   ?Subroutine5 (SPIMgr)
                                                   ?Subroutine53 (OSAL_Nv)
                                                   ?Subroutine6 (AF)
                                                   ?Subroutine6 (MTEL)
                                                   ?Subroutine7 (MTEL)
                                                   ?Subroutine8 (MTEL)
                                                   ?Subroutine8 (mac_rx)
                                                   ?Subroutine9 (hal_uart)
                                                   ?XSTACK_DISP0_8 (?XSTACK_DISP8)
                                                   AF_DataRequest (AF)
                                                   APSDE_DataIndication (APSMEDE_CB)
                                                   APSDE_DataReq (APSMEDE)
                                                   APSDE_FrameAlloc (APSMEDE)
                                                   APSME_LookupNwkAddr (APSMEDE)
                                                   AddrMgrEntryUpdate (AddrMgr)
                                                   AddrMgrNwkAddrLookup (AddrMgr)
                                                   AssocAddNew (AssocList)
                                                   AssocGetWithAddress (AssocList)
                                                   AssocRemove (AssocList)
                                                   HalAdcInit (hal_adc)
                                                   HalAdcRead (hal_adc)
                                                   HalLedBlink (hal_led)
                                                   HalLedUpdate (hal_led)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MTProcessAppMsg (MTEL)
                                                   MT_ProcessDebugMsg (MTEL)
                                                   MT_ProcessGetDeviceInfo (MTEL)
                                                   MT_ProcessGetNvInfo (MTEL)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   NLDE_DataIndication (NLMEDE_CB)
                                                   NLDE_DataReqSend (nwk_util)
                                                   NLDE_SendMsg (nwk_util)
                                                   NLME_CmdCnf (nwk_util)
                                                   NLME_GetCoordShortAddr (nwk_util)
                                                   NLME_GetProtocolVersion (nwk_util)
                                                   NLME_JoinRequest (NLMEDE)
                                                   NLME_LeaveCmdCnf (nwk_util)
                                                   NLME_LeaveCmdProcess (nwk_util)
                                                   NLME_LeaveRsp (NLMEDE)
                                                   NLME_RTG_BcastAdd (nwk_util)
                                                   NLME_SetAssocFlags (nwk_util)
                                                   RTG_BcastAdd (rtg)
                                                   RTG_DataReq (rtg)
                                                   RTG_FillCSkipTable (rtg)
                                                   RTG_GetAncestors (rtg)
                                                   RTG_GetRoutingAddress (rtg)
                                                   RTG_GetTreeRoute (rtg)
                                                   RTG_ProcessRreq (rtg)
                                                   RTG_SendRrep (rtg)
                                                   SPIMgr_Init (SPIMgr)
                                                   SPIMgr_ProcessZToolData (SPIMgr)
                                                   SampleApp_SendFlashMessage (SampleApp)
                                                   Segment part 101 (nwk_util)
                                                   Segment part 108 (nwk)
                                                   Segment part 111 (nwk)
                                                   Segment part 124 (nwk_util)
                                                   Segment part 143 (APSMEDE)
                                                   Segment part 15 (mac_device)
                                                   Segment part 19 (AssocList)
                                                   Segment part 190 (APSMEDE)
                                                   Segment part 23 (nwk)
                                                   Segment part 232 (APSMEDE)
                                                   Segment part 24 (aps_util)
                                                   Segment part 24 (mac_scan)
                                                   Segment part 25 (mac_scan)
                                                   Segment part 26 (AssocList)
                                                   Segment part 26 (rtg)
                                                   Segment part 35 (NLMEDE)
                                                   Segment part 36 (rtg)
                                                   Segment part 38 (mac_main)
                                                   Segment part 41 (mac_main)
                                                   Segment part 51 (nwk)
                                                   Segment part 55 (mac_coord)
                                                   Segment part 59 (mac_mgmt)
                                                   Segment part 62 (nwk)
                                                   Segment part 65 (mac_mgmt)
                                                   Segment part 86 (rtg)
                                                   SendData (SampleApp)
                                                   ZDAppSetupProtoVersion (ZDApp)
                                                   ZDApp_Init (ZDApp)
                                                   ZDApp_ProcessNetworkJoin (ZDApp)
                                                   ZDApp_SendNewDstAddr (ZDApp)
                                                   ZDOInitDevice (ZDApp)
                                                   ZDO_LeaveInd (ZDApp)
                                                   ZDO_NetworkDiscoveryConfirmCB (ZDApp)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_ProcessSimpleDescReq (ZDObject)
                                                   ZDO_StartDevice (ZDObject)
                                                   ZDP_EPRsp (ZDProfile)
                                                   ZDP_GenericRsp (ZDProfile)
                                                   ZDP_IncomingData (ZDProfile)
                                                   ZDP_NodeDescMsg (ZDProfile)
                                                   ZDP_PowerDescMsg (ZDProfile)
                                                   ZDP_SimpleDescMsg (ZDProfile)
                                                   ZMacReset (zmac)
                                                   ZMacStartReq (zmac)
                                                   afBuildMSGIncoming (AF)
                                                   afIncomingData (AF)
                                                   apsGenerateAck (aps_util)
                                                   apsProcessAck (aps_util)
                                                   aps_GroupsWriteNV (aps_groups)
                                                   calcChkF (OSAL_Nv)
                                                   compactPage (OSAL_Nv)
                                                   fillAndSend (ZDProfile)
                                                   halAssertHazardLights (hal_assert)
                                                   initNV (OSAL_Nv)
                                                   initPage (OSAL_Nv)
                                                   macApiStartReq (mac_coord)
                                                   macAssocDataReq (mac_device)
                                                   macAssociateCnf (mac_device)
                                                   macBuildBeacon (mac_coord)
                                                   macBuildHeader (mac_mgmt)
                                                   macCbackForEvent (mac_main)
                                                   macCommStatusInd (mac_mgmt)
                                                   macConflictSyncLossInd (mac_mgmt)
                                                   macEventLoop (mac_main)
                                                   macIndirectExpire (mac_coord)
                                                   macMcuOverflowCapture (mac_mcu)
                                                   macMcuOverflowCount (mac_mcu)
                                                   macMcuOverflowSetCompare (mac_mcu)
                                                   macMcuOverflowSetCount (mac_mcu)
                                                   macPollCnf (mac_device)
                                                   macRxAssocRsp (mac_device)
                                                   macRxAssociateReq (mac_coord)
                                                   macRxBeacon (mac_mgmt)
                                                   macRxCoordRealign (mac_device)
                                                   macRxDataReq (mac_coord)
                                                   macRxOrphan (mac_coord)
                                                   macScanFailedInProgress (mac_scan)
                                                   macScanNextChan (mac_scan)
                                                   macScanRxBeacon (mac_scan)
                                                   macStartFrameResponseTimer (mac_device)
                                                   nwk_ScanJoiningOrphan (nwk)
                                                   nwk_associate_cnf_processing (nwk)
                                                   nwk_associate_ind_processing (nwk)
                                                   nwk_beacon_notify_ind_processing (nwk)
                                                   nwk_data_cnf_processing (nwk)
                                                   nwk_data_ind_processing (nwk)
                                                   nwk_getNetworkDesc (nwk)
                                                   nwk_start_coord (nwk)
                                                   osalTaskAdd (OSAL_Tasks)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_nv_item_len (OSAL_Nv)
                                                   osal_nv_read (OSAL_Nv)
                                                   osal_nv_write (OSAL_Nv)
                                                   readHdr (OSAL_Nv)
                                                   rxAddrIsr (mac_rx)
                                                   rxStartIsr (mac_rx)
                                                   setItem (OSAL_Nv)
                                                   setPageUse (OSAL_Nv)
                                                   writeBuf (OSAL_Nv)
                                                   writeItem (OSAL_Nv)
                                                   writeWordH (OSAL_Nv)
                                                   xferBuf (OSAL_Nv)
                                                   zdpProcessAddrReq (ZDProfile)
                                                   zgReadStartupOptions (ZGlobals)
                                                   zgWriteStartupOptions (ZGlobals)

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\flashDmaTrigger.r51
  LIBRARY MODULE, NAME : flashDmaTrigger

Absolute parts
           LOCAL                   ADDRESS         
           =====                   =======         
           __KEIL__                00000000 
  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000144 - 00000147 (0x4 bytes), align: 2
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halFlashDmaTrigger      00000144        writeWord (OSAL_Nv)

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\hal_adc.r51
  PROGRAM MODULE, NAME : hal_adc

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000B4 - 000000B4 (0x1 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCCON1                 000000B4 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000B5 - 000000B5 (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCCON2                 000000B5 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000B6 - 000000B6 (0x1 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCCON3                 000000B6 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BA - 000000BA (0x1 bytes), align: 0
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCL                    000000BA 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BB - 000000BB (0x1 bytes), align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCH                    000000BB 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F2 - 000000F2 (0x1 bytes), align: 0
  Segment part 7. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCCFG                  000000F2 
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00002119 - 0000212A (0x12 bytes), align: 0
  Segment part 13.            Intra module refs:   HalAdcCheckVdd
           LOCAL                   ADDRESS         
           =====                   =======         
           HalAdcVddLimit          00002119 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039F96 - 00039FD3 (0x3e bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAdcInit              00039F96        HalDriverInit (hal_drivers)
               stack 1 = 00000000 ( 00000003 )
               stack 2 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039FD4 - 00039FDA (0x7 bytes), align: 0
  Segment part 15.            Intra module refs:   HalAdcCheckVdd
                                                   HalAdcInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00039FD4 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039FDB - 0003A091 (0xb7 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAdcRead              00039FDB        HalKeyPoll (hal_key)
                                                   zmain_ext_addr (ZMain)
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A092 - 0003A0D4 (0x43 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAdcCheckVdd          0003A092        ?Subroutine37 (OSAL_Nv)
                                                   zmain_vdd_check (ZMain)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000088 - 00000088 (0x1 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCON                 00000088 

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\hal_assert.r51
  PROGRAM MODULE, NAME : hal_assert

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000091 - 00000091 (0x1 bytes), align: 0
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFIM                    00000091 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039CD5 - 00039CE7 (0x13 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halAssertHandler        00039CD5        cspPrepForTxProgram (mac_csp_tx)
                                                   macBackoffTimerSetRollover (mac_backoff_timer)
                                                   macBackoffTimerSetTrigger (mac_backoff_timer)
                                                   macBackoffTimerTriggerCallback (mac_timer)
                                                   macCspTxRequestAckTimeoutCallback (mac_csp_tx)
                                                   macCspTxStopIsr (mac_csp_tx)
                                                   macLowLevelReset (mac_low_level)
                                                   macMcuAndT2PEROF2 (mac_mcu)
                                                   macMcuInit (mac_mcu)
                                                   macMcuOrT2PEROF2 (mac_mcu)
                                                   macMcuOverflowSetCompare (mac_mcu)
                                                   macMcuOverflowSetCount (mac_mcu)
                                                   macMemReadRxFifo (mac_mem)
                                                   macMemWriteTxFifo (mac_mem)
                                                   macRadioSetChannel (mac_radio)
                                                   macRadioStartScan (mac_radio)
                                                   macRadioUpdateChannel (mac_radio)
                                                   macRxDisable (mac_rx_onoff)
                                                   macRxEnable (mac_rx_onoff)
                                                   macRxPromiscuousMode (mac_rx)
                                                   macRxSoftEnable (mac_rx_onoff)
                                                   macSleepWakeUp (mac_sleep)
                                                   macTimerRecalcUnaligned (mac_timer)
                                                   macTxChannelBusyCallback (mac_tx)
                                                   macTxFrame (mac_tx)
                                                   macTxStartQueuedFrame (mac_tx)
                                                   macTxTimestampCallback (mac_tx)
                                                   rxAddrIsr (mac_rx)
                                                   rxDiscardFrame (mac_rx)
                                                   rxStartIsr (mac_rx)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039CE8 - 00039E32 (0x14b bytes), align: 0
  Segment part 20.            Intra module refs:   halAssertHandler
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halAssertHazardLights   00039CE8 
               stack 1 = 00000002 ( 00000002 )
               stack 2 = 00000000 ( 00000015 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039E33 - 00039E47 (0x15 bytes), align: 0
  Segment part 21.            Intra module refs:   halAssertHazardLights
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00039E33 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F3A0 - 0000F3A0 (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   halAssertHazardLights
           LOCAL                   ADDRESS         
           =====                   =======         
           halAssertHazardLights{7}{8}{18}::escape
                                   0000F3A0 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F85B - 0000F85E (0x4 bytes), align: 0
  Segment part 17.            Intra module refs:   halAssertHazardLights
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_5800         0000F85B 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001779 - 0000177C (0x4 bytes), align: 0
  Segment part 18.            Intra module refs:   __Constant_5800

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\hal_dma.r51
  PROGRAM MODULE, NAME : hal_dma

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000D2 - 000000D2 (0x1 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMA1CFGL                000000D2 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D3 - 000000D3 (0x1 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMA1CFGH                000000D3 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D4 - 000000D4 (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMA0CFGL                000000D4 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D5 - 000000D5 (0x1 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMA0CFGH                000000D5 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F3A1 - 0000F3A8 (0x8 bytes), align: 0
  Segment part 10.            Intra module refs:   HalDmaInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dmaCh0                  0000F3A1        osal_nv_init (OSAL_Nv)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F3A9 - 0000F3C8 (0x20 bytes), align: 0
  Segment part 11.            Intra module refs:   HalDmaInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dmaCh1234               0000F3A9        ?Subroutine8 (hal_uart)
                                                   ?Subroutine9 (hal_uart)
                                                   HalUARTInit (hal_uart)
                                                   aesDmaInit (hal_aes)
                                                   pollDMA (hal_uart)
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A7EB - 0003A7FB (0x11 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalDmaInit              0003A7EB        HalDriverInit (hal_drivers)

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\hal_drivers.r51
  PROGRAM MODULE, NAME : hal_drivers

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000F3C9 - 0000F3C9 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   Hal_Init
                                                   Hal_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_TaskID              0000F3C9        HalKeyConfig (hal_key)
                                                   HalLedBlink (hal_led)
                                                   halProcessKeyInterrupt (hal_key)
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A403 - 0003A40D (0xb bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_Init                0003A403        osalAddTasks (OSAL_SampleApp)
               is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A40E - 0003A44E (0x41 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalDriverInit           0003A40E        main (ZMain)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A44F - 0003A458 (0xa bytes), align: 0
  Segment part 9.             Intra module refs:   HalDriverInit
                                                   Hal_Init
                                                   Hal_ProcessPoll
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0003A44F 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A459 - 0003A4D7 (0x7f bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_ProcessEvent        0003A459        osalAddTasks (OSAL_SampleApp)
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A4D8 - 0003A4EB (0x14 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_ProcessPoll         0003A4D8        osal_start_system (OSAL)
               calls direct
               stack 1 = 00000000 ( 00000002 )

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\hal_key.r51
  PROGRAM MODULE, NAME : hal_key

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000089 - 00000089 (0x1 bytes), align: 0
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0IFG                   00000089 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000008C - 0000008C (0x1 bytes), align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PICTL                   0000008C 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F3CA - 0000F3CA (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   HalKeyInit
                                                   HalKeyPoll
           LOCAL                   ADDRESS         
           =====                   =======         
           halKeySavedKeys         0000F3CA 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F3CB - 0000F3CD (0x3 bytes), align: 0
  Segment part 19.            Intra module refs:   HalKeyConfig
                                                   HalKeyInit
                                                   HalKeyPoll
           LOCAL                   ADDRESS         
           =====                   =======         
           pHalKeyProcessFunction
                                   0000F3CB 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F3CE - 0000F3CE (0x1 bytes), align: 0
  Segment part 20.            Intra module refs:   HalKeyConfig
                                                   HalKeyPoll
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_KeyIntEnable        0000F3CE        Hal_ProcessEvent (hal_drivers)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F3CF - 0000F3CF (0x1 bytes), align: 0
  Segment part 22.            Intra module refs:   HalKeyConfig
                                                   HalKeyInit
           LOCAL                   ADDRESS         
           =====                   =======         
           HalKeyConfigured        0000F3CF 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039B51 - 00039B74 (0x24 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyInit              00039B51        HalDriverInit (hal_drivers)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039B75 - 00039B7B (0x7 bytes), align: 0
  Segment part 24.            Intra module refs:   HalKeyInit
                                                   halProcessKeyInterrupt
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            00039B75 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039B7C - 00039BF5 (0x7a bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyConfig            00039B7C        InitBoard (OnBoard)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000003 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039BF6, align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyRead              00039BF6        ZDAppCheckForHoldKey (ZDApp)
                                                   zmain_ext_addr (ZMain)
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039BF6 - 00039BFA (0x5 bytes), align: 0
  Segment part 27.            Intra module refs:   HalKeyRead
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            00039BF6 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039BFB - 00039C95 (0x9b bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyPoll              00039BFB        Hal_ProcessEvent (hal_drivers)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039C96 - 00039C9E (0x9 bytes), align: 0
  Segment part 29.            Intra module refs:   HalKeyConfig
                                                   HalKeyPoll
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00039C96 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039C9F - 00039CD4 (0x36 bytes), align: 0
  Segment part 31.            Intra module refs:   halKeyPort0Isr
                                                   halKeyPort1Isr
                                                   halKeyPort2Isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halProcessKeyInterrupt
                                   00039C9F 
               calls direct
               stack 1 = 0000000F ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000010E4 - 00001100 (0x1d bytes), align: 0
  Segment part 34.            Intra module refs:   halKeyPort0Isr::??INTVEC 107
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halKeyPort0Isr          000010E4 
               interrupt function
               calls direct
               stack 1 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001101 - 00001105 (0x5 bytes), align: 0
  Segment part 35.            Intra module refs:   halKeyPort0Isr
                                                   halKeyPort1Isr
                                                   halKeyPort2Isr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            00001101 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001106 - 0000112C (0x27 bytes), align: 0
  Segment part 36.            Intra module refs:   halKeyPort1Isr::??INTVEC 123
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halKeyPort1Isr          00001106 
               interrupt function
               calls direct
               stack 1 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000112D - 00001153 (0x27 bytes), align: 0
  Segment part 37.            Intra module refs:   halKeyPort2Isr::??INTVEC 51
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halKeyPort2Isr          0000112D 
               interrupt function
               calls direct
               stack 1 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000035 (0x36 bytes), align: 0
  Segment part 10. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halKeyPort2Isr::??INTVEC 51
                                   00000033 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000006D (0x6e bytes), align: 0
  Segment part 11. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halKeyPort0Isr::??INTVEC 107
                                   0000006B 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000007D (0x7e bytes), align: 0
  Segment part 12. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halKeyPort1Isr::??INTVEC 123
                                   0000007B 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000B8 - 000000B8 (0x1 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN1                 000000B8 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C0 - 000000C0 (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IRCON                000000C0 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E8 - 000000E8 (0x1 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IRCON2               000000E8 

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\hal_lcd.r51
  PROGRAM MODULE, NAME : hal_lcd

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000FF - 000000FF (0x1 bytes), align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2DIR                   000000FF 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F85F - 0000F85F (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   HalLcdInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ContrastValue           0000F85F 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E3CC - 0002E3D8 (0xd bytes), align: 0
  Segment part 16.            Intra module refs:   WriteLCD
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           delay1                  0002E3CC 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000009 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E3D9 - 0002E405 (0x2d bytes), align: 0
  Segment part 17.            Intra module refs:   HalLcdInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           delay_us                0002E3D9 
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000009 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E406 - 0002E424 (0x1f bytes), align: 0
  Segment part 18.            Intra module refs:   WriteLCD
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Write595                0002E406 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000009 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E425 - 0002E460 (0x3c bytes), align: 0
  Segment part 19.            Intra module refs:   ?Subroutine10
                                                   HalLcdInit
                                                   Print8
                                                   SetContrast
                                                   SetRamAddr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WriteLCD                0002E425 
               calls direct
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000010 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E461 - 0002E46E (0xe bytes), align: 0
  Segment part 20.            Intra module refs:   SetContrast
                                                   SetRamAddr
                                                   WriteLCD
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           0002E461 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E46F - 0002E497 (0x29 bytes), align: 0
  Segment part 21.            Intra module refs:   Print8
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SetRamAddr              0002E46F 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000010 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E498 - 0002E4BB (0x24 bytes), align: 0
  Segment part 22.            Intra module refs:   HalLcdInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SetContrast             0002E498 
               calls direct
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E4BC - 0002E4C5 (0xa bytes), align: 0
  Segment part 24.            Intra module refs:   HalLcdInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            0002E4BC 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E4C6 - 0002E63B (0x176 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdInit              0002E4C6        HalDriverInit (hal_drivers)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E63C - 0002E640 (0x5 bytes), align: 0
  Segment part 31.            Intra module refs:   ?Subroutine8
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine12           0002E63C 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E641 - 0002E70C (0xcc bytes), align: 0
  Segment part 34.            Intra module refs:   Print
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Print8                  0002E641 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000001A ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E70D - 0002E711 (0x5 bytes), align: 0
  Segment part 35.            Intra module refs:   Print
                                                   Print8
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           0002E70D 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E712 - 0002E715 (0x4 bytes), align: 0
  Segment part 36.            Intra module refs:   Print8
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            0002E712 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E716 - 0002E722 (0xd bytes), align: 0
  Segment part 37.            Intra module refs:   ?Subroutine5
                                                   ?Subroutine6
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            0002E716 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E723 - 0002E727 (0x5 bytes), align: 0
  Segment part 38.            Intra module refs:   Print8
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0002E723 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E728 - 0002E731 (0xa bytes), align: 0
  Segment part 39.            Intra module refs:   Print8
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0002E728 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E732 - 0002E73E (0xd bytes), align: 0
  Segment part 40.            Intra module refs:   Print8
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0002E732 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E73F - 0002E749 (0xb bytes), align: 0
  Segment part 41.            Intra module refs:   Print8
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0002E73F 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E74A - 0002E758 (0xf bytes), align: 0
  Segment part 42.            Intra module refs:   ?Subroutine0
                                                   Print8
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            0002E74A 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E759 - 0002E806 (0xae bytes), align: 0
  Segment part 43.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Print                   0002E759        SPIMgr_ProcessZToolData (SPIMgr)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000002 ( 00000016 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E807 - 0002E80F (0x9 bytes), align: 0
  Segment part 44.            Intra module refs:   Print
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0002E807 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000177D - 0000177D (0x1 bytes), align: 0
  Segment part 13.            Intra module refs:   ContrastValue
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A0 - 000000A0 (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P2                   000000A0 

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\hal_led.r51
  PROGRAM MODULE, NAME : hal_led

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000F3D0 - 0000F3D0 (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   HalLedBlink
                                                   HalLedOnOff
                                                   HalLedSet
           LOCAL                   ADDRESS         
           =====                   =======         
           HalLedState             0000F3D0 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F3D1 - 0000F3D1 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   HalLedBlink
                                                   HalLedUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           preBlinkState           0000F3D1 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F3D2 - 0000F3F6 (0x25 bytes), align: 0
  Segment part 10.            Intra module refs:   ?Subroutine10
                                                   HalLedBlink
                                                   HalLedSet
                                                   HalLedUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           HalLedStatusControl     0000F3D2 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D5F3 - 0002D602 (0x10 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedInit              0002D5F3        HalDriverInit (hal_drivers)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D603 - 0002D68A (0x88 bytes), align: 0
  Segment part 14.            Intra module refs:   HalLedBlink
                                                   HalLedInit
                                                   HalLedUpdate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedSet               0002D603        InitBoard (OnBoard)
                                                   MTProcessLedControl (MTEL)
                                                   ZDApp_EndDeviceBindRsp (ZDApp)
                                                   ZDApp_MatchDescRspCB (ZDApp)
                                                   ZDO_JoinConfirmCB (ZDApp)
                                                   ZDO_StartRouterConfirmCB (ZDApp)
                                                   zmain_ext_addr (ZMain)
               calls direct, is recursive
               stack 1 = 00000002 ( 00000001 )
               stack 2 = 0000001A ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D68B - 0002D7AB (0x121 bytes), align: 0
  Segment part 15.            Intra module refs:   HalLedSet
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedBlink             0002D68B        SampleApp_MessageMSGCB (SampleApp)
                                                   SampleApp_ProcessEvent (SampleApp)
                                                   ZDApp_Init (ZDApp)
               calls direct, is recursive
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000B ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D7AC - 0002D7B3 (0x8 bytes), align: 0
  Segment part 16.            Intra module refs:   HalLedBlink
                                                   HalLedUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           0002D7AC 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D7B4 - 0002D7BC (0x9 bytes), align: 0
  Segment part 17.            Intra module refs:   HalLedBlink
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            0002D7B4 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D7BD - 0002DA12 (0x256 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedUpdate            0002D7BD        Hal_ProcessEvent (hal_drivers)
               calls direct
               stack 1 = 00000002 ( 00000002 )
               stack 2 = 00000000 ( 0000001A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DA13 - 0002DA1C (0xa bytes), align: 0
  Segment part 19.            Intra module refs:   HalLedUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            0002DA13 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DA1D - 0002DA20 (0x4 bytes), align: 0
  Segment part 20.            Intra module refs:   HalLedUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0002DA1D 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DA21 - 0002DA2A (0xa bytes), align: 0
  Segment part 21.            Intra module refs:   ?Subroutine4
                                                   ?Subroutine5
                                                   HalLedUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            0002DA21 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DA2B - 0002DA30 (0x6 bytes), align: 0
  Segment part 22.            Intra module refs:   HalLedUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0002DA2B 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DA31 - 0002DA3E (0xe bytes), align: 0
  Segment part 23.            Intra module refs:   HalLedUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0002DA31 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DA3F - 0002DA48 (0xa bytes), align: 0
  Segment part 24.            Intra module refs:   HalLedUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0002DA3F 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DA49 - 0002DA52 (0xa bytes), align: 0
  Segment part 25.            Intra module refs:   ?Subroutine2
                                                   HalLedUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            0002DA49 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DA53 - 0002DAAA (0x58 bytes), align: 0
  Segment part 26.            Intra module refs:   ?Subroutine3
                                                   HalLedSet
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedOnOff             0002DA53 
               stack 1 = 00000002 ( 00000002 )
               stack 2 = 0000001A ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DAAB - 0002DAB9 (0xf bytes), align: 0
  Segment part 27.            Intra module refs:   HalLedInit
                                                   HalLedOnOff
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           0002DAAB 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F860 - 0000F863 (0x4 bytes), align: 0
  Segment part 11.            Intra module refs:   HalLedUpdate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_64           0000F860 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000177E - 00001781 (0x4 bytes), align: 0
  Segment part 12.            Intra module refs:   __Constant_64

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\hal_sleep.r51
  PROGRAM MODULE, NAME : hal_sleep

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000087 - 00000087 (0x1 bytes), align: 0
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PCON                    00000087 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000095 - 00000095 (0x1 bytes), align: 0
  Segment part 7. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ST0                     00000095 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000096 - 00000096 (0x1 bytes), align: 0
  Segment part 8. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ST1                     00000096 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000097 - 00000097 (0x1 bytes), align: 0
  Segment part 9. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ST2                     00000097 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000009A - 0000009A (0x1 bytes), align: 0
  Segment part 10. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IEN2                    0000009A 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C6 - 000000C6 (0x1 bytes), align: 0
  Segment part 12. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLKCON                  000000C6 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001154 - 0000116A (0x17 bytes), align: 0
  Segment part 62.            Intra module refs:   halSleepTimerIsr::??INTVEC 43
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSleepTimerIsr        00001154 
               interrupt function
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000002D (0x2e bytes), align: 0
  Segment part 14. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSleepTimerIsr::??INTVEC 43
                                   0000002B 

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\hal_target.r51
    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\hal_timer.r51
  PROGRAM MODULE, NAME : hal_timer

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000CB - 000000CB (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T3CTL                   000000CB 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000CC - 000000CC (0x1 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T3CCTL0                 000000CC 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000CE - 000000CE (0x1 bytes), align: 0
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T3CCTL1                 000000CE 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E4 - 000000E4 (0x1 bytes), align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1CTL                   000000E4 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E5 - 000000E5 (0x1 bytes), align: 0
  Segment part 7. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1CCTL0                 000000E5 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E6 - 000000E6 (0x1 bytes), align: 0
  Segment part 8. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1CCTL1                 000000E6 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E7 - 000000E7 (0x1 bytes), align: 0
  Segment part 9. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1CCTL2                 000000E7 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000EB - 000000EB (0x1 bytes), align: 0
  Segment part 10. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T4CTL                   000000EB 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000EC - 000000EC (0x1 bytes), align: 0
  Segment part 11. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T4CCTL0                 000000EC 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000EE - 000000EE (0x1 bytes), align: 0
  Segment part 12. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T4CCTL1                 000000EE 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F3F7 - 0000F417 (0x21 bytes), align: 0
  Segment part 21.            Intra module refs:   ?Subroutine10
                                                   ?Subroutine8
                                                   HalTimerConfig
                                                   HalTimerInit
                                                   HalTimerInterruptEnable
                                                   HalTimerStart
                                                   HalTimerTick
                                                   halTimerSetCount
           LOCAL                   ADDRESS         
           =====                   =======         
           halTimerRecord          0000F3F7 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F418 - 0000F435 (0x1e bytes), align: 0
  Segment part 22.            Intra module refs:   ?Subroutine2
                                                   ?Subroutine5
                                                   ?Subroutine6
                                                   ?Subroutine7
                                                   HalTimerInit
           LOCAL                   ADDRESS         
           =====                   =======         
           halTimerChannel         0000F418 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B788 - 0002B859 (0xd2 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalTimerInit            0002B788        HalDriverInit (hal_drivers)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B85A - 0002B861 (0x8 bytes), align: 0
  Segment part 24.            Intra module refs:   HalTimerInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0002B85A 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B862 - 0002B8EC (0x8b bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalTimerConfig          0002B862        InitBoard (OnBoard)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000003 ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B8ED - 0002B9A6 (0xba bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalTimerStart           0002B8ED        osal_timer_hw_setup (OSAL_Timers)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B9A7 - 0002B9AB (0x5 bytes), align: 0
  Segment part 27.            Intra module refs:   HalTimerStart
                                                   halTimerSetCount
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine14           0002B9A7 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B9AC - 0002B9DC (0x31 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalTimerTick            0002B9AC        Hal_ProcessPoll (hal_drivers)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B9DD - 0002BA15 (0x39 bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalTimerStop            0002B9DD        osal_timer_hw_setup (OSAL_Timers)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BA16 - 0002BA7E (0x69 bytes), align: 0
  Segment part 30.            Intra module refs:   HalTimerStart
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimerSetCount        0002BA16 
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000010 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BA7F - 0002BA83 (0x5 bytes), align: 0
  Segment part 31.            Intra module refs:   HalTimerConfig
                                                   halTimerSetCount
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0002BA7F 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BA84 - 0002BA8C (0x9 bytes), align: 0
  Segment part 32.            Intra module refs:   ?Subroutine1
                                                   HalTimerConfig
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           0002BA84 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BA8D - 0002BAC9 (0x3d bytes), align: 0
  Segment part 33.            Intra module refs:   HalTimerStart
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimerSetPrescale     0002BA8D 
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000010 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BACA - 0002BB4B (0x82 bytes), align: 0
  Segment part 34.            Intra module refs:   HalTimerStart
                                                   HalTimerStop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimerSetOpMode       0002BACA 
               stack 1 = 00000002 ( 00000002 )
               stack 2 = 00000010 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BB4C - 0002BB79 (0x2e bytes), align: 0
  Segment part 35.            Intra module refs:   HalTimerStart
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimerSetChannelMode
                                   0002BB4C 
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000010 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BB7A - 0002BB82 (0x9 bytes), align: 0
  Segment part 36.            Intra module refs:   halTimerSetChannelMode
                                                   halTimerSetCount
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            0002BB7A 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BB83 - 0002BB93 (0x11 bytes), align: 0
  Segment part 37.            Intra module refs:   halTimerSetChannelMode
                                                   halTimerSetCount
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            0002BB83 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BB94 - 0002BC0E (0x7b bytes), align: 0
  Segment part 38.            Intra module refs:   HalTimerStart
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalTimerInterruptEnable
                                   0002BB94 
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000010 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BC0F - 0002BC1F (0x11 bytes), align: 0
  Segment part 39.            Intra module refs:   HalTimerInterruptEnable
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            0002BC0F 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BC20 - 0002BC3B (0x1c bytes), align: 0
  Segment part 40.            Intra module refs:   HalTimerInterruptEnable
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0002BC20 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BC3C - 0002BC4F (0x14 bytes), align: 0
  Segment part 41.            Intra module refs:   HalTimerInterruptEnable
                                                   halTimerSetChannelMode
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0002BC3C 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BC50 - 0002BC58 (0x9 bytes), align: 0
  Segment part 42.            Intra module refs:   ?Subroutine2
                                                   halTimerSetCount
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine12           0002BC50 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BC59 - 0002BC98 (0x40 bytes), align: 0
  Segment part 43.            Intra module refs:   halProcessTimer1
                                                   halProcessTimer3
                                                   halProcessTimer4
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimerSendCallBack    0002BC59 
               calls direct
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BC99 - 0002BCA7 (0xf bytes), align: 0
  Segment part 44.            Intra module refs:   halTimerSendCallBack
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            0002BC99 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BCA8 - 0002BCC9 (0x22 bytes), align: 0
  Segment part 45.            Intra module refs:   HalTimerConfig
                                                   HalTimerStart
                                                   HalTimerStop
                                                   halProcessTimer1
                                                   halProcessTimer3
                                                   halProcessTimer4
                                                   halTimerSendCallBack
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimerRemap           0002BCA8 
               stack 1 = 00000002 ( 00000002 )
               stack 2 = 00000010 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BCCA - 0002BCD0 (0x7 bytes), align: 0
  Segment part 46.            Intra module refs:   HalTimerInit
                                                   HalTimerInterruptEnable
                                                   HalTimerStop
                                                   HalTimerTick
                                                   halProcessTimer1
                                                   halProcessTimer3
                                                   halProcessTimer4
                                                   halTimerRemap
                                                   halTimerSetChannelMode
                                                   halTimerSetOpMode
                                                   halTimerSetPrescale
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           0002BCCA 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BCD1 - 0002BD48 (0x78 bytes), align: 0
  Segment part 47.            Intra module refs:   HalTimerTick
                                                   halTimer1Isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halProcessTimer1        0002BCD1 
               calls direct
               stack 1 = 0000000F ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BD49 - 0002BDA1 (0x59 bytes), align: 0
  Segment part 48.            Intra module refs:   HalTimerTick
                                                   halTimer3Isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halProcessTimer3        0002BD49 
               calls direct
               stack 1 = 0000000F ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BDA2 - 0002BDA7 (0x6 bytes), align: 0
  Segment part 49.            Intra module refs:   halProcessTimer1
                                                   halProcessTimer3
                                                   halProcessTimer4
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0002BDA2 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BDA8 - 0002BDAD (0x6 bytes), align: 0
  Segment part 50.            Intra module refs:   halProcessTimer1
                                                   halProcessTimer3
                                                   halProcessTimer4
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0002BDA8 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BDAE - 0002BDBE (0x11 bytes), align: 0
  Segment part 51.            Intra module refs:   ?Subroutine3
                                                   ?Subroutine4
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           0002BDAE 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BDBF - 0002BE17 (0x59 bytes), align: 0
  Segment part 52.            Intra module refs:   HalTimerTick
                                                   halTimer4Isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halProcessTimer4        0002BDBF 
               calls direct
               stack 1 = 0000000F ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000116B - 00001176 (0xc bytes), align: 0
  Segment part 53.            Intra module refs:   halTimer1Isr::??INTVEC 75
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimer1Isr            0000116B 
               interrupt function
               calls direct
               stack 1 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001177 - 0000117E (0x8 bytes), align: 0
  Segment part 54.            Intra module refs:   halTimer1Isr
                                                   halTimer3Isr
                                                   halTimer4Isr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine15           00001177 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000117F - 0000118C (0xe bytes), align: 0
  Segment part 55.            Intra module refs:   halTimer3Isr::??INTVEC 91
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimer3Isr            0000117F 
               interrupt function
               calls direct
               stack 1 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000118D - 0000119A (0xe bytes), align: 0
  Segment part 56.            Intra module refs:   halTimer4Isr::??INTVEC 99
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimer4Isr            0000118D 
               interrupt function
               calls direct
               stack 1 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000004D (0x4e bytes), align: 0
  Segment part 13. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimer1Isr::??INTVEC 75
                                   0000004B 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000005D (0x5e bytes), align: 0
  Segment part 14. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimer3Isr::??INTVEC 91
                                   0000005B 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000065 (0x66 bytes), align: 0
  Segment part 15. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimer4Isr::??INTVEC 99
                                   00000063 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D8 - 000000D8 (0x1 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TIMIF                000000D8 

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\hal_uart.r51
  PROGRAM MODULE, NAME : hal_uart

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000086 - 00000086 (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U0CSR                   00000086 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C1 - 000000C1 (0x1 bytes), align: 0
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U0DBUF                  000000C1 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C2 - 000000C2 (0x1 bytes), align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U0BAUD                  000000C2 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C4 - 000000C4 (0x1 bytes), align: 0
  Segment part 7. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U0UCR                   000000C4 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C5 - 000000C5 (0x1 bytes), align: 0
  Segment part 8. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U0GCR                   000000C5 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D7 - 000000D7 (0x1 bytes), align: 0
  Segment part 11. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMAREQ                  000000D7 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F1 - 000000F1 (0x1 bytes), align: 0
  Segment part 12. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PERCFG                  000000F1 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F436 - 0000F437 (0x2 bytes), align: 0
  Segment part 22.            Intra module refs:   HalUARTOpen
                                                   HalUARTPoll
                                                   HalUARTRead
                                                   HalUARTWrite
                                                   Hal_UART_RxBufLen
           LOCAL                   ADDRESS         
           =====                   =======         
           cfg0                    0000F436 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002885F - 00028A85 (0x227 bytes), align: 0
  Segment part 24.            Intra module refs:   HalUARTPoll
           LOCAL                   ADDRESS         
           =====                   =======         
           pollDMA                 0002885F 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 0000000A ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028A86 - 00028A8A (0x5 bytes), align: 0
  Segment part 25.            Intra module refs:   HalUARTPoll
                                                   pollDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine19           00028A86 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028A8B - 00028A92 (0x8 bytes), align: 0
  Segment part 26.            Intra module refs:   HalUARTOpen
                                                   HalUARTPoll
                                                   pollDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            00028A8B 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028A93 - 00028A9D (0xb bytes), align: 0
  Segment part 27.            Intra module refs:   pollDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            00028A93 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028A9E - 00028AA9 (0xc bytes), align: 0
  Segment part 28.            Intra module refs:   HalUARTPoll
                                                   pollDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            00028A9E 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028AAA - 00028AB4 (0xb bytes), align: 0
  Segment part 29.            Intra module refs:   pollDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            00028AAA 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028AB5 - 00028AC4 (0x10 bytes), align: 0
  Segment part 30.            Intra module refs:   pollDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00028AB5 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028AC5 - 00028AC9 (0x5 bytes), align: 0
  Segment part 31.            Intra module refs:   ?Subroutine0
                                                   ?Subroutine12
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine20           00028AC5 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028ACA - 00028AD3 (0xa bytes), align: 0
  Segment part 32.            Intra module refs:   ?Subroutine0
                                                   pollDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine16           00028ACA 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028AD4 - 00028B30 (0x5d bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTInit             00028AD4        HalDriverInit (hal_drivers)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028B31 - 00028B37 (0x7 bytes), align: 0
  Segment part 34.            Intra module refs:   HalUARTInit
                                                   Hal_UART_RxBufLen
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine21           00028B31 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028B38 - 00028CC0 (0x189 bytes), align: 0
  Segment part 35.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTOpen             00028B38        SPIMgr_Init (SPIMgr)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028CC1 - 00028CCF (0xf bytes), align: 0
  Segment part 36.            Intra module refs:   HalUARTOpen
                                                   pollDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine15           00028CC1 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028CD0 - 00028CDB (0xc bytes), align: 0
  Segment part 37.            Intra module refs:   HalUARTOpen
                                                   pollDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           00028CD0 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028CDC - 00028CF5 (0x1a bytes), align: 0
  Segment part 38.            Intra module refs:   HalUARTOpen
                                                   pollDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            00028CDC 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028CF6 - 00028CFC (0x7 bytes), align: 0
  Segment part 39.            Intra module refs:   ?Subroutine15
                                                   ?Subroutine9
                                                   HalUARTOpen
                                                   HalUARTWrite
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine17           00028CF6 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028CFD - 00028D0F (0x13 bytes), align: 0
  Segment part 40.            Intra module refs:   HalUARTOpen
                                                   pollDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            00028CFD 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028D10 - 00028E31 (0x122 bytes), align: 0
  Segment part 42.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTPoll             00028D10        Hal_ProcessPoll (hal_drivers)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028E32 - 00028E3C (0xb bytes), align: 0
  Segment part 43.            Intra module refs:   HalUARTOpen
                                                   HalUARTPoll
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine14           00028E32 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028E3D - 00028E56 (0x1a bytes), align: 0
  Segment part 44.            Intra module refs:   HalUARTPoll
                                                   pollDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            00028E3D 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F438 - 0000F438 (0x1 bytes), align: 0
  Segment part 23.            Intra module refs:   HalUARTPoll
           LOCAL                   ADDRESS         
           =====                   =======         
           HalUARTPoll::tickShdw   0000F438 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028E57 - 00028EB8 (0x62 bytes), align: 0
  Segment part 45.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_UART_RxBufLen       00028E57        SPIMgr_ProcessZToolData (SPIMgr)
               stack 1 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028EB9 - 00028EC1 (0x9 bytes), align: 0
  Segment part 46.            Intra module refs:   Hal_UART_RxBufLen
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine12           00028EB9 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028EC2 - 00028F55 (0x94 bytes), align: 0
  Segment part 47.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTRead             00028EC2        SPIMgr_ProcessZToolData (SPIMgr)
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028F56 - 00028F5A (0x5 bytes), align: 0
  Segment part 48.            Intra module refs:   HalUARTRead
                                                   HalUARTWrite
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine22           00028F56 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028F5B - 00028F63 (0x9 bytes), align: 0
  Segment part 49.            Intra module refs:   HalUARTRead
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           00028F5B 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028F64 - 00028F6D (0xa bytes), align: 0
  Segment part 50.            Intra module refs:   HalUARTOpen
                                                   HalUARTPoll
                                                   HalUARTRead
                                                   HalUARTWrite
                                                   pollDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            00028F64 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028F6E - 00028F73 (0x6 bytes), align: 0
  Segment part 51.            Intra module refs:   ?Subroutine2
                                                   ?Subroutine3
                                                   ?Subroutine4
                                                   ?Subroutine5
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine18           00028F6E 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028F74 - 00029090 (0x11d bytes), align: 0
  Segment part 52.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTWrite            00028F74        ?Subroutine10 (MTEL)
                                                   MT_BuildAndSendZToolResponse (MTEL)
                                                   MT_ProcessCommand (MTEL)
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029091 - 000290AB (0x1b bytes), align: 0
  Segment part 53.            Intra module refs:   HalUARTWrite
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           00029091 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000290AC - 000290B6 (0xb bytes), align: 0
  Segment part 54.            Intra module refs:   HalUARTPoll
                                                   HalUARTWrite
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            000290AC 

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\mac_backoff_timer.r51
  PROGRAM MODULE, NAME : mac_backoff_timer

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000A6 - 000000A6 (0x1 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2TLD                   000000A6 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A7 - 000000A7 (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2THD                   000000A7 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C3 - 000000C3 (0x1 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2CNF                   000000C3 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F439 - 0000F43C (0x4 bytes), align: 0
  Segment part 10.            Intra module refs:   ?Subroutine0
                                                   macBackoffTimerCapture
                                                   macBackoffTimerCount
                                                   macBackoffTimerSetRollover
                                                   macBackoffTimerSetTrigger
           LOCAL                   ADDRESS         
           =====                   =======         
           backoffTimerRollover    0000F439 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F43D - 0000F440 (0x4 bytes), align: 0
  Segment part 11.            Intra module refs:   macBackoffTimerCompareIsr
                                                   macBackoffTimerSetTrigger
           LOCAL                   ADDRESS         
           =====                   =======         
           backoffTimerTrigger     0000F43D 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F441 - 0000F441 (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   ?Subroutine0
                                                   macBackoffTimerCompareIsr
                                                   macBackoffTimerInit
                                                   macBackoffTimerSetTrigger
           LOCAL                   ADDRESS         
           =====                   =======         
           compareState            0000F441 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000390C6 - 00039110 (0x4b bytes), align: 0
  Segment part 19.            Intra module refs:   macBackoffTimerReset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerInit     000390C6        macLowLevelInit (mac_low_level)
               calls direct
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039111 - 0003912D (0x1d bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerReset    00039111        macLowLevelReset (mac_low_level)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003912E - 0003916E (0x41 bytes), align: 0
  Segment part 21.            Intra module refs:   macBackoffTimerInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerSetRollover
                                   0003912E        macBackoffTimerRolloverCallback (mac_timer)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000C ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003916F - 000391AB (0x3d bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerCount    0003916F        macTimer (mac_timer)
                                                   macTimerUpdateBackoffTimer (mac_timer)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000391AC - 000391C5 (0x1a bytes), align: 0
  Segment part 24.            Intra module refs:   macBackoffTimerCapture
                                                   macBackoffTimerCount
                                                   macBackoffTimerSetRollover
                                                   macBackoffTimerSetTrigger
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            000391AC 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000391C6 - 00039202 (0x3d bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerCapture
                                   000391C6        macTxTimestampCallback (mac_tx)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039203 - 00039272 (0x70 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerSetTrigger
                                   00039203        macTimerUpdateBackoffTimer (mac_timer)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039273 - 0003929A (0x28 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerCancelTrigger
                                   00039273        macTimerUpdateBackoffTimer (mac_timer)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003929B - 0003929F (0x5 bytes), align: 0
  Segment part 29.            Intra module refs:   macBackoffTimerCancelTrigger
                                                   macBackoffTimerCompareIsr
                                                   macBackoffTimerInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0003929B 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000392A0 - 000392AB (0xc bytes), align: 0
  Segment part 30.            Intra module refs:   macBackoffTimerCancelTrigger
                                                   macBackoffTimerCompareIsr
                                                   macBackoffTimerSetTrigger
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            000392A0 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000392AC - 00039336 (0x8b bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerCompareIsr
                                   000392AC        macMcuTimer2Isr (mac_mcu)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F864 - 0000F867 (0x4 bytes), align: 0
  Segment part 15.            Intra module refs:   macBackoffTimerInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_c0000        0000F864 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001782 - 00001785 (0x4 bytes), align: 0
  Segment part 16.            Intra module refs:   __Constant_c0000

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\mac_cfg.r51
  PROGRAM MODULE, NAME : mac_cfg

  SEGMENTS IN THE MODULE
  ======================
XDATA_I
  Relative segment, address: XDATA 0000F868 - 0000F86C (0x5 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCfg                  0000F868        MAC_McpsDataReq (mac_data)
                                                   macDataRxMemAlloc (mac_data)
                                                   macDataTxEnqueue (mac_data)
                                                   macRxDataReq (mac_coord)
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001786 - 0000178A (0x5 bytes), align: 0
  Segment part 7.             Intra module refs:   macCfg

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\mac_csp_tx.r51
  PROGRAM MODULE, NAME : mac_csp_tx

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000094 - 00000094 (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2CMP                   00000094 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A1 - 000000A1 (0x1 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2OF0                   000000A1 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E1 - 000000E1 (0x1 bytes), align: 0
  Segment part 7. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFST                    000000E1 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000388FD - 00038907 (0xb bytes), align: 0
  Segment part 14.            Intra module refs:   macCspTxCancelAckTimeoutCallback
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            000388FD 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038908 - 00038934 (0x2d bytes), align: 0
  Segment part 15.            Intra module refs:   macCspTxPrepCsmaSlotted
                                                   macCspTxPrepCsmaUnslotted
                                                   macCspTxPrepSlotted
           LOCAL                   ADDRESS         
           =====                   =======         
           cspPrepForTxProgram     00038908 
               calls direct
               stack 1 = 00000002 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038935 - 0003893A (0x6 bytes), align: 0
  Segment part 16.            Intra module refs:   cspPrepForTxProgram
                                                   macCspTxIntIsr
                                                   macCspTxStopIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            00038935 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003893B - 00038954 (0x1a bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxPrepCsmaUnslotted
                                   0003893B        txCsmaPrep (mac_tx)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038955 - 00038974 (0x20 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxPrepCsmaSlotted
                                   00038955        txCsmaPrep (mac_tx)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038975 - 000389B0 (0x3c bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxGoCsma          00038975        txCsmaGo (mac_tx)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000389B1 - 000389DB (0x2b bytes), align: 0
  Segment part 20.            Intra module refs:   ?Subroutine1
                                                   ?Subroutine2
                                                   macCspForceTxDoneIfPending
                                                   macCspTxGoCsma
                                                   macCspTxGoSlotted
                                                   macCspTxPrepCsmaSlotted
                                                   macCspTxPrepCsmaUnslotted
                                                   macCspTxPrepSlotted
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            000389B1 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000389DC - 000389EC (0x11 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxPrepSlotted     000389DC        macTxFrame (mac_tx)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000389ED - 00038A3B (0x4f bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxGoSlotted       000389ED        txGo (mac_tx)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038A3C - 00038A76 (0x3b bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspForceTxDoneIfPending
                                   00038A3C        rxStartIsr (mac_rx)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038A77 - 00038B35 (0xbf bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxRequestAckTimeoutCallback
                                   00038A77        macTxDoneCallback (mac_tx)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038B36 - 00038B41 (0xc bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxCancelAckTimeoutCallback
                                   00038B36        macTxAckNotReceivedCallback (mac_tx)
                                                   macTxAckReceivedCallback (mac_tx)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038B42 - 00038B70 (0x2f bytes), align: 0
  Segment part 26.            Intra module refs:   macCspForceTxDoneIfPending
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxIntIsr          00038B42        macMcuRfIsr (mac_mcu)
               calls direct
               stack 1 = 00000002 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038B71 - 00038BB4 (0x44 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxStopIsr         00038B71        macMcuRfIsr (mac_mcu)
               calls direct
               stack 1 = 00000000 ( 00000002 )

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\mac_low_level.r51
  PROGRAM MODULE, NAME : mac_low_level

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A5CE - 0003A5FE (0x31 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macLowLevelInit         0003A5CE        MAC_Init (mac_mgmt)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A5FF - 0003A608 (0xa bytes), align: 0
  Segment part 8.             Intra module refs:   macLowLevelInit
                                                   macLowLevelReset
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0003A5FF 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A609 - 0003A63D (0x35 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macLowLevelReset        0003A609        MAC_MlmeResetReq (mac_mgmt)
               calls direct
               stack 1 = 00000000 ( 00000002 )

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\mac_mcu.r51
  PROGRAM MODULE, NAME : mac_mcu

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 0000009B - 0000009B (0x1 bytes), align: 0
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           S1CON                   0000009B 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000009C - 0000009C (0x1 bytes), align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2PEROF0                0000009C 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000009D - 0000009D (0x1 bytes), align: 0
  Segment part 7. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2PEROF1                0000009D 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000009E - 0000009E (0x1 bytes), align: 0
  Segment part 8. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2PEROF2                0000009E 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A2 - 000000A2 (0x1 bytes), align: 0
  Segment part 10. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2OF1                   000000A2 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A3 - 000000A3 (0x1 bytes), align: 0
  Segment part 11. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2OF2                   000000A3 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A4 - 000000A4 (0x1 bytes), align: 0
  Segment part 12. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2CAPLPL                000000A4 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A5 - 000000A5 (0x1 bytes), align: 0
  Segment part 13. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2CAPHPH                000000A5 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A9 - 000000A9 (0x1 bytes), align: 0
  Segment part 16. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IP0                     000000A9 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000B9 - 000000B9 (0x1 bytes), align: 0
  Segment part 18. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IP1                     000000B9 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BC - 000000BC (0x1 bytes), align: 0
  Segment part 19. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RNDL                    000000BC 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BD - 000000BD (0x1 bytes), align: 0
  Segment part 20. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RNDH                    000000BD 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E9 - 000000E9 (0x1 bytes), align: 0
  Segment part 24. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFIF                    000000E9 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F442 - 0000F442 (0x1 bytes), align: 0
  Segment part 32.            Intra module refs:   macMcuRecordMaxRssiStart
                                                   macMcuRecordMaxRssiStop
                                                   macMcuTimer2Isr
           LOCAL                   ADDRESS         
           =====                   =======         
           maxRssi                 0000F442 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F443 - 0000F443 (0x1 bytes), align: 0
  Segment part 33.            Intra module refs:   macMcuAndT2PEROF2
                                                   macMcuInit
                                                   macMcuOrT2PEROF2
                                                   macMcuOverflowSetCompare
           LOCAL                   ADDRESS         
           =====                   =======         
           shadowPerof2            0000F443 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038000 - 000380E3 (0xe4 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuInit              00038000        macLowLevelInit (mac_low_level)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000380E4 - 000380F0 (0xd bytes), align: 0
  Segment part 35.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuRandomByte        000380E4        Onboard_rand (OnBoard)
                                                   macRadioRandomByte (mac_radio)
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000380F1 - 000380F8 (0x8 bytes), align: 0
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuTimerCapture      000380F1        macTxTimestampCallback (mac_tx)
                                                   rxStartIsr (mac_rx)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000380F9 - 0003811B (0x23 bytes), align: 0
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuOverflowCount     000380F9        macBackoffTimerCount (mac_backoff_timer)
                                                   macBackoffTimerSetRollover (mac_backoff_timer)
                                                   macBackoffTimerSetTrigger (mac_backoff_timer)
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003811C - 00038140 (0x25 bytes), align: 0
  Segment part 39.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuOverflowCapture   0003811C        macBackoffTimerCapture (mac_backoff_timer)
                                                   rxStartIsr (mac_rx)
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038141 - 00038182 (0x42 bytes), align: 0
  Segment part 40.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuOverflowSetCount
                                   00038141        macBackoffTimerCompareIsr (mac_backoff_timer)
                                                   macBackoffTimerInit (mac_backoff_timer)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038183 - 000381AA (0x28 bytes), align: 0
  Segment part 41.            Intra module refs:   macMcuOverflowCapture
                                                   macMcuOverflowCount
                                                   macMcuOverflowSetCompare
                                                   macMcuOverflowSetCount
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            00038183 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000381AB - 000381C4 (0x1a bytes), align: 0
  Segment part 42.            Intra module refs:   ?Subroutine5
                                                   macMcuOverflowSetCompare
                                                   macMcuOverflowSetCount
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            000381AB 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000381C5 - 00038233 (0x6f bytes), align: 0
  Segment part 43.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuOverflowSetCompare
                                   000381C5        ?Subroutine2 (mac_backoff_timer)
                                                   macBackoffTimerCancelTrigger (mac_backoff_timer)
                                                   macBackoffTimerCompareIsr (mac_backoff_timer)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038234 - 0003823F (0xc bytes), align: 0
  Segment part 44.            Intra module refs:   macMcuOverflowSetCompare
                                                   macMcuOverflowSetCount
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            00038234 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000119B - 000011D3 (0x39 bytes), align: 0
  Segment part 56.            Intra module refs:   macMcuTimer2Isr::??INTVEC 83
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuTimer2Isr         0000119B 
               interrupt function
               calls direct
               stack 1 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000011D4 - 000011D8 (0x5 bytes), align: 0
  Segment part 57.            Intra module refs:   macMcuRfIsr
                                                   macMcuTimer2Isr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            000011D4 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038240 - 0003826C (0x2d bytes), align: 0
  Segment part 45.            Intra module refs:   macMcuRecordMaxRssiStart
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuOrT2PEROF2        00038240        macBackoffTimerInit (mac_backoff_timer)
               calls direct
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003826D - 00038272 (0x6 bytes), align: 0
  Segment part 46.            Intra module refs:   macMcuAndT2PEROF2
                                                   macMcuOrT2PEROF2
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            0003826D 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038273 - 000382A3 (0x31 bytes), align: 0
  Segment part 47.            Intra module refs:   macMcuRecordMaxRssiStop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuAndT2PEROF2       00038273        macBackoffTimerReset (mac_backoff_timer)
               calls direct
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000382A4 - 000382AD (0xa bytes), align: 0
  Segment part 48.            Intra module refs:   ?Subroutine6
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            000382A4 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000011D9 - 0000125F (0x87 bytes), align: 0
  Segment part 58.            Intra module refs:   macMcuRfIsr::??INTVEC 131
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuRfIsr             000011D9 
               interrupt function
               calls direct
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000382AE - 000382C7 (0x1a bytes), align: 0
  Segment part 49.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuOrRFIM            000382AE        macCspTxGoCsma (mac_csp_tx)
                                                   macCspTxGoSlotted (mac_csp_tx)
                                                   macCspTxRequestAckTimeoutCallback (mac_csp_tx)
                                                   macRxRadioPowerUpInit (mac_rx)
                                                   rxStartIsr (mac_rx)
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000382C8 - 000382CC (0x5 bytes), align: 0
  Segment part 50.            Intra module refs:   macMcuAndRFIM
                                                   macMcuOrRFIM
                                                   macMcuWriteRFIF
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            000382C8 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000382CD - 000382E8 (0x1c bytes), align: 0
  Segment part 51.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuAndRFIM           000382CD        ?Subroutine1 (mac_csp_tx)
                                                   macCspForceTxDoneIfPending (mac_csp_tx)
                                                   macCspTxCancelAckTimeoutCallback (mac_csp_tx)
                                                   macCspTxIntIsr (mac_csp_tx)
                                                   macCspTxStopIsr (mac_csp_tx)
                                                   rxFcsIsr (mac_rx)
                                                   rxHaltCleanupFinalStep (mac_rx)
                                                   rxStartIsr (mac_rx)
                                                   txGo (mac_tx)
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000382E9 - 00038301 (0x19 bytes), align: 0
  Segment part 52.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuWriteRFIF         000382E9        cspPrepForTxProgram (mac_csp_tx)
                                                   macCspTxRequestAckTimeoutCallback (mac_csp_tx)
                                                   rxStartIsr (mac_rx)
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038302 - 00038315 (0x14 bytes), align: 0
  Segment part 53.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuRecordMaxRssiStart
                                   00038302        macRadioEnergyDetectStart (mac_radio)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038316 - 0003831C (0x7 bytes), align: 0
  Segment part 54.            Intra module refs:   macMcuInit
                                                   macMcuRecordMaxRssiStart
                                                   macMcuRecordMaxRssiStop
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            00038316 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003831D - 00038331 (0x15 bytes), align: 0
  Segment part 55.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuRecordMaxRssiStop
                                   0003831D        macRadioEnergyDetectStop (mac_radio)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000055 (0x56 bytes), align: 0
  Segment part 25. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuTimer2Isr::??INTVEC 83
                                   00000053 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000085 (0x86 bytes), align: 0
  Segment part 26. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuRfIsr::??INTVEC 131
                                   00000083 

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\mac_mem.r51
  PROGRAM MODULE, NAME : mac_mem

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000D9 - 000000D9 (0x1 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFD                     000000D9 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FF3F - 0002FF63 (0x25 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMemWriteRam          0002FF3F        macRadioSetIEEEAddr (mac_radio)
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FF64 - 0002FF8B (0x28 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMemWriteTxFifo       0002FF64        macTxFrame (mac_tx)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FF8C - 0002FF90 (0x5 bytes), align: 0
  Segment part 11.            Intra module refs:   macMemReadRxFifo
                                                   macMemWriteRam
                                                   macMemWriteTxFifo
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0002FF8C 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FF91 - 0002FFBA (0x2a bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMemReadRxFifo        0002FF91        ?Subroutine8 (mac_rx)
                                                   rxFcsIsr (mac_rx)
                                                   rxPayloadIsr (mac_rx)
                                                   rxStartIsr (mac_rx)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000009 )

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\mac_radio.r51
  PROGRAM MODULE, NAME : mac_radio

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000F444 - 0000F444 (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   macRadioInit
                                                   macRadioUpdateTxPower
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPhyTxPower           0000F444 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F445 - 0000F445 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   macRadioInit
                                                   macRadioUpdateChannel
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPhyChannel           0000F445 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F446 - 0000F446 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   macRadioInit
                                                   macRadioSetChannel
                                                   macRadioUpdateChannel
           LOCAL                   ADDRESS         
           =====                   =======         
           reqChannel              0000F446 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F447 - 0000F447 (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   macRadioInit
                                                   macRadioSetTxPower
                                                   macRadioUpdateTxPower
           LOCAL                   ADDRESS         
           =====                   =======         
           reqTxPower              0000F447 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038E43 - 00038E5B (0x19 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioInit            00038E43        macLowLevelInit (mac_low_level)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038E5C - 00038E61 (0x6 bytes), align: 0
  Segment part 12.            Intra module refs:   macRadioInit
                                                   macRadioSetPanCoordinator
                                                   macRadioSetPanID
                                                   macRadioSetShortAddr
                                                   macRadioStopScan
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            00038E5C 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038E62 - 00038E70 (0xf bytes), align: 0
  Segment part 13.            Intra module refs:   ?Subroutine2
                                                   macRadioComputeLQI
                                                   macRadioEnergyDetectStart
                                                   macRadioEnergyDetectStop
                                                   macRadioRandomByte
                                                   macRadioReset
                                                   macRadioSetIEEEAddr
                                                   macRadioUpdateChannel
                                                   macRadioUpdateTxPower
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00038E62 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038E71 - 00038E83 (0x13 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioReset           00038E71        macLowLevelReset (mac_low_level)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038E84 - 00038E8E (0xb bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioRandomByte      00038E84        macPibReset (mac_pib)
                                                   txCsmaPrep (mac_tx)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038E8F - 00038EB1 (0x23 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioSetPanCoordinator
                                   00038E8F        MAC_MlmeResetReq (mac_mgmt)
                                                   macStartSetParams (mac_coord)
               stack 1 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038EB2 - 00038EBD (0xc bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioSetPanID        00038EB2        MAC_MlmeResetReq (mac_mgmt)
                                                   MAC_MlmeSetReq (mac_pib)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038EBE - 00038ECC (0xf bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioSetShortAddr    00038EBE        MAC_MlmeResetReq (mac_mgmt)
                                                   MAC_MlmeSetReq (mac_pib)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038ECD - 00038EE1 (0x15 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioSetIEEEAddr     00038ECD        MAC_MlmeResetReq (mac_mgmt)
                                                   MAC_MlmeSetReq (mac_pib)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038EE2 - 00038F1B (0x3a bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioSetTxPower      00038EE2        MAC_MlmeResetReq (mac_mgmt)
                                                   MAC_MlmeSetReq (mac_pib)
                                                   macDataTxSend (mac_data)
                                                   macTxCompleteCallback (mac_data)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038F1C - 00038F55 (0x3a bytes), align: 0
  Segment part 21.            Intra module refs:   macRadioSetTxPower
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioUpdateTxPower   00038F1C        rxPostRxUpdates (mac_rx)
                                                   txComplete (mac_tx)
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 0000000A ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038F56 - 00038F8F (0x3a bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioSetChannel      00038F56        MAC_MlmeResetReq (mac_mgmt)
                                                   MAC_MlmeSetReq (mac_pib)
                                                   macDataTxSend (mac_data)
                                                   macTxCompleteCallback (mac_data)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038F90 - 00038F94 (0x5 bytes), align: 0
  Segment part 23.            Intra module refs:   macRadioSetChannel
                                                   macRadioStartScan
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            00038F90 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038F95 - 00038FE8 (0x54 bytes), align: 0
  Segment part 24.            Intra module refs:   macRadioSetChannel
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioUpdateChannel   00038F95        txComplete (mac_tx)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000009 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038FE9 - 00039043 (0x5b bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioStartScan       00038FE9        macApiScanReq (mac_scan)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039044 - 0003905B (0x18 bytes), align: 0
  Segment part 26.            Intra module refs:   macRadioReset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioStopScan        00039044        macScanComplete (mac_scan)
               stack 1 = 00000002 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003905C - 00039067 (0xc bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioEnergyDetectStart
                                   0003905C        macScanStartTimer (mac_scan)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039068 - 0003907A (0x13 bytes), align: 0
  Segment part 28.            Intra module refs:   macRadioReset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioEnergyDetectStop
                                   00039068        macScanNextChan (mac_scan)
               calls direct
               stack 1 = 00000002 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003907B - 000390BE (0x44 bytes), align: 0
  Segment part 29.            Intra module refs:   ?Subroutine0
           LOCAL                   ADDRESS         
           =====                   =======         
           radioComputeED          0003907B 
               stack 1 = 00000002 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000390BF - 000390C5 (0x7 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioComputeLQI      000390BF        rxFcsIsr (mac_rx)
               calls direct
               stack 1 = 00000000 ( 00000002 )

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\mac_radio_defs.r51
  PROGRAM MODULE, NAME : mac_radio_defs

  SEGMENTS IN THE MODULE
  ======================
CODE_C
  Relative segment, address: CODE 0000212B - 00002144 (0x1a bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioDefsTxPowerTable
                                   0000212B        macRadioSetTxPower (mac_radio)

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\mac_random.r51
    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\mac_rx.r51
  PROGRAM MODULE, NAME : mac_rx

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000F448 - 0000F448 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   macRxAckTxDoneCallback
                                                   macRxInit
                                                   rxDone
                                                   rxFcsIsr
                                                   rxHaltCleanupFinalStep
                                                   rxStartIsr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxActive             0000F448        halAssertHazardLights (hal_assert)
                                                   macRxOffRequest (mac_rx_onoff)
                                                   macTxFrame (mac_tx)
                                                   macTxStartQueuedFrame (mac_tx)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F449 - 0000F449 (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   macRxInit
                                                   macRxTxReset
                                                   rxStartIsr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxFilter             0000F449        macRadioStartScan (mac_radio)
                                                   macRadioStopScan (mac_radio)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F44A - 0000F44A (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   macRxAckTxDoneCallback
                                                   macRxInit
                                                   rxDone
                                                   rxFcsIsr
                                                   rxHaltCleanupFinalStep
                                                   rxStartIsr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxOutgoingAckFlag    0000F44A        macRadioUpdateTxPower (mac_radio)
                                                   macRxOffRequest (mac_rx_onoff)
                                                   macTxFrame (mac_tx)
                                                   macTxStartQueuedFrame (mac_tx)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00002145 - 00002148 (0x4 bytes), align: 0
  Segment part 12.            Intra module refs:   ?Subroutine15
           LOCAL                   ADDRESS         
           =====                   =======         
           macRxAddrLen            00002145 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F44B - 0000F44D (0x3 bytes), align: 0
  Segment part 13.            Intra module refs:   ?Subroutine16
                                                   ?Subroutine2
                                                   macRxThresholdIsr
                                                   rxDiscardFrame
                                                   rxPrepPayload
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           pFuncRxState            0000F44B 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F44E - 0000F44F (0x2 bytes), align: 0
  Segment part 14.            Intra module refs:   ?Subroutine19
                                                   ?Subroutine21
                                                   ?Subroutine3
                                                   ?Subroutine7
                                                   macRxInit
                                                   rxAddrIsr
                                                   rxFcsIsr
                                                   rxHaltCleanupFinalStep
                                                   rxPayloadIsr
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           pRxBuf                  0000F44E 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F450 - 0000F453 (0x4 bytes), align: 0
  Segment part 15.            Intra module refs:   rxAddrIsr
                                                   rxFcsIsr
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxBuf                   0000F450 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F454 - 0000F454 (0x1 bytes), align: 0
  Segment part 16.            Intra module refs:   rxDiscardFrame
                                                   rxDiscardIsr
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxUnreadLen             0000F454 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F455 - 0000F455 (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   ?Subroutine8
                                                   rxAddrIsr
                                                   rxDiscardFrame
                                                   rxDiscardIsr
                                                   rxPayloadIsr
                                                   rxPrepPayload
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxNextLen               0000F455 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F456 - 0000F456 (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   rxPayloadIsr
                                                   rxPrepPayload
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxPayloadLen            0000F456 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F457 - 0000F457 (0x1 bytes), align: 0
  Segment part 19.            Intra module refs:   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxFilter                0000F457 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F458 - 0000F458 (0x1 bytes), align: 0
  Segment part 20.            Intra module refs:   macRxInit
                                                   macRxPromiscuousMode
                                                   rxFcsIsr
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxPromiscuousMode       0000F458 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F459 - 0000F459 (0x1 bytes), align: 0
  Segment part 21.            Intra module refs:   macRxHaltCleanup
                                                   macRxInit
                                                   macRxThresholdIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxIsrActiveFlag         0000F459 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F45A - 0000F45A (0x1 bytes), align: 0
  Segment part 22.            Intra module refs:   macRxHaltCleanup
                                                   macRxInit
                                                   macRxThresholdIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxResetFlag             0000F45A 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000290B7 - 000290DF (0x29 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxInit               000290B7        macLowLevelInit (mac_low_level)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000290E0 - 000290F6 (0x17 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxRadioPowerUpInit   000290E0        macSleepWakeUp (mac_sleep)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000290F7 - 0002910F (0x19 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxTxReset            000290F7        macLowLevelReset (mac_low_level)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029110 - 0002912E (0x1f bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxHaltCleanup        00029110        macCspTxIntIsr (mac_csp_tx)
                                                   macRxHardDisable (mac_rx_onoff)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002912F - 0002918D (0x5f bytes), align: 0
  Segment part 27.            Intra module refs:   macRxHaltCleanup
                                                   macRxThresholdIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxHaltCleanupFinalStep
                                   0002912F 
               calls direct
               stack 1 = 00000002 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002918E - 00029197 (0xa bytes), align: 0
  Segment part 28.            Intra module refs:   macRxAckTxDoneCallback
                                                   macRxHaltCleanup
                                                   macRxInit
                                                   macRxPromiscuousMode
                                                   macRxRadioPowerUpInit
                                                   macRxThresholdIsr
                                                   macRxTxReset
                                                   rxDiscardIsr
                                                   rxDone
                                                   rxHaltCleanupFinalStep
                                                   rxPayloadIsr
                                                   rxPostRxUpdates
                                                   rxPrepPayload
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine20           0002918E 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029198 - 0002919B (0x4 bytes), align: 0
  Segment part 29.            Intra module refs:   macRxInit
                                                   rxHaltCleanupFinalStep
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            00029198 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002919C - 000291AB (0x10 bytes), align: 0
  Segment part 30.            Intra module refs:   ?Subroutine0
                                                   ?Subroutine1
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine16           0002919C 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000291AC - 000291E6 (0x3b bytes), align: 0
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxThresholdIsr       000291AC        macMcuRfIsr (mac_mcu)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000291E7 - 000294D8 (0x2f2 bytes), align: 0
  Segment part 32.            Intra module refs:   ?Subroutine16
                                                   rxDiscardFrame
           LOCAL                   ADDRESS         
           =====                   =======         
           rxStartIsr              000291E7 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000294D9 - 000294E6 (0xe bytes), align: 0
  Segment part 33.            Intra module refs:   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine15           000294D9 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000294E7 - 000294EA (0x4 bytes), align: 0
  Segment part 34.            Intra module refs:   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           000294E7 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000294EB - 000294F1 (0x7 bytes), align: 0
  Segment part 35.            Intra module refs:   ?Subroutine10
                                                   ?Subroutine9
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine17           000294EB 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000294F2 - 00029503 (0x12 bytes), align: 0
  Segment part 36.            Intra module refs:   rxAddrIsr
                                                   rxPayloadIsr
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            000294F2 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029504 - 000295E7 (0xe4 bytes), align: 0
  Segment part 37.            Intra module refs:   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxAddrIsr               00029504 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000001D )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000295E8 - 000295EC (0x5 bytes), align: 0
  Segment part 38.            Intra module refs:   rxAddrIsr
                                                   rxDiscardFrame
                                                   rxFcsIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine22           000295E8 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000295ED - 000295F8 (0xc bytes), align: 0
  Segment part 39.            Intra module refs:   rxAddrIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine14           000295ED 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000295F9 - 00029607 (0xf bytes), align: 0
  Segment part 40.            Intra module refs:   rxAddrIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            000295F9 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029608 - 0002960C (0x5 bytes), align: 0
  Segment part 41.            Intra module refs:   ?Subroutine4
                                                   ?Subroutine6
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine21           00029608 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002960D - 00029620 (0x14 bytes), align: 0
  Segment part 42.            Intra module refs:   rxAddrIsr
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0002960D 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029621 - 00029656 (0x36 bytes), align: 0
  Segment part 43.            Intra module refs:   ?Subroutine2
                                                   rxPayloadIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxPrepPayload           00029621 
               stack 1 = 00000002 ( 00000002 )
               stack 2 = 0000001D ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029657 - 000296A3 (0x4d bytes), align: 0
  Segment part 44.            Intra module refs:   ?Subroutine2
           LOCAL                   ADDRESS         
           =====                   =======         
           rxPayloadIsr            00029657 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000296A4 - 000296A7 (0x4 bytes), align: 0
  Segment part 45.            Intra module refs:   rxPayloadIsr
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           000296A4 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000296A8 - 000296B5 (0xe bytes), align: 0
  Segment part 46.            Intra module refs:   ?Subroutine11
                                                   ?Subroutine17
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine19           000296A8 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000296B6 - 0002975F (0xaa bytes), align: 0
  Segment part 47.            Intra module refs:   rxPrepPayload
           LOCAL                   ADDRESS         
           =====                   =======         
           rxFcsIsr                000296B6 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029760 - 00029763 (0x4 bytes), align: 0
  Segment part 48.            Intra module refs:   rxFcsIsr
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           00029760 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029764 - 0002976E (0xb bytes), align: 0
  Segment part 49.            Intra module refs:   ?Subroutine12
                                                   ?Subroutine13
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine18           00029764 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002976F - 00029774 (0x6 bytes), align: 0
  Segment part 50.            Intra module refs:   rxFcsIsr
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine12           0002976F 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029775 - 0002977A (0x6 bytes), align: 0
  Segment part 51.            Intra module refs:   rxAddrIsr
                                                   rxFcsIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            00029775 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002977B - 00029794 (0x1a bytes), align: 0
  Segment part 52.            Intra module refs:   rxFcsIsr
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            0002977B 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029795 - 0002979C (0x8 bytes), align: 0
  Segment part 53.            Intra module refs:   rxAddrIsr
                                                   rxFcsIsr
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            00029795 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002979D - 000297A6 (0xa bytes), align: 0
  Segment part 54.            Intra module refs:   rxFcsIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0002979D 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000297A7 - 000297D3 (0x2d bytes), align: 0
  Segment part 55.            Intra module refs:   ?Subroutine0
                                                   rxDiscardFrame
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxDone                  000297A7 
               calls direct
               stack 1 = 00000002 ( 00000002 )
               stack 2 = 00000010 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000297D4 - 000297ED (0x1a bytes), align: 0
  Segment part 56.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxAckTxDoneCallback
                                   000297D4        macMcuRfIsr (mac_mcu)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000297EE - 00029809 (0x1c bytes), align: 0
  Segment part 57.            Intra module refs:   macRxAckTxDoneCallback
                                                   rxDone
                                                   rxHaltCleanupFinalStep
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxPostRxUpdates         000297EE 
               calls direct
               stack 1 = 00000002 ( 00000002 )
               stack 2 = 0000000E ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002980A - 00029861 (0x58 bytes), align: 0
  Segment part 58.            Intra module refs:   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxDiscardFrame          0002980A 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 0000000E ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029862 - 0002989D (0x3c bytes), align: 0
  Segment part 59.            Intra module refs:   rxDiscardFrame
           LOCAL                   ADDRESS         
           =====                   =======         
           rxDiscardIsr            00029862 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002989E - 000298B2 (0x15 bytes), align: 0
  Segment part 60.            Intra module refs:   rxAddrIsr
                                                   rxDiscardIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            0002989E 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000298B3 - 000298C0 (0xe bytes), align: 0
  Segment part 61.            Intra module refs:   rxDiscardIsr
                                                   rxFcsIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            000298B3 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000298C1 - 000298FD (0x3d bytes), align: 0
  Segment part 62.            Intra module refs:   macRxTxReset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxPromiscuousMode    000298C1 
               calls direct
               stack 1 = 00000002 ( 00000002 )

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\mac_rx_onoff.r51
  PROGRAM MODULE, NAME : mac_rx_onoff

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000F45B - 0000F45B (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   macRxHardDisable
                                                   macRxOff
                                                   macRxOn
                                                   macRxOnOffInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxOnFlag             0000F45B        macCspTxGoSlotted (mac_csp_tx)
                                                   rxStartIsr (mac_rx)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F45C - 0000F45C (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   macRxDisable
                                                   macRxEnable
                                                   macRxHardDisable
                                                   macRxOffRequest
                                                   macRxOnOffInit
                                                   macRxOnRequest
                                                   macRxSoftEnable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxEnableFlags        0000F45C 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039E48 - 00039E56 (0xf bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxOnOffInit          00039E48        macLowLevelInit (mac_low_level)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039E57 - 00039E5F (0x9 bytes), align: 0
  Segment part 12.            Intra module refs:   macRxHardDisable
                                                   macRxOff
                                                   macRxOn
                                                   macRxOnOffInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            00039E57 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039E60 - 00039E89 (0x2a bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxEnable             00039E60        MAC_MlmeSetReq (mac_pib)
                                                   macApiScanReq (mac_scan)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039E8A - 00039E93 (0xa bytes), align: 0
  Segment part 14.            Intra module refs:   macRxDisable
                                                   macRxEnable
                                                   macRxOffRequest
                                                   macRxOnRequest
                                                   macRxSoftEnable
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            00039E8A 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039E94 - 00039EB3 (0x20 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxSoftEnable         00039E94        macApiPollReq (mac_device)
                                                   macAssocDataReq (mac_device)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039EB4 - 00039EE0 (0x2d bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxDisable            00039EB4        MAC_MlmeSetReq (mac_pib)
                                                   macAssocDataReqComplete (mac_device)
                                                   macAssocDataRxInd (mac_device)
                                                   macAssocFailed (mac_device)
                                                   macPollDataReqComplete (mac_device)
                                                   macPollDataRxInd (mac_device)
                                                   macPollFrameResponseTimeout (mac_device)
                                                   macRxAssocRsp (mac_device)
                                                   macScanComplete (mac_scan)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039EE1 - 00039F03 (0x23 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxHardDisable        00039EE1        macRxTxReset (mac_rx)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039F04 - 00039F21 (0x1e bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxOnRequest          00039F04        macRadioUpdateChannel (mac_radio)
                                                   macSleepWakeUp (mac_sleep)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039F22 - 00039F55 (0x34 bytes), align: 0
  Segment part 19.            Intra module refs:   macRxDisable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxOffRequest         00039F22        rxFcsIsr (mac_rx)
                                                   rxPostRxUpdates (mac_rx)
                                                   txComplete (mac_tx)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039F56 - 00039F6F (0x1a bytes), align: 0
  Segment part 20.            Intra module refs:   macRxEnable
                                                   macRxOnRequest
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxOn                 00039F56        macCspTxGoCsma (mac_csp_tx)
                                                   macMcuInit (mac_mcu)
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000009 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039F70 - 00039F8A (0x1b bytes), align: 0
  Segment part 21.            Intra module refs:   macRxOffRequest
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxOff                00039F70        macMcuInit (mac_mcu)
                                                   macRadioUpdateChannel (mac_radio)
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000009 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039F8B - 00039F95 (0xb bytes), align: 0
  Segment part 22.            Intra module refs:   macRxHardDisable
                                                   macRxOff
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00039F8B 

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\mac_sleep.r51
  PROGRAM MODULE, NAME : mac_sleep

  SEGMENTS IN THE MODULE
  ======================
XDATA_I
  Relative segment, address: XDATA 0000F86D - 0000F86D (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   macSleepWakeUp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSleepState           0000F86D        macLowLevelReset (mac_low_level)
                                                   macRadioStartScan (mac_radio)
                                                   macTxFrame (mac_tx)
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A704 - 0003A751 (0x4e bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSleepWakeUp          0003A704        macLowLevelReset (mac_low_level)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000178B - 0000178B (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   macSleepState

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\mac_tx.r51
  PROGRAM MODULE, NAME : mac_tx

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000F45D - 0000F45D (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   ?Subroutine3
                                                   macTxAckNotReceivedCallback
                                                   macTxAckReceivedCallback
                                                   macTxDoneCallback
                                                   macTxFrame
                                                   macTxStartQueuedFrame
                                                   txComplete
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxActive             0000F45D        halAssertHazardLights (hal_assert)
                                                   macRadioSetChannel (mac_radio)
                                                   macRadioUpdateChannel (mac_radio)
                                                   macRadioUpdateTxPower (mac_radio)
                                                   macRxOffRequest (mac_rx_onoff)
                                                   rxStartIsr (mac_rx)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F45E - 0000F45E (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   macTxChannelBusyCallback
                                                   macTxFrame
                                                   macTxFrameRetransmit
                                                   txCsmaGo
                                                   txCsmaPrep
                                                   txGo
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxType               0000F45E 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F45F - 0000F45F (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   macTxChannelBusyCallback
                                                   macTxFrame
                                                   txCsmaPrep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxBe                 0000F45F 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F460 - 0000F460 (0x1 bytes), align: 0
  Segment part 13.            Intra module refs:   txCsmaGo
                                                   txCsmaPrep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxCsmaBackoffDelay   0000F460        macCspTxGoCsma (mac_csp_tx)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F461 - 0000F461 (0x1 bytes), align: 0
  Segment part 14.            Intra module refs:   macTxChannelBusyCallback
                                                   macTxFrame
           LOCAL                   ADDRESS         
           =====                   =======         
           nb                      0000F461 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F462 - 0000F462 (0x1 bytes), align: 0
  Segment part 15.            Intra module refs:   macTxAckReceivedCallback
                                                   macTxFrame
           LOCAL                   ADDRESS         
           =====                   =======         
           txSeqn                  0000F462 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F463 - 0000F463 (0x1 bytes), align: 0
  Segment part 16.            Intra module refs:   macTxDoneCallback
                                                   macTxFrame
           LOCAL                   ADDRESS         
           =====                   =======         
           txAckReq                0000F463 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F464 - 0000F464 (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   ?Subroutine3
                                                   macTxFrame
                                                   macTxFrameRetransmit
                                                   txComplete
           LOCAL                   ADDRESS         
           =====                   =======         
           txRetransmitFlag        0000F464 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F05E - 0002F064 (0x7 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxInit               0002F05E        macLowLevelInit (mac_low_level)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F065 - 0002F189 (0x125 bytes), align: 0
  Segment part 20.            Intra module refs:   macTxFrameRetransmit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxFrame              0002F065        macDataTxSend (mac_data)
               calls direct, is recursive
               stack 1 = 00000002 ( 00000001 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F18A - 0002F195 (0xc bytes), align: 0
  Segment part 21.            Intra module refs:   macTxFrame
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0002F18A 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F196 - 0002F1D5 (0x40 bytes), align: 0
  Segment part 22.            Intra module refs:   macTxChannelBusyCallback
                                                   macTxFrame
           LOCAL                   ADDRESS         
           =====                   =======         
           txCsmaPrep              0002F196 
               calls direct
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000009 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F1D6 - 0002F1F9 (0x24 bytes), align: 0
  Segment part 23.            Intra module refs:   ?Subroutine2
           LOCAL                   ADDRESS         
           =====                   =======         
           txGo                    0002F1D6 
               calls direct, is recursive
               stack 1 = 00000002 ( 00000002 )
               stack 2 = 00000009 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F1FA - 0002F225 (0x2c bytes), align: 0
  Segment part 24.            Intra module refs:   macTxChannelBusyCallback
                                                   txGo
           LOCAL                   ADDRESS         
           =====                   =======         
           txCsmaGo                0002F1FA 
               calls direct, is recursive
               stack 1 = 00000002 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F226 - 0002F239 (0x14 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxFrameRetransmit    0002F226        macTxCompleteCallback (mac_data)
               calls direct, is recursive
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F23A - 0002F23E (0x5 bytes), align: 0
  Segment part 26.            Intra module refs:   macTxChannelBusyCallback
                                                   macTxFrameRetransmit
                                                   txCsmaGo
                                                   txGo
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0002F23A 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F23F - 0002F24E (0x10 bytes), align: 0
  Segment part 27.            Intra module refs:   ?Subroutine5
                                                   macTxInit
                                                   macTxStartQueuedFrame
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0002F23F 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F24F - 0002F283 (0x35 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxStartQueuedFrame   0002F24F        rxPostRxUpdates (mac_rx)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F284 - 0002F28C (0x9 bytes), align: 0
  Segment part 29.            Intra module refs:   macTxFrame
                                                   macTxStartQueuedFrame
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0002F284 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F28D - 0002F2FA (0x6e bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxChannelBusyCallback
                                   0002F28D        macCspTxStopIsr (mac_csp_tx)
               calls direct
               stack 1 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F2FB - 0002F33E (0x44 bytes), align: 0
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxDoneCallback       0002F2FB        macCspForceTxDoneIfPending (mac_csp_tx)
                                                   macCspTxStopIsr (mac_csp_tx)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F33F - 0002F389 (0x4b bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxAckReceivedCallback
                                   0002F33F        rxStartIsr (mac_rx)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F38A - 0002F38E (0x5 bytes), align: 0
  Segment part 33.            Intra module refs:   macTxAckNotReceivedCallback
                                                   macTxAckReceivedCallback
                                                   macTxDoneCallback
                                                   macTxFrame
                                                   txComplete
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0002F38A 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F38F - 0002F3C3 (0x35 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxAckNotReceivedCallback
                                   0002F38F        macCspTxStopIsr (mac_csp_tx)
                                                   rxStartIsr (mac_rx)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F3C4 - 0002F3F7 (0x34 bytes), align: 0
  Segment part 35.            Intra module refs:   macTxAckNotReceivedCallback
                                                   macTxAckReceivedCallback
                                                   macTxChannelBusyCallback
                                                   macTxDoneCallback
                                                   macTxFrame
                                                   txCsmaGo
           LOCAL                   ADDRESS         
           =====                   =======         
           txComplete              0002F3C4 
               calls direct, is recursive
               stack 1 = 00000002 ( 00000000 )
               stack 2 = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F3F8 - 0002F450 (0x59 bytes), align: 0
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxTimestampCallback
                                   0002F3F8        macCspTxIntIsr (mac_csp_tx)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F451 - 0002F460 (0x10 bytes), align: 0
  Segment part 37.            Intra module refs:   macTxFrame
                                                   macTxTimestampCallback
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0002F451 

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\menu_lcd.r51
  PROGRAM MODULE, NAME : menu_lcd

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000F465 - 0000F466 (0x2 bytes), align: 0
  Segment part 107.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Uart_Rx_Flag            0000F465        SPIMgr_ProcessZToolData (SPIMgr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F467 - 0000F468 (0x2 bytes), align: 0
  Segment part 108.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Uart_PP_Flag            0000F467        SPIMgr_ProcessZToolData (SPIMgr)

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\nwk_globals.r51
  PROGRAM MODULE, NAME : nwk_globals

  SEGMENTS IN THE MODULE
  ======================
CODE_C
  Relative segment, address: CODE 00002149 - 0000214A (0x2 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gNWK_MAX_DEVICE_LIST    00002149        RTG_BcastAdd (rtg)
                                                   RTG_BcastChk (rtg)
                                                   RTG_DataReq (rtg)
                                                   Segment part 28 (AssocList)
                                                   Segment part 31 (AssocList)
                                                   Segment part 34 (AssocList)
                                                   Segment part 48 (AssocList)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 0000214B - 0000214B (0x1 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gNWK_MAX_DATABUFS_WAITING
                                   0000214B        nwkDB_Add (nwk_bufs)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 0000214C - 0000214C (0x1 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gNWK_MAX_DATABUFS_SCHEDULED
                                   0000214C        nwkDB_Add (nwk_bufs)
                                                   nwk_MacDataBuffersFull (nwk_bufs)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 0000214D - 0000214D (0x1 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gNWK_MAX_DATABUFS_TOTAL
                                   0000214D        nwk_MacDataBuffersFull (nwk_bufs)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 0000214E - 0000214E (0x1 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gNWK_INDIRECT_CNT_RTG_TMR
                                   0000214E        RTG_Init (rtg)
                                                   RTG_TimerEvent (rtg)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 0000214F - 0000214F (0x1 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gNWK_INDIRECT_MSG_MAX_PER
                                   0000214F        nwkbufs_hold (nwk_bufs)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00002150 - 00002150 (0x1 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gNWK_INDIRECT_MSG_MAX_ALL
                                   00002150        nwkbufs_hold (nwk_bufs)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F469 - 0000F46A (0x2 bytes), align: 0
  Segment part 14.            Intra module refs:   nwk_globals_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Cskip                   0000F469        RTG_DivideCskip (rtg)
                                                   RTG_GetAncestors (rtg)
                                                   RTG_MultiplyCskip (rtg)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F86E - 0000F873 (0x6 bytes), align: 0
  Segment part 15.            Intra module refs:   nwk_globals_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CskipRtrs               0000F86E        Segment part 108 (rtg)
                                                   nwk_start_coord (nwk)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F874 - 0000F879 (0x6 bytes), align: 0
  Segment part 17.            Intra module refs:   nwk_globals_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CskipChldrn             0000F874        nwk_start_coord (nwk)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000F87A - 0000F87A (0x1 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gMIN_TREE_LINK_COST     0000F87A        RTG_UpdateNeighborEntry (nwk_util)
                                                   nwk_ScanJoiningOrphan (nwk)
                                                   nwk_beacon_notify_ind_processing (nwk)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F46B - 0000F590 (0x126 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AssociatedDevList       0000F46B        AssocGetNextNode (AssocList)
                                                   AssocGetWithAddress (AssocList)
                                                   AssocInit (AssocList)
                                                   RTG_BcastAdd (rtg)
                                                   RTG_BcastChk (rtg)
                                                   RTG_DataReq (rtg)
                                                   Segment part 12 (AssocList)
                                                   Segment part 32 (AssocList)
                                                   Segment part 33 (AssocList)
                                                   Segment part 42 (AssocList)
                                                   Segment part 43 (AssocList)
                                                   Segment part 82 (rtg)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00002151 - 00002151 (0x1 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gMAX_RTG_ENTRIES        00002151        NLME_GetRequest (NLMEDE)
                                                   RTG_AddRtgEntry (rtg)
                                                   RTG_GetRtgEntry (rtg)
                                                   RTG_Init (rtg)
                                                   RTG_RemoveRtgEntry (rtg)
                                                   RTG_UpdateNeighborEntry (nwk_util)
                                                   Segment part 17 (rtg)
                                                   Segment part 73 (rtg)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00002152 - 00002152 (0x1 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gMAX_UNRESERVED_RTG_ENTRIES
                                   00002152        RTG_AddRtgEntry (rtg)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00002153 - 00002153 (0x1 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gMAX_RREQ_ENTRIES       00002153        RTG_CheckRtDiscEntry (rtg)
                                                   RTG_GetPrevHop (rtg)
                                                   RTG_GetRtDiscEntry (rtg)
                                                   RTG_Init (rtg)
                                                   RTG_TimerEvent (rtg)
                                                   RTG_UpdateRtDiscEntry (rtg)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00002154 - 00002154 (0x1 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gMAX_NEIGHBOR_ENTRIES   00002154        NLME_GetNeighborIndex (nwk_util)
                                                   NLME_GetNeighborLinkInfo (nwk_util)
                                                   NLME_RemoveFromNeighborTable (nwk_util)
                                                   RTG_BcastAdd (rtg)
                                                   RTG_BcastChk (rtg)
                                                   RTG_DataReq (rtg)
                                                   RTG_GetNextHop (rtg)
                                                   RTG_UpdateNeighborEntry (nwk_util)
                                                   Segment part 60 (NLMEDE)
                                                   nwk_associate_cnf_processing (nwk)
                                                   nwk_init (nwk)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F591 - 0000F5E8 (0x58 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           neighborTable           0000F591        NLME_GetNeighborIndex (nwk_util)
                                                   NLME_GetNeighborLinkInfo (nwk_util)
                                                   NLME_GetRequest (NLMEDE)
                                                   RTG_BcastAdd (rtg)
                                                   RTG_BcastChk (rtg)
                                                   RTG_DataReq (rtg)
                                                   RTG_GetNextHop (rtg)
                                                   Segment part 74 (nwk)
                                                   Segment part 80 (nwk_util)
                                                   nwk_associate_cnf_processing (nwk)
                                                   nwk_init (nwk)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F5E9 - 0000F660 (0x78 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           rtgTable                0000F5E9        NLME_GetRequest (NLMEDE)
                                                   RTG_GetRtgEntry (rtg)
                                                   RTG_TimerEvent (rtg)
                                                   RTG_UpdateNeighborEntry (nwk_util)
                                                   Segment part 46 (rtg)
                                                   Segment part 47 (rtg)
                                                   Segment part 48 (rtg)
                                                   Segment part 51 (rtg)
                                                   Segment part 97 (rtg)
                                                   Segment part 99 (rtg)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F661 - 0000F6B0 (0x50 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           rtDiscTable             0000F661        RTG_CheckRtDiscEntry (rtg)
                                                   RTG_GetPrevHop (rtg)
                                                   RTG_GetRtDiscEntry (rtg)
                                                   RTG_TimerEvent (rtg)
                                                   RTG_UpdateRtDiscEntry (rtg)
                                                   Segment part 59 (rtg)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F6B1 - 0000F6F8 (0x48 bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bcastTable              0000F6B1        RTG_BcastAdd (rtg)
                                                   RTG_BcastChk (rtg)
                                                   RTG_BcastTimerHandler (rtg)
                                                   RTG_Init (rtg)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F6F9 - 0000F701 (0x9 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bcastHoldHandle         0000F6F9        Segment part 79 (rtg)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F702 - 0000F725 (0x24 bytes), align: 0
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bcastHoldAckMask        0000F702        RTG_DataReq (rtg)
                                                   Segment part 89 (rtg)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00002155 - 00002155 (0x1 bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gMAX_BCAST              00002155        RTG_BcastChk (rtg)
                                                   RTG_BcastDel (rtg)
                                                   RTG_BcastHold (rtg)
                                                   RTG_BcastTimerHandler (rtg)
                                                   RTG_DataReq (rtg)
                                                   Segment part 85 (rtg)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00002156 - 00002156 (0x1 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gAPS_MAX_GROUPS         00002156        aps_AddGroup (aps_groups)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00002157 - 00002166 (0x10 bytes), align: 0
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           defaultKey              00002157        zgInit (ZGlobals)
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A1FF - 0003A23F (0x41 bytes), align: 0
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_globals_init        0003A1FF        nwk_init (nwk)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A240 - 0003A246 (0x7 bytes), align: 0
  Segment part 38.            Intra module refs:   NIB_init
                                                   nwk_globals_init
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0003A240 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A247 - 0003A300 (0xba bytes), align: 0
  Segment part 39.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NIB_init                0003A247        nwk_init (nwk)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A301 - 0003A303 (0x3 bytes), align: 0
  Segment part 40.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_Status              0003A301        nwk_associate_cnf_processing (nwk)
                                                   nwk_associate_ind_processing (nwk)
                                                   nwk_orphan_ind_processing (nwk)
                                                   nwk_start_cnf_processing (nwk)
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000178C - 00001791 (0x6 bytes), align: 0
  Segment part 16.            Intra module refs:   CskipRtrs
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001792 - 00001797 (0x6 bytes), align: 0
  Segment part 18.            Intra module refs:   CskipChldrn
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00001798 - 00001798 (0x1 bytes), align: 0
  Segment part 20.            Intra module refs:   gMIN_TREE_LINK_COST

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\saddr.r51
  PROGRAM MODULE, NAME : saddr

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A0D5 - 0003A13D (0x69 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sAddrCmp                0003A0D5        macCoordAddrCmp (mac_mgmt)
                                                   macRxCoordRealign (mac_device)
                                                   macScanRxBeacon (mac_scan)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A13E - 0003A142 (0x5 bytes), align: 0
  Segment part 7.             Intra module refs:   sAddrCmp
                                                   sAddrCpy
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0003A13E 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A143 - 0003A196 (0x54 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sAddrCpy                0003A143        macBuildBeaconNotifyInd (mac_mgmt)
                                                   macDisassocComplete (mac_mgmt)
                                                   macGetCoordAddress (mac_mgmt)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A197 - 0003A1D7 (0x41 bytes), align: 0
  Segment part 9.             Intra module refs:   sAddrCmp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sAddrExtCmp             0003A197        macDestAddrCmp (mac_mgmt)
                                                   macDestSAddrCmp (mac_mgmt)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000009 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A1D8 - 0003A1FE (0x27 bytes), align: 0
  Segment part 10.            Intra module refs:   sAddrCpy
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sAddrExtCpy             0003A1D8        ?Subroutine14 (mac_rx)
                                                   Segment part 55 (mac_coord)
                                                   macApiAssociateReq (mac_device)
                                                   macBuildHeader (mac_mgmt)
                                                   macBuildPendAddr (mac_coord)
                                                   macCommStatusInd (mac_mgmt)
                                                   macRxAssociateReq (mac_coord)
                                                   macRxDisassoc (mac_mgmt)
                                                   macRxOrphan (mac_coord)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000009 ( 0000000E )

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\wait.r51
    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\wxl_uart.r51
  PROGRAM MODULE, NAME : wxl_uart

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A4EC - 0003A50C (0x21 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           initUARTtest            0003A4EC        main (ZMain)
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A50D - 0003A511 (0x5 bytes), align: 0
  Segment part 18.            Intra module refs:   initUARTtest
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0003A50D 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A512 - 0003A547 (0x36 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UartTX_Send_String      0003A512        SPIMgr_ProcessZToolData (SPIMgr)
                                                   SampleApp_MessageMSGCB (SampleApp)
                                                   SampleApp_ProcessEvent (SampleApp)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A548 - 0003A5CD (0x86 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Uart_Baud_rate          0003A548        main (ZMain)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 0000000A )

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\zmac.r51
  PROGRAM MODULE, NAME : zmac

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000F726 - 0000F729 (0x4 bytes), align: 0
  Segment part 7.             Intra module refs:   ZMacScanReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _ScanChannels           0000F726 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000F72A - 0000F72B (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   ZMacReset
                                                   ZMacScanReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMac_ScanBuf            0000F72A        ?Subroutine0 (zmac_cb)
                                                   MAC_CbackEvent (zmac_cb)
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001260 - 00001291 (0x32 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMacInit                00001260        main (ZMain)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001292 - 0000129B (0xa bytes), align: 0
  Segment part 10.            Intra module refs:   ZMacInit
                                                   ZMacReset
                                                   ZMacSetReq
                                                   ZMacStartReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            00001292 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000129C - 000012F5 (0x5a bytes), align: 0
  Segment part 12.            Intra module refs:   ZMacInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMacReset               0000129C 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000008 ( 00000009 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000012F6 - 00001319 (0x24 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMacGetReq              000012F6        MT_ProcessSerialCommand (MTEL)
                                                   NLME_GetCoordExtAddr (nwk_util)
                                                   NLME_GetExtAddr (nwk_util)
                                                   Segment part 70 (nwk_util)
                                                   nwk_ScanJoiningOrphan (nwk)
                                                   nwk_associate_cnf_processing (nwk)
                                                   zgInit (ZGlobals)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000131A - 0000134B (0x32 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMacSetReq              0000131A        AssocAddNew (AssocList)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   NLME_JoinRequest (NLMEDE)
                                                   NLME_PermitJoiningSet (NLMEDE)
                                                   NLME_ReJoinRequest (NLMEDE)
                                                   NLME_RejoinRspCmdProcess (nwk_util)
                                                   NLME_SetAssocFlags (nwk_util)
                                                   ZDApp_ProcessNetworkJoin (ZDApp)
                                                   nwk_associate_cnf_processing (nwk)
                                                   nwk_start_coord (nwk)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000134C - 0000135D (0x12 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMacAssociateReq        0000134C        NLME_JoinRequest (NLMEDE)
               calls direct
               stack 1 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000135E - 00001364 (0x7 bytes), align: 0
  Segment part 16.            Intra module refs:   ZMacAssociateReq
                                                   ZMacScanReq
                                                   ZMacSendNoData
                                                   ZMacStartReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0000135E 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001365 - 00001373 (0xf bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMacAssociateRsp        00001365        nwk_associate_ind_processing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001374 - 00001382 (0xf bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMacOrphanRsp           00001374        nwk_orphan_ind_processing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001383 - 0000138C (0xa bytes), align: 0
  Segment part 20.            Intra module refs:   ZMacAssociateRsp
                                                   ZMacOrphanRsp
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00001383 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000138D - 00001393 (0x7 bytes), align: 0
  Segment part 21.            Intra module refs:   ?Subroutine0
                                                   ?Subroutine1
                                                   ?Subroutine2
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0000138D 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001394 - 000014A8 (0x115 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMacScanReq             00001394        Segment part 36 (NLMEDE)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000014A9 - 000014AD (0x5 bytes), align: 0
  Segment part 24.            Intra module refs:   ZMacScanReq
                                                   ZMacSendNoData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            000014A9 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000014AE - 000014EE (0x41 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMacStartReq            000014AE        nwk_start_coord (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000014EF - 000014F7 (0x9 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMacSyncReq             000014EF        NLME_JoinRequest (NLMEDE)
                                                   nwk_ScanJoiningOrphan (nwk)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000014F8 - 00001501 (0xa bytes), align: 0
  Segment part 27.            Intra module refs:   ZMacAssociateReq
                                                   ZMacAssociateRsp
                                                   ZMacGetReq
                                                   ZMacOrphanRsp
                                                   ZMacSyncReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            000014F8 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001502 - 000015C7 (0xc6 bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMacDataReq             00001502        nwk_data_req_send (nwk)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000015C8 - 000015CF (0x8 bytes), align: 0
  Segment part 30.            Intra module refs:   ZMacDataReq
                                                   ZMacScanReq
                                                   ZMacSendNoData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            000015C8 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000015D0 - 000015DA (0xb bytes), align: 0
  Segment part 31.            Intra module refs:   ZMacDataReq
                                                   ZMacStartReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            000015D0 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000015DB - 0000163D (0x63 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMacSendNoData          000015DB        RTG_DataReq (rtg)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000163E - 00001649 (0xc bytes), align: 0
  Segment part 35.            Intra module refs:   ZMacSendNoData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0000163E 

    *************************************************************************

  FILE NAME : E:\ÑÐ¶þÉÏ\CPS\ÊµÑéÆ½Ì¨\CC2430¿ª·¢×ÊÁÏ\ÎÞÏßÍøÂç¿ª·¢Æ½Ì¨\C51RF-3-PKÑÝÊ¾³ÌÐò\ZigBee2006\ZigBee2006-´®¿Ú»¥·¢\ZStack-1.4.2-1.1.0\Projects\zstack\Samples\SampleApp\CC2430DB\RouterEB\Obj\zmac_cb.r51
  PROGRAM MODULE, NAME : zmac_cb

  SEGMENTS IN THE MODULE
  ======================
CODE_C
  Relative segment, address: CODE 00002167 - 00002177 (0x11 bytes), align: 0
  Segment part 6.             Intra module refs:   ?Subroutine2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zmacCBSizeTable         00002167 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F461 - 0002F4B1 (0x51 bytes), align: 0
  Segment part 8.             Intra module refs:   MAC_CbackEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           getZMacDynamicSize      0002F461 
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000015 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F4B2 - 0002F4B8 (0x7 bytes), align: 0
  Segment part 9.             Intra module refs:   MAC_CbackCheckPending
                                                   getZMacDynamicSize
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            0002F4B2 
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00002178 - 00002188 (0x11 bytes), align: 0
  Segment part 7.             Intra module refs:   MAC_CbackEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zmacCBEventTable        00002178 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F4B9 - 0002F7B7 (0x2ff bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_CbackEvent          0002F4B9        Segment part 15 (mac_device)
                                                   macCbackForEvent (mac_main)
                                                   macCommStatusInd (mac_mgmt)
                                                   macConflictSyncLossInd (mac_mgmt)
                                                   macDataRxInd (mac_data)
                                                   macDisassocComplete (mac_mgmt)
                                                   macRxAssociateReq (mac_coord)
                                                   macRxBeacon (mac_mgmt)
                                                   macRxCompleteCallback (mac_data)
                                                   macRxCoordRealign (mac_device)
                                                   macRxDataReq (mac_coord)
                                                   macRxDisassoc (mac_mgmt)
                                                   macRxOrphan (mac_coord)
                                                   macScanComplete (mac_scan)
                                                   macScanFailedInProgress (mac_scan)
                                                   macScanRxBeacon (mac_scan)
                                                   macStartComplete (mac_coord)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000018 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F7B8 - 0002F7C0 (0x9 bytes), align: 0
  Segment part 11.            Intra module refs:   MAC_CbackEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            0002F7B8 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F7C1 - 0002F7C9 (0x9 bytes), align: 0
  Segment part 12.            Intra module refs:   MAC_CbackEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            0002F7C1 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F7CA - 0002F7D4 (0xb bytes), align: 0
  Segment part 13.            Intra module refs:   MAC_CbackEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0002F7CA 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F7D5 - 0002F7DE (0xa bytes), align: 0
  Segment part 14.            Intra module refs:   MAC_CbackEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0002F7D5 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F7DF - 0002F7EB (0xd bytes), align: 0
  Segment part 15.            Intra module refs:   MAC_CbackEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0002F7DF 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F7EC - 0002F7F7 (0xc bytes), align: 0
  Segment part 16.            Intra module refs:   MAC_CbackEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0002F7EC 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F7F8 - 0002F809 (0x12 bytes), align: 0
  Segment part 17.            Intra module refs:   MAC_CbackEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0002F7F8 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F80A - 0002F81A (0x11 bytes), align: 0
  Segment part 18.            Intra module refs:   MAC_CbackEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0002F80A 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F81B - 0002F829 (0xf bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_CbackCheckPending   0002F81B        macRxCheckPendingCallback (mac_data)
               calls direct
               stack 1 = 00000000 ( 00000002 )

    *************************************************************************

  FILE NAME : D:\Program Files\IAR Systems\Embedded Workbench 4.05 Evaluation version\8051\LIB\CLIB\cl-pli-blxd-1e16x01.r51
  LIBRARY MODULE, NAME : ?cmain

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 000000BD, align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cmain                  000000BD        __call_main (CSTARTUP)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000BD - 000000C5 (0x9 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __low_level_init_call   000000BD        __low_level_init (?low_level_init)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000C6 - 000000D5 (0x10 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_XDATA_Z          000000C6        AIB_MaxBindingTime (APS)
                                                   APSME_CmdPktHook (APSMEDE)
                                                   APSME_FrameSecApplyExtHook (APSMEDE)
                                                   APSME_FrameSecApplyHook (APSMEDE)
                                                   APSME_FrameSecRemoveHook (APSMEDE)
                                                   APSME_FrameSecSetupHook (APSMEDE)
                                                   APS_Counter (APS)
                                                   APS_TaskID (APS)
                                                   AddrMgrEntryData (AddrMgr)
                                                   AddrMgrEntryTotal (AddrMgr)
                                                   App_TaskID (SPIMgr)
                                                   AssociatedDevList (nwk_globals)
                                                   CMD_Token (SPIMgr)
                                                   Cskip (nwk_globals)
                                                   FBuff (OSAL_Nv)
                                                   FSC_Token (SPIMgr)
                                                   HalKeyConfigured (hal_key)
                                                   HalLedState (hal_led)
                                                   HalLedStatusControl (hal_led)
                                                   HalUARTPoll::tickShdw (hal_uart)
                                                   Hal_KeyIntEnable (hal_key)
                                                   Hal_TaskID (hal_drivers)
                                                   JoinNode (SampleApp)
                                                   LEN_Token (SPIMgr)
                                                   MT_TaskID (MTEL)
                                                   NLME_PermitJoiningDuration (NLMEDE)
                                                   NLME_ScanFields (NLMEDE)
                                                   NWK_TaskID (nwk)
                                                   NwkDescList (nwk)
                                                   OnboardKeyIntEnable (OnBoard)
                                                   OnboardTimerIntEnable (OnBoard)
                                                   RfTx (SampleApp)
                                                   RxBuf (SampleApp)
                                                   SPI_Msg (SPIMgr)
                                                   SSP_GetMicLenHook (ssp)
                                                   SSP_NwkSecurityHook (ssp)
                                                   SampleAppFlashCounter (SampleApp)
                                                   SampleAppPeriodicCounter (SampleApp)
                                                   SampleApp_Flash_DstAddr (SampleApp)
                                                   SampleApp_Group (SampleApp)
                                                   SampleApp_NwkState (SampleApp)
                                                   SampleApp_Periodic_DstAddr (SampleApp)
                                                   SampleApp_TaskID (SampleApp)
                                                   SampleApp_TransID (SampleApp)
                                                   SampleApp_epDesc (SampleApp)
                                                   Segment part 13 (mac_timer)
                                                   Segment part 6 (aps_groups)
                                                   Segment part 6 (nwk_util)
                                                   Segment part 7 (mac_scan)
                                                   Segment part 8 (rtg)
                                                   Uart_PP_Flag (menu_lcd)
                                                   Uart_Rx_Flag (menu_lcd)
                                                   ZDAppNwkAddr (ZDApp)
                                                   ZDAppTaskID (ZDApp)
                                                   ZDApp_AutoFindMode_epDesc (ZDApp)
                                                   ZDApp_LeaveCtrl (ZDApp)
                                                   ZDApp_MatchDescRsp_TaskID (ZDApp)
                                                   ZDOBuildBuf (ZDObject)
                                                   ZDP_Buf (ZDProfile)
                                                   ZDP_TxOptions (ZDProfile)
                                                   ZMac_ScanBuf (zmac)
                                                   _NIB (nwk)
                                                   _ScanChannels (zmac)
                                                   _theHeap (OSAL_Memory)
                                                   _tmpRejoinState (ZDApp)
                                                   a (SPIMgr)
                                                   aExtendedAddress (OnBoard)
                                                   activeTask (OSAL_Tasks)
                                                   apsfProcessAck (APS)
                                                   apsfSendFragmented (APS)
                                                   apsfSendOsalMsg (APS)
                                                   backoffTimerRollover (mac_backoff_timer)
                                                   backoffTimerTrigger (mac_backoff_timer)
                                                   bcastHoldAckMask (nwk_globals)
                                                   bcastHoldHandle (nwk_globals)
                                                   bcastTable (nwk_globals)
                                                   cfg0 (hal_uart)
                                                   clear (SampleApp)
                                                   cntIndirectHolding (nwk_bufs)
                                                   compareState (mac_backoff_timer)
                                                   debugCompId (MTEL)
                                                   debugThreshold (MTEL)
                                                   devStartMode (ZDApp)
                                                   dmaCh0 (hal_dma)
                                                   dmaCh1234 (hal_dma)
                                                   epList (AF)
                                                   failF (OSAL_Nv)
                                                   ff1 (OSAL_Memory)
                                                   ff2 (OSAL_Memory)
                                                   findPg (OSAL_Nv)
                                                   gRTG_TBL_COMPRESSION (rtg)
                                                   halAssertHazardLights{7}{8}{18}::escape (hal_assert)
                                                   halKeySavedKeys (hal_key)
                                                   halTimerChannel (hal_timer)
                                                   halTimerRecord (hal_timer)
                                                   macCoord (mac_coord)
                                                   macData (mac_data)
                                                   macDataCheckTxTime (mac_data)
                                                   macDevice (mac_device)
                                                   macMain (mac_main)
                                                   macMgmt (mac_mgmt)
                                                   macPanCoordinator (mac_mgmt)
                                                   macPhyChannel (mac_radio)
                                                   macPhyTxPower (mac_radio)
                                                   macPib (mac_pib)
                                                   macPwr (mac_pwr)
                                                   macReset (mac_main)
                                                   macRxActive (mac_rx)
                                                   macRxEnableFlags (mac_rx_onoff)
                                                   macRxFilter (mac_rx)
                                                   macRxOnFlag (mac_rx_onoff)
                                                   macRxOutgoingAckFlag (mac_rx)
                                                   macTaskId (mac_main)
                                                   macTxActive (mac_tx)
                                                   macTxBe (mac_tx)
                                                   macTxCsmaBackoffDelay (mac_tx)
                                                   macTxType (mac_tx)
                                                   maxRssi (mac_mcu)
                                                   nb (mac_tx)
                                                   neighborTable (nwk_globals)
                                                   nsduHandleCounter (nwk_util)
                                                   nwkDataBufQueue (nwk_bufs)
                                                   nwkStatus (ZDApp)
                                                   nwk_beaconPayload (nwk)
                                                   osal_qHead (OSAL)
                                                   osal_systemClock (OSAL_Timers)
                                                   pAPS_BindingTimeoutCB (APS)
                                                   pAPS_DataConfirmReflect (APS)
                                                   pAPS_DataIndReflect (APS)
                                                   pFuncRxState (mac_rx)
                                                   pHalKeyProcessFunction (hal_key)
                                                   pMacDataTx (mac_data)
                                                   pNLME_NetworkFormationConfirm (NLMEDE)
                                                   pRxBuf (mac_rx)
                                                   pgLost (OSAL_Nv)
                                                   pgOff (OSAL_Nv)
                                                   pgRes (OSAL_Nv)
                                                   pnwk_ScanJoiningOrphan (NLMEDE)
                                                   pnwk_ScanPANChanSelect (NLMEDE)
                                                   pnwk_ScanPANChanVerify (NLMEDE)
                                                   pnwk_associate_cnf_processing (NLMEDE)
                                                   preBlinkState (hal_led)
                                                   pwrmgr_attribute (OSAL_PwrMgr)
                                                   ready (OSAL_Memory)
                                                   reqChannel (mac_radio)
                                                   reqTxPower (mac_radio)
                                                   retryCnt (ZDApp)
                                                   rreqCounter (rtg)
                                                   rtDiscTable (nwk_globals)
                                                   rtgTable (nwk_globals)
                                                   rxBuf (mac_rx)
                                                   rxFilter (mac_rx)
                                                   rxIsrActiveFlag (mac_rx)
                                                   rxNextLen (mac_rx)
                                                   rxPayloadLen (mac_rx)
                                                   rxPromiscuousMode (mac_rx)
                                                   rxResetFlag (mac_rx)
                                                   rxUnreadLen (mac_rx)
                                                   saveExtAddr (nwk_util)
                                                   save_cmd (MTEL)
                                                   savedResponseRate (NLMEDE)
                                                   shadowPerof2 (mac_mcu)
                                                   state (SPIMgr)
                                                   taskIDs (OSAL_Tasks)
                                                   tasksHead (OSAL_Tasks)
                                                   tempDataLen (SPIMgr)
                                                   timerActive (OSAL_Timers)
                                                   timerAlignedQ (mac_timer)
                                                   timerHead (OSAL_Timers)
                                                   timerUnalignedQ (mac_timer)
                                                   tmr_count (OSAL_Timers)
                                                   tmr_decr_time (OSAL_Timers)
                                                   txAckReq (mac_tx)
                                                   txRetransmitFlag (mac_tx)
                                                   txSeqn (mac_tx)
                                                   zgExtendedPANID (ZGlobals)
                                                   zgPreConfigKey (ZGlobals)
                                                   zgSecurityLevel (ZGlobals)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000D6 - 000000FE (0x29 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_XDATA_I          000000D6        ContrastValue (hal_lcd)
                                                   CskipChldrn (nwk_globals)
                                                   CskipRtrs (nwk_globals)
                                                   MTVersionString (MTEL)
                                                   NLME_AssocPermission (NLMEDE)
                                                   NLME_PermitJoining (NLMEDE)
                                                   SampleApp_ClusterList (SampleApp)
                                                   SampleApp_SimpleDesc (SampleApp)
                                                   Segment part 10 (SPIMgr)
                                                   Segment part 11 (MTEL)
                                                   Segment part 11 (mac_timer)
                                                   Segment part 12 (SPIMgr)
                                                   Segment part 6 (SPIMgr)
                                                   Segment part 6 (SampleApp)
                                                   Segment part 6 (nwk)
                                                   Segment part 8 (SPIMgr)
                                                   Segment part 8 (SampleApp)
                                                   Segment part 9 (MTEL)
                                                   Segment part 9 (mac_timer)
                                                   ZDApp_epDesc (ZDApp)
                                                   ZDO_Config_Node_Descriptor (ZDConfig)
                                                   ZDO_Config_Power_Descriptor (ZDConfig)
                                                   ZDP_TmpBuf (ZDProfile)
                                                   __Constant_0 (OSAL_Timers)
                                                   __Constant_1 (OSAL_Nv)
                                                   __Constant_30 (mac_coord)
                                                   __Constant_3e8 (MTEL)
                                                   __Constant_53544159 (MTEL)
                                                   __Constant_5800 (hal_assert)
                                                   __Constant_64 (hal_led)
                                                   __Constant_c0000 (mac_backoff_timer)
                                                   _savedRejoinRspAddr (nwk_util)
                                                   baseEDMaxEnergy (nwk_util)
                                                   continueJoining (ZDApp)
                                                   devState (ZDApp)
                                                   gMIN_TREE_LINK_COST (nwk_globals)
                                                   macActionSet (mac_main)
                                                   macCfg (mac_cfg)
                                                   macDataBeaconRequeue (mac_data)
                                                   macDataCheckSched (mac_data)
                                                   macDataRequeueIndirect (mac_data)
                                                   macDataRxBeaconCritical (mac_data)
                                                   macDataSetSched (mac_data)
                                                   macDataTxBeaconComplete (mac_data)
                                                   macDataTxIndirect (mac_data)
                                                   macSleepState (mac_sleep)
                                                   macStateTbl (mac_main)
                                                   nwk_beaconPayloadSize (nwk)
                                                   registeredKeysTaskID (OnBoard)
                                                   sPVerList (ZDApp)
                                                   theHeap (OSAL_Memory)
                                                   zdoDiscCounter (ZDApp)
                                                   zgApsDefaultMaxBindingTime (ZGlobals)
                                                   zgApscAckWaitDurationPolled (ZGlobals)
                                                   zgApscMaxFrameRetries (ZGlobals)
                                                   zgBcastDeliveryTime (ZGlobals)
                                                   zgConfigPANID (ZGlobals)
                                                   zgDefaultChannelList (ZGlobals)
                                                   zgDefaultStartingScanDuration (ZGlobals)
                                                   zgIndirectMsgTimeout (ZGlobals)
                                                   zgMaxBcastRetires (ZGlobals)
                                                   zgMaxDataRetries (ZGlobals)
                                                   zgNwkMode (ZGlobals)
                                                   zgPassiveAckTimeout (ZGlobals)
                                                   zgPollRate (ZGlobals)
                                                   zgQueuedPollRate (ZGlobals)
                                                   zgRejoinPollRate (ZGlobals)
                                                   zgResponsePollRate (ZGlobals)
                                                   zgRouteExpiryTime (ZGlobals)
                                                   zgStackProfile (ZGlobals)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000FF - 00000127 (0x29 bytes), align: 0
  Segment part 31.            Intra module refs:   __low_level_init_call
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_IXDATA_I         000000FF 
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000128 - 0000013D (0x16 bytes), align: 0
  Segment part 32.            Intra module refs:   ?cmain
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?call_main              00000128 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_EQ_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000148 - 0000014A (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_EQ_X_REW             00000148 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000014B - 0000015F (0x15 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?L_EQ_X_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_EQ_X                 0000014B        NLME_SetAssocFlags (nwk_util)
                                                   RTG_BcastAdd (rtg)
                                                   RTG_CalcAddress (rtg)
                                                   RTG_DataReq (rtg)
                                                   macBackoffTimerRolloverCallback (mac_timer)
                                                   macBackoffTimerSetTrigger (mac_backoff_timer)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?SL_GT

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000160 - 00000162 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SL_GT_REW              00000160 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000163 - 00000177 (0x15 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?SL_GT_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SL_GT                  00000163        RTG_GetTreeRoute (rtg)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?SL_GT_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000178 - 0000017A (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SL_GT_X_REW            00000178 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000017B - 0000018F (0x15 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?SL_GT_X_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SL_GT_X                0000017B        macBackoffTimerRolloverCallback (mac_timer)
                                                   macBackoffTimerTriggerCallback (mac_timer)
                                                   macTimerAddTimer (mac_timer)
                                                   macTimerRecalcUnaligned (mac_timer)
                                                   macTimerUpdateBackoffTimer (mac_timer)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_GT

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000190 - 00000192 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_GT_REW              00000190 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000193 - 000001A2 (0x10 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?UL_GT_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_GT                  00000193        macBackoffTimerCapture (mac_backoff_timer)
                                                   macBackoffTimerCount (mac_backoff_timer)
                                                   macBackoffTimerSetRollover (mac_backoff_timer)
                                                   macBackoffTimerSetTrigger (mac_backoff_timer)
                                                   nwk_data_ind_processing (nwk)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_GT_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000001A3 - 000001A5 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_GT_X_REW            000001A3 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000001A6 - 000001B5 (0x10 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?UL_GT_X_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_GT_X                000001A6        HalLedUpdate (hal_led)
                                                   halAssertHazardLights (hal_assert)
                                                   macTimerUpdateBackoffTimer (mac_timer)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?G_EQ

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000001B6 - 000001C0 (0xb bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?G_EQ                   000001B6        rxDiscardFrame (mac_rx)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?C_GPTR_LOAD

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000001C1 - 000001DA (0x1a bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?C_GPTR_LOAD            000001C1        osal_memcpy (OSAL)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_TO_FLT

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000001DB - 000001DD (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_TO_FLT               000001DB 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000001DE - 000001F2 (0x15 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?L_TO_FLT
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_TO_FLT_REW           000001DE 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000001F3 - 000001F5 (0x3 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   ?L_TO_FLT_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_TO_FLT_REW          000001F3 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000001F6 - 00000252 (0x5d bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   ?L_TO_FLT_REW
                                                   ?UL_TO_FLT_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_TO_FLT              000001F6 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TO_L

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000253 - 00000255 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TO_UL_REW          00000253 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000256 - 00000260 (0xb bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?FLT_TO_UL_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TO_UL              00000256 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000261 - 00000263 (0x3 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TO_L_REW           00000261 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000264 - 00000297 (0x34 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   ?FLT_TO_L_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TO_L               00000264 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000298 - 000002A3 (0xc bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   ?FLT_TO_L
                                                   ?FLT_TO_UL
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000002A4 - 000002F2 (0x4f bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   ?FLT_TO_L
                                                   ?FLT_TO_UL

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_ZERO

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000002F3 - 000002F5 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_ZERO          000002F3 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000002F6 - 000002FF (0xa bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?FLT_TEST_ZERO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_ZERO_REW      000002F6        ?FLT_DIV (?FLT_DIV)
                                                   ?FLT_MUL (?FLT_MUL)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_ZERO_R1

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000300 - 00000302 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_ZERO_R1       00000300 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000303 - 0000030C (0xa bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?FLT_TEST_ZERO_R1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_ZERO_R1_REW   00000303        ?FLT_DIV (?FLT_DIV)
                                                   ?FLT_MUL (?FLT_MUL)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_INF

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000030D - 0000030F (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_INF_REW       0000030D        ?FLT_MUL (?FLT_MUL)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000310 - 00000321 (0x12 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?FLT_TEST_INF_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_INF           00000310        ?FLT_DIV (?FLT_DIV)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_INF_R1

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000322 - 00000324 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_INF_R1_REW    00000322        ?FLT_MUL (?FLT_MUL)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000325 - 00000336 (0x12 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?FLT_TEST_INF_R1_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_INF_R1        00000325        ?FLT_DIV (?FLT_DIV)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_NAN

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000337 - 00000339 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_NAN_REW       00000337 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000033A - 00000348 (0xf bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?FLT_TEST_NAN_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_NAN           0000033A        ?FLT_DIV (?FLT_DIV)
                                                   ?FLT_MUL (?FLT_MUL)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_NAN_R1

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000349 - 0000034B (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_NAN_R1_REW    00000349 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000034C - 0000035A (0xf bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?FLT_TEST_NAN_R1_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_NAN_R1        0000034C        ?FLT_DIV (?FLT_DIV)
                                                   ?FLT_MUL (?FLT_MUL)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_MUL

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000035B - 0000035D (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_MUL_REW            0000035B 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000035E - 000004DD (0x180 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?FLT_MUL_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_MUL                0000035E 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_DIV

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000004DE - 000004E0 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_DIV_REW            000004DE 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000004E1 - 000006C6 (0x1e6 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?FLT_DIV_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_DIV                000004E1 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_MUL

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000006C7 - 000006C9 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MUL                  000006C7        HalLedUpdate (hal_led)
                                                   halTimerSetCount (hal_timer)
                                                   macScanStartTimer (mac_scan)
                                                   macStartResponseTimer (mac_device)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000006CA - 00000746 (0x7d bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?L_MUL
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MUL_REW              000006CA 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_DIV_MOD

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000747, align: 0
  Segment part 0. ROOT.
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000747 - 000007B6 (0x70 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_DIV_MOD             00000747        HalLedUpdate (hal_led)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   halTimerSetCount (hal_timer)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_NEG

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000007B7 - 000007B9 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_NEG_REW              000007B7        ?L_TO_FLT_REW (?L_TO_FLT)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000007BA - 000007CA (0x11 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?L_NEG_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_NEG                  000007BA        macBackoffTimerRolloverCallback (mac_timer)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_NOT

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000007CB - 000007CD (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_NOT_REW              000007CB 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000007CE - 000007DD (0x10 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?L_NOT_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_NOT                  000007CE        RTG_CalcAddress (rtg)
                                                   RTG_DataReq (rtg)
                                                   macScanStartTimer (mac_scan)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_SHR

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000007DE - 000007E3 (0x6 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_SHR_REW             000007DE 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000007E4 - 000007E8 (0x5 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_SHR                 000007E4        MT_ProcessGetNvInfo (MTEL)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   macApiScanReq (mac_scan)
                                                   macMcuOverflowSetCompare (mac_mcu)
                                                   macMcuOverflowSetCount (mac_mcu)
                                                   macScanNextChan (mac_scan)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000007E9 - 000007FC (0x14 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   ?UL_SHR
                                                   ?UL_SHR_REW

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_SHL

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000007FD - 00000802 (0x6 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SHL                  000007FD        MT_ProcessSerialCommand (MTEL)
                                                   RTG_BcastAdd (rtg)
                                                   RTG_CalcAddress (rtg)
                                                   RTG_DataReq (rtg)
                                                   RTG_DeAllocAddress (rtg)
                                                   calcChkF (OSAL_Nv)
                                                   macScanStartTimer (mac_scan)
                                                   osal_build_uint32 (OSAL)
                                                   osal_nv_read (OSAL_Nv)
                                                   osal_nv_write (OSAL_Nv)
                                                   readHdr (OSAL_Nv)
                                                   writeBuf (OSAL_Nv)
                                                   xferBuf (OSAL_Nv)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000803 - 00000807 (0x5 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SHL_REW              00000803 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000808 - 0000081B (0x14 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   ?L_SHL
                                                   ?L_SHL_REW

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_ADD

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000081C - 0000081E (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_ADD_REW              0000081C 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000081F - 00000831 (0x13 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?L_ADD_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_ADD                  0000081F        MT_ProcessSerialCommand (MTEL)
                                                   calcChkF (OSAL_Nv)
                                                   macTimer (mac_timer)
                                                   osal_build_uint32 (OSAL)
                                                   osal_nv_read (OSAL_Nv)
                                                   osal_nv_write (OSAL_Nv)
                                                   readHdr (OSAL_Nv)
                                                   writeBuf (OSAL_Nv)
                                                   xferBuf (OSAL_Nv)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_ADD_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000832 - 00000834 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_ADD_X_REW            00000832 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000835 - 00000847 (0x13 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?L_ADD_X_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_ADD_X                00000835        HalLedUpdate (hal_led)
                                                   calcChkF (OSAL_Nv)
                                                   macScanStartTimer (mac_scan)
                                                   nwk_data_ind_processing (nwk)
                                                   osal_nv_read (OSAL_Nv)
                                                   osal_nv_write (OSAL_Nv)
                                                   readHdr (OSAL_Nv)
                                                   writeBuf (OSAL_Nv)
                                                   xferBuf (OSAL_Nv)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_ADD_TO_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000848 - 0000084A (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_ADD_TO_X_REW         00000848 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000084B - 0000085D (0x13 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?L_ADD_TO_X_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_ADD_TO_X             0000084B        halAssertHazardLights (hal_assert)
                                                   macTimerRecalcUnaligned (mac_timer)
                                                   osalTimerUpdate (OSAL_Timers)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_SUB

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000085E - 00000860 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SUB_REW              0000085E 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000861 - 00000874 (0x14 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?L_SUB_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SUB                  00000861 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_SUB_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000875 - 00000877 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SUB_X_REW            00000875 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000878 - 0000088F (0x18 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?L_SUB_X_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SUB_X                00000878 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_SUB_FROM_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000890 - 00000892 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SUB_FROM_X_REW       00000890 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000893 - 000008A6 (0x14 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?L_SUB_FROM_X_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SUB_FROM_X           00000893        macBackoffTimerRolloverCallback (mac_timer)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_AND_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000008A7 - 000008A9 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_AND_X_REW            000008A7 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000008AA - 000008BC (0x13 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?L_AND_X_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_AND_X                000008AA        RTG_CalcAddress (rtg)
                                                   RTG_DataReq (rtg)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_AND_TO_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000008BD - 000008BF (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_AND_TO_X_REW         000008BD 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000008C0 - 000008D2 (0x13 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?L_AND_TO_X_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_AND_TO_X             000008C0        RTG_CalcAddress (rtg)
                                                   RTG_DataReq (rtg)
                                                   macScanStartTimer (mac_scan)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_IOR_TO_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000008D3 - 000008D5 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_IOR_TO_X_REW         000008D3 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000008D6 - 000008E8 (0x13 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?L_IOR_TO_X_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_IOR_TO_X             000008D6        RTG_BcastAdd (rtg)
                                                   RTG_DataReq (rtg)
                                                   RTG_DeAllocAddress (rtg)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_MOV_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000008E9 - 000008F7 (0xf bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MOV_X                000008E9        ?Subroutine5 (mac_mcu)
                                                   APSDE_DataIndication (APSMEDE_CB)
                                                   AssocAddNew (AssocList)
                                                   HalLedUpdate (hal_led)
                                                   MT_ProcessGetNvInfo (MTEL)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   MT_Reset (MTEL)
                                                   NLDE_DataIndication (NLMEDE_CB)
                                                   NLME_SetAssocFlags (nwk_util)
                                                   RTG_BcastAdd (rtg)
                                                   RTG_DataReq (rtg)
                                                   RTG_GetTreeRoute (rtg)
                                                   RTG_UpdateNeighborEntry (nwk_util)
                                                   ZDO_StartDevice (ZDObject)
                                                   ZMacScanReq (zmac)
                                                   afBuildMSGIncoming (AF)
                                                   afIncomingData (AF)
                                                   halAssertHazardLights (hal_assert)
                                                   macApiScanReq (mac_scan)
                                                   macBackoffTimerCancelTrigger (mac_backoff_timer)
                                                   macBackoffTimerCapture (mac_backoff_timer)
                                                   macBackoffTimerCompareIsr (mac_backoff_timer)
                                                   macBackoffTimerCount (mac_backoff_timer)
                                                   macBackoffTimerInit (mac_backoff_timer)
                                                   macBackoffTimerRolloverCallback (mac_timer)
                                                   macBackoffTimerSetTrigger (mac_backoff_timer)
                                                   macBackoffTimerTriggerCallback (mac_timer)
                                                   macBuildBeaconNotifyInd (mac_mgmt)
                                                   macCbackForEvent (mac_main)
                                                   macMcuOverflowSetCompare (mac_mcu)
                                                   macMcuOverflowSetCount (mac_mcu)
                                                   macScanCnfInit (mac_scan)
                                                   macScanNextChan (mac_scan)
                                                   macScanStartTimer (mac_scan)
                                                   macStartResponseTimer (mac_device)
                                                   macTimer (mac_timer)
                                                   macTimerAddTimer (mac_timer)
                                                   macTimerRecalcUnaligned (mac_timer)
                                                   macTimerUpdateBackoffTimer (mac_timer)
                                                   nwk_data_ind_processing (nwk)
                                                   osalTimerInit (OSAL_Timers)
                                                   osal_GetSystemClock (OSAL_Timers)
                                                   osal_timer_hw_setup (OSAL_Timers)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_MOV_C

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000008F8 - 0000090A (0x13 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MOV_C                000008F8 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_MOV_TO_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000090B - 00000914 (0xa bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MOV_TO_X_REWX        0000090B 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000915 - 00000917 (0x3 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?L_MOV_TO_X_REWX
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MOV_TO_X_REW         00000915 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000918 - 00000926 (0xf bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   ?L_MOV_TO_X_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MOV_TO_X             00000918        AssocAddNew (AssocList)
                                                   HalLedUpdate (hal_led)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   MT_Reset (MTEL)
                                                   NLME_NetworkDiscoveryRequest (NLMEDE)
                                                   NLME_OrphanJoinRequest (NLMEDE)
                                                   RTG_BcastAdd (rtg)
                                                   RTG_UpdateNeighborEntry (nwk_util)
                                                   Segment part 20 (ssp)
                                                   ZDO_StartDevice (ZDObject)
                                                   ZMacScanReq (zmac)
                                                   afBuildMSGIncoming (AF)
                                                   halAssertHazardLights (hal_assert)
                                                   macApiScanReq (mac_scan)
                                                   macBackoffTimerRolloverCallback (mac_timer)
                                                   macBackoffTimerSetRollover (mac_backoff_timer)
                                                   macBackoffTimerSetTrigger (mac_backoff_timer)
                                                   macScanNextChan (mac_scan)
                                                   macTimer (mac_timer)
                                                   macTimerRecalcUnaligned (mac_timer)
                                                   macTimerUpdateBackoffTimer (mac_timer)
                                                   macTxTimestampCallback (mac_tx)
                                                   nwk_data_ind_processing (nwk)
                                                   osalTimerInit (OSAL_Timers)
                                                   rxStartIsr (mac_rx)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?MOVE_LONG8_XDATA_IDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000927 - 00000933 (0xd bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?MOVE_LONG8_XDATA_IDATA
                                   00000927        ?PUSH_XSTACK_I (?PUSH_XSTACK_I)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?MOVE_LONG8_XDATA_XDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000934 - 00000954 (0x21 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?MOVE_LONG8_XDATA_XDATA
                                   00000934        ?PUSH_XSTACK8_X (?PUSH_XSTACK8_X)
                                                   NLDE_SendMsg (nwk_util)
                                                   SPIMgr_ProcessZToolData (SPIMgr)
                                                   nwk_getNetworkDesc (nwk)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?MOVE_LONG8_XDATA_CODE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000955 - 00000976 (0x22 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?MOVE_LONG8_XDATA_CODE
                                   00000955        ?PUSH_XSTACK8_C (?PUSH_XSTACK8_C)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?S_DIV_MOD

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000977 - 000009B7 (0x41 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?S_DIV_MOD              000009B0        macCspTxRequestAckTimeoutCallback (mac_csp_tx)
                                                   macFrameDuration (mac_data)
                                                   radioComputeED (mac_radio)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000009B8 - 00000A10 (0x59 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ?S_DIV_MOD
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_DIV_MOD             000009B8        RTG_DivideCskip (rtg)
                                                   RTG_GetAncestors (rtg)
                                                   macStartFrameResponseTimer (mac_device)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?SS_SHR

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000A11 - 00000A14 (0x4 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SS_SHR_REW             00000A11 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000A15 - 00000A17 (0x3 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SS_SHR                 00000A15        HalAdcRead (hal_adc)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000A18 - 00000A24 (0xd bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   ?SS_SHR
                                                   ?SS_SHR_REW

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_SHR

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000A25 - 00000A28 (0x4 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SHR_REW             00000A25 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000A29 - 00000A2B (0x3 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SHR                 00000A29        NLDE_ParseFrameControl (nwk_util)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
                                                   writeBuf (OSAL_Nv)
                                                   writeWord (OSAL_Nv)
                                                   xferBuf (OSAL_Nv)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000A2C - 00000A37 (0xc bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   ?US_SHR
                                                   ?US_SHR_REW

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?S_SHL

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000A38 - 00000A3A (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?S_SHL                  00000A38        MAC_MlmeGetReq (mac_pib)
                                                   MAC_MlmeSetReq (mac_pib)
                                                   NLDE_BuildFrameControl (nwk_util)
                                                   Print8 (hal_lcd)
                                                   RTG_BcastAdd (rtg)
                                                   RTG_BcastTimerHandler (rtg)
                                                   RTG_CheckRtDiscEntry (rtg)
                                                   RTG_DataReq (rtg)
                                                   RTG_GetPrevHop (rtg)
                                                   RTG_GetRtDiscEntry (rtg)
                                                   RTG_Init (rtg)
                                                   RTG_UpdateRtDiscEntry (rtg)
                                                   halAssertHazardLights (hal_assert)
                                                   macBuildBeaconNotifyInd (mac_mgmt)
                                                   macBuildHeader (mac_mgmt)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
                                                   nwk_start_coord (nwk)
                                                   txCsmaPrep (mac_tx)
                                                   writeWord (OSAL_Nv)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000A3B - 00000A3D (0x3 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?S_SHL_REW              00000A3B 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000A3E - 00000A4A (0xd bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   ?S_SHL
                                                   ?S_SHL_REW

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?ALLOC_XSTACK8

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000A4B - 00000A59 (0xf bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ALLOC_XSTACK8          00000A4B        AF_DataRequest (AF)
                                                   APSDE_DataIndication (APSMEDE_CB)
                                                   APSDE_DataReq (APSMEDE)
                                                   APSDE_FrameAlloc (APSMEDE)
                                                   APSME_LookupNwkAddr (APSMEDE)
                                                   AddrMgrEntryUpdate (AddrMgr)
                                                   AddrMgrNwkAddrLookup (AddrMgr)
                                                   AssocAddNew (AssocList)
                                                   AssocGetWithAddress (AssocList)
                                                   AssocRemove (AssocList)
                                                   HalAdcInit (hal_adc)
                                                   HalAdcRead (hal_adc)
                                                   HalLedBlink (hal_led)
                                                   HalLedUpdate (hal_led)
                                                   HalUARTOpen (hal_uart)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MTProcessAppMsg (MTEL)
                                                   MT_IndReset (MTEL)
                                                   MT_ProcessDebugMsg (MTEL)
                                                   MT_ProcessGetDeviceInfo (MTEL)
                                                   MT_ProcessGetNvInfo (MTEL)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   MT_SendErrorNotification (MTEL)
                                                   NLDE_DataIndSend (nwk_util)
                                                   NLDE_DataIndication (NLMEDE_CB)
                                                   NLDE_DataReqSend (nwk_util)
                                                   NLDE_SendMsg (nwk_util)
                                                   NLME_CmdCnf (nwk_util)
                                                   NLME_GetCoordShortAddr (nwk_util)
                                                   NLME_GetProtocolVersion (nwk_util)
                                                   NLME_JoinRequest (NLMEDE)
                                                   NLME_LeaveCmdCnf (nwk_util)
                                                   NLME_LeaveCmdProcess (nwk_util)
                                                   NLME_LeaveCmdSend (nwk_util)
                                                   NLME_LeaveRsp (NLMEDE)
                                                   NLME_NetworkDiscoveryRequest (NLMEDE)
                                                   NLME_OrphanJoinRequest (NLMEDE)
                                                   NLME_RTG_BcastAdd (nwk_util)
                                                   NLME_ReJoinRequest (NLMEDE)
                                                   NLME_RejoinRspSend (nwk_util)
                                                   NLME_RouteDiscoveryRequest (rtg)
                                                   NLME_SetAssocFlags (nwk_util)
                                                   Print (hal_lcd)
                                                   RTG_BcastAdd (rtg)
                                                   RTG_DataReq (rtg)
                                                   RTG_FillCSkipTable (rtg)
                                                   RTG_GetAncestors (rtg)
                                                   RTG_GetRoutingAddress (rtg)
                                                   RTG_GetTreeRoute (rtg)
                                                   RTG_ProcessRreq (rtg)
                                                   RTG_SendRErr (rtg)
                                                   RTG_SendRrep (rtg)
                                                   SPIMgr_Init (SPIMgr)
                                                   SPIMgr_ProcessZToolData (SPIMgr)
                                                   SampleApp_SendFlashMessage (SampleApp)
                                                   SendData (SampleApp)
                                                   ZDAppSetupProtoVersion (ZDApp)
                                                   ZDApp_Init (ZDApp)
                                                   ZDApp_ProcessNetworkJoin (ZDApp)
                                                   ZDApp_SendNewDstAddr (ZDApp)
                                                   ZDOInitDevice (ZDApp)
                                                   ZDO_LeaveInd (ZDApp)
                                                   ZDO_NetworkDiscoveryConfirmCB (ZDApp)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_ProcessSimpleDescReq (ZDObject)
                                                   ZDO_StartDevice (ZDObject)
                                                   ZDP_EPRsp (ZDProfile)
                                                   ZDP_GenericRsp (ZDProfile)
                                                   ZDP_IncomingData (ZDProfile)
                                                   ZDP_NodeDescMsg (ZDProfile)
                                                   ZDP_PowerDescMsg (ZDProfile)
                                                   ZDP_SimpleDescMsg (ZDProfile)
                                                   ZMacReset (zmac)
                                                   ZMacStartReq (zmac)
                                                   afBuildMSGIncoming (AF)
                                                   afIncomingData (AF)
                                                   apsGenerateAck (aps_util)
                                                   apsProcessAck (aps_util)
                                                   aps_GroupsWriteNV (aps_groups)
                                                   calcChkF (OSAL_Nv)
                                                   compactPage (OSAL_Nv)
                                                   fillAndSend (ZDProfile)
                                                   halAssertHazardLights (hal_assert)
                                                   initNV (OSAL_Nv)
                                                   initPage (OSAL_Nv)
                                                   macApiOrphanRsp (mac_coord)
                                                   macApiStartReq (mac_coord)
                                                   macAssocDataReq (mac_device)
                                                   macAssociateCnf (mac_device)
                                                   macBuildAssociateRsp (mac_coord)
                                                   macBuildBeacon (mac_coord)
                                                   macBuildHeader (mac_mgmt)
                                                   macCbackForEvent (mac_main)
                                                   macCommStatusInd (mac_mgmt)
                                                   macConflictSyncLossInd (mac_mgmt)
                                                   macDisassocComplete (mac_mgmt)
                                                   macEventLoop (mac_main)
                                                   macIndirectExpire (mac_coord)
                                                   macMcuOverflowCapture (mac_mcu)
                                                   macMcuOverflowCount (mac_mcu)
                                                   macMcuOverflowSetCompare (mac_mcu)
                                                   macMcuOverflowSetCount (mac_mcu)
                                                   macPollCnf (mac_device)
                                                   macRxAssocRsp (mac_device)
                                                   macRxAssociateReq (mac_coord)
                                                   macRxBeacon (mac_mgmt)
                                                   macRxCoordRealign (mac_device)
                                                   macRxDataReq (mac_coord)
                                                   macRxDisassoc (mac_mgmt)
                                                   macRxOrphan (mac_coord)
                                                   macScanFailedInProgress (mac_scan)
                                                   macScanNextChan (mac_scan)
                                                   macScanRxBeacon (mac_scan)
                                                   macScanRxCoordRealign (mac_scan)
                                                   macSendDataMsg (mac_main)
                                                   macSendMsg (mac_main)
                                                   macStartFrameResponseTimer (mac_device)
                                                   nwk_ScanJoiningOrphan (nwk)
                                                   nwk_associate_cnf_processing (nwk)
                                                   nwk_associate_ind_processing (nwk)
                                                   nwk_beacon_notify_ind_processing (nwk)
                                                   nwk_data_cnf_processing (nwk)
                                                   nwk_data_ind_processing (nwk)
                                                   nwk_getNetworkDesc (nwk)
                                                   nwk_orphan_ind_processing (nwk)
                                                   nwk_start_coord (nwk)
                                                   osalTaskAdd (OSAL_Tasks)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_nv_item_len (OSAL_Nv)
                                                   osal_nv_read (OSAL_Nv)
                                                   osal_nv_write (OSAL_Nv)
                                                   pollDMA (hal_uart)
                                                   readHdr (OSAL_Nv)
                                                   rxAddrIsr (mac_rx)
                                                   rxDiscardIsr (mac_rx)
                                                   rxStartIsr (mac_rx)
                                                   setItem (OSAL_Nv)
                                                   setPageUse (OSAL_Nv)
                                                   writeBuf (OSAL_Nv)
                                                   writeItem (OSAL_Nv)
                                                   writeWordH (OSAL_Nv)
                                                   xferBuf (OSAL_Nv)
                                                   zdpProcessAddrReq (ZDProfile)
                                                   zgReadStartupOptions (ZGlobals)
                                                   zgWriteStartupOptions (ZGlobals)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DEALLOC_XSTACK8

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000A5A - 00000A6C (0x13 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DEALLOC_XSTACK8        00000A5A        ?Subroutine1 (SampleApp)
                                                   ?Subroutine1 (ZGlobals)
                                                   ?Subroutine11 (hal_led)
                                                   ?Subroutine17 (MTEL)
                                                   ?Subroutine18 (MTEL)
                                                   ?Subroutine19 (MTEL)
                                                   ?Subroutine25 (ZDApp)
                                                   ?Subroutine26 (ZDApp)
                                                   ?Subroutine27 (ZDApp)
                                                   ?Subroutine33 (AF)
                                                   ?Subroutine44 (ZDProfile)
                                                   ?Subroutine45 (ZDProfile)
                                                   ?Subroutine49 (ZDProfile)
                                                   ?Subroutine5 (mac_mcu)
                                                   ?Subroutine6 (zmac)
                                                   ?Subroutine66 (OSAL_Nv)
                                                   ?Subroutine75 (OSAL_Nv)
                                                   AF_DataRequest (AF)
                                                   APSDE_DataIndication (APSMEDE_CB)
                                                   APSDE_DataReq (APSMEDE)
                                                   APS_CmdInd (APS)
                                                   APS_event_loop (APS)
                                                   AddrMgrEntryUpdate (AddrMgr)
                                                   AssocAddNew (AssocList)
                                                   HalAdcInit (hal_adc)
                                                   HalAdcRead (hal_adc)
                                                   HalUARTOpen (hal_uart)
                                                   InitBoard (OnBoard)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MAC_MlmeGetReq (mac_pib)
                                                   MAC_MlmeSetReq (mac_pib)
                                                   MTProcessAppMsg (MTEL)
                                                   MT_BuildAndSendZToolResponse (MTEL)
                                                   MT_BuildSPIMsg (MTEL)
                                                   MT_ProcessDebugMsg (MTEL)
                                                   MT_ProcessDebugStr (MTEL)
                                                   MT_ProcessGetDeviceInfo (MTEL)
                                                   MT_ProcessGetNV (MTEL)
                                                   MT_ProcessGetNvInfo (MTEL)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   NLDE_BuildMsg (nwk_util)
                                                   NLDE_DataIndSend (nwk_util)
                                                   NLDE_DataIndication (NLMEDE_CB)
                                                   NLDE_DataReqSend (nwk_util)
                                                   NLDE_SendMsg (nwk_util)
                                                   NLME_GetRequest (NLMEDE)
                                                   NLME_JoinRequest (NLMEDE)
                                                   NLME_RejoinRspSend (nwk_util)
                                                   NLME_RouteDiscoveryRequest (rtg)
                                                   NwkCommandPktProcessing (nwk)
                                                   Print (hal_lcd)
                                                   RTG_GetRoutingAddress (rtg)
                                                   RTG_ProcessRrep (rtg)
                                                   RTG_ProcessRreq (rtg)
                                                   RTG_SendRErr (rtg)
                                                   SPIMgr_Init (SPIMgr)
                                                   SPIMgr_ProcessZToolData (SPIMgr)
                                                   SampleApp_Init (SampleApp)
                                                   SampleApp_MessageMSGCB (SampleApp)
                                                   SampleApp_ProcessEvent (SampleApp)
                                                   SampleApp_SendFlashMessage (SampleApp)
                                                   Segment part 110 (nwk)
                                                   Segment part 113 (nwk)
                                                   Segment part 19 (AssocList)
                                                   Segment part 194 (APSMEDE)
                                                   Segment part 212 (APSMEDE)
                                                   Segment part 23 (mac_device)
                                                   Segment part 24 (AssocList)
                                                   Segment part 26 (mac_main)
                                                   Segment part 31 (APSMEDE)
                                                   Segment part 32 (AddrMgr)
                                                   Segment part 33 (mac_mgmt)
                                                   Segment part 38 (NLMEDE)
                                                   Segment part 42 (nwk_util)
                                                   Segment part 46 (mac_device)
                                                   Segment part 47 (mac_coord)
                                                   Segment part 55 (APSMEDE)
                                                   Segment part 56 (mac_mgmt)
                                                   Segment part 57 (NLMEDE)
                                                   Segment part 67 (rtg)
                                                   Segment part 77 (nwk_util)
                                                   Segment part 78 (rtg)
                                                   Segment part 79 (nwk_util)
                                                   Segment part 89 (nwk_util)
                                                   Segment part 9 (AddrMgr)
                                                   SendData (SampleApp)
                                                   ZDApp_InMsgCB (ZDApp)
                                                   ZDApp_LeaveCtrlInit (ZDApp)
                                                   ZDApp_LeaveCtrlStartup (ZDApp)
                                                   ZDApp_MatchDescRspCB (ZDApp)
                                                   ZDApp_ProcessOSALMsg (ZDApp)
                                                   ZDApp_SendMsg (ZDApp)
                                                   ZDApp_SendNewDstAddr (ZDApp)
                                                   ZDO_NetworkDiscoveryConfirmCB (ZDApp)
                                                   ZDO_ProcessActiveEPReq (ZDObject)
                                                   ZDO_ProcessEPListRsp (ZDObject)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_ProcessNodeDescReq (ZDObject)
                                                   ZDO_ProcessPowerDescReq (ZDObject)
                                                   ZDO_ProcessSimpleDescReq (ZDObject)
                                                   ZDO_StartDevice (ZDObject)
                                                   ZDP_EPRsp (ZDProfile)
                                                   ZDP_IncomingData (ZDProfile)
                                                   ZDP_NodeDescMsg (ZDProfile)
                                                   ZDP_SimpleDescMsg (ZDProfile)
                                                   ZMacDataReq (zmac)
                                                   afBuildMSGIncoming (AF)
                                                   afIncomingData (AF)
                                                   afRegister (AF)
                                                   apsGenerateAck (aps_util)
                                                   apsProcessAck (aps_util)
                                                   aps_AddGroup (aps_groups)
                                                   aps_GroupsWriteNV (aps_groups)
                                                   compactPage (OSAL_Nv)
                                                   fillAndSend (ZDProfile)
                                                   halAssertHazardLights (hal_assert)
                                                   initItem (OSAL_Nv)
                                                   initItem2 (OSAL_Nv)
                                                   initPage (OSAL_Nv)
                                                   macApiAssociateReq (mac_device)
                                                   macApiOrphanRsp (mac_coord)
                                                   macApiPurgeReq (mac_coord)
                                                   macApiStartReq (mac_coord)
                                                   macAssocDataReq (mac_device)
                                                   macBackoffTimerRolloverCallback (mac_timer)
                                                   macBuildAssociateRsp (mac_coord)
                                                   macBuildBeacon (mac_coord)
                                                   macBuildCommonReq (mac_mgmt)
                                                   macBuildDataFrame (mac_data)
                                                   macBuildDisassociateReq (mac_mgmt)
                                                   macBuildHeader (mac_mgmt)
                                                   macBuildRealign (mac_coord)
                                                   macDataTxSend (mac_data)
                                                   macIndirectExpire (mac_coord)
                                                   macIndirectSend (mac_coord)
                                                   macIndirectTxFrame (mac_coord)
                                                   macRxBeacon (mac_mgmt)
                                                   macRxDataReq (mac_coord)
                                                   macRxDisassoc (mac_mgmt)
                                                   macScanFailedInProgress (mac_scan)
                                                   macScanNextChan (mac_scan)
                                                   macScanRxBeacon (mac_scan)
                                                   macScanRxCoordRealign (mac_scan)
                                                   macScanStartTimer (mac_scan)
                                                   macSendDataMsg (mac_main)
                                                   macSendMsg (mac_main)
                                                   macStartBegin (mac_coord)
                                                   macStartFrameResponseTimer (mac_device)
                                                   macStartResponseTimer (mac_device)
                                                   nwk_BeaconFromNative (nwk)
                                                   nwk_BeaconToNative (nwk)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
                                                   nwk_ScanJoiningOrphan (nwk)
                                                   nwk_associate_cnf_processing (nwk)
                                                   nwk_associate_ind_processing (nwk)
                                                   nwk_beacon_notify_ind_processing (nwk)
                                                   nwk_data_cnf_processing (nwk)
                                                   nwk_data_ind_processing (nwk)
                                                   nwk_event_loop (nwk)
                                                   nwk_globals_init (nwk_globals)
                                                   osalAddTasks (OSAL_SampleApp)
                                                   osalTaskAdd (OSAL_Tasks)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_cpyExtAddr (OSAL)
                                                   osal_memset (OSAL)
                                                   osal_msg_receive (OSAL)
                                                   osal_nv_item_init (OSAL_Nv)
                                                   osal_nv_write (OSAL_Nv)
                                                   pollDMA (hal_uart)
                                                   rxAddrIsr (mac_rx)
                                                   rxDiscardIsr (mac_rx)
                                                   rxStartIsr (mac_rx)
                                                   sAddrExtCpy (saddr)
                                                   setItem (OSAL_Nv)
                                                   setPageUse (OSAL_Nv)
                                                   writeItem (OSAL_Nv)
                                                   writeWordH (OSAL_Nv)
                                                   zdpProcessAddrReq (ZDProfile)
                                                   zgInit (ZGlobals)
                                                   zgReadStartupOptions (ZGlobals)
                                                   zgWriteStartupOptions (ZGlobals)
                                                   zmain_ext_addr (ZMain)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?ADD_XSTACK_DISP8

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000A6D - 00000A80 (0x14 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ADD_XSTACK_DISP0_8     00000A6D        ?PUSH_XSTACK_I (?PUSH_XSTACK_I)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?XSTACK_DISP8

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000A81 - 00000A8A (0xa bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSTACK_DISP0_8         00000A81        ?Subroutine49 (ZDProfile)
                                                   ?Subroutine5 (mac_mcu)
                                                   AF_DataRequest (AF)
                                                   APSDE_DataIndication (APSMEDE_CB)
                                                   APSDE_DataReq (APSMEDE)
                                                   APSDE_FrameAlloc (APSMEDE)
                                                   AddrMgrEntryUpdate (AddrMgr)
                                                   AddrMgrEntryUpdateEx (AddrMgr)
                                                   AddrMgrNwkAddrLookup (AddrMgr)
                                                   AssocAddNew (AssocList)
                                                   AssocGetWithAddress (AssocList)
                                                   AssocRemove (AssocList)
                                                   HalKeyConfig (hal_key)
                                                   HalLedBlink (hal_led)
                                                   HalLedUpdate (hal_led)
                                                   HalTimerConfig (hal_timer)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MT_BuildAndSendZToolResponse (MTEL)
                                                   MT_BuildSPIMsg (MTEL)
                                                   MT_ProcessDebugMsg (MTEL)
                                                   MT_ProcessGetNvInfo (MTEL)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   NLDE_DataIndSend (nwk_util)
                                                   NLDE_DataIndication (NLMEDE_CB)
                                                   NLDE_DataReqSend (nwk_util)
                                                   NLDE_SendMsg (nwk_util)
                                                   NLME_CmdCnf (nwk_util)
                                                   NLME_JoinRequest (NLMEDE)
                                                   NLME_LeaveCmdCnf (nwk_util)
                                                   NLME_LeaveCmdProcess (nwk_util)
                                                   NLME_LeaveCmdSend (nwk_util)
                                                   NLME_LeaveRsp (NLMEDE)
                                                   NLME_NetworkDiscoveryRequest (NLMEDE)
                                                   NLME_OrphanJoinRequest (NLMEDE)
                                                   NLME_RTG_BcastAdd (nwk_util)
                                                   NLME_ReJoinRequest (NLMEDE)
                                                   NLME_RejoinRspSend (nwk_util)
                                                   NLME_RouteDiscoveryRequest (rtg)
                                                   NLME_SetAssocFlags (nwk_util)
                                                   NwkCommandPktProcessing (nwk)
                                                   Print (hal_lcd)
                                                   Print8 (hal_lcd)
                                                   RTG_AddRtgEntry (rtg)
                                                   RTG_BcastAdd (rtg)
                                                   RTG_FillCSkipTable (rtg)
                                                   RTG_GetAncestors (rtg)
                                                   RTG_ProcessRreq (rtg)
                                                   RTG_SendRErr (rtg)
                                                   RTG_SendRrep (rtg)
                                                   RTG_UpdateNeighborEntry (nwk_util)
                                                   RTG_UpdateRtDiscEntry (rtg)
                                                   SPIMgr_Init (SPIMgr)
                                                   SPIMgr_ProcessZToolData (SPIMgr)
                                                   SampleApp_SendFlashMessage (SampleApp)
                                                   Segment part 194 (APSMEDE)
                                                   SendData (SampleApp)
                                                   ZDApp_InMsgCB (ZDApp)
                                                   ZDApp_MatchDescRspCB (ZDApp)
                                                   ZDApp_SendNewDstAddr (ZDApp)
                                                   ZDO_AnyClusterMatches (ZDObject)
                                                   ZDO_LeaveInd (ZDApp)
                                                   ZDO_NetworkDiscoveryConfirmCB (ZDApp)
                                                   ZDO_ProcessActiveEPReq (ZDObject)
                                                   ZDO_ProcessEPListRsp (ZDObject)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_ProcessNodeDescReq (ZDObject)
                                                   ZDO_ProcessPowerDescReq (ZDObject)
                                                   ZDO_ProcessSimpleDescReq (ZDObject)
                                                   ZDO_StartDevice (ZDObject)
                                                   ZDP_EPRsp (ZDProfile)
                                                   ZDP_GenericRsp (ZDProfile)
                                                   ZDP_IncomingData (ZDProfile)
                                                   ZDP_NodeDescMsg (ZDProfile)
                                                   ZDP_PowerDescMsg (ZDProfile)
                                                   ZDP_SimpleDescMsg (ZDProfile)
                                                   afBuildMSGIncoming (AF)
                                                   afIncomingData (AF)
                                                   afRegisterExtended (AF)
                                                   apsGenerateAck (aps_util)
                                                   apsProcessAck (aps_util)
                                                   aps_GroupsWriteNV (aps_groups)
                                                   compactPage (OSAL_Nv)
                                                   fillAndSend (ZDProfile)
                                                   halAssertHazardLights (hal_assert)
                                                   initItem (OSAL_Nv)
                                                   initItem2 (OSAL_Nv)
                                                   initNV (OSAL_Nv)
                                                   initPage (OSAL_Nv)
                                                   macApiOrphanRsp (mac_coord)
                                                   macApiStartReq (mac_coord)
                                                   macAssocDataReq (mac_device)
                                                   macAssociateCnf (mac_device)
                                                   macBuildAssociateRsp (mac_coord)
                                                   macBuildBeacon (mac_coord)
                                                   macBuildCommonReq (mac_mgmt)
                                                   macBuildHeader (mac_mgmt)
                                                   macBuildRealign (mac_coord)
                                                   macCbackForEvent (mac_main)
                                                   macCommStatusInd (mac_mgmt)
                                                   macConflictSyncLossInd (mac_mgmt)
                                                   macDestSAddrCmp (mac_mgmt)
                                                   macDisassocComplete (mac_mgmt)
                                                   macEventLoop (mac_main)
                                                   macMcuOverflowCapture (mac_mcu)
                                                   macMcuOverflowCount (mac_mcu)
                                                   macMcuOverflowSetCompare (mac_mcu)
                                                   macMcuOverflowSetCount (mac_mcu)
                                                   macPollCnf (mac_device)
                                                   macRxAssociateReq (mac_coord)
                                                   macRxBeacon (mac_mgmt)
                                                   macRxCoordRealign (mac_device)
                                                   macRxDataReq (mac_coord)
                                                   macRxDisassoc (mac_mgmt)
                                                   macRxOrphan (mac_coord)
                                                   macScanFailedInProgress (mac_scan)
                                                   macScanNextChan (mac_scan)
                                                   macScanRxBeacon (mac_scan)
                                                   macTimer (mac_timer)
                                                   macTimerRecalcUnaligned (mac_timer)
                                                   memcpy (?memcpy)
                                                   memset (?memset)
                                                   nwkDB_Add (nwk_bufs)
                                                   nwk_ScanJoiningOrphan (nwk)
                                                   nwk_associate_cnf_processing (nwk)
                                                   nwk_associate_ind_processing (nwk)
                                                   nwk_beacon_notify_ind_processing (nwk)
                                                   nwk_data_cnf_processing (nwk)
                                                   nwk_data_ind_processing (nwk)
                                                   nwk_orphan_ind_processing (nwk)
                                                   nwk_start_coord (nwk)
                                                   osalTaskAdd (OSAL_Tasks)
                                                   osal_memcpy (OSAL)
                                                   osal_msg_extract (OSAL)
                                                   osal_nv_item_init (OSAL_Nv)
                                                   osal_nv_item_len (OSAL_Nv)
                                                   osal_nv_read (OSAL_Nv)
                                                   osal_nv_write (OSAL_Nv)
                                                   rxAddrIsr (mac_rx)
                                                   rxStartIsr (mac_rx)
                                                   setItem (OSAL_Nv)
                                                   setPageUse (OSAL_Nv)
                                                   writeBuf (OSAL_Nv)
                                                   writeItem (OSAL_Nv)
                                                   writeWordH (OSAL_Nv)
                                                   xferBuf (OSAL_Nv)
                                                   zdpProcessAddrReq (ZDProfile)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?POP_BIT_ISP

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000A8B - 00000A9D (0x13 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?POP_BIT_ISP            00000A8B        macMcuRfIsr (mac_mcu)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?BANKED_ENTER_XDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000A9E - 00000B02 (0x65 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?BANKED_ENTER_XDATA     00000A9E        AF_DataRequest (AF)
                                                   APSDE_DataIndication (APSMEDE_CB)
                                                   APSDE_DataReq (APSMEDE)
                                                   APSDE_FrameAlloc (APSMEDE)
                                                   APSDE_FrameBlkInit (APSMEDE)
                                                   APSDE_FrameHdrInit (APSMEDE)
                                                   APSDE_FrameHdrSet (APSMEDE)
                                                   APSDE_FrameSend (APSMEDE)
                                                   APSDE_ParseMsg (aps_util)
                                                   APSME_CmdPkt (APSMEDE)
                                                   APSME_FrameSecInit (APSMEDE)
                                                   APSME_FrameSecurityRemove (APSMEDE)
                                                   APSME_LookupNwkAddr (APSMEDE)
                                                   APS_CmdInd (APS)
                                                   APS_event_loop (APS)
                                                   AddrMgrEntryAdd (AddrMgr)
                                                   AddrMgrEntryAddRef (AddrMgr)
                                                   AddrMgrEntryGet (AddrMgr)
                                                   AddrMgrEntryLookupExt (AddrMgr)
                                                   AddrMgrEntryLookupNwk (AddrMgr)
                                                   AddrMgrEntryRelease (AddrMgr)
                                                   AddrMgrEntrySet (AddrMgr)
                                                   AddrMgrEntryUpdate (AddrMgr)
                                                   AddrMgrEntryUpdateEx (AddrMgr)
                                                   AddrMgrExtAddrValid (AddrMgr)
                                                   AddrMgrInit (AddrMgr)
                                                   AddrMgrNwkAddrLookup (AddrMgr)
                                                   AddrMgrWriteNVRequest (ZDApp)
                                                   AssocAddNew (AssocList)
                                                   AssocCount (AssocList)
                                                   AssocGetNextNode (AssocList)
                                                   AssocGetWithAddress (AssocList)
                                                   AssocIsChild (AssocList)
                                                   AssocMakeList (AssocList)
                                                   AssocRemove (AssocList)
                                                   HalAdcRead (hal_adc)
                                                   HalKeyConfig (hal_key)
                                                   HalKeyPoll (hal_key)
                                                   HalLedBlink (hal_led)
                                                   HalLedSet (hal_led)
                                                   HalLedUpdate (hal_led)
                                                   HalTimerConfig (hal_timer)
                                                   HalTimerStart (hal_timer)
                                                   HalUARTOpen (hal_uart)
                                                   HalUARTPoll (hal_uart)
                                                   HalUARTRead (hal_uart)
                                                   HalUARTWrite (hal_uart)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   InitBoard (OnBoard)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MAC_McpsDataAlloc (mac_data)
                                                   MAC_MlmeGetReq (mac_pib)
                                                   MAC_MlmeResetReq (mac_mgmt)
                                                   MAC_MlmeSetReq (mac_pib)
                                                   MTProcessAppMsg (MTEL)
                                                   MTProcessAppRspMsg (MTEL)
                                                   MT_BuildAndSendZToolResponse (MTEL)
                                                   MT_BuildSPIMsg (MTEL)
                                                   MT_IndReset (MTEL)
                                                   MT_ProcessCommand (MTEL)
                                                   MT_ProcessDebugMsg (MTEL)
                                                   MT_ProcessDebugStr (MTEL)
                                                   MT_ProcessEvent (MTEL)
                                                   MT_ProcessGetDeviceInfo (MTEL)
                                                   MT_ProcessGetNV (MTEL)
                                                   MT_ProcessGetNvInfo (MTEL)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   MT_ProcessSetNV (MTEL)
                                                   MT_Reset (MTEL)
                                                   MT_ReverseBytes (MTEL)
                                                   MT_SendErrorNotification (MTEL)
                                                   NLDE_BuildFrameControl (nwk_util)
                                                   NLDE_BuildMsg (nwk_util)
                                                   NLDE_DataCnf (NLMEDE_CB)
                                                   NLDE_DataIndication (NLMEDE_CB)
                                                   NLDE_DataReq (NLMEDE)
                                                   NLDE_DataReqAlloc (NLMEDE)
                                                   NLDE_DataReqSend (nwk_util)
                                                   NLDE_FrameDataLoad (APSMEDE)
                                                   NLDE_GetHandle (nwk_util)
                                                   NLDE_ParseFrameControl (nwk_util)
                                                   NLDE_ParseMsg (nwk_util)
                                                   NLDE_ParseMsg2 (nwk_util)
                                                   NLDE_SendMsg (nwk_util)
                                                   NLME_CmdCnf (nwk_util)
                                                   NLME_CmdDataReqAlloc (nwk_util)
                                                   NLME_GetNeighborIndex (nwk_util)
                                                   NLME_GetNeighborLinkInfo (nwk_util)
                                                   NLME_GetRequest (NLMEDE)
                                                   NLME_IsAddressBroadcast (nwk_util)
                                                   NLME_JoinRequest (NLMEDE)
                                                   NLME_LeaveCmdCnf (nwk_util)
                                                   NLME_LeaveCmdProcess (nwk_util)
                                                   NLME_LeaveCmdSend (nwk_util)
                                                   NLME_LeaveRsp (NLMEDE)
                                                   NLME_NetworkDiscoveryRequest (NLMEDE)
                                                   NLME_OrphanJoinRequest (NLMEDE)
                                                   NLME_RTG_BcastAdd (nwk_util)
                                                   NLME_ReJoinRequest (NLMEDE)
                                                   NLME_RejoinReqCmdProcess (nwk_util)
                                                   NLME_RejoinRspCmdProcess (nwk_util)
                                                   NLME_RejoinRspSend (nwk_util)
                                                   NLME_RemoveChild (nwk_util)
                                                   NLME_RouteDiscoveryIndication (NLMEDE_CB)
                                                   NLME_RouteDiscoveryRequest (rtg)
                                                   NLME_SetAssocFlags (nwk_util)
                                                   NLME_SetBroadcastFilter (nwk_util)
                                                   NLME_SetRequest (NLMEDE)
                                                   NwkCommandPktProcessing (nwk)
                                                   OnBoard_SendKeys (OnBoard)
                                                   Onboard_rand (OnBoard)
                                                   Print (hal_lcd)
                                                   Print8 (hal_lcd)
                                                   RTG_AddRtgEntry (rtg)
                                                   RTG_AllocNewAddress (rtg)
                                                   RTG_BcastAdd (rtg)
                                                   RTG_BcastChk (rtg)
                                                   RTG_BcastDel (rtg)
                                                   RTG_BcastHold (rtg)
                                                   RTG_BcastTimeout (rtg)
                                                   RTG_BcastTimerHandler (rtg)
                                                   RTG_CalcAddress (rtg)
                                                   RTG_CheckRtDiscEntry (rtg)
                                                   RTG_CheckRtStatus (rtg)
                                                   RTG_DataReq (rtg)
                                                   RTG_DeAllocAddress (rtg)
                                                   RTG_FillCSkipTable (rtg)
                                                   RTG_GetAncestors (rtg)
                                                   RTG_GetLinkCost (rtg)
                                                   RTG_GetNextHop (rtg)
                                                   RTG_GetNextTreeHop (rtg)
                                                   RTG_GetPrevHop (rtg)
                                                   RTG_GetRoutingAddress (rtg)
                                                   RTG_GetRtDiscEntry (rtg)
                                                   RTG_GetRtgEntry (rtg)
                                                   RTG_GetTreeRoute (rtg)
                                                   RTG_IndirectTimeout (rtg)
                                                   RTG_Init (rtg)
                                                   RTG_MultiplyCskip (rtg)
                                                   RTG_ProcessRErr (rtg)
                                                   RTG_ProcessRrep (rtg)
                                                   RTG_ProcessRreq (rtg)
                                                   RTG_ProcessRtDiscBits (rtg)
                                                   RTG_RouteMaintanence (rtg)
                                                   RTG_SendRErr (rtg)
                                                   RTG_SendRrep (rtg)
                                                   RTG_TimerEvent (rtg)
                                                   RTG_UpdateNeighborEntry (nwk_util)
                                                   RTG_UpdateRtDiscEntry (rtg)
                                                   SPIMgr_CalcFCS (SPIMgr)
                                                   SPIMgr_ProcessZToolData (SPIMgr)
                                                   SSP_GetMicLen (ssp)
                                                   SSP_NwkSecurity (ssp)
                                                   SampleApp_HandleKeys (SampleApp)
                                                   SampleApp_Init (SampleApp)
                                                   SampleApp_MessageMSGCB (SampleApp)
                                                   SampleApp_ProcessEvent (SampleApp)
                                                   SampleApp_SendFlashMessage (SampleApp)
                                                   SampleApp_SendPeriodicMessage (SampleApp)
                                                   SendData (SampleApp)
                                                   SetContrast (hal_lcd)
                                                   SetRamAddr (hal_lcd)
                                                   UartTX_Send_String (wxl_uart)
                                                   Uart_Baud_rate (wxl_uart)
                                                   WriteLCD (hal_lcd)
                                                   ZDApp_InMsgCB (ZDApp)
                                                   ZDApp_LeaveCtrlInit (ZDApp)
                                                   ZDApp_LeaveCtrlSet (ZDApp)
                                                   ZDApp_LeaveCtrlStartup (ZDApp)
                                                   ZDApp_MatchDescRspCB (ZDApp)
                                                   ZDApp_NodeProfileSync (ZDApp)
                                                   ZDApp_ProcessNetworkJoin (ZDApp)
                                                   ZDApp_ProcessOSALMsg (ZDApp)
                                                   ZDApp_SendMsg (ZDApp)
                                                   ZDApp_SendNewDstAddr (ZDApp)
                                                   ZDApp_event_loop (ZDApp)
                                                   ZDOInitDevice (ZDApp)
                                                   ZDO_AnyClusterMatches (ZDObject)
                                                   ZDO_CreateAlignedUINT16List (ZDObject)
                                                   ZDO_LeaveCnf (ZDApp)
                                                   ZDO_LeaveInd (ZDApp)
                                                   ZDO_NetworkDiscoveryConfirmCB (ZDApp)
                                                   ZDO_ProcessActiveEPReq (ZDObject)
                                                   ZDO_ProcessEPListRsp (ZDObject)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_ProcessNodeDescReq (ZDObject)
                                                   ZDO_ProcessPowerDescReq (ZDObject)
                                                   ZDO_ProcessSimpleDescReq (ZDObject)
                                                   ZDO_StartDevice (ZDObject)
                                                   ZDO_UpdateNwkStatus (ZDObject)
                                                   ZDP_EPRsp (ZDProfile)
                                                   ZDP_GenericRsp (ZDProfile)
                                                   ZDP_IncomingData (ZDProfile)
                                                   ZDP_NodeDescMsg (ZDProfile)
                                                   ZDP_PowerDescMsg (ZDProfile)
                                                   ZDP_SimpleDescMsg (ZDProfile)
                                                   afBuildMSGIncoming (AF)
                                                   afCopyAddress (AF)
                                                   afDataConfirm (AF)
                                                   afDataReqMTU (AF)
                                                   afFindEndPointDesc (AF)
                                                   afFindSimpleDesc (AF)
                                                   afGetReflector (AF)
                                                   afIncomingData (AF)
                                                   afRegister (AF)
                                                   afRegisterExtended (AF)
                                                   apsAckFindMatchCB (aps_util)
                                                   apsGenerateAck (aps_util)
                                                   apsProcessAck (aps_util)
                                                   aps_AddGroup (aps_groups)
                                                   aps_FindGroup (aps_groups)
                                                   aps_FindGroupForEndpoint (aps_groups)
                                                   aps_GroupsWriteNV (aps_groups)
                                                   aps_RemoveGroup (aps_groups)
                                                   calcChkF (OSAL_Nv)
                                                   compactPage (OSAL_Nv)
                                                   fillAndSend (ZDProfile)
                                                   findItem (OSAL_Nv)
                                                   halAssertHazardLights (hal_assert)
                                                   halTimerSendCallBack (hal_timer)
                                                   halTimerSetCount (hal_timer)
                                                   initItem (OSAL_Nv)
                                                   initItem2 (OSAL_Nv)
                                                   initNV (OSAL_Nv)
                                                   initPage (OSAL_Nv)
                                                   macAllocTxBuffer (mac_data)
                                                   macApiAssociateReq (mac_device)
                                                   macApiDisassociateReq (mac_mgmt)
                                                   macApiOrphanRsp (mac_coord)
                                                   macApiPending (mac_mgmt)
                                                   macApiPollReq (mac_device)
                                                   macApiPurgeReq (mac_coord)
                                                   macApiScanReq (mac_scan)
                                                   macApiStartReq (mac_coord)
                                                   macAssocDataReqComplete (mac_device)
                                                   macAssocDataRxInd (mac_device)
                                                   macAssocFailed (mac_device)
                                                   macAssocFrameResponseTimeout (mac_device)
                                                   macAssocRxDisassoc (mac_device)
                                                   macBackoffTimerCancelTrigger (mac_backoff_timer)
                                                   macBackoffTimerCapture (mac_backoff_timer)
                                                   macBackoffTimerCompareIsr (mac_backoff_timer)
                                                   macBackoffTimerCount (mac_backoff_timer)
                                                   macBackoffTimerInit (mac_backoff_timer)
                                                   macBackoffTimerRolloverCallback (mac_timer)
                                                   macBackoffTimerSetRollover (mac_backoff_timer)
                                                   macBackoffTimerSetTrigger (mac_backoff_timer)
                                                   macBackoffTimerTriggerCallback (mac_timer)
                                                   macBuildAssociateRsp (mac_coord)
                                                   macBuildBeacon (mac_coord)
                                                   macBuildBeaconNotifyInd (mac_mgmt)
                                                   macBuildCommonReq (mac_mgmt)
                                                   macBuildDataFrame (mac_data)
                                                   macBuildDisassociateReq (mac_mgmt)
                                                   macBuildHeader (mac_mgmt)
                                                   macBuildPendAddr (mac_coord)
                                                   macBuildRealign (mac_coord)
                                                   macCbackForEvent (mac_main)
                                                   macCommStatusInd (mac_mgmt)
                                                   macCspTxRequestAckTimeoutCallback (mac_csp_tx)
                                                   macDataTxComplete (mac_data)
                                                   macDataTxEnqueue (mac_data)
                                                   macDataTxSend (mac_data)
                                                   macDataTxTimeAvailable (mac_data)
                                                   macDestAddrCmp (mac_mgmt)
                                                   macDestSAddrCmp (mac_mgmt)
                                                   macEventLoop (mac_main)
                                                   macExecute (mac_main)
                                                   macIndirectExpire (mac_coord)
                                                   macIndirectMark (mac_coord)
                                                   macIndirectRequeueFrame (mac_coord)
                                                   macIndirectSend (mac_coord)
                                                   macIndirectTxFrame (mac_coord)
                                                   macMainReset (mac_main)
                                                   macMcuAndT2PEROF2 (mac_mcu)
                                                   macMcuOrT2PEROF2 (mac_mcu)
                                                   macMcuOverflowCapture (mac_mcu)
                                                   macMcuOverflowCount (mac_mcu)
                                                   macMcuOverflowSetCompare (mac_mcu)
                                                   macMcuOverflowSetCount (mac_mcu)
                                                   macMemReadRxFifo (mac_mem)
                                                   macMemWriteRam (mac_mem)
                                                   macMemWriteTxFifo (mac_mem)
                                                   macPollDataReqComplete (mac_device)
                                                   macPollDataRxInd (mac_device)
                                                   macPollFrameResponseTimeout (mac_device)
                                                   macPollRxAssocRsp (mac_device)
                                                   macPollRxDisassoc (mac_device)
                                                   macRadioSetChannel (mac_radio)
                                                   macRadioSetTxPower (mac_radio)
                                                   macRadioStartScan (mac_radio)
                                                   macRxAssocRsp (mac_device)
                                                   macRxAssociateReq (mac_coord)
                                                   macRxBeacon (mac_mgmt)
                                                   macRxBeaconReq (mac_coord)
                                                   macRxCompleteCallback (mac_data)
                                                   macRxCoordRealign (mac_device)
                                                   macRxDataReq (mac_coord)
                                                   macRxDisable (mac_rx_onoff)
                                                   macRxDisassoc (mac_mgmt)
                                                   macRxEnable (mac_rx_onoff)
                                                   macRxOffRequest (mac_rx_onoff)
                                                   macRxOnRequest (mac_rx_onoff)
                                                   macRxOrphan (mac_coord)
                                                   macRxSoftEnable (mac_rx_onoff)
                                                   macScanCnfInit (mac_scan)
                                                   macScanNextChan (mac_scan)
                                                   macScanRxBeacon (mac_scan)
                                                   macScanRxCoordRealign (mac_scan)
                                                   macScanStartTimer (mac_scan)
                                                   macSendDataMsg (mac_main)
                                                   macSendMsg (mac_main)
                                                   macSetEvent (mac_main)
                                                   macStartBegin (mac_coord)
                                                   macStartComplete (mac_coord)
                                                   macStartContinue (mac_coord)
                                                   macStartFrameResponseTimer (mac_device)
                                                   macStartResponseTimer (mac_device)
                                                   macStartSetParams (mac_coord)
                                                   macTimer (mac_timer)
                                                   macTimerAddTimer (mac_timer)
                                                   macTimerCancel (mac_timer)
                                                   macTimerRecalcUnaligned (mac_timer)
                                                   macTimerRemoveTimer (mac_timer)
                                                   macTimerUpdateBackoffTimer (mac_timer)
                                                   macTxAckNotReceivedCallback (mac_tx)
                                                   macTxAckReceivedCallback (mac_tx)
                                                   macTxCompleteCallback (mac_data)
                                                   macTxDoneCallback (mac_tx)
                                                   macTxFrame (mac_tx)
                                                   macTxTimestampCallback (mac_tx)
                                                   memcpy (?memcpy)
                                                   memset (?memset)
                                                   nwkBuildDataCnf (nwk)
                                                   nwkDB_Add (nwk_bufs)
                                                   nwkDB_CreateHdr (nwk_bufs)
                                                   nwkDB_DeleteRecAll (nwk_bufs)
                                                   nwkDB_FindMatch (nwk_bufs)
                                                   nwkDB_FindNextType (nwk_bufs)
                                                   nwkDB_RemoveFromList (nwk_bufs)
                                                   nwkDB_UserDataLoad (nwk_util)
                                                   nwk_BeaconFromNative (nwk)
                                                   nwk_BeaconToNative (nwk)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
                                                   nwk_MacDataBuffersDealloc (nwk_bufs)
                                                   nwk_ScanJoiningOrphan (nwk)
                                                   nwk_SendNextDataBuf (nwk_bufs)
                                                   nwk_associate_cnf_processing (nwk)
                                                   nwk_associate_ind_processing (nwk)
                                                   nwk_beacon_notify_ind_processing (nwk)
                                                   nwk_comm_status_ind_processing (nwk)
                                                   nwk_data_cnf_processing (nwk)
                                                   nwk_data_ind_processing (nwk)
                                                   nwk_data_req_send (nwk)
                                                   nwk_desc_list_free (nwk)
                                                   nwk_event_loop (nwk)
                                                   nwk_getNetworkDesc (nwk)
                                                   nwk_orphan_ind_processing (nwk)
                                                   nwk_scan_cnf_processing (nwk)
                                                   nwk_start_cnf_processing (nwk)
                                                   nwk_start_coord (nwk)
                                                   nwkbufs_hold (nwk_bufs)
                                                   osalAddTasks (OSAL_SampleApp)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalDeleteTimer (OSAL_Timers)
                                                   osalFindTimer (OSAL_Timers)
                                                   osalInitTasks (OSAL_Tasks)
                                                   osalTaskAdd (OSAL_Tasks)
                                                   osalTimerInit (OSAL_Timers)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_ExtAddrEqual (OSAL)
                                                   osal_GetSystemClock (OSAL_Timers)
                                                   osal_build_uint32 (OSAL)
                                                   osal_cpyExtAddr (OSAL)
                                                   osal_get_timeoutEx (OSAL_Timers)
                                                   osal_mem_alloc (OSAL_Memory)
                                                   osal_mem_free (OSAL_Memory)
                                                   osal_memcpy (OSAL)
                                                   osal_memset (OSAL)
                                                   osal_msg_allocate (OSAL)
                                                   osal_msg_dequeue (OSAL)
                                                   osal_msg_enqueue (OSAL)
                                                   osal_msg_enqueue_max (OSAL)
                                                   osal_msg_extract (OSAL)
                                                   osal_msg_push (OSAL)
                                                   osal_msg_receive (OSAL)
                                                   osal_msg_send (OSAL)
                                                   osal_nv_item_init (OSAL_Nv)
                                                   osal_nv_item_len (OSAL_Nv)
                                                   osal_nv_read (OSAL_Nv)
                                                   osal_nv_write (OSAL_Nv)
                                                   osal_set_event (OSAL)
                                                   osal_start_system (OSAL)
                                                   osal_start_timer (OSAL_Timers)
                                                   osal_start_timerEx (OSAL_Timers)
                                                   osal_stop_timer (OSAL_Timers)
                                                   osal_stop_timerEx (OSAL_Timers)
                                                   osal_timer_activate (OSAL_Timers)
                                                   osal_timer_hw_setup (OSAL_Timers)
                                                   pollDMA (hal_uart)
                                                   readHdr (OSAL_Nv)
                                                   rxAddrIsr (mac_rx)
                                                   rxDiscardFrame (mac_rx)
                                                   rxFcsIsr (mac_rx)
                                                   rxStartIsr (mac_rx)
                                                   sAddrCmp (saddr)
                                                   sAddrCpy (saddr)
                                                   sAddrExtCmp (saddr)
                                                   sAddrExtCpy (saddr)
                                                   setItem (OSAL_Nv)
                                                   txComplete (mac_tx)
                                                   txCsmaPrep (mac_tx)
                                                   writeBuf (OSAL_Nv)
                                                   writeItem (OSAL_Nv)
                                                   writeWord (OSAL_Nv)
                                                   writeWordD (OSAL_Nv)
                                                   writeWordH (OSAL_Nv)
                                                   xferBuf (OSAL_Nv)
                                                   zdpProcessAddrReq (ZDProfile)
                                                   zgInit (ZGlobals)
                                                   zgReadStartupOptions (ZGlobals)
                                                   zgWriteStartupOptions (ZGlobals)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FUNC_ENTER_XDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000B03 - 00000B61 (0x5f bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FUNC_ENTER_XDATA       00000B03        ZMacDataReq (zmac)
                                                   ZMacInit (zmac)
                                                   ZMacReset (zmac)
                                                   ZMacScanReq (zmac)
                                                   ZMacSendNoData (zmac)
                                                   ZMacSetReq (zmac)
                                                   ZMacStartReq (zmac)
                                                   zmain_ext_addr (ZMain)
                                                   zmain_vdd_check (ZMain)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?BANKED_LEAVE_XDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000B62 - 00000BA2 (0x41 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?BANKED_LEAVE_XDATA     00000B62        ?Subroutine0 (mac_mem)
                                                   ?Subroutine0 (saddr)
                                                   ?Subroutine1 (SampleApp)
                                                   ?Subroutine1 (ZGlobals)
                                                   ?Subroutine1 (mac_backoff_timer)
                                                   ?Subroutine1 (mac_radio)
                                                   ?Subroutine10 (hal_lcd)
                                                   ?Subroutine11 (hal_led)
                                                   ?Subroutine13 (hal_lcd)
                                                   ?Subroutine14 (hal_timer)
                                                   ?Subroutine17 (MTEL)
                                                   ?Subroutine18 (MTEL)
                                                   ?Subroutine19 (MTEL)
                                                   ?Subroutine19 (hal_uart)
                                                   ?Subroutine2 (mac_backoff_timer)
                                                   ?Subroutine2 (mac_rx_onoff)
                                                   ?Subroutine20 (MTEL)
                                                   ?Subroutine20 (OSAL)
                                                   ?Subroutine21 (OSAL)
                                                   ?Subroutine22 (OSAL)
                                                   ?Subroutine22 (ZDObject)
                                                   ?Subroutine22 (hal_uart)
                                                   ?Subroutine22 (mac_rx)
                                                   ?Subroutine23 (OSAL)
                                                   ?Subroutine24 (OSAL)
                                                   ?Subroutine24 (ZDObject)
                                                   ?Subroutine25 (OSAL)
                                                   ?Subroutine25 (ZDObject)
                                                   ?Subroutine26 (ZDApp)
                                                   ?Subroutine27 (ZDApp)
                                                   ?Subroutine3 (OSAL_Timers)
                                                   ?Subroutine30 (ZDApp)
                                                   ?Subroutine31 (AF)
                                                   ?Subroutine33 (AF)
                                                   ?Subroutine34 (AF)
                                                   ?Subroutine35 (AF)
                                                   ?Subroutine4 (OSAL_Timers)
                                                   ?Subroutine4 (mac_tx)
                                                   ?Subroutine44 (ZDProfile)
                                                   ?Subroutine45 (ZDProfile)
                                                   ?Subroutine49 (ZDProfile)
                                                   ?Subroutine5 (mac_mcu)
                                                   ?Subroutine6 (mac_mcu)
                                                   ?Subroutine66 (OSAL_Nv)
                                                   ?Subroutine68 (OSAL_Nv)
                                                   ?Subroutine74 (OSAL_Nv)
                                                   ?Subroutine75 (OSAL_Nv)
                                                   AF_DataRequest (AF)
                                                   APSDE_DataIndication (APSMEDE_CB)
                                                   APSDE_ParseMsg (aps_util)
                                                   HalAdcRead (hal_adc)
                                                   HalKeyConfig (hal_key)
                                                   HalKeyPoll (hal_key)
                                                   HalLedSet (hal_led)
                                                   HalTimerConfig (hal_timer)
                                                   HalUARTOpen (hal_uart)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   InitBoard (OnBoard)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MAC_MlmeGetReq (mac_pib)
                                                   MAC_MlmeSetReq (mac_pib)
                                                   NLDE_DataCnf (NLMEDE_CB)
                                                   NLDE_DataIndication (NLMEDE_CB)
                                                   NLDE_ParseMsg2 (nwk_util)
                                                   NLME_JoinRequest (NLMEDE)
                                                   NLME_RejoinRspSend (nwk_util)
                                                   NLME_RouteDiscoveryIndication (NLMEDE_CB)
                                                   NLME_SetRequest (NLMEDE)
                                                   OnBoard_SendKeys (OnBoard)
                                                   Onboard_rand (OnBoard)
                                                   RTG_BcastChk (rtg)
                                                   SPIMgr_CalcFCS (SPIMgr)
                                                   SPIMgr_ProcessZToolData (SPIMgr)
                                                   SSP_GetMicLen (ssp)
                                                   SampleApp_Init (SampleApp)
                                                   SampleApp_ProcessEvent (SampleApp)
                                                   Segment part 10 (AssocList)
                                                   Segment part 10 (nwk_bufs)
                                                   Segment part 110 (nwk)
                                                   Segment part 113 (nwk)
                                                   Segment part 120 (nwk)
                                                   Segment part 13 (mac_scan)
                                                   Segment part 14 (AssocList)
                                                   Segment part 15 (aps_groups)
                                                   Segment part 15 (mac_mgmt)
                                                   Segment part 17 (mac_scan)
                                                   Segment part 19 (AssocList)
                                                   Segment part 19 (aps_util)
                                                   Segment part 194 (APSMEDE)
                                                   Segment part 20 (ssp)
                                                   Segment part 21 (mac_mgmt)
                                                   Segment part 21 (rtg)
                                                   Segment part 212 (APSMEDE)
                                                   Segment part 22 (mac_timer)
                                                   Segment part 23 (mac_main)
                                                   Segment part 23 (nwk_util)
                                                   Segment part 24 (AddrMgr)
                                                   Segment part 24 (AssocList)
                                                   Segment part 26 (mac_main)
                                                   Segment part 27 (AddrMgr)
                                                   Segment part 29 (mac_timer)
                                                   Segment part 30 (mac_data)
                                                   Segment part 31 (APS)
                                                   Segment part 31 (nwk)
                                                   Segment part 32 (APSMEDE)
                                                   Segment part 32 (AddrMgr)
                                                   Segment part 32 (nwk_bufs)
                                                   Segment part 33 (mac_mgmt)
                                                   Segment part 34 (mac_coord)
                                                   Segment part 34 (mac_device)
                                                   Segment part 37 (mac_timer)
                                                   Segment part 38 (NLMEDE)
                                                   Segment part 38 (mac_coord)
                                                   Segment part 40 (mac_data)
                                                   Segment part 42 (nwk_util)
                                                   Segment part 47 (mac_coord)
                                                   Segment part 53 (AddrMgr)
                                                   Segment part 55 (APSMEDE)
                                                   Segment part 57 (NLMEDE)
                                                   Segment part 62 (mac_data)
                                                   Segment part 65 (rtg)
                                                   Segment part 67 (rtg)
                                                   Segment part 69 (nwk)
                                                   Segment part 77 (nwk_util)
                                                   Segment part 78 (rtg)
                                                   Segment part 89 (nwk_util)
                                                   Segment part 9 (AddrMgr)
                                                   Segment part 9 (aps_groups)
                                                   Segment part 94 (rtg)
                                                   UartTX_Send_String (wxl_uart)
                                                   Uart_Baud_rate (wxl_uart)
                                                   ZDO_NetworkDiscoveryConfirmCB (ZDApp)
                                                   ZDP_IncomingData (ZDProfile)
                                                   ZDP_NodeDescMsg (ZDProfile)
                                                   afDataConfirm (AF)
                                                   afRegister (AF)
                                                   apsProcessAck (aps_util)
                                                   aps_AddGroup (aps_groups)
                                                   halAssertHazardLights (hal_assert)
                                                   halTimerSendCallBack (hal_timer)
                                                   initPage (OSAL_Nv)
                                                   macApiStartReq (mac_coord)
                                                   macBackoffTimerRolloverCallback (mac_timer)
                                                   macCspTxRequestAckTimeoutCallback (mac_csp_tx)
                                                   macRadioSetTxPower (mac_radio)
                                                   macRxBeaconReq (mac_coord)
                                                   macScanRxCoordRealign (mac_scan)
                                                   macScanStartTimer (mac_scan)
                                                   macSendDataMsg (mac_main)
                                                   macSendMsg (mac_main)
                                                   macSetEvent (mac_main)
                                                   macStartBegin (mac_coord)
                                                   macStartFrameResponseTimer (mac_device)
                                                   macStartResponseTimer (mac_device)
                                                   macTimerAddTimer (mac_timer)
                                                   macTxTimestampCallback (mac_tx)
                                                   memcpy (?memcpy)
                                                   memset (?memset)
                                                   nwkDB_Add (nwk_bufs)
                                                   nwkDB_CreateHdr (nwk_bufs)
                                                   nwkDB_FindMatch (nwk_bufs)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
                                                   nwk_associate_ind_processing (nwk)
                                                   nwk_data_ind_processing (nwk)
                                                   osalAddTasks (OSAL_SampleApp)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalInitTasks (OSAL_Tasks)
                                                   osalTaskAdd (OSAL_Tasks)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_mem_alloc (OSAL_Memory)
                                                   osal_mem_free (OSAL_Memory)
                                                   rxStartIsr (mac_rx)
                                                   sAddrExtCmp (saddr)
                                                   sAddrExtCpy (saddr)
                                                   txCsmaPrep (mac_tx)
                                                   writeWordH (OSAL_Nv)
                                                   zgInit (ZGlobals)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FUNC_LEAVE_XDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000BA3 - 00000BDD (0x3b bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FUNC_LEAVE_XDATA       00000BA3        ?Subroutine6 (zmac)
                                                   ?Subroutine8 (zmac)
                                                   ZMacDataReq (zmac)
                                                   zmain_ext_addr (ZMain)
                                                   zmain_vdd_check (ZMain)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?INTERRUPT_ENTER_XSP

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000BDE - 00000C35 (0x58 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?INTERRUPT_ENTER_XSP    00000BDE        halKeyPort0Isr (hal_key)
                                                   halKeyPort1Isr (hal_key)
                                                   halKeyPort2Isr (hal_key)
                                                   halTimer1Isr (hal_timer)
                                                   halTimer3Isr (hal_timer)
                                                   halTimer4Isr (hal_timer)
                                                   macMcuRfIsr (mac_mcu)
                                                   macMcuTimer2Isr (mac_mcu)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?INTERRUPT_LEAVE_XSP

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000C36 - 00000C86 (0x51 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?INTERRUPT_LEAVE_XSP    00000C36        ?Subroutine15 (hal_timer)
                                                   ?Subroutine3 (hal_key)
                                                   ?Subroutine7 (mac_mcu)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?PUSH_XSTACK_I

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000C87 - 00000C8A (0x4 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I_FOUR     00000C87        NLDE_DataIndication (NLMEDE_CB)
                                                   afIncomingData (AF)
                                                   macScanStartTimer (mac_scan)
                                                   macStartFrameResponseTimer (mac_device)
                                                   macStartResponseTimer (mac_device)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000C8B - 00000C8E (0x4 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I_THREE    00000C8B        APSDE_DataIndication (APSMEDE_CB)
                                                   APSDE_DataReq (APSMEDE)
                                                   APS_CmdInd (APS)
                                                   InitBoard (OnBoard)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MAC_MlmeGetReq (mac_pib)
                                                   MAC_MlmeSetReq (mac_pib)
                                                   MTProcessAppMsg (MTEL)
                                                   MT_BuildSPIMsg (MTEL)
                                                   NLDE_BuildMsg (nwk_util)
                                                   NLME_GetRequest (NLMEDE)
                                                   SampleApp_Init (SampleApp)
                                                   ZDApp_MatchDescRspCB (ZDApp)
                                                   ZDApp_SendMsg (ZDApp)
                                                   ZDApp_SendNewDstAddr (ZDApp)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDP_EPRsp (ZDProfile)
                                                   ZMacDataReq (zmac)
                                                   afBuildMSGIncoming (AF)
                                                   afRegister (AF)
                                                   aps_AddGroup (aps_groups)
                                                   aps_GroupsWriteNV (aps_groups)
                                                   macBuildBeacon (mac_coord)
                                                   macScanRxBeacon (mac_scan)
                                                   macSendDataMsg (mac_main)
                                                   macSendMsg (mac_main)
                                                   macStartBegin (mac_coord)
                                                   nwk_BeaconFromNative (nwk)
                                                   nwk_BeaconToNative (nwk)
                                                   nwk_data_ind_processing (nwk)
                                                   osalAddTasks (OSAL_SampleApp)
                                                   osal_cpyExtAddr (OSAL)
                                                   sAddrExtCpy (saddr)
                                                   zgInit (ZGlobals)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000C8F - 00000C92 (0x4 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I_TWO      00000C8F        AddrMgrEntryUpdate (AddrMgr)
                                                   MTProcessAppRspMsg (MTEL)
                                                   MT_BuildAndSendZToolResponse (MTEL)
                                                   MT_IndReset (MTEL)
                                                   MT_ProcessDebugMsg (MTEL)
                                                   MT_ProcessGetDeviceInfo (MTEL)
                                                   MT_ProcessGetNV (MTEL)
                                                   MT_ProcessGetNvInfo (MTEL)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   MT_ProcessSetNV (MTEL)
                                                   MT_SendErrorNotification (MTEL)
                                                   NLDE_DataReqSend (nwk_util)
                                                   NLME_RouteDiscoveryRequest (rtg)
                                                   NwkCommandPktProcessing (nwk)
                                                   Print (hal_lcd)
                                                   RTG_GetRoutingAddress (rtg)
                                                   RTG_ProcessRreq (rtg)
                                                   SPIMgr_ProcessZToolData (SPIMgr)
                                                   SampleApp_ProcessEvent (SampleApp)
                                                   SampleApp_SendFlashMessage (SampleApp)
                                                   SampleApp_SendPeriodicMessage (SampleApp)
                                                   Segment part 19 (AssocList)
                                                   SendData (SampleApp)
                                                   ZDApp_InMsgCB (ZDApp)
                                                   ZDApp_LeaveCtrlInit (ZDApp)
                                                   ZDApp_LeaveCtrlSet (ZDApp)
                                                   ZDApp_LeaveCtrlStartup (ZDApp)
                                                   ZDO_ProcessActiveEPReq (ZDObject)
                                                   ZDO_ProcessEPListRsp (ZDObject)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_ProcessNodeDescReq (ZDObject)
                                                   ZDO_ProcessPowerDescReq (ZDObject)
                                                   ZDO_ProcessSimpleDescReq (ZDObject)
                                                   ZDP_EPRsp (ZDProfile)
                                                   ZDP_GenericRsp (ZDProfile)
                                                   ZDP_IncomingData (ZDProfile)
                                                   ZDP_NodeDescMsg (ZDProfile)
                                                   ZDP_PowerDescMsg (ZDProfile)
                                                   ZDP_SimpleDescMsg (ZDProfile)
                                                   aps_GroupsWriteNV (aps_groups)
                                                   compactPage (OSAL_Nv)
                                                   fillAndSend (ZDProfile)
                                                   initItem (OSAL_Nv)
                                                   initItem2 (OSAL_Nv)
                                                   macApiPurgeReq (mac_coord)
                                                   macApiStartReq (mac_coord)
                                                   macBuildBeacon (mac_coord)
                                                   macBuildCommonReq (mac_mgmt)
                                                   macBuildRealign (mac_coord)
                                                   macDataTxSend (mac_data)
                                                   macIndirectExpire (mac_coord)
                                                   macScanNextChan (mac_scan)
                                                   nwk_data_ind_processing (nwk)
                                                   osal_memset (OSAL)
                                                   osal_msg_receive (OSAL)
                                                   osal_nv_item_init (OSAL_Nv)
                                                   osal_nv_write (OSAL_Nv)
                                                   writeItem (OSAL_Nv)
                                                   zdpProcessAddrReq (ZDProfile)
                                                   zgInit (ZGlobals)
                                                   zgReadStartupOptions (ZGlobals)
                                                   zgWriteStartupOptions (ZGlobals)
                                                   zmain_ext_addr (ZMain)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000C93 - 00000C94 (0x2 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I_ONE      00000C93        APS_event_loop (APS)
                                                   NLDE_DataIndication (NLMEDE_CB)
                                                   NLDE_DataReqSend (nwk_util)
                                                   NLME_RouteDiscoveryRequest (rtg)
                                                   RTG_ProcessRrep (rtg)
                                                   RTG_ProcessRreq (rtg)
                                                   SampleApp_SendFlashMessage (SampleApp)
                                                   SampleApp_SendPeriodicMessage (SampleApp)
                                                   SendData (SampleApp)
                                                   ZDApp_MatchDescRspCB (ZDApp)
                                                   ZDApp_ProcessOSALMsg (ZDApp)
                                                   ZDO_ProcessActiveEPReq (ZDObject)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_ProcessNodeDescReq (ZDObject)
                                                   ZDO_ProcessPowerDescReq (ZDObject)
                                                   ZDP_IncomingData (ZDProfile)
                                                   afIncomingData (AF)
                                                   fillAndSend (ZDProfile)
                                                   nwk_ScanJoiningOrphan (nwk)
                                                   nwk_beacon_notify_ind_processing (nwk)
                                                   nwk_data_cnf_processing (nwk)
                                                   nwk_data_ind_processing (nwk)
                                                   nwk_event_loop (nwk)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000C95 - 00000CA1 (0xd bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   ?PUSH_XSTACK_I_FOUR
                                                   ?PUSH_XSTACK_I_ONE
                                                   ?PUSH_XSTACK_I_THREE
                                                   ?PUSH_XSTACK_I_TWO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I          00000C95 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?PUSH_XSTACK8_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000CA2 - 00000CA5 (0x4 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_X_FOUR    00000CA2        APS_event_loop (APS)
                                                   NLDE_DataIndSend (nwk_util)
                                                   macIndirectExpire (mac_coord)
                                                   macIndirectTxFrame (mac_coord)
                                                   nwk_data_ind_processing (nwk)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000CA6 - 00000CA9 (0x4 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_X_THREE   00000CA6 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000CAA - 00000CAD (0x4 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_X_TWO     00000CAA        MT_ProcessDebugStr (MTEL)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   NLDE_DataReqSend (nwk_util)
                                                   SampleApp_MessageMSGCB (SampleApp)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_ProcessSimpleDescReq (ZDObject)
                                                   afIncomingData (AF)
                                                   macApiAssociateReq (mac_device)
                                                   macApiOrphanRsp (mac_coord)
                                                   macApiPollReq (mac_device)
                                                   macApiStartReq (mac_coord)
                                                   macAssocDataReq (mac_device)
                                                   macBackoffTimerRolloverCallback (mac_timer)
                                                   macBuildAssociateRsp (mac_coord)
                                                   macBuildDataFrame (mac_data)
                                                   macBuildDisassociateReq (mac_mgmt)
                                                   macIndirectSend (mac_coord)
                                                   macRxBeacon (mac_mgmt)
                                                   macRxDataReq (mac_coord)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
                                                   nwk_data_ind_processing (nwk)
                                                   nwk_globals_init (nwk_globals)
                                                   osal_nv_write (OSAL_Nv)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000CAE - 00000CAF (0x2 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_X_ONE     00000CAE 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000CB0 - 00000CD3 (0x24 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   ?PUSH_XSTACK8_X_FOUR
                                                   ?PUSH_XSTACK8_X_ONE
                                                   ?PUSH_XSTACK8_X_THREE
                                                   ?PUSH_XSTACK8_X_TWO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_X         00000CB0 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?PUSH_XSTACK8_C

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000CD4 - 00000CD7 (0x4 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_C_FOUR    00000CD4 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000CD8 - 00000CDB (0x4 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_C_THREE   00000CD8 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000CDC - 00000CDF (0x4 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_C_TWO     00000CDC 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000CE0 - 00000CE1 (0x2 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_C_ONE     00000CE0 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000CE2 - 00000D05 (0x24 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   ?PUSH_XSTACK8_C_FOUR
                                                   ?PUSH_XSTACK8_C_ONE
                                                   ?PUSH_XSTACK8_C_THREE
                                                   ?PUSH_XSTACK8_C_TWO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_C         00000CE2 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UC_SWITCH_DENSE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000D06 - 00000D3B (0x36 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UC_SWITCH_DENSE        00000D06        APS_event_loop (APS)
                                                   HalAdcRead (hal_adc)
                                                   HalTimerStop (hal_timer)
                                                   NwkCommandPktProcessing (nwk)
                                                   SPIMgr_ProcessZToolData (SPIMgr)
                                                   getZMacDynamicSize (zmac_cb)
                                                   halTimerRemap (hal_timer)
                                                   halTimerSetChannelMode (hal_timer)
                                                   halTimerSetOpMode (hal_timer)
                                                   halTimerSetPrescale (hal_timer)
                                                   macBuildCommonReq (mac_mgmt)
                                                   macRxCompleteCallback (mac_data)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_SWITCH_DENSE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000D3C - 00000D81 (0x46 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SWITCH_DENSE        00000D3C        MT_ProcessSerialCommand (MTEL)
                                                   NLME_IsAddressBroadcast (nwk_util)
                                                   SampleApp_MessageMSGCB (SampleApp)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UC_SWITCH_SPARSE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000D82 - 00000DAB (0x2a bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UC_SWITCH_SPARSE       00000D82        HalLedSet (hal_led)
                                                   HalTimerInterruptEnable (hal_timer)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MAC_MlmeSetReq (mac_pib)
                                                   MT_ProcessCommand (MTEL)
                                                   NLME_GetRequest (NLMEDE)
                                                   SampleApp_ProcessEvent (SampleApp)
                                                   ZDApp_ProcessOSALMsg (ZDApp)
                                                   macCommStatusInd (mac_mgmt)
                                                   nwk_event_loop (nwk)
                                                   nwk_scan_cnf_processing (nwk)
           ?UC_SWITCH_SPARSE_LEAVE
                                   00000D9F        ?UC_JMP_IF_IN_RANGE (?UC_JMP_IF_IN_RANGE)
                                                   ?UC_JMP_IF_VALUE (?UC_JMP_IF_VALUE)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UC_JMP_IF_IN_RANGE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000DAC - 00000DCA (0x1f bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UC_JMP_IF_IN_RANGE     00000DAC        Segment part 0 (?UC_SWITCH_SPARSE)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UC_JMP_IF_VALUE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000DCB - 00000DE0 (0x16 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UC_JMP_IF_VALUE        00000DCB        Segment part 0 (?UC_SWITCH_SPARSE)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_SWITCH_SPARSE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000DE1 - 00000E2C (0x4c bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SWITCH_SPARSE       00000DE1        Uart_Baud_rate (wxl_uart)
                                                   ZDP_IncomingData (ZDProfile)
           ?US_SWITCH_SPARSE_LEAVE
                                   00000E1D        ?US_JMP_IF_IN_RANGE (?US_JMP_IF_IN_RANGE)
                                                   ?US_JMP_IF_VALUE (?US_JMP_IF_VALUE)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_JMP_IF_IN_RANGE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000E2D - 00000E6B (0x3f bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_JMP_IF_IN_RANGE     00000E2D        Segment part 0 (?US_SWITCH_SPARSE)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_JMP_IF_VALUE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000E6C - 00000E96 (0x2b bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_JMP_IF_VALUE        00000E6C        Segment part 0 (?US_SWITCH_SPARSE)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memcpy

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A752 - 0003A799 (0x48 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memcpy                  0003A752        SampleApp_MessageMSGCB (SampleApp)
                                                   SampleApp_ProcessEvent (SampleApp)
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000002 ( 0000000A )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memset

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FFBB - 0002FFE9 (0x2f bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memset                  0002FFBB        osal_memset (OSAL)
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000002 ( 00000009 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?strlen

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A7BA - 0003A7D7 (0x1e bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strlen                  0003A7BA        osal_strlen (OSAL)
               stack 1 = 00000000 ( 00000002 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?low_level_init

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 0000013E - 00000140 (0x3 bytes), align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __low_level_init        0000013E        __low_level_init_call (?cmain)




                ****************************************
                *                                      *
                *            MODULE SUMMARY            *
                *                                      *
                ****************************************

Module                        CODE      DATA         XDATA      IDATA    BIT
------                        ----      ----         -----      -----    ---
                             (Rel)  (Rel)  (Abs)  (Rel)  (Abs)  (Rel)  (Rel)
?ADD_XSTACK_DISP8               20
?ALLOC_XSTACK8                  15
?BANKED_CODE_SUPPORT            34
?BANKED_ENTER_XDATA            101
?BANKED_LEAVE_XDATA             65
?C_GPTR_LOAD                    26
?DEALLOC_XSTACK8                19
?FLT_DIV                       489
?FLT_MUL                       387
?FLT_TEST_INF                   21
?FLT_TEST_INF_R1                21
?FLT_TEST_NAN                   18
?FLT_TEST_NAN_R1                18
?FLT_TEST_ZERO                  13
?FLT_TEST_ZERO_R1               13
?FLT_TO_L                      160
?FUNC_ENTER_XDATA               95
?FUNC_LEAVE_XDATA               59
?G_EQ                           11
?INTERRUPT_ENTER_XSP            88
?INTERRUPT_LEAVE_XSP            81
?L_ADD                          22
?L_ADD_TO_X                     22
?L_ADD_X                        22
?L_AND_TO_X                     22
?L_AND_X                        22
?L_EQ_X                         24
?L_IOR_TO_X                     22
?L_MOV_C                        19
?L_MOV_TO_X                     28
?L_MOV_X                        15
?L_MUL                         128
?L_NEG                          20
?L_NOT                          19
?L_SHL                          31
?L_SUB                          23
?L_SUB_FROM_X                   23
?L_SUB_X                        27
?L_TO_FLT                      120
?MOVE_LONG8_XDATA_CODE          34
?MOVE_LONG8_XDATA_IDATA         13
?MOVE_LONG8_XDATA_XDATA         33
?POP_BIT_ISP                    19
?PUSH_XSTACK8_C                 50
?PUSH_XSTACK8_X                 50
?PUSH_XSTACK_I                  27
?SL_GT                          24
?SL_GT_X                        24
?SS_SHR                         20
?S_DIV_MOD                     154
?S_SHL                          19
?UC_JMP_IF_IN_RANGE             31
?UC_JMP_IF_VALUE                22
?UC_SWITCH_DENSE                54
?UC_SWITCH_SPARSE               42
?UL_DIV_MOD                    112
?UL_GT                          19
?UL_GT_X                        19
?UL_SHR                         31
?US_JMP_IF_IN_RANGE             63
?US_JMP_IF_VALUE                43
?US_SHR                         19
?US_SWITCH_DENSE                70
?US_SWITCH_SPARSE               76
?XSTACK_DISP8                   10
?cexit                           5
?cmain                         129
?low_level_init                  3
?memcpy                         72
?memset                         47
?strlen                         30
AF                           2 706                    2
APS                            654                   22
APSMEDE                      3 303                   15
APSMEDE_CB                     572
AddrMgr                      1 926                    4
AssocList                    1 504
CC2430_READ_ANY_CODE_BYTE       40
CSTARTUP                        16
  + common                       3
Font                         1 520
MTEL                         4 097                   45      8
  + shared                                     2      4
NLMEDE                       1 977                   22
NLMEDE_CB                      957
OSAL                         1 661                    2
OSAL_Memory                    509                3 079
OSAL_Nv                      6 004             4     15
  + shared                                     2      4
OSAL_PwrMgr                     32                    7
OSAL_SampleApp                 255
OSAL_Tasks                     487                    5
OSAL_Timers                  1 095                   13
  + shared                                            4
OnBoard                        461                   11
  + shared                                     3
SPIMgr                         928                   83
SampleApp                    1 172                  605
SampleAppHw
  + shared                                     3
VIRTUAL_REGISTERS                       2                                  8
ZDApp                        3 544                   29
ZDConfig                        12                   12
ZDObject                     2 629                   52
ZDProfile                    2 533                   83
ZDSecMgr                        21
ZGlobals                       569                   53
ZMain                          549             1
  + shared                                     1
aps_groups                     778                    2
aps_util                     1 383
flashDmaTrigger                  4
hal_adc                        337             1
  + shared                                     6
hal_aes                         90
  + shared                                     1
hal_assert                     375                    5
  + shared                                     1
hal_dma                         17             4     40
hal_drivers                    233                    1
hal_key                        500             2      6
  + shared                     126             3
  + common
hal_lcd                      1 093             1      1
  + shared                                     1
hal_led                      1 227                   39
  + shared                                            4
hal_sleep                       23             3
  + shared                      46             3
  + common
hal_timer                    1 728            11     63
  + common                     102
hal_uart                     2 136             2      3
  + shared                                     5
mac_backoff_timer              629                   13
  + shared                                     3
mac_cfg                          5                    5
mac_coord                    3 812                   13
  + shared                                            4
mac_csp_tx                     696             1
  + shared                                     2
mac_data                     2 205                   35
mac_device                   1 990                   22
mac_low_level                  112
mac_main                     1 749                   55
mac_mcu                      1 015            12      2
  + shared                     134             1
  + common
mac_mem                        124             1
mac_mgmt                     3 356                    2
mac_pib                        900                   59
mac_pwr                         19                    1
mac_radio                      643                    4
mac_radio_defs                  26
mac_rx                       2 123                   19
mac_rx_onoff                   334                    2
mac_scan                     1 577                   29
mac_sleep                       79                    1
mac_timer                    1 043                   14
mac_tx                       1 027                    8
menu_lcd                                              4
nwk                          7 286                  119
nwk_bufs                     1 984                    3
nwk_globals                    304                  714
nwk_util                     6 108                   13
rtg                          7 526                    3
saddr                          298
ssp                            108                    6
wxl_uart                       226
zmac                         1 002                    6
zmac_cb                      1 003
N/A (command line)                     16           768           192
N/A (alignment)
----------                 -------     --     --  -----      -    ---      -
Total:                     104 693     18     80  6 259      8    192      8
  + common                     134


                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
INTVEC               CODE          00000000 - 00000085          86   com    0
CSTART               CODE          00000086 - 00000140          BB   rel    0
RCODE                CODE          00000144 - 00000E96         D53   rel    2
NEAR_CODE            CODE          00000E97 - 00001649         7B3   rel    0
IDATA_ID             CODE               0000164A                     dse    0
BDATA_ID             CODE               0000164A                     dse    0
BIT_ID               CODE               0000164A                     dse    0
IXDATA_ID            CODE               0000164A                     dse    0
PDATA_ID             CODE               0000164A                     dse    0
DATA_ID              CODE               0000164A                     dse    0
XDATA_ID             CODE          0000164A - 00001798         14F   rel    0
CODE_C               CODE          00001799 - 00002188         9F0   rel    0
<BANKED_CODE> 1      CODE          00013000 - 0001FFF9        CFFA   rel    0
<BANKED_CODE> 2      CODE          00028000 - 0002FFFE        7FFF   rel    0
<BANKED_CODE> 3      CODE          00038000 - 0003A7FB        27FC   rel    0
REGISTERS            DATA          00000000 - 00000007           8   rel    0
VREG                 DATA          00000008 - 0000000F           8   rel    0
PSP                  DATA               00000010                     dse    0
XSP                  DATA          00000010 - 00000011           2   rel    0
BREG                 BIT        00000020.0  -  00000020.7        8   rel    0
SFR_AN               DATA          00000080 - 00000081           2   rel    0
                     DATA          00000086 - 00000089           4 
                     DATA          0000008C - 0000008C           1 
                     DATA          0000008F - 00000091           3 
                     DATA          00000094 - 00000097           4 
                     DATA          0000009A - 0000009E           5 
                     DATA          000000A0 - 000000A9           A 
                     DATA          000000AB - 000000AE           4 
                     DATA          000000B3 - 000000B6           4 
                     DATA          000000B8 - 000000BE           7 
                     DATA          000000C0 - 000000C6           7 
                     DATA          000000C9 - 000000C9           1 
                     DATA          000000CB - 000000CC           2 
                     DATA          000000CE - 000000CE           1 
                     DATA          000000D1 - 000000D9           9 
                     DATA          000000E1 - 000000E1           1 
                     DATA          000000E4 - 000000E9           6 
                     DATA          000000EB - 000000EC           2 
                     DATA          000000EE - 000000EE           1 
                     DATA          000000F1 - 000000F3           3 
                     DATA          000000FD - 000000FF           3 
XDATA_AN             XDATA         0000E000 - 0000E007           8   rel    0
XSTACK               XDATA         0000E008 - 0000E307         300   rel    0
IXDATA_I             XDATA              0000E308                     dse    0
XDATA_N              XDATA              0000E308                     dse    0
XDATA_Z              XDATA         0000E308 - 0000F72B        1424   rel    0
XDATA_I              XDATA         0000F72C - 0000F87A         14F   rel    0
ISTACK               IDATA         00000040 - 000000FF          C0   rel    0

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 104 827 bytes of CODE  memory
      18 bytes of DATA  memory (+ 80 absolute )
   6 259 bytes of XDATA memory (+  8 absolute )
     192 bytes of IDATA memory
       8 bits  of BIT   memory

Errors: none
Warnings: 3

